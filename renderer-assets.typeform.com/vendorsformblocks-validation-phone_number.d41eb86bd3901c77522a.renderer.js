"use strict";
(() => {
    (self.webpackChunk_typeform_renderer = self.webpackChunk_typeform_renderer || []).push([
        [489], {
            757: (M, O, a) => {
                a.d(O, {
                    A: () => _
                });
                var y = a(26252);

                function v(s, e) {
                    var r = Object.keys(s);
                    if (Object.getOwnPropertySymbols) {
                        var d = Object.getOwnPropertySymbols(s);
                        e && (d = d.filter(function(l) {
                            return Object.getOwnPropertyDescriptor(s, l).enumerable
                        })), r.push.apply(r, d)
                    }
                    return r
                }

                function m(s) {
                    for (var e = 1; e < arguments.length; e++) {
                        var r = arguments[e] != null ? arguments[e] : {};
                        e % 2 ? v(Object(r), !0).forEach(function(d) {
                            p(s, d, r[d])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(s, Object.getOwnPropertyDescriptors(r)) : v(Object(r)).forEach(function(d) {
                            Object.defineProperty(s, d, Object.getOwnPropertyDescriptor(r, d))
                        })
                    }
                    return s
                }

                function p(s, e, r) {
                    return e in s ? Object.defineProperty(s, e, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : s[e] = r, s
                }

                function _(s, e, r) {
                    return (0, y.A)(s, m(m({}, e), {}, {
                        v2: !0
                    }), r)
                }
            },
            882: (M, O, a) => {
                a.d(O, {
                    A: () => p
                });
                var y = a(96955),
                    v = a(82925),
                    m = a(7995);

                function p(_, s, e) {
                    if (s = s || {}, e = new y.Ay(e), e.selectNumberingPlan(_.country, _.countryCallingCode), e.hasTypes()) return (0, m.A)(_, s, e.metadata) !== void 0;
                    var r = s.v2 ? _.nationalNumber : _.phone;
                    return (0, v.A)(r, e.nationalNumberPattern())
                }
            },
            5168: (M, O, a) => {
                a.d(O, {
                    A: () => y
                });
                const y = {
                    version: 4,
                    country_calling_codes: {
                        1: ["US", "AG", "AI", "AS", "BB", "BM", "BS", "CA", "DM", "DO", "GD", "GU", "JM", "KN", "KY", "LC", "MP", "MS", "PR", "SX", "TC", "TT", "VC", "VG", "VI"],
                        7: ["RU", "KZ"],
                        20: ["EG"],
                        27: ["ZA"],
                        30: ["GR"],
                        31: ["NL"],
                        32: ["BE"],
                        33: ["FR"],
                        34: ["ES"],
                        36: ["HU"],
                        39: ["IT", "VA"],
                        40: ["RO"],
                        41: ["CH"],
                        43: ["AT"],
                        44: ["GB", "GG", "IM", "JE"],
                        45: ["DK"],
                        46: ["SE"],
                        47: ["NO", "SJ"],
                        48: ["PL"],
                        49: ["DE"],
                        51: ["PE"],
                        52: ["MX"],
                        53: ["CU"],
                        54: ["AR"],
                        55: ["BR"],
                        56: ["CL"],
                        57: ["CO"],
                        58: ["VE"],
                        60: ["MY"],
                        61: ["AU", "CC", "CX"],
                        62: ["ID"],
                        63: ["PH"],
                        64: ["NZ"],
                        65: ["SG"],
                        66: ["TH"],
                        81: ["JP"],
                        82: ["KR"],
                        84: ["VN"],
                        86: ["CN"],
                        90: ["TR"],
                        91: ["IN"],
                        92: ["PK"],
                        93: ["AF"],
                        94: ["LK"],
                        95: ["MM"],
                        98: ["IR"],
                        211: ["SS"],
                        212: ["MA", "EH"],
                        213: ["DZ"],
                        216: ["TN"],
                        218: ["LY"],
                        220: ["GM"],
                        221: ["SN"],
                        222: ["MR"],
                        223: ["ML"],
                        224: ["GN"],
                        225: ["CI"],
                        226: ["BF"],
                        227: ["NE"],
                        228: ["TG"],
                        229: ["BJ"],
                        230: ["MU"],
                        231: ["LR"],
                        232: ["SL"],
                        233: ["GH"],
                        234: ["NG"],
                        235: ["TD"],
                        236: ["CF"],
                        237: ["CM"],
                        238: ["CV"],
                        239: ["ST"],
                        240: ["GQ"],
                        241: ["GA"],
                        242: ["CG"],
                        243: ["CD"],
                        244: ["AO"],
                        245: ["GW"],
                        246: ["IO"],
                        247: ["AC"],
                        248: ["SC"],
                        249: ["SD"],
                        250: ["RW"],
                        251: ["ET"],
                        252: ["SO"],
                        253: ["DJ"],
                        254: ["KE"],
                        255: ["TZ"],
                        256: ["UG"],
                        257: ["BI"],
                        258: ["MZ"],
                        260: ["ZM"],
                        261: ["MG"],
                        262: ["RE", "YT"],
                        263: ["ZW"],
                        264: ["NA"],
                        265: ["MW"],
                        266: ["LS"],
                        267: ["BW"],
                        268: ["SZ"],
                        269: ["KM"],
                        290: ["SH", "TA"],
                        291: ["ER"],
                        297: ["AW"],
                        298: ["FO"],
                        299: ["GL"],
                        350: ["GI"],
                        351: ["PT"],
                        352: ["LU"],
                        353: ["IE"],
                        354: ["IS"],
                        355: ["AL"],
                        356: ["MT"],
                        357: ["CY"],
                        358: ["FI", "AX"],
                        359: ["BG"],
                        370: ["LT"],
                        371: ["LV"],
                        372: ["EE"],
                        373: ["MD"],
                        374: ["AM"],
                        375: ["BY"],
                        376: ["AD"],
                        377: ["MC"],
                        378: ["SM"],
                        380: ["UA"],
                        381: ["RS"],
                        382: ["ME"],
                        383: ["XK"],
                        385: ["HR"],
                        386: ["SI"],
                        387: ["BA"],
                        389: ["MK"],
                        420: ["CZ"],
                        421: ["SK"],
                        423: ["LI"],
                        500: ["FK"],
                        501: ["BZ"],
                        502: ["GT"],
                        503: ["SV"],
                        504: ["HN"],
                        505: ["NI"],
                        506: ["CR"],
                        507: ["PA"],
                        508: ["PM"],
                        509: ["HT"],
                        590: ["GP", "BL", "MF"],
                        591: ["BO"],
                        592: ["GY"],
                        593: ["EC"],
                        594: ["GF"],
                        595: ["PY"],
                        596: ["MQ"],
                        597: ["SR"],
                        598: ["UY"],
                        599: ["CW", "BQ"],
                        670: ["TL"],
                        672: ["NF"],
                        673: ["BN"],
                        674: ["NR"],
                        675: ["PG"],
                        676: ["TO"],
                        677: ["SB"],
                        678: ["VU"],
                        679: ["FJ"],
                        680: ["PW"],
                        681: ["WF"],
                        682: ["CK"],
                        683: ["NU"],
                        685: ["WS"],
                        686: ["KI"],
                        687: ["NC"],
                        688: ["TV"],
                        689: ["PF"],
                        690: ["TK"],
                        691: ["FM"],
                        692: ["MH"],
                        850: ["KP"],
                        852: ["HK"],
                        853: ["MO"],
                        855: ["KH"],
                        856: ["LA"],
                        880: ["BD"],
                        886: ["TW"],
                        960: ["MV"],
                        961: ["LB"],
                        962: ["JO"],
                        963: ["SY"],
                        964: ["IQ"],
                        965: ["KW"],
                        966: ["SA"],
                        967: ["YE"],
                        968: ["OM"],
                        970: ["PS"],
                        971: ["AE"],
                        972: ["IL"],
                        973: ["BH"],
                        974: ["QA"],
                        975: ["BT"],
                        976: ["MN"],
                        977: ["NP"],
                        992: ["TJ"],
                        993: ["TM"],
                        994: ["AZ"],
                        995: ["GE"],
                        996: ["KG"],
                        998: ["UZ"]
                    },
                    countries: {
                        AC: ["247", "00", "(?:[01589]\\d|[46])\\d{4}", [5, 6]],
                        AD: ["376", "00", "(?:1|6\\d)\\d{7}|[135-9]\\d{5}", [6, 8, 9],
                            [
                                ["(\\d{3})(\\d{3})", "$1 $2", ["[135-9]"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["1"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]
                            ]
                        ],
                        AE: ["971", "00", "(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}", [5, 6, 7, 8, 9, 10, 11, 12],
                            [
                                ["(\\d{3})(\\d{2,9})", "$1 $2", ["60|8"]],
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[236]|[479][2-8]"], "0$1"],
                                ["(\\d{3})(\\d)(\\d{5})", "$1 $2 $3", ["[479]"]],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"]
                            ], "0"
                        ],
                        AF: ["93", "00", "[2-7]\\d{8}", [9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]
                            ], "0"
                        ],
                        AG: ["1", "011", "(?:268|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([457]\\d{6})$|1", "268$1", 0, "268"],
                        AI: ["1", "011", "(?:264|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2457]\\d{6})$|1", "264$1", 0, "264"],
                        AL: ["355", "00", "(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}", [6, 7, 8, 9],
                            [
                                ["(\\d{3})(\\d{3,4})", "$1 $2", ["80|9"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["4[2-6]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2358][2-5]|4"], "0$1"],
                                ["(\\d{3})(\\d{5})", "$1 $2", ["[23578]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["6"], "0$1"]
                            ], "0"
                        ],
                        AM: ["374", "00", "(?:[1-489]\\d|55|60|77)\\d{6}", [8],
                            [
                                ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]0"], "0 $1"],
                                ["(\\d{3})(\\d{5})", "$1 $2", ["2|3[12]"], "(0$1)"],
                                ["(\\d{2})(\\d{6})", "$1 $2", ["1|47"], "(0$1)"],
                                ["(\\d{2})(\\d{6})", "$1 $2", ["[3-9]"], "0$1"]
                            ], "0"
                        ],
                        AO: ["244", "00", "[29]\\d{8}", [9],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[29]"]]
                            ]
                        ],
                        AR: ["54", "00", "(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}", [10, 11],
                            [
                                ["(\\d{4})(\\d{2})(\\d{4})", "$1 $2-$3", ["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])", "2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1", 1],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["1"], "0$1", 1],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1", 1],
                                ["(\\d)(\\d{4})(\\d{2})(\\d{4})", "$2 15-$3-$4", ["9(?:2[2-469]|3[3-578])", "9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))", "9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1", 0, "$1 $2 $3-$4"],
                                ["(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 15-$3-$4", ["91"], "0$1", 0, "$1 $2 $3-$4"],
                                ["(\\d{3})(\\d{3})(\\d{5})", "$1-$2-$3", ["8"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 15-$3-$4", ["9"], "0$1", 0, "$1 $2 $3-$4"]
                            ], "0", 0, "0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?", "9$1"
                        ],
                        AS: ["1", "011", "(?:[58]\\d\\d|684|900)\\d{7}", [10], 0, "1", 0, "([267]\\d{6})$|1", "684$1", 0, "684"],
                        AT: ["43", "00", "1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
                            [
                                ["(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"],
                                ["(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"],
                                ["(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"],
                                ["(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"],
                                ["(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]
                            ], "0"
                        ],
                        AU: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}", [5, 6, 7, 8, 9, 10, 12],
                            [
                                ["(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|4"], "0$1"],
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)"],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]
                            ], "0", 0, "(183[12])|0", 0, 0, 0, [
                                ["(?:(?:(?:2(?:[0-26-9]\\d|3[0-8]|4[02-9]|5[0135-9])|7(?:[013-57-9]\\d|2[0-8]))\\d|3(?:(?:[0-3589]\\d|6[1-9]|7[0-35-9])\\d|4(?:[0-578]\\d|90)))\\d\\d|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4])|3\\d\\d)|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}", [9]],
                                ["4(?:79[01]|83[0-389]|94[0-4])\\d{5}|4(?:[0-36]\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}", [9]],
                                ["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
                                ["190[0-26]\\d{6}", [10]], 0, 0, 0, ["163\\d{2,6}", [5, 6, 7, 8, 9]],
                                ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
                                ["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [6, 8, 10, 12]]
                            ], "0011"
                        ],
                        AW: ["297", "00", "(?:[25-79]\\d\\d|800)\\d{4}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[25-9]"]]
                            ]
                        ],
                        AX: ["358", "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}", [5, 6, 7, 8, 9, 10, 11, 12], 0, "0", 0, 0, 0, 0, "18", 0, "00"],
                        AZ: ["994", "00", "365\\d{6}|(?:[124579]\\d|60|88)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["90"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[28]|2|365|46", "1[28]|2|365[45]|46", "1[28]|2|365(?:4|5[02])|46"], "(0$1)"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-9]"], "0$1"]
                            ], "0"
                        ],
                        BA: ["387", "00", "6\\d{8}|(?:[35689]\\d|49|70)\\d{6}", [8, 9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-3]|[7-9]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]|6[56]"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]
                            ], "0"
                        ],
                        BB: ["1", "011", "(?:246|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2-9]\\d{6})$|1", "246$1", 0, "246"],
                        BD: ["880", "00", "[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}", [6, 7, 8, 9, 10],
                            [
                                ["(\\d{2})(\\d{4,6})", "$1-$2", ["31[5-8]|[459]1"], "0$1"],
                                ["(\\d{3})(\\d{3,7})", "$1-$2", ["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"], "0$1"],
                                ["(\\d{4})(\\d{3,6})", "$1-$2", ["[13-9]|2[23]"], "0$1"],
                                ["(\\d)(\\d{7,8})", "$1-$2", ["2"], "0$1"]
                            ], "0"
                        ],
                        BE: ["32", "00", "4\\d{8}|[1-9]\\d{7}", [8, 9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:80|9)0"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[239]|4[23]"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[15-8]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4"], "0$1"]
                            ], "0"
                        ],
                        BF: ["226", "00", "[025-7]\\d{7}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[025-7]"]]
                            ]
                        ],
                        BG: ["359", "00", "00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}", [6, 7, 8, 9, 12],
                            [
                                ["(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"],
                                ["(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:70|8)0"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|7"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]
                            ], "0"
                        ],
                        BH: ["973", "00", "[136-9]\\d{7}", [8],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[13679]|8[02-4679]"]]
                            ]
                        ],
                        BI: ["257", "00", "(?:[267]\\d|31)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2367]"]]
                            ]
                        ],
                        BJ: ["229", "00", "(?:01\\d|[24-689])\\d{7}", [8, 10],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-689]"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["0"]]
                            ]
                        ],
                        BL: ["590", "00", "(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}", [9], 0, "0", 0, 0, 0, 0, 0, [
                            ["590(?:2[7-9]|3[3-7]|5[12]|87)\\d{4}"],
                            ["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],
                            ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]
                        ]],
                        BM: ["1", "011", "(?:441|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2-9]\\d{6})$|1", "441$1", 0, "441"],
                        BN: ["673", "00", "[2-578]\\d{6}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[2-578]"]]
                            ]
                        ],
                        BO: ["591", "00(?:1\\d)?", "8001\\d{5}|(?:[2-467]\\d|50)\\d{6}", [8, 9],
                            [
                                ["(\\d)(\\d{7})", "$1 $2", ["[235]|4[46]"]],
                                ["(\\d{8})", "$1", ["[67]"]],
                                ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["8"]]
                            ], "0", 0, "0(1\\d)?"
                        ],
                        BQ: ["599", "00", "(?:[34]1|7\\d)\\d{5}", [7], 0, 0, 0, 0, 0, 0, "[347]"],
                        BR: ["55", "00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)", "(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-46-9]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}", [8, 9, 10, 11],
                            [
                                ["(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "4(?:02|37)0|[34]00"]],
                                ["(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["(?:[358]|90)0"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"], "($1)"],
                                ["(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[16][1-9]|[2-57-9]"], "($1)"]
                            ], "0", 0, "(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?", "$2"
                        ],
                        BS: ["1", "011", "(?:242|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([3-8]\\d{6})$|1", "242$1", 0, "242"],
                        BT: ["975", "00", "[17]\\d{7}|[2-8]\\d{6}", [7, 8],
                            [
                                ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-68]|7[246]"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]
                            ]
                        ],
                        BW: ["267", "00", "(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}", [7, 8, 10],
                            [
                                ["(\\d{2})(\\d{5})", "$1 $2", ["90"]],
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[24-6]|3[15-9]"]],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37]"]],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["0"]],
                                ["(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["8"]]
                            ]
                        ],
                        BY: ["375", "810", "(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}", [6, 7, 8, 9, 10, 11],
                            [
                                ["(\\d{3})(\\d{3})", "$1 $2", ["800"], "8 $1"],
                                ["(\\d{3})(\\d{2})(\\d{2,4})", "$1 $2 $3", ["800"], "8 $1"],
                                ["(\\d{4})(\\d{2})(\\d{3})", "$1 $2-$3", ["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])", "1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"], "8 0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["1(?:[56]|7[467])|2[1-3]"], "8 0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-4]"], "8 0$1"],
                                ["(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[89]"], "8 $1"]
                            ], "8", 0, "0|80?", 0, 0, 0, 0, "8~10"
                        ],
                        BZ: ["501", "00", "(?:0800\\d|[2-8])\\d{6}", [7, 11],
                            [
                                ["(\\d{3})(\\d{4})", "$1-$2", ["[2-8]"]],
                                ["(\\d)(\\d{3})(\\d{4})(\\d{3})", "$1-$2-$3-$4", ["0"]]
                            ]
                        ],
                        CA: ["1", "011", "[2-9]\\d{9}|3\\d{6}", [7, 10], 0, "1", 0, 0, 0, 0, 0, [
                            ["(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\d{6}", [10]],
                            ["", [10]],
                            ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", [10]],
                            ["900[2-9]\\d{6}", [10]],
                            ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:2[125-9]|33|44|66|77|88)|6(?:22|33))[2-9]\\d{6}", [10]], 0, ["310\\d{4}", [7]], 0, ["600[2-9]\\d{6}", [10]]
                        ]],
                        CC: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}", [6, 7, 8, 9, 10, 12], 0, "0", 0, "([59]\\d{7})$|0", "8$1", 0, 0, [
                            ["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}", [9]],
                            ["4(?:79[01]|83[0-389]|94[0-4])\\d{5}|4(?:[0-36]\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}", [9]],
                            ["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
                            ["190[0-26]\\d{6}", [10]], 0, 0, 0, 0, ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
                            ["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [6, 8, 10, 12]]
                        ], "0011"],
                        CD: ["243", "00", "(?:(?:[189]|5\\d)\\d|2)\\d{7}|[1-68]\\d{6}", [7, 8, 9, 10],
                            [
                                ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
                                ["(\\d{2})(\\d{5})", "$1 $2", ["[1-6]"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["5"], "0$1"]
                            ], "0"
                        ],
                        CF: ["236", "00", "(?:[27]\\d{3}|8776)\\d{4}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[278]"]]
                            ]
                        ],
                        CG: ["242", "00", "222\\d{6}|(?:0\\d|80)\\d{7}", [9],
                            [
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[02]"]]
                            ]
                        ],
                        CH: ["41", "00", "8\\d{11}|[2-9]\\d{8}", [9, 12],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8[047]|90"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-79]|81"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["8"], "0$1"]
                            ], "0"
                        ],
                        CI: ["225", "00", "[02]\\d{9}", [10],
                            [
                                ["(\\d{2})(\\d{2})(\\d)(\\d{5})", "$1 $2 $3 $4", ["2"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3 $4", ["0"]]
                            ]
                        ],
                        CK: ["682", "00", "[2-578]\\d{4}", [5],
                            [
                                ["(\\d{2})(\\d{3})", "$1 $2", ["[2-578]"]]
                            ]
                        ],
                        CL: ["56", "(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0", "12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}", [9, 10, 11],
                            [
                                ["(\\d{5})(\\d{4})", "$1 $2", ["219", "2196"], "($1)"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]],
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2[1-36]"], "($1)"],
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"], "($1)"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["60|8"]],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
                                ["(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["60"]]
                            ]
                        ],
                        CM: ["237", "00", "[26]\\d{8}|88\\d{6,7}", [8, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["88"]],
                                ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]|88"]]
                            ]
                        ],
                        CN: ["86", "00|1(?:[12]\\d|79)\\d\\d00", "(?:(?:1[03-689]|2\\d)\\d\\d|6)\\d{8}|1\\d{10}|[126]\\d{6}(?:\\d(?:\\d{2})?)?|86\\d{5,6}|(?:[3-579]\\d|8[0-57-9])\\d{5,9}", [7, 8, 9, 10, 11, 12],
                            [
                                ["(\\d{2})(\\d{5,6})", "$1 $2", ["(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]", "(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1", "10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12", "10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123", "10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123"], "0$1"],
                                ["(\\d{3})(\\d{5,6})", "$1 $2", ["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]", "(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]", "85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])", "85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["(?:4|80)0"]],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10|2(?:[02-57-9]|1[1-9])", "10|2(?:[02-57-9]|1[1-9])", "10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"], "0$1", 1],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"], "0$1", 1],
                                ["(\\d{3})(\\d{7,8})", "$1 $2", ["9"]],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["80"], "0$1", 1],
                                ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[3-578]"], "0$1", 1],
                                ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1[3-9]"]],
                                ["(\\d{2})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["[12]"], "0$1", 1]
                            ], "0", 0, "(1(?:[12]\\d|79)\\d\\d)|0", 0, 0, 0, 0, "00"
                        ],
                        CO: ["57", "00(?:4(?:[14]4|56)|[579])", "(?:46|60\\d\\d)\\d{6}|(?:1\\d|[39])\\d{9}", [8, 10, 11],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["46"]],
                                ["(\\d{3})(\\d{7})", "$1 $2", ["6|90"], "($1)"],
                                ["(\\d{3})(\\d{7})", "$1 $2", ["3[0-357]|91"]],
                                ["(\\d)(\\d{3})(\\d{7})", "$1-$2-$3", ["1"], "0$1", 0, "$1 $2 $3"]
                            ], "0", 0, "0([3579]|4(?:[14]4|56))?"
                        ],
                        CR: ["506", "00", "(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}", [8, 10],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[3-9]"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[89]"]]
                            ], 0, 0, "(19(?:0[0-2468]|1[09]|20|66|77|99))"
                        ],
                        CU: ["53", "119", "(?:[2-7]|8\\d\\d)\\d{7}|[2-47]\\d{6}|[34]\\d{5}", [6, 7, 8, 10],
                            [
                                ["(\\d{2})(\\d{4,6})", "$1 $2", ["2[1-4]|[34]"], "(0$1)"],
                                ["(\\d)(\\d{6,7})", "$1 $2", ["7"], "(0$1)"],
                                ["(\\d)(\\d{7})", "$1 $2", ["[56]"], "0$1"],
                                ["(\\d{3})(\\d{7})", "$1 $2", ["8"], "0$1"]
                            ], "0"
                        ],
                        CV: ["238", "0", "(?:[2-59]\\d\\d|800)\\d{4}", [7],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2-589]"]]
                            ]
                        ],
                        CW: ["599", "00", "(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}", [7, 8],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[3467]"]],
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["9[4-8]"]]
                            ], 0, 0, 0, 0, 0, "[69]"
                        ],
                        CX: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}", [6, 7, 8, 9, 10, 12], 0, "0", 0, "([59]\\d{7})$|0", "8$1", 0, 0, [
                            ["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}", [9]],
                            ["4(?:79[01]|83[0-389]|94[0-4])\\d{5}|4(?:[0-36]\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\d{6}", [9]],
                            ["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
                            ["190[0-26]\\d{6}", [10]], 0, 0, 0, 0, ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
                            ["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [6, 8, 10, 12]]
                        ], "0011"],
                        CY: ["357", "00", "(?:[279]\\d|[58]0)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{6})", "$1 $2", ["[257-9]"]]
                            ]
                        ],
                        CZ: ["420", "00", "(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}", [9, 10, 11, 12],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]|9[015-7]"]],
                                ["(\\d{2})(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["96"]],
                                ["(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]],
                                ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]
                            ]
                        ],
                        DE: ["49", "00", "[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                            [
                                ["(\\d{2})(\\d{3,13})", "$1 $2", ["3[02]|40|[68]9"], "0$1"],
                                ["(\\d{3})(\\d{3,12})", "$1 $2", ["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1", "2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"], "0$1"],
                                ["(\\d{4})(\\d{2,11})", "$1 $2", ["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]", "[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"], "0$1"],
                                ["(\\d{3})(\\d{4})", "$1 $2", ["138"], "0$1"],
                                ["(\\d{5})(\\d{2,10})", "$1 $2", ["3"], "0$1"],
                                ["(\\d{3})(\\d{5,11})", "$1 $2", ["181"], "0$1"],
                                ["(\\d{3})(\\d)(\\d{4,10})", "$1 $2 $3", ["1(?:3|80)|9"], "0$1"],
                                ["(\\d{3})(\\d{7,8})", "$1 $2", ["1[67]"], "0$1"],
                                ["(\\d{3})(\\d{7,12})", "$1 $2", ["8"], "0$1"],
                                ["(\\d{5})(\\d{6})", "$1 $2", ["185", "1850", "18500"], "0$1"],
                                ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                                ["(\\d{4})(\\d{7})", "$1 $2", ["18[68]"], "0$1"],
                                ["(\\d{4})(\\d{7})", "$1 $2", ["15[1279]"], "0$1"],
                                ["(\\d{5})(\\d{6})", "$1 $2", ["15[03568]", "15(?:[0568]|31)"], "0$1"],
                                ["(\\d{3})(\\d{8})", "$1 $2", ["18"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{7,8})", "$1 $2 $3", ["1(?:6[023]|7)"], "0$1"],
                                ["(\\d{4})(\\d{2})(\\d{7})", "$1 $2 $3", ["15[279]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{8})", "$1 $2 $3", ["15"], "0$1"]
                            ], "0"
                        ],
                        DJ: ["253", "00", "(?:2\\d|77)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[27]"]]
                            ]
                        ],
                        DK: ["45", "00", "[2-9]\\d{7}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-9]"]]
                            ]
                        ],
                        DM: ["1", "011", "(?:[58]\\d\\d|767|900)\\d{7}", [10], 0, "1", 0, "([2-7]\\d{6})$|1", "767$1", 0, "767"],
                        DO: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "8001|8[024]9"],
                        DZ: ["213", "00", "(?:[1-4]|[5-79]\\d|80)\\d{7}", [8, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-4]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-8]"], "0$1"]
                            ], "0"
                        ],
                        EC: ["593", "00", "1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}", [8, 9, 10, 11],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2-$3", ["[2-7]"], "(0$1)", 0, "$1-$2-$3"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]
                            ], "0"
                        ],
                        EE: ["372", "00", "8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}", [7, 8, 10],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88", "[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]],
                                ["(\\d{4})(\\d{3,4})", "$1 $2", ["[45]|8(?:00|[1-49])", "[45]|8(?:00[1-9]|[1-49])"]],
                                ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["7"]],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]
                            ]
                        ],
                        EG: ["20", "00", "[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}", [8, 9, 10],
                            [
                                ["(\\d)(\\d{7,8})", "$1 $2", ["[23]"], "0$1"],
                                ["(\\d{2})(\\d{6,7})", "$1 $2", ["1[35]|[4-6]|8[2468]|9[235-7]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
                                ["(\\d{2})(\\d{8})", "$1 $2", ["1"], "0$1"]
                            ], "0"
                        ],
                        EH: ["212", "00", "[5-8]\\d{8}", [9], 0, "0", 0, 0, 0, 0, "528[89]"],
                        ER: ["291", "00", "[178]\\d{6}", [7],
                            [
                                ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[178]"], "0$1"]
                            ], "0"
                        ],
                        ES: ["34", "00", "[5-9]\\d{8}", [9],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-9]"]]
                            ]
                        ],
                        ET: ["251", "00", "(?:11|[2-579]\\d)\\d{7}", [9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-579]"], "0$1"]
                            ], "0"
                        ],
                        FI: ["358", "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}", [5, 6, 7, 8, 9, 10, 11, 12],
                            [
                                ["(\\d{5})", "$1", ["20[2-59]"], "0$1"],
                                ["(\\d{3})(\\d{3,7})", "$1 $2", ["(?:[1-3]0|[68])0|70[07-9]"], "0$1"],
                                ["(\\d{2})(\\d{4,8})", "$1 $2", ["[14]|2[09]|50|7[135]"], "0$1"],
                                ["(\\d{2})(\\d{6,10})", "$1 $2", ["7"], "0$1"],
                                ["(\\d)(\\d{4,9})", "$1 $2", ["(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"]
                            ], "0", 0, 0, 0, 0, "1[03-79]|[2-9]", 0, "00"
                        ],
                        FJ: ["679", "0(?:0|52)", "45\\d{5}|(?:0800\\d|[235-9])\\d{6}", [7, 11],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[235-9]|45"]],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        FK: ["500", "00", "[2-7]\\d{4}", [5]],
                        FM: ["691", "00", "(?:[39]\\d\\d|820)\\d{4}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[389]"]]
                            ]
                        ],
                        FO: ["298", "00", "[2-9]\\d{5}", [6],
                            [
                                ["(\\d{6})", "$1", ["[2-9]"]]
                            ], 0, 0, "(10(?:01|[12]0|88))"
                        ],
                        FR: ["33", "00", "[1-9]\\d{8}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"],
                                ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"]
                            ], "0"
                        ],
                        GA: ["241", "00", "(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}", [7, 8],
                            [
                                ["(\\d)(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-7]"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["11|[67]"], "0$1"]
                            ], 0, 0, "0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})", "$1"
                        ],
                        GB: ["44", "00", "[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}", [7, 9, 10],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["800", "8001", "80011", "800111", "8001111"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["845", "8454", "84546", "845464"], "0$1"],
                                ["(\\d{3})(\\d{6})", "$1 $2", ["800"], "0$1"],
                                ["(\\d{5})(\\d{4,5})", "$1 $2", ["1(?:38|5[23]|69|76|94)", "1(?:(?:38|69)7|5(?:24|39)|768|946)", "1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"], "0$1"],
                                ["(\\d{4})(\\d{5,6})", "$1 $2", ["1(?:[2-69][02-9]|[78])"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[25]|7(?:0|6[02-9])", "[25]|7(?:0|6(?:[03-9]|2[356]))"], "0$1"],
                                ["(\\d{4})(\\d{6})", "$1 $2", ["7"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1389]"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, [
                                ["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0-35])|4(?:(?:[0-5]\\d|70)\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d|1(?:[0-7]\\d|8[0-3]))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d)\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}", [9, 10]],
                                ["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}", [10]],
                                ["80[08]\\d{7}|800\\d{6}|8001111"],
                                ["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d", [7, 10]],
                                ["70\\d{8}", [10]], 0, ["(?:3[0347]|55)\\d{8}", [10]],
                                ["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}", [10]],
                                ["56\\d{8}", [10]]
                            ], 0, " x"
                        ],
                        GD: ["1", "011", "(?:473|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2-9]\\d{6})$|1", "473$1", 0, "473"],
                        GE: ["995", "00", "(?:[3-57]\\d\\d|800)\\d{6}", [9],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["32"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[57]"]],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[348]"], "0$1"]
                            ], "0"
                        ],
                        GF: ["594", "00", "(?:[56]94\\d|7093)\\d{5}|(?:80|9\\d)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]|9[47]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[89]"], "0$1"]
                            ], "0"
                        ],
                        GG: ["44", "00", "(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?", [7, 9, 10], 0, "0", 0, "([25-9]\\d{5})$|0", "1481$1", 0, 0, [
                            ["1481[25-9]\\d{5}", [10]],
                            ["7(?:(?:781|839)\\d|911[17])\\d{5}", [10]],
                            ["80[08]\\d{7}|800\\d{6}|8001111"],
                            ["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d", [7, 10]],
                            ["70\\d{8}", [10]], 0, ["(?:3[0347]|55)\\d{8}", [10]],
                            ["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}", [10]],
                            ["56\\d{8}", [10]]
                        ]],
                        GH: ["233", "00", "(?:[235]\\d{3}|800)\\d{5}", [8, 9],
                            [
                                ["(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]
                            ], "0"
                        ],
                        GI: ["350", "00", "(?:[25]\\d|60)\\d{6}", [8],
                            [
                                ["(\\d{3})(\\d{5})", "$1 $2", ["2"]]
                            ]
                        ],
                        GL: ["299", "00", "(?:19|[2-689]\\d|70)\\d{4}", [6],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["19|[2-9]"]]
                            ]
                        ],
                        GM: ["220", "00", "[2-9]\\d{6}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]
                            ]
                        ],
                        GN: ["224", "00", "722\\d{6}|(?:3|6\\d)\\d{7}", [8, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["3"]],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[67]"]]
                            ]
                        ],
                        GP: ["590", "00", "(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-79]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, [
                                ["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\d)\\d{4}"],
                                ["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],
                                ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]
                            ]
                        ],
                        GQ: ["240", "00", "222\\d{6}|(?:3\\d|55|[89]0)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235]"]],
                                ["(\\d{3})(\\d{6})", "$1 $2", ["[89]"]]
                            ]
                        ],
                        GR: ["30", "00", "5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}", [10, 11, 12],
                            [
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["21|7"]],
                                ["(\\d{4})(\\d{6})", "$1 $2", ["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2689]"]],
                                ["(\\d{3})(\\d{3,4})(\\d{5})", "$1 $2 $3", ["8"]]
                            ]
                        ],
                        GT: ["502", "00", "80\\d{6}|(?:1\\d{3}|[2-7])\\d{7}", [8, 11],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[2-8]"]],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
                            ]
                        ],
                        GU: ["1", "011", "(?:[58]\\d\\d|671|900)\\d{7}", [10], 0, "1", 0, "([2-9]\\d{6})$|1", "671$1", 0, "671"],
                        GW: ["245", "00", "[49]\\d{8}|4\\d{6}", [7, 9],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["40"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"]]
                            ]
                        ],
                        GY: ["592", "001", "(?:[2-8]\\d{3}|9008)\\d{3}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]
                            ]
                        ],
                        HK: ["852", "00(?:30|5[09]|[126-9]?)", "8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}", [5, 6, 7, 8, 9, 11],
                            [
                                ["(\\d{3})(\\d{2,5})", "$1 $2", ["900", "9003"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]],
                                ["(\\d{3})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        HN: ["504", "00", "8\\d{10}|[237-9]\\d{7}", [8, 11],
                            [
                                ["(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]]
                            ]
                        ],
                        HR: ["385", "00", "(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}", [6, 7, 8, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["6[01]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["8"], "0$1"],
                                ["(\\d)(\\d{4})(\\d{3})", "$1 $2 $3", ["1"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["6|7[245]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-57]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"]
                            ], "0"
                        ],
                        HT: ["509", "00", "(?:[2-489]\\d|55)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[2-589]"]]
                            ]
                        ],
                        HU: ["36", "00", "[235-7]\\d{8}|[1-9]\\d{7}", [8, 9],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "(06 $1)"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"], "(06 $1)"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "06 $1"]
                            ], "06"
                        ],
                        ID: ["62", "00[89]", "00[1-9]\\d{9,14}|(?:[1-36]|8\\d{5})\\d{6}|00\\d{9}|[1-9]\\d{8,10}|[2-9]\\d{7}", [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
                            [
                                ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]],
                                ["(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"],
                                ["(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"],
                                ["(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"],
                                ["(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"],
                                ["(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"],
                                ["(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"],
                                ["(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"]
                            ], "0"
                        ],
                        IE: ["353", "00", "(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}", [7, 8, 9, 10],
                            [
                                ["(\\d{2})(\\d{5})", "$1 $2", ["2[24-9]|47|58|6[237-9]|9[35-9]"], "(0$1)"],
                                ["(\\d{3})(\\d{5})", "$1 $2", ["[45]0"], "(0$1)"],
                                ["(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"], "(0$1)"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2569]|4[1-69]|7[14]"], "(0$1)"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["81"], "(0$1)"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[78]"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["4"], "(0$1)"],
                                ["(\\d{2})(\\d)(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["8"], "0$1"]
                            ], "0"
                        ],
                        IL: ["972", "0(?:0|1[2-9])", "1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}", [7, 8, 9, 10, 11, 12],
                            [
                                ["(\\d{4})(\\d{3})", "$1-$2", ["125"]],
                                ["(\\d{4})(\\d{2})(\\d{2})", "$1-$2-$3", ["121"]],
                                ["(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-489]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1-$2-$3", ["12"]],
                                ["(\\d{4})(\\d{6})", "$1-$2", ["159"]],
                                ["(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3-$4", ["1[7-9]"]],
                                ["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})", "$1-$2 $3-$4", ["15"]]
                            ], "0"
                        ],
                        IM: ["44", "00", "1624\\d{6}|(?:[3578]\\d|90)\\d{8}", [10], 0, "0", 0, "([25-8]\\d{5})$|0", "1624$1", 0, "74576|(?:16|7[56])24"],
                        IN: ["91", "00", "(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}", [8, 9, 10, 11, 12, 13],
                            [
                                ["(\\d{8})", "$1", ["5(?:0|2[23]|3[03]|[67]1|88)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"], 0, 1],
                                ["(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"], 0, 1],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["140"], 0, 1],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["11|2[02]|33|4[04]|79[1-7]|80[2-46]", "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])", "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"], "0$1", 1],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"], "0$1", 1],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807", "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]", "1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"], "0$1", 1],
                                ["(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1", 1],
                                ["(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"], 0, 1],
                                ["(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["18"], 0, 1]
                            ], "0"
                        ],
                        IO: ["246", "00", "3\\d{6}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["3"]]
                            ]
                        ],
                        IQ: ["964", "00", "(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}", [8, 9, 10],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-6]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
                            ], "0"
                        ],
                        IR: ["98", "00", "[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}", [4, 5, 6, 7, 10],
                            [
                                ["(\\d{4,5})", "$1", ["96"], "0$1"],
                                ["(\\d{2})(\\d{4,5})", "$1 $2", ["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[1-8]"], "0$1"]
                            ], "0"
                        ],
                        IS: ["354", "00|1(?:0(?:01|[12]0)|100)", "(?:38\\d|[4-9])\\d{6}", [7, 9],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[4-9]"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["3"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        IT: ["39", "00", "0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:43|55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?", [6, 7, 8, 9, 10, 11, 12],
                            [
                                ["(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]],
                                ["(\\d{3})(\\d{3,6})", "$1 $2", ["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])", "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]],
                                ["(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["894"]],
                                ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1(?:44|[679])|[378]|43"]],
                                ["(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]|14"]],
                                ["(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]],
                                ["(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["3"]]
                            ], 0, 0, 0, 0, 0, 0, [
                                ["0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}", [6, 7, 8, 9, 10, 11]],
                                ["3[2-9]\\d{7,8}|(?:31|43)\\d{8}", [9, 10]],
                                ["80(?:0\\d{3}|3)\\d{3}", [6, 9]],
                                ["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}", [6, 8, 9, 10]],
                                ["1(?:78\\d|99)\\d{6}", [9, 10]],
                                ["3[2-8]\\d{9,10}", [11, 12]], 0, 0, ["55\\d{8}", [10]],
                                ["84(?:[08]\\d{3}|[17])\\d{3}", [6, 9]]
                            ]
                        ],
                        JE: ["44", "00", "1534\\d{6}|(?:[3578]\\d|90)\\d{8}", [10], 0, "0", 0, "([0-24-8]\\d{5})$|0", "1534$1", 0, 0, [
                            ["1534[0-24-8]\\d{5}"],
                            ["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97\\d))\\d{5}"],
                            ["80(?:07(?:35|81)|8901)\\d{4}"],
                            ["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],
                            ["701511\\d{4}"], 0, ["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],
                            ["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],
                            ["56\\d{8}"]
                        ]],
                        JM: ["1", "011", "(?:[58]\\d\\d|658|900)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "658|876"],
                        JO: ["962", "00", "(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}", [8, 9],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2356]|87"], "(0$1)"],
                                ["(\\d{3})(\\d{5,6})", "$1 $2", ["[89]"], "0$1"],
                                ["(\\d{2})(\\d{7})", "$1 $2", ["70"], "0$1"],
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
                            ], "0"
                        ],
                        JP: ["81", "010", "00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}", [8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"],
                                ["(\\d{4})(\\d)(\\d{4})", "$1-$2-$3", ["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60"], "0$1"],
                                ["(\\d)(\\d{4})(\\d{4})", "$1-$2-$3", ["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["[14]|[289][2-9]|5[3-9]|7[2-4679]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[257-9]"], "0$1"]
                            ], "0", 0, "(000[259]\\d{6})$|(?:(?:003768)0?)|0", "$1"
                        ],
                        KE: ["254", "000", "(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}", [7, 8, 9, 10],
                            [
                                ["(\\d{2})(\\d{5,7})", "$1 $2", ["[24-6]"], "0$1"],
                                ["(\\d{3})(\\d{6})", "$1 $2", ["[17]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]
                            ], "0"
                        ],
                        KG: ["996", "00", "8\\d{9}|[235-9]\\d{8}", [9, 10],
                            [
                                ["(\\d{4})(\\d{5})", "$1 $2", ["3(?:1[346]|[24-79])"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235-79]|88"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d)(\\d{2,3})", "$1 $2 $3 $4", ["8"], "0$1"]
                            ], "0"
                        ],
                        KH: ["855", "00[14-9]", "1\\d{9}|[1-9]\\d{7,8}", [8, 9, 10],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-9]"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                            ], "0"
                        ],
                        KI: ["686", "00", "(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}", [5, 8], 0, "0"],
                        KM: ["269", "00", "[3478]\\d{6}", [7],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[3478]"]]
                            ]
                        ],
                        KN: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2-7]\\d{6})$|1", "869$1", 0, "869"],
                        KP: ["850", "00|99", "85\\d{6}|(?:19\\d|[2-7])\\d{7}", [8, 10],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"]
                            ], "0"
                        ],
                        KR: ["82", "00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))", "00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}", [5, 6, 8, 9, 10, 11, 12, 13, 14],
                            [
                                ["(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1"],
                                ["(\\d{4})(\\d{4})", "$1-$2", ["1"]],
                                ["(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["[36]0|8"], "0$1"],
                                ["(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["[1346]|5[1-5]"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"],
                                ["(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["5"], "0$1"]
                            ], "0", 0, "0(8(?:[1-46-8]|5\\d\\d))?"
                        ],
                        KW: ["965", "00", "18\\d{5}|(?:[2569]\\d|41)\\d{6}", [7, 8],
                            [
                                ["(\\d{4})(\\d{3,4})", "$1 $2", ["[169]|2(?:[235]|4[1-35-9])|52"]],
                                ["(\\d{3})(\\d{5})", "$1 $2", ["[245]"]]
                            ]
                        ],
                        KY: ["1", "011", "(?:345|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2-9]\\d{6})$|1", "345$1", 0, "345"],
                        KZ: ["7", "810", "(?:33622|8\\d{8})\\d{5}|[78]\\d{9}", [10, 14], 0, "8", 0, 0, 0, 0, "33|7", 0, "8~10"],
                        LA: ["856", "00", "[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}", [8, 9, 10],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2[13]|3[14]|[4-8]"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["30[0135-9]"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[23]"], "0$1"]
                            ], "0"
                        ],
                        LB: ["961", "00", "[27-9]\\d{7}|[13-9]\\d{6}", [7, 8],
                            [
                                ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[27-9]"]]
                            ], "0"
                        ],
                        LC: ["1", "011", "(?:[58]\\d\\d|758|900)\\d{7}", [10], 0, "1", 0, "([2-8]\\d{6})$|1", "758$1", 0, "758"],
                        LI: ["423", "00", "[68]\\d{8}|(?:[2378]\\d|90)\\d{5}", [7, 9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2379]|8(?:0[09]|7)", "[2379]|8(?:0(?:02|9)|7)"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["69"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]
                            ], "0", 0, "(1001)|0"
                        ],
                        LK: ["94", "00", "[1-9]\\d{8}", [9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-689]"], "0$1"]
                            ], "0"
                        ],
                        LR: ["231", "00", "(?:[245]\\d|33|77|88)\\d{7}|(?:2\\d|[4-6])\\d{6}", [7, 8, 9],
                            [
                                ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["4[67]|[56]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-578]"], "0$1"]
                            ], "0"
                        ],
                        LS: ["266", "00", "(?:[256]\\d\\d|800)\\d{5}", [8],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[2568]"]]
                            ]
                        ],
                        LT: ["370", "00", "(?:[3469]\\d|52|[78]0)\\d{6}", [8],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["52[0-7]"], "(0-$1)", 1],
                                ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[7-9]"], "0 $1", 1],
                                ["(\\d{2})(\\d{6})", "$1 $2", ["37|4(?:[15]|6[1-8])"], "(0-$1)", 1],
                                ["(\\d{3})(\\d{5})", "$1 $2", ["[3-6]"], "(0-$1)", 1]
                            ], "0", 0, "[08]"
                        ],
                        LU: ["352", "00", "35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}", [4, 5, 6, 7, 8, 9, 10, 11],
                            [
                                ["(\\d{2})(\\d{3})", "$1 $2", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],
                                ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],
                                ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["20[2-689]"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4", ["2(?:[0367]|4[3-8])"]],
                                ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["80[01]|90[015]"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["20"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4 $5", ["2(?:[0367]|4[3-8])"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})", "$1 $2 $3 $4", ["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]
                            ], 0, 0, "(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)"
                        ],
                        LV: ["371", "00", "(?:[268]\\d|90)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[269]|8[01]"]]
                            ]
                        ],
                        LY: ["218", "00", "[2-9]\\d{8}", [9],
                            [
                                ["(\\d{2})(\\d{7})", "$1-$2", ["[2-9]"], "0$1"]
                            ], "0"
                        ],
                        MA: ["212", "00", "[5-8]\\d{8}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5[45]"], "0$1"],
                                ["(\\d{4})(\\d{5})", "$1-$2", ["5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)"], "0$1"],
                                ["(\\d{2})(\\d{7})", "$1-$2", ["8"], "0$1"],
                                ["(\\d{3})(\\d{6})", "$1-$2", ["[5-7]"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, [
                                ["5(?:2(?:[0-25-79]\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],
                                ["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[0167]\\d|2[0-467]|5[0-3]|8[0-5]))\\d{6}"],
                                ["80[0-7]\\d{6}"],
                                ["89\\d{7}"], 0, 0, 0, 0, ["(?:592(?:4[0-2]|93)|80[89]\\d\\d)\\d{4}"]
                            ]
                        ],
                        MC: ["377", "00", "(?:[3489]|6\\d)\\d{7}", [8, 9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[389]"]],
                                ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]
                            ], "0"
                        ],
                        MD: ["373", "00", "(?:[235-7]\\d|[89]0)\\d{6}", [8],
                            [
                                ["(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["22|3"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[25-7]"], "0$1"]
                            ], "0"
                        ],
                        ME: ["382", "00", "(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}", [8, 9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "0$1"]
                            ], "0"
                        ],
                        MF: ["590", "00", "(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}", [9], 0, "0", 0, 0, 0, 0, 0, [
                            ["590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\d{4}"],
                            ["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],
                            ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]
                        ]],
                        MG: ["261", "00", "[23]\\d{8}", [9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["[23]"], "0$1"]
                            ], "0", 0, "([24-9]\\d{6})$|0", "20$1"
                        ],
                        MH: ["692", "011", "329\\d{4}|(?:[256]\\d|45)\\d{5}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1-$2", ["[2-6]"]]
                            ], "1"
                        ],
                        MK: ["389", "00", "[2-578]\\d{7}", [8],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2|34[47]|4(?:[37]7|5[47]|64)"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[347]"], "0$1"],
                                ["(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[58]"], "0$1"]
                            ], "0"
                        ],
                        ML: ["223", "00", "[24-9]\\d{7}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-9]"]]
                            ]
                        ],
                        MM: ["95", "00", "1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}", [6, 7, 8, 9, 10],
                            [
                                ["(\\d)(\\d{2})(\\d{3})", "$1 $2 $3", ["16|2"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["4(?:[2-46]|5[3-5])|5|6(?:[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-5]|(?:60|86)[23]"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]|452|678|86", "[12]|452|6788|86"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[4-7]|8[1-35]"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{4,6})", "$1 $2 $3", ["9(?:2[0-4]|[35-9]|4[137-9])"], "0$1"],
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["92"], "0$1"],
                                ["(\\d)(\\d{5})(\\d{4})", "$1 $2 $3", ["9"], "0$1"]
                            ], "0"
                        ],
                        MN: ["976", "001", "[12]\\d{7,9}|[5-9]\\d{7}", [8, 9, 10],
                            [
                                ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[12]1"], "0$1"],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[5-9]"]],
                                ["(\\d{3})(\\d{5,6})", "$1 $2", ["[12]2[1-3]"], "0$1"],
                                ["(\\d{4})(\\d{5,6})", "$1 $2", ["[12](?:27|3[2-8]|4[2-68]|5[1-4689])", "[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"], "0$1"],
                                ["(\\d{5})(\\d{4,5})", "$1 $2", ["[12]"], "0$1"]
                            ], "0"
                        ],
                        MO: ["853", "00", "0800\\d{3}|(?:28|[68]\\d)\\d{6}", [7, 8],
                            [
                                ["(\\d{4})(\\d{3})", "$1 $2", ["0"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[268]"]]
                            ]
                        ],
                        MP: ["1", "011", "[58]\\d{9}|(?:67|90)0\\d{7}", [10], 0, "1", 0, "([2-9]\\d{6})$|1", "670$1", 0, "670"],
                        MQ: ["596", "00", "(?:596\\d|7091)\\d{5}|(?:69|[89]\\d)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-79]|8(?:0[6-9]|[36])"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
                            ], "0"
                        ],
                        MR: ["222", "00", "(?:[2-4]\\d\\d|800)\\d{5}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-48]"]]
                            ]
                        ],
                        MS: ["1", "011", "(?:[58]\\d\\d|664|900)\\d{7}", [10], 0, "1", 0, "([34]\\d{6})$|1", "664$1", 0, "664"],
                        MT: ["356", "00", "3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}", [8],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[2357-9]"]]
                            ]
                        ],
                        MU: ["230", "0(?:0|[24-7]0|3[03])", "(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}", [7, 8, 10],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[2-46]|8[013]"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[57]"]],
                                ["(\\d{5})(\\d{5})", "$1 $2", ["8"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "020"
                        ],
                        MV: ["960", "0(?:0|19)", "(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}", [7, 10],
                            [
                                ["(\\d{3})(\\d{4})", "$1-$2", ["[34679]"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        MW: ["265", "00", "(?:[1289]\\d|31|77)\\d{7}|1\\d{6}", [7, 9],
                            [
                                ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["1[2-9]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[137-9]"], "0$1"]
                            ], "0"
                        ],
                        MX: ["52", "0[09]", "[2-9]\\d{9}", [10],
                            [
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        MY: ["60", "00", "1\\d{8,9}|(?:3\\d|[4-9])\\d{7}", [8, 9, 10],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["[4-79]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1-$2 $3", ["1(?:[02469]|[378][1-9]|53)|8", "1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"], "0$1"],
                                ["(\\d)(\\d{4})(\\d{4})", "$1-$2 $3", ["3"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3-$4", ["1(?:[367]|80)"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2 $3", ["15"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2 $3", ["1"], "0$1"]
                            ], "0"
                        ],
                        MZ: ["258", "00", "(?:2|8\\d)\\d{7}", [8, 9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2|8[2-79]"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]
                            ]
                        ],
                        NA: ["264", "00", "[68]\\d{7,8}", [8, 9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["6"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["87"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]
                            ], "0"
                        ],
                        NC: ["687", "00", "(?:050|[2-57-9]\\d\\d)\\d{3}", [6],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[02-57-9]"]]
                            ]
                        ],
                        NE: ["227", "00", "[027-9]\\d{7}", [8],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["08"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[089]|2[013]|7[0467]"]]
                            ]
                        ],
                        NF: ["672", "00", "[13]\\d{5}", [6],
                            [
                                ["(\\d{2})(\\d{4})", "$1 $2", ["1[0-3]"]],
                                ["(\\d)(\\d{5})", "$1 $2", ["[13]"]]
                            ], 0, 0, "([0-258]\\d{4})$", "3$1"
                        ],
                        NG: ["234", "009", "38\\d{6}|[78]\\d{9,13}|(?:20|9\\d)\\d{8}", [8, 10, 11, 12, 13, 14],
                            [
                                ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["3"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[7-9]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["20[129]"], "0$1"],
                                ["(\\d{4})(\\d{2})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                ["(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["[78]"], "0$1"],
                                ["(\\d{3})(\\d{5})(\\d{5,6})", "$1 $2 $3", ["[78]"], "0$1"]
                            ], "0"
                        ],
                        NI: ["505", "00", "(?:1800|[25-8]\\d{3})\\d{4}", [8],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[125-8]"]]
                            ]
                        ],
                        NL: ["31", "00", "(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}", [5, 6, 7, 8, 9, 10, 11],
                            [
                                ["(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"],
                                ["(\\d{2})(\\d{7})", "$1 $2", ["66"], "0$1"],
                                ["(\\d)(\\d{8})", "$1 $2", ["6"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-578]|91"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3", ["9"], "0$1"]
                            ], "0"
                        ],
                        NO: ["47", "00", "(?:0|[2-9]\\d{3})\\d{4}", [5, 8],
                            [
                                ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["8"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-79]"]]
                            ], 0, 0, 0, 0, 0, "[02-689]|7[0-8]"
                        ],
                        NP: ["977", "00", "(?:1\\d|9)\\d{9}|[1-9]\\d{7}", [8, 10, 11],
                            [
                                ["(\\d)(\\d{7})", "$1-$2", ["1[2-6]"], "0$1"],
                                ["(\\d{2})(\\d{6})", "$1-$2", ["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"], "0$1"],
                                ["(\\d{3})(\\d{7})", "$1-$2", ["9"]]
                            ], "0"
                        ],
                        NR: ["674", "00", "(?:444|(?:55|8\\d)\\d|666)\\d{4}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[4-68]"]]
                            ]
                        ],
                        NU: ["683", "00", "(?:[4-7]|888\\d)\\d{3}", [4, 7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["8"]]
                            ]
                        ],
                        NZ: ["64", "0(?:0|161)", "[1289]\\d{9}|50\\d{5}(?:\\d{2,3})?|[27-9]\\d{7,8}|(?:[34]\\d|6[0-35-9])\\d{6}|8\\d{4,6}", [5, 6, 7, 8, 9, 10],
                            [
                                ["(\\d{2})(\\d{3,8})", "$1 $2", ["8[1-79]"], "0$1"],
                                ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["50[036-8]|8|90", "50(?:[0367]|88)|8|90"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["24|[346]|7[2-57-9]|9[2-9]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:10|74)|[589]"], "0$1"],
                                ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1|2[028]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,5})", "$1 $2 $3", ["2(?:[169]|7[0-35-9])|7"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, 0, "00"
                        ],
                        OM: ["968", "00", "(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}", [7, 8, 9],
                            [
                                ["(\\d{3})(\\d{4,6})", "$1 $2", ["[58]"]],
                                ["(\\d{2})(\\d{6})", "$1 $2", ["2"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[179]"]]
                            ]
                        ],
                        PA: ["507", "00", "(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}", [7, 8, 10, 11],
                            [
                                ["(\\d{3})(\\d{4})", "$1-$2", ["[1-57-9]"]],
                                ["(\\d{4})(\\d{4})", "$1-$2", ["[68]"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
                            ]
                        ],
                        PE: ["51", "00|19(?:1[124]|77|90)00", "(?:[14-8]|9\\d)\\d{7}", [8, 9],
                            [
                                ["(\\d{3})(\\d{5})", "$1 $2", ["80"], "(0$1)"],
                                ["(\\d)(\\d{7})", "$1 $2", ["1"], "(0$1)"],
                                ["(\\d{2})(\\d{6})", "$1 $2", ["[4-8]"], "(0$1)"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"]]
                            ], "0", 0, 0, 0, 0, 0, 0, "00", " Anexo "
                        ],
                        PF: ["689", "00", "4\\d{5}(?:\\d{2})?|8\\d{7,8}", [6, 8, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["44"]],
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4|8[7-9]"]],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]]
                            ]
                        ],
                        PG: ["675", "00|140[1-3]", "(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}", [7, 8],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["18|[2-69]|85"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[78]"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        PH: ["63", "00", "(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}", [6, 8, 9, 10, 11, 12, 13],
                            [
                                ["(\\d)(\\d{5})", "$1 $2", ["2"], "(0$1)"],
                                ["(\\d{4})(\\d{4,6})", "$1 $2", ["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2", "3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"], "(0$1)"],
                                ["(\\d{5})(\\d{4})", "$1 $2", ["346|4(?:27|9[35])|883", "3469|4(?:279|9(?:30|56))|8834"], "(0$1)"],
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|8[2-8]"], "(0$1)"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
                                ["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["1"]]
                            ], "0"
                        ],
                        PK: ["92", "00", "122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}", [8, 9, 10, 11, 12],
                            [
                                ["(\\d{3})(\\d{3})(\\d{2,7})", "$1 $2 $3", ["[89]0"], "0$1"],
                                ["(\\d{4})(\\d{5})", "$1 $2", ["1"]],
                                ["(\\d{3})(\\d{6,7})", "$1 $2", ["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])", "9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"], "(0$1)"],
                                ["(\\d{2})(\\d{7,8})", "$1 $2", ["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"], "(0$1)"],
                                ["(\\d{5})(\\d{5})", "$1 $2", ["58"], "(0$1)"],
                                ["(\\d{3})(\\d{7})", "$1 $2", ["3"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"], "(0$1)"],
                                ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[24-9]"], "(0$1)"]
                            ], "0"
                        ],
                        PL: ["48", "00", "(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}", [6, 7, 8, 9, 10],
                            [
                                ["(\\d{5})", "$1", ["19"]],
                                ["(\\d{3})(\\d{3})", "$1 $2", ["11|20|64"]],
                                ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1", "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],
                                ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["64"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[2-8]|[2-7]|8[1-79]|9[145]"]],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["8"]]
                            ]
                        ],
                        PM: ["508", "00", "[45]\\d{5}|(?:708|8\\d\\d)\\d{6}", [6, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[45]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"]],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
                            ], "0"
                        ],
                        PR: ["1", "011", "(?:[589]\\d\\d|787)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "787|939"],
                        PS: ["970", "00", "[2489]2\\d{6}|(?:1\\d|5)\\d{8}", [8, 9, 10],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2489]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["5"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                            ], "0"
                        ],
                        PT: ["351", "00", "1693\\d{5}|(?:[26-9]\\d|30)\\d{7}", [9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["2[12]"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["16|[236-9]"]]
                            ]
                        ],
                        PW: ["680", "01[12]", "(?:[24-8]\\d\\d|345|900)\\d{4}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]
                            ]
                        ],
                        PY: ["595", "00", "59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}", [6, 7, 8, 9, 10, 11],
                            [
                                ["(\\d{3})(\\d{3,6})", "$1 $2", ["[2-9]0"], "0$1"],
                                ["(\\d{2})(\\d{5})", "$1 $2", ["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"], "(0$1)"],
                                ["(\\d{3})(\\d{4,5})", "$1 $2", ["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"], "(0$1)"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"], "(0$1)"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["87"]],
                                ["(\\d{3})(\\d{6})", "$1 $2", ["9(?:[5-79]|8[1-7])"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"]]
                            ], "0"
                        ],
                        QA: ["974", "00", "800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}", [7, 8, 9, 11],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["2[16]|8"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[3-7]"]]
                            ]
                        ],
                        RE: ["262", "00", "709\\d{6}|(?:26|[689]\\d)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[26-9]"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, [
                                ["26(?:2\\d\\d|3(?:0\\d|1[0-6]))\\d{4}"],
                                ["(?:69(?:2\\d\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))|7092[0-3])\\d{4}"],
                                ["80\\d{7}"],
                                ["89[1-37-9]\\d{6}"], 0, 0, 0, 0, ["9(?:399[0-3]|479[0-6]|76(?:2[278]|3[0-37]))\\d{4}"],
                                ["8(?:1[019]|2[0156]|84|90)\\d{6}"]
                            ]
                        ],
                        RO: ["40", "00", "(?:[236-8]\\d|90)\\d{7}|[23]\\d{5}", [6, 9],
                            [
                                ["(\\d{3})(\\d{3})", "$1 $2", ["2[3-6]", "2[3-6]\\d9"], "0$1"],
                                ["(\\d{2})(\\d{4})", "$1 $2", ["219|31"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23]1"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[236-9]"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, 0, 0, " int "
                        ],
                        RS: ["381", "00", "38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}", [6, 7, 8, 9, 10, 11, 12],
                            [
                                ["(\\d{3})(\\d{3,9})", "$1 $2", ["(?:2[389]|39)0|[7-9]"], "0$1"],
                                ["(\\d{2})(\\d{5,10})", "$1 $2", ["[1-36]"], "0$1"]
                            ], "0"
                        ],
                        RU: ["7", "810", "8\\d{13}|[347-9]\\d{9}", [10, 14],
                            [
                                ["(\\d{4})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-8]|2[1-9])", "7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))", "7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"], "8 ($1)", 1],
                                ["(\\d{5})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-68]|2[1-9])", "7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))", "7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"], "8 ($1)", 1],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", 1],
                                ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[349]|8(?:[02-7]|1[1-8])"], "8 ($1)", 1],
                                ["(\\d{4})(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["8"], "8 ($1)"]
                            ], "8", 0, 0, 0, 0, "3[04-689]|[489]", 0, "8~10"
                        ],
                        RW: ["250", "00", "(?:06|[27]\\d\\d|[89]00)\\d{6}", [8, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"], "0$1"]
                            ], "0"
                        ],
                        SA: ["966", "00", "92\\d{7}|(?:[15]|8\\d)\\d{8}", [9, 10],
                            [
                                ["(\\d{4})(\\d{5})", "$1 $2", ["9"]],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["81"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
                            ], "0"
                        ],
                        SB: ["677", "0[01]", "[6-9]\\d{6}|[1-6]\\d{4}", [5, 7],
                            [
                                ["(\\d{2})(\\d{5})", "$1 $2", ["6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])"]]
                            ]
                        ],
                        SC: ["248", "010|0[0-2]", "(?:[2489]\\d|64)\\d{5}", [7],
                            [
                                ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[246]|9[57]"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        SD: ["249", "00", "[19]\\d{8}", [9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[19]"], "0$1"]
                            ], "0"
                        ],
                        SE: ["46", "00", "(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}", [6, 7, 8, 9, 10, 12],
                            [
                                ["(\\d{2})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["20"], "0$1", 0, "$1 $2 $3"],
                                ["(\\d{3})(\\d{4})", "$1-$2", ["9(?:00|39|44|9)"], "0$1", 0, "$1 $2"],
                                ["(\\d{2})(\\d{3})(\\d{2})", "$1-$2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"], "0$1", 0, "$1 $2 $3"],
                                ["(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1", 0, "$1 $2 $3 $4"],
                                ["(\\d{3})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1", 0, "$1 $2 $3"],
                                ["(\\d{3})(\\d{2,3})(\\d{3})", "$1-$2 $3", ["9(?:00|39|44)"], "0$1", 0, "$1 $2 $3"],
                                ["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"], "0$1", 0, "$1 $2 $3 $4"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["10|7"], "0$1", 0, "$1 $2 $3 $4"],
                                ["(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1", 0, "$1 $2 $3 $4"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1", 0, "$1 $2 $3 $4"],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1-$2 $3 $4", ["9"], "0$1", 0, "$1 $2 $3 $4"],
                                ["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4 $5", ["[26]"], "0$1", 0, "$1 $2 $3 $4 $5"]
                            ], "0"
                        ],
                        SG: ["65", "0[0-3]\\d", "(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}", [8, 10, 11],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[369]|8(?:0[1-9]|[1-9])"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]],
                                ["(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["7"]],
                                ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
                            ]
                        ],
                        SH: ["290", "00", "(?:[256]\\d|8)\\d{3}", [4, 5], 0, 0, 0, 0, 0, 0, "[256]"],
                        SI: ["386", "00|10(?:22|66|88|99)", "[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}", [5, 6, 7, 8],
                            [
                                ["(\\d{2})(\\d{3,6})", "$1 $2", ["8[09]|9"], "0$1"],
                                ["(\\d{3})(\\d{5})", "$1 $2", ["59|8"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37][01]|4[0139]|51|6"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-57]"], "(0$1)"]
                            ], "0", 0, 0, 0, 0, 0, 0, "00"
                        ],
                        SJ: ["47", "00", "0\\d{4}|(?:[489]\\d|79)\\d{6}", [5, 8], 0, 0, 0, 0, 0, 0, "79"],
                        SK: ["421", "00", "[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}", [6, 7, 9],
                            [
                                ["(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"],
                                ["(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"]
                            ], "0"
                        ],
                        SL: ["232", "00", "(?:[237-9]\\d|66)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{6})", "$1 $2", ["[236-9]"], "(0$1)"]
                            ], "0"
                        ],
                        SM: ["378", "00", "(?:0549|[5-7]\\d)\\d{6}", [8, 10],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]],
                                ["(\\d{4})(\\d{6})", "$1 $2", ["0"]]
                            ], 0, 0, "([89]\\d{5})$", "0549$1"
                        ],
                        SN: ["221", "00", "(?:[378]\\d|93)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[379]"]]
                            ]
                        ],
                        SO: ["252", "00", "[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}", [6, 7, 8, 9],
                            [
                                ["(\\d{2})(\\d{4})", "$1 $2", ["8[125]"]],
                                ["(\\d{6})", "$1", ["[134]"]],
                                ["(\\d)(\\d{6})", "$1 $2", ["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],
                                ["(\\d)(\\d{7})", "$1 $2", ["(?:2|90)4|[67]"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[348]|64|79|90"]],
                                ["(\\d{2})(\\d{5,7})", "$1 $2", ["1|28|6[0-35-9]|7[67]|9[2-9]"]]
                            ], "0"
                        ],
                        SR: ["597", "00", "(?:[2-5]|68|[78]\\d)\\d{5}", [6, 7],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})", "$1-$2-$3", ["56"]],
                                ["(\\d{3})(\\d{3})", "$1-$2", ["[2-5]"]],
                                ["(\\d{3})(\\d{4})", "$1-$2", ["[6-8]"]]
                            ]
                        ],
                        SS: ["211", "00", "[19]\\d{8}", [9],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[19]"], "0$1"]
                            ], "0"
                        ],
                        ST: ["239", "00", "(?:22|9\\d)\\d{5}", [7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[29]"]]
                            ]
                        ],
                        SV: ["503", "00", "[267]\\d{7}|(?:80\\d|900)\\d{4}(?:\\d{4})?", [7, 8, 11],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[89]"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[267]"]],
                                ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[89]"]]
                            ]
                        ],
                        SX: ["1", "011", "7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "(5\\d{6})$|1", "721$1", 0, "721"],
                        SY: ["963", "00", "[1-359]\\d{8}|[1-5]\\d{7}", [8, 9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-4]|5[1-3]"], "0$1", 1],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[59]"], "0$1", 1]
                            ], "0"
                        ],
                        SZ: ["268", "00", "0800\\d{4}|(?:[237]\\d|900)\\d{6}", [8, 9],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[0237]"]],
                                ["(\\d{5})(\\d{4})", "$1 $2", ["9"]]
                            ]
                        ],
                        TA: ["290", "00", "8\\d{3}", [4], 0, 0, 0, 0, 0, 0, "8"],
                        TC: ["1", "011", "(?:[58]\\d\\d|649|900)\\d{7}", [10], 0, "1", 0, "([2-479]\\d{6})$|1", "649$1", 0, "649"],
                        TD: ["235", "00|16", "(?:22|[689]\\d|77)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[26-9]"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "00"
                        ],
                        TG: ["228", "00", "[279]\\d{7}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[279]"]]
                            ]
                        ],
                        TH: ["66", "00[1-9]", "(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}", [8, 9, 10, 13],
                            [
                                ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[13-9]"], "0$1"],
                                ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                            ], "0"
                        ],
                        TJ: ["992", "810", "[0-57-9]\\d{8}", [9],
                            [
                                ["(\\d{6})(\\d)(\\d{2})", "$1 $2 $3", ["331", "3317"]],
                                ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["44[02-479]|[34]7"]],
                                ["(\\d{4})(\\d)(\\d{4})", "$1 $2 $3", ["3(?:[1245]|3[12])"]],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[0-57-9]"]]
                            ], 0, 0, 0, 0, 0, 0, 0, "8~10"
                        ],
                        TK: ["690", "00", "[2-47]\\d{3,6}", [4, 5, 6, 7]],
                        TL: ["670", "00", "7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}", [7, 8],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[2-489]|70"]],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["7"]]
                            ]
                        ],
                        TM: ["993", "810", "(?:[1-6]\\d|71)\\d{6}", [8],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["12"], "(8 $1)"],
                                ["(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-5]"], "(8 $1)"],
                                ["(\\d{2})(\\d{6})", "$1 $2", ["[67]"], "8 $1"]
                            ], "8", 0, 0, 0, 0, 0, 0, "8~10"
                        ],
                        TN: ["216", "00", "[2-57-9]\\d{7}", [8],
                            [
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-57-9]"]]
                            ]
                        ],
                        TO: ["676", "00", "(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}", [5, 7],
                            [
                                ["(\\d{2})(\\d{3})", "$1-$2", ["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],
                                ["(\\d{4})(\\d{3})", "$1 $2", ["0"]],
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[5-9]"]]
                            ]
                        ],
                        TR: ["90", "00", "4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}", [7, 10, 12, 13],
                            [
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|8[01589]|90"], "0$1", 1],
                                ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5(?:[0-59]|61)", "5(?:[0-59]|61[06])", "5(?:[0-59]|61[06]1)"], "0$1", 1],
                                ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24][1-8]|3[1-9]"], "(0$1)", 1],
                                ["(\\d{3})(\\d{3})(\\d{6,7})", "$1 $2 $3", ["80"], "0$1", 1]
                            ], "0"
                        ],
                        TT: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2-46-8]\\d{6})$|1", "868$1", 0, "868"],
                        TV: ["688", "00", "(?:2|7\\d\\d|90)\\d{4}", [5, 6, 7],
                            [
                                ["(\\d{2})(\\d{3})", "$1 $2", ["2"]],
                                ["(\\d{2})(\\d{4})", "$1 $2", ["90"]],
                                ["(\\d{2})(\\d{5})", "$1 $2", ["7"]]
                            ]
                        ],
                        TW: ["886", "0(?:0[25-79]|19)", "[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}", [7, 8, 9, 10, 11],
                            [
                                ["(\\d{2})(\\d)(\\d{4})", "$1 $2 $3", ["202"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[258]0"], "0$1"],
                                ["(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]", "[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"], "0$1"],
                                ["(\\d{2})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["7"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, 0, 0, "#"
                        ],
                        TZ: ["255", "00[056]", "(?:[25-8]\\d|41|90)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[24]"], "0$1"],
                                ["(\\d{2})(\\d{7})", "$1 $2", ["5"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[67]"], "0$1"]
                            ], "0"
                        ],
                        UA: ["380", "00", "[89]\\d{9}|[3-9]\\d{8}", [9, 10],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]", "6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"], "0$1"],
                                ["(\\d{4})(\\d{5})", "$1 $2", ["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])", "3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|89|9[1-9]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]
                            ], "0", 0, 0, 0, 0, 0, 0, "0~0"
                        ],
                        UG: ["256", "00[057]", "800\\d{6}|(?:[29]0|[347]\\d)\\d{7}", [9],
                            [
                                ["(\\d{4})(\\d{5})", "$1 $2", ["202", "2024"], "0$1"],
                                ["(\\d{3})(\\d{6})", "$1 $2", ["[27-9]|4(?:6[45]|[7-9])"], "0$1"],
                                ["(\\d{2})(\\d{7})", "$1 $2", ["[34]"], "0$1"]
                            ], "0"
                        ],
                        US: ["1", "011", "[2-9]\\d{9}|3\\d{6}", [10],
                            [
                                ["(\\d{3})(\\d{4})", "$1-$2", ["310"], 0, 1],
                                ["(\\d{3})(\\d{3})(\\d{4})", "($1) $2-$3", ["[2-9]"], 0, 1, "$1-$2-$3"]
                            ], "1", 0, 0, 0, 0, 0, [
                                ["(?:3052(?:0[0-8]|[1-9]\\d)|5056(?:[0-35-9]\\d|4[0-468]))\\d{4}|(?:2742|305[3-9]|472[247-9]|505[2-57-9]|983[2-47-9])\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[0-247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"],
                                [""],
                                ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                                ["900[2-9]\\d{6}"],
                                ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"], 0, 0, 0, ["305209\\d{4}"]
                            ]
                        ],
                        UY: ["598", "0(?:0|1[3-9]\\d)", "0004\\d{2,9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}", [6, 7, 8, 9, 10, 11, 12, 13],
                            [
                                ["(\\d{3})(\\d{3,4})", "$1 $2", ["0"]],
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[49]0|8"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"],
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[124]"]],
                                ["(\\d{3})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["0"]],
                                ["(\\d{3})(\\d{3})(\\d{3})(\\d{2,4})", "$1 $2 $3 $4", ["0"]]
                            ], "0", 0, 0, 0, 0, 0, 0, "00", " int. "
                        ],
                        UZ: ["998", "00", "(?:20|33|[5-9]\\d)\\d{7}", [9],
                            [
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[235-9]"]]
                            ]
                        ],
                        VA: ["39", "00", "0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}", [6, 7, 8, 9, 10, 11, 12], 0, 0, 0, 0, 0, 0, "06698"],
                        VC: ["1", "011", "(?:[58]\\d\\d|784|900)\\d{7}", [10], 0, "1", 0, "([2-7]\\d{6})$|1", "784$1", 0, "784"],
                        VE: ["58", "00", "[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}", [10],
                            [
                                ["(\\d{3})(\\d{7})", "$1-$2", ["[24-689]"], "0$1"]
                            ], "0"
                        ],
                        VG: ["1", "011", "(?:284|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "([2-578]\\d{6})$|1", "284$1", 0, "284"],
                        VI: ["1", "011", "[58]\\d{9}|(?:34|90)0\\d{7}", [10], 0, "1", 0, "([2-9]\\d{6})$|1", "340$1", 0, "340"],
                        VN: ["84", "00", "[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}", [7, 8, 9, 10],
                            [
                                ["(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1", 1],
                                ["(\\d{4})(\\d{4,6})", "$1 $2", ["1"], 0, 1],
                                ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["6"], "0$1", 1],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[357-9]"], "0$1", 1],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1", 1],
                                ["(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1", 1]
                            ], "0"
                        ],
                        VU: ["678", "00", "[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}", [5, 7],
                            [
                                ["(\\d{3})(\\d{4})", "$1 $2", ["[57-9]"]]
                            ]
                        ],
                        WF: ["681", "00", "(?:40|72|8\\d{4})\\d{4}|[89]\\d{5}", [6, 9],
                            [
                                ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[47-9]"]],
                                ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]]
                            ]
                        ],
                        WS: ["685", "0", "(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}", [5, 6, 7, 10],
                            [
                                ["(\\d{5})", "$1", ["[2-5]|6[1-9]"]],
                                ["(\\d{3})(\\d{3,7})", "$1 $2", ["[68]"]],
                                ["(\\d{2})(\\d{5})", "$1 $2", ["7"]]
                            ]
                        ],
                        XK: ["383", "00", "2\\d{7,8}|3\\d{7,11}|(?:4\\d\\d|[89]00)\\d{5}", [8, 9, 10, 11, 12],
                            [
                                ["(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-4]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2|39"], "0$1"],
                                ["(\\d{2})(\\d{7,10})", "$1 $2", ["3"], "0$1"]
                            ], "0"
                        ],
                        YE: ["967", "00", "(?:1|7\\d)\\d{7}|[1-7]\\d{6}", [7, 8, 9],
                            [
                                ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-6]|7(?:[24-6]|8[0-7])"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"]
                            ], "0"
                        ],
                        YT: ["262", "00", "7093\\d{5}|(?:80|9\\d)\\d{7}|(?:26|63)9\\d{6}", [9], 0, "0", 0, 0, 0, 0, 0, [
                            ["269(?:0[0-467]|15|5[0-4]|6\\d|[78]0)\\d{4}"],
                            ["(?:639(?:0[0-79]|1[019]|[267]\\d|3[09]|40|5[05-9]|9[04-79])|7093[5-7])\\d{4}"],
                            ["80\\d{7}"], 0, 0, 0, 0, 0, ["9(?:(?:39|47)8[01]|769\\d)\\d{4}"]
                        ]],
                        ZA: ["27", "00", "[1-79]\\d{8}|8\\d{4,9}", [5, 6, 7, 8, 9, 10],
                            [
                                ["(\\d{2})(\\d{3,4})", "$1 $2", ["8[1-4]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["8[1-4]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["860"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-9]"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]
                            ], "0"
                        ],
                        ZM: ["260", "00", "800\\d{6}|(?:21|[579]\\d|63)\\d{7}", [9],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"],
                                ["(\\d{2})(\\d{7})", "$1 $2", ["[579]"], "0$1"]
                            ], "0"
                        ],
                        ZW: ["263", "00", "2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}", [5, 6, 7, 8, 9, 10],
                            [
                                ["(\\d{3})(\\d{3,5})", "$1 $2", ["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"], "0$1"],
                                ["(\\d)(\\d{3})(\\d{2,4})", "$1 $2 $3", ["[49]"], "0$1"],
                                ["(\\d{3})(\\d{4})", "$1 $2", ["80"], "0$1"],
                                ["(\\d{2})(\\d{7})", "$1 $2", ["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2", "2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"], "(0$1)"],
                                ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                                ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)", "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"], "0$1"],
                                ["(\\d{4})(\\d{6})", "$1 $2", ["8"], "0$1"],
                                ["(\\d{2})(\\d{3,5})", "$1 $2", ["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"], "0$1"],
                                ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["29[013-9]|39|54"], "0$1"],
                                ["(\\d{4})(\\d{3,5})", "$1 $2", ["(?:25|54)8", "258|5483"], "0$1"]
                            ], "0"
                        ]
                    },
                    nonGeographic: {
                        800: ["800", 0, "(?:00|[1-9]\\d)\\d{6}", [8],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["\\d"]]
                            ], 0, 0, 0, 0, 0, 0, [0, 0, ["(?:00|[1-9]\\d)\\d{6}"]]
                        ],
                        808: ["808", 0, "[1-9]\\d{7}", [8],
                            [
                                ["(\\d{4})(\\d{4})", "$1 $2", ["[1-9]"]]
                            ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, ["[1-9]\\d{7}"]]
                        ],
                        870: ["870", 0, "7\\d{11}|[235-7]\\d{8}", [9, 12],
                            [
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235-7]"]]
                            ], 0, 0, 0, 0, 0, 0, [0, ["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"], 0, 0, 0, 0, 0, 0, ["2\\d{8}", [9]]]
                        ],
                        878: ["878", 0, "10\\d{10}", [12],
                            [
                                ["(\\d{2})(\\d{5})(\\d{5})", "$1 $2 $3", ["1"]]
                            ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, ["10\\d{10}"]]
                        ],
                        881: ["881", 0, "6\\d{9}|[0-36-9]\\d{8}", [9, 10],
                            [
                                ["(\\d)(\\d{3})(\\d{5})", "$1 $2 $3", ["[0-37-9]"]],
                                ["(\\d)(\\d{3})(\\d{5,6})", "$1 $2 $3", ["6"]]
                            ], 0, 0, 0, 0, 0, 0, [0, ["6\\d{9}|[0-36-9]\\d{8}"]]
                        ],
                        882: ["882", 0, "[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?", [7, 8, 9, 10, 11, 12],
                            [
                                ["(\\d{2})(\\d{5})", "$1 $2", ["16|342"]],
                                ["(\\d{2})(\\d{6})", "$1 $2", ["49"]],
                                ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["1[36]|9"]],
                                ["(\\d{2})(\\d{4})(\\d{3})", "$1 $2 $3", ["3[23]"]],
                                ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["16"]],
                                ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10|23|3(?:[15]|4[57])|4|51"]],
                                ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["34"]],
                                ["(\\d{2})(\\d{4,5})(\\d{5})", "$1 $2 $3", ["[1-35]"]]
                            ], 0, 0, 0, 0, 0, 0, [0, ["342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}", [7, 8, 9, 10, 12]], 0, 0, 0, ["348[57]\\d{7}", [11]], 0, 0, ["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}"]]
                        ],
                        883: ["883", 0, "(?:[1-4]\\d|51)\\d{6,10}", [8, 9, 10, 11, 12],
                            [
                                ["(\\d{3})(\\d{3})(\\d{2,8})", "$1 $2 $3", ["[14]|2[24-689]|3[02-689]|51[24-9]"]],
                                ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["510"]],
                                ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["21"]],
                                ["(\\d{4})(\\d{4})(\\d{4})", "$1 $2 $3", ["51[13]"]],
                                ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[235]"]]
                            ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, ["(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}"]]
                        ],
                        888: ["888", 0, "\\d{11}", [11],
                            [
                                ["(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3"]
                            ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, ["\\d{11}"]]
                        ],
                        979: ["979", 0, "[1359]\\d{8}", [9],
                            [
                                ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[1359]"]]
                            ], 0, 0, 0, 0, 0, 0, [0, 0, 0, ["[1359]\\d{8}"]]
                        ]
                    }
                }
            },
            7618: (M, O, a) => {
                a.d(O, {
                    L: () => _
                });
                var y = a(71406),
                    v = a(757),
                    m = a(79831);

                function p() {
                    var s = (0, m.A)(arguments),
                        e = s.text,
                        r = s.options,
                        d = s.metadata;
                    return (0, v.A)(e, r, d)
                }

                function _() {
                    return (0, y.A)(p, arguments)
                }
            },
            7995: (M, O, a) => {
                a.d(O, {
                    A: () => e
                });
                var y = a(96955),
                    v = a(82925);

                function m(d, l) {
                    var t = typeof Symbol != "undefined" && d[Symbol.iterator] || d["@@iterator"];
                    if (t) return (t = t.call(d)).next.bind(t);
                    if (Array.isArray(d) || (t = p(d)) || l && d && typeof d.length == "number") {
                        t && (d = t);
                        var i = 0;
                        return function() {
                            return i >= d.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: d[i++]
                            }
                        }
                    }
                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function p(d, l) {
                    if (d) {
                        if (typeof d == "string") return _(d, l);
                        var t = Object.prototype.toString.call(d).slice(8, -1);
                        if (t === "Object" && d.constructor && (t = d.constructor.name), t === "Map" || t === "Set") return Array.from(d);
                        if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return _(d, l)
                    }
                }

                function _(d, l) {
                    (l == null || l > d.length) && (l = d.length);
                    for (var t = 0, i = new Array(l); t < l; t++) i[t] = d[t];
                    return i
                }
                var s = ["MOBILE", "PREMIUM_RATE", "TOLL_FREE", "SHARED_COST", "VOIP", "PERSONAL_NUMBER", "PAGER", "UAN", "VOICEMAIL"];

                function e(d, l, t) {
                    if (l = l || {}, !(!d.country && !d.countryCallingCode)) {
                        t = new y.Ay(t), t.selectNumberingPlan(d.country, d.countryCallingCode);
                        var i = l.v2 ? d.nationalNumber : d.phone;
                        if ((0, v.A)(i, t.nationalNumberPattern())) {
                            if (r(i, "FIXED_LINE", t)) return t.type("MOBILE") && t.type("MOBILE").pattern() === "" || !t.type("MOBILE") || r(i, "MOBILE", t) ? "FIXED_LINE_OR_MOBILE" : "FIXED_LINE";
                            for (var c = m(s), g; !(g = c()).done;) {
                                var N = g.value;
                                if (r(i, N, t)) return N
                            }
                        }
                    }
                }

                function r(d, l, t) {
                    return l = t.type(l), !l || !l.pattern() || l.possibleLengths() && l.possibleLengths().indexOf(d.length) < 0 ? !1 : (0, v.A)(d, l.pattern())
                }
            },
            10589: (M, O, a) => {
                a.d(O, {
                    A: () => m,
                    _: () => v
                });
                var y = a(71892),
                    v = /(\$\d)/;

                function m(p, _, s) {
                    var e = s.useInternationalFormat,
                        r = s.withNationalPrefix,
                        d = s.carrierCode,
                        l = s.metadata,
                        t = p.replace(new RegExp(_.pattern()), e ? _.internationalFormat() : r && _.nationalPrefixFormattingRule() ? _.format().replace(v, _.nationalPrefixFormattingRule()) : _.format());
                    return e ? (0, y.A)(t) : t
                }
            },
            12699: (M, O, a) => {
                a.d(O, {
                    Ay: () => s,
                    ZW: () => _,
                    x5: () => p
                });

                function y(e, r) {
                    var d = typeof Symbol != "undefined" && e[Symbol.iterator] || e["@@iterator"];
                    if (d) return (d = d.call(e)).next.bind(d);
                    if (Array.isArray(e) || (d = v(e)) || r && e && typeof e.length == "number") {
                        d && (e = d);
                        var l = 0;
                        return function() {
                            return l >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[l++]
                            }
                        }
                    }
                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function v(e, r) {
                    if (e) {
                        if (typeof e == "string") return m(e, r);
                        var d = Object.prototype.toString.call(e).slice(8, -1);
                        if (d === "Object" && e.constructor && (d = e.constructor.name), d === "Map" || d === "Set") return Array.from(e);
                        if (d === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(d)) return m(e, r)
                    }
                }

                function m(e, r) {
                    (r == null || r > e.length) && (r = e.length);
                    for (var d = 0, l = new Array(r); d < r; d++) l[d] = e[d];
                    return l
                }
                var p = {
                    0: "0",
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                    8: "8",
                    9: "9",
                    "\uFF10": "0",
                    "\uFF11": "1",
                    "\uFF12": "2",
                    "\uFF13": "3",
                    "\uFF14": "4",
                    "\uFF15": "5",
                    "\uFF16": "6",
                    "\uFF17": "7",
                    "\uFF18": "8",
                    "\uFF19": "9",
                    "\u0660": "0",
                    "\u0661": "1",
                    "\u0662": "2",
                    "\u0663": "3",
                    "\u0664": "4",
                    "\u0665": "5",
                    "\u0666": "6",
                    "\u0667": "7",
                    "\u0668": "8",
                    "\u0669": "9",
                    "\u06F0": "0",
                    "\u06F1": "1",
                    "\u06F2": "2",
                    "\u06F3": "3",
                    "\u06F4": "4",
                    "\u06F5": "5",
                    "\u06F6": "6",
                    "\u06F7": "7",
                    "\u06F8": "8",
                    "\u06F9": "9"
                };

                function _(e) {
                    return p[e]
                }

                function s(e) {
                    for (var r = "", d = y(e.split("")), l; !(l = d()).done;) {
                        var t = l.value,
                            i = _(t);
                        i && (r += i)
                    }
                    return r
                }
            },
            17305: (M, O, a) => {
                a.d(O, {
                    A: () => p
                });
                var y = a(96955),
                    v = a(55069),
                    m = new RegExp("([" + v.OA + "])");

                function p(_, s, e, r) {
                    if (s) {
                        var d = new y.Ay(r);
                        d.selectNumberingPlan(s, e);
                        var l = new RegExp(d.IDDPrefix());
                        if (_.search(l) === 0) {
                            _ = _.slice(_.match(l)[0].length);
                            var t = _.match(m);
                            if (!(t && t[1] != null && t[1].length > 0 && t[1] === "0")) return _
                        }
                    }
                }
            },
            19243: (M, O, a) => {
                a.d(O, {
                    $: () => d,
                    h: () => l
                });
                var y = a(85720);

                function v(t, i) {
                    return _(t) || p(t, i) || e(t, i) || m()
                }

                function m() {
                    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function p(t, i) {
                    var c = t == null ? null : typeof Symbol != "undefined" && t[Symbol.iterator] || t["@@iterator"];
                    if (c != null) {
                        var g = [],
                            N = !0,
                            b = !1,
                            A, C;
                        try {
                            for (c = c.call(t); !(N = (A = c.next()).done) && (g.push(A.value), !(i && g.length === i)); N = !0);
                        } catch (o) {
                            b = !0, C = o
                        } finally {
                            try {
                                !N && c.return != null && c.return()
                            } finally {
                                if (b) throw C
                            }
                        }
                        return g
                    }
                }

                function _(t) {
                    if (Array.isArray(t)) return t
                }

                function s(t, i) {
                    var c = typeof Symbol != "undefined" && t[Symbol.iterator] || t["@@iterator"];
                    if (c) return (c = c.call(t)).next.bind(c);
                    if (Array.isArray(t) || (c = e(t)) || i && t && typeof t.length == "number") {
                        c && (t = c);
                        var g = 0;
                        return function() {
                            return g >= t.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: t[g++]
                            }
                        }
                    }
                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function e(t, i) {
                    if (t) {
                        if (typeof t == "string") return r(t, i);
                        var c = Object.prototype.toString.call(t).slice(8, -1);
                        if (c === "Object" && t.constructor && (c = t.constructor.name), c === "Map" || c === "Set") return Array.from(t);
                        if (c === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)) return r(t, i)
                    }
                }

                function r(t, i) {
                    (i == null || i > t.length) && (i = t.length);
                    for (var c = 0, g = new Array(i); c < i; c++) g[c] = t[c];
                    return g
                }

                function d(t) {
                    var i, c;
                    t = t.replace(/^tel:/, "tel=");
                    for (var g = s(t.split(";")), N; !(N = g()).done;) {
                        var b = N.value,
                            A = b.split("="),
                            C = v(A, 2),
                            o = C[0],
                            P = C[1];
                        switch (o) {
                            case "tel":
                                i = P;
                                break;
                            case "ext":
                                c = P;
                                break;
                            case "phone-context":
                                P[0] === "+" && (i = P + i);
                                break
                        }
                    }
                    if (!(0, y.Ay)(i)) return {};
                    var u = {
                        number: i
                    };
                    return c && (u.ext = c), u
                }

                function l(t) {
                    var i = t.number,
                        c = t.ext;
                    if (!i) return "";
                    if (i[0] !== "+") throw new Error('"formatRFC3966()" expects "number" to be in E.164 format.');
                    return "tel:".concat(i).concat(c ? ";ext=" + c : "")
                }
            },
            23298: (M, O, a) => {
                a.d(O, {
                    A: () => m
                });
                var y = a(86668),
                    v = !1;

                function m(p, _) {
                    var s = _.nationalNumber,
                        e = _.defaultCountry,
                        r = _.metadata;
                    if (v && r.isNonGeographicCallingCode(p)) return "001";
                    var d = r.getCountryCodesForCallingCode(p);
                    if (d) return d.length === 1 ? d[0] : (0, y.A)(s, {
                        countries: d,
                        defaultCountry: e,
                        metadata: r.metadata
                    })
                }
            },
            26252: (M, O, a) => {
                a.d(O, {
                    A: () => q
                });
                var y = a(55069),
                    v = a(55165),
                    m = a(96955),
                    p = a(85720),
                    _ = a(50319),
                    s = new RegExp("(?:" + (0, _.A)() + ")$", "i");

                function e(R) {
                    var I = R.search(s);
                    if (I < 0) return {};
                    for (var S = R.slice(0, I), F = R.match(s), D = 1; D < F.length;) {
                        if (F[D]) return {
                            number: S,
                            ext: F[D]
                        };
                        D++
                    }
                }
                var r = a(75870),
                    d = a(83501),
                    l = a(69427),
                    t = a(82925),
                    i = a(45384),
                    c = a(75796),
                    g = a(23298),
                    N = "+",
                    b = "[\\-\\.\\(\\)]?",
                    A = "([" + y.OA + "]|" + b + ")",
                    C = "^\\" + N + A + "*[" + y.OA + "]" + A + "*$",
                    o = new RegExp(C, "g"),
                    P = y.OA,
                    u = "[" + P + "]+((\\-)*[" + P + "])*",
                    f = "a-zA-Z",
                    h = "[" + f + "]+((\\-)*[" + P + "])*",
                    n = "^(" + u + "\\.)*" + h + "\\.?$",
                    $ = new RegExp(n, "g"),
                    E = "tel:",
                    T = ";phone-context=",
                    x = ";isub=";

                function B(R) {
                    var I = R.indexOf(T);
                    if (I < 0) return null;
                    var S = I + T.length;
                    if (S >= R.length) return "";
                    var F = R.indexOf(";", S);
                    return F >= 0 ? R.substring(S, F) : R.substring(S)
                }

                function k(R) {
                    return R === null ? !0 : R.length === 0 ? !1 : o.test(R) || $.test(R)
                }

                function V(R, I) {
                    var S = I.extractFormattedPhoneNumber,
                        F = B(R);
                    if (!k(F)) throw new v.A("NOT_A_NUMBER");
                    var D;
                    if (F === null) D = S(R) || "";
                    else {
                        D = "", F.charAt(0) === N && (D += F);
                        var U = R.indexOf(E),
                            L;
                        U >= 0 ? L = U + E.length : L = 0;
                        var G = R.indexOf(T);
                        D += R.substring(L, G)
                    }
                    var w = D.indexOf(x);
                    if (w > 0 && (D = D.substring(0, w)), D !== "") return D
                }
                var Z = 250,
                    J = new RegExp("[" + y.tz + y.OA + "]"),
                    Q = new RegExp("[^" + y.OA + "#]+$"),
                    z = !1;

                function q(R, I, S) {
                    if (I = I || {}, S = new m.Ay(S), I.defaultCountry && !S.hasCountry(I.defaultCountry)) throw I.v2 ? new v.A("INVALID_COUNTRY") : new Error("Unknown country: ".concat(I.defaultCountry));
                    var F = e0(R, I.v2, I.extract),
                        D = F.number,
                        U = F.ext,
                        L = F.error;
                    if (!D) {
                        if (I.v2) throw L === "TOO_SHORT" ? new v.A("TOO_SHORT") : new v.A("NOT_A_NUMBER");
                        return {}
                    }
                    var G = r0(D, I.defaultCountry, I.defaultCallingCode, S),
                        w = G.country,
                        j = G.nationalNumber,
                        K = G.countryCallingCode,
                        X = G.countryCallingCodeSource,
                        W = G.carrierCode;
                    if (!S.hasSelectedNumberingPlan()) {
                        if (I.v2) throw new v.A("INVALID_COUNTRY");
                        return {}
                    }
                    if (!j || j.length < y.c7) {
                        if (I.v2) throw new v.A("TOO_SHORT");
                        return {}
                    }
                    if (j.length > y.Cb) {
                        if (I.v2) throw new v.A("TOO_LONG");
                        return {}
                    }
                    if (I.v2) {
                        var H = new l.A(K, j, S.metadata);
                        return w && (H.country = w), W && (H.carrierCode = W), U && (H.ext = U), H.__countryCallingCodeSource = X, H
                    }
                    var Y = (I.extended ? S.hasSelectedNumberingPlan() : w) ? (0, t.A)(j, S.nationalNumberPattern()) : !1;
                    return I.extended ? {
                        country: w,
                        countryCallingCode: K,
                        carrierCode: W,
                        valid: Y,
                        possible: Y ? !0 : !!(I.extended === !0 && S.possibleLengths() && (0, d.x)(j, S)),
                        phone: j,
                        ext: U
                    } : Y ? t0(w, j, U) : {}
                }

                function d0(R, I, S) {
                    if (R) {
                        if (R.length > Z) {
                            if (S) throw new v.A("TOO_LONG");
                            return
                        }
                        if (I === !1) return R;
                        var F = R.search(J);
                        if (!(F < 0)) return R.slice(F).replace(Q, "")
                    }
                }

                function e0(R, I, S) {
                    var F = V(R, {
                        extractFormattedPhoneNumber: function(L) {
                            return d0(L, S, I)
                        }
                    });
                    if (!F) return {};
                    if (!(0, p.Ay)(F)) return (0, p.hr)(F) ? {
                        error: "TOO_SHORT"
                    } : {};
                    var D = e(F);
                    return D.ext ? D : {
                        number: F
                    }
                }

                function t0(R, I, S) {
                    var F = {
                        country: R,
                        phone: I
                    };
                    return S && (F.ext = S), F
                }

                function r0(R, I, S, F) {
                    var D = (0, i.A)((0, r.A)(R), I, S, F.metadata),
                        U = D.countryCallingCodeSource,
                        L = D.countryCallingCode,
                        G = D.number,
                        w;
                    if (L) F.selectNumberingPlan(L);
                    else if (G && (I || S)) F.selectNumberingPlan(I, S), I ? w = I : z && F.isNonGeographicCallingCode(S) && (w = "001"), L = S || (0, m.Ko)(I, F.metadata);
                    else return {};
                    if (!G) return {
                        countryCallingCodeSource: U,
                        countryCallingCode: L
                    };
                    var j = (0, c.A)((0, r.A)(G), F),
                        K = j.nationalNumber,
                        X = j.carrierCode,
                        W = (0, g.A)(L, {
                            nationalNumber: K,
                            defaultCountry: I,
                            metadata: F
                        });
                    return W && (w = W, W === "001" || F.country(w)), {
                        country: w,
                        countryCallingCode: L,
                        countryCallingCodeSource: U,
                        nationalNumber: K,
                        carrierCode: X
                    }
                }
            },
            28196: (M, O, a) => {
                a.d(O, {
                    A: () => _
                });

                function y(e, r) {
                    var d = typeof Symbol != "undefined" && e[Symbol.iterator] || e["@@iterator"];
                    if (d) return (d = d.call(e)).next.bind(d);
                    if (Array.isArray(e) || (d = v(e)) || r && e && typeof e.length == "number") {
                        d && (e = d);
                        var l = 0;
                        return function() {
                            return l >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[l++]
                            }
                        }
                    }
                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function v(e, r) {
                    if (e) {
                        if (typeof e == "string") return m(e, r);
                        var d = Object.prototype.toString.call(e).slice(8, -1);
                        if (d === "Object" && e.constructor && (d = e.constructor.name), d === "Map" || d === "Set") return Array.from(e);
                        if (d === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(d)) return m(e, r)
                    }
                }

                function m(e, r) {
                    (r == null || r > e.length) && (r = e.length);
                    for (var d = 0, l = new Array(r); d < r; d++) l[d] = e[d];
                    return l
                }

                function p(e, r) {
                    for (var d = e.slice(), l = y(r), t; !(t = l()).done;) {
                        var i = t.value;
                        e.indexOf(i) < 0 && d.push(i)
                    }
                    return d.sort(function(c, g) {
                        return c - g
                    })
                }

                function _(e, r) {
                    return s(e, void 0, r)
                }

                function s(e, r, d) {
                    var l = d.type(r),
                        t = l && l.possibleLengths() || d.possibleLengths();
                    if (!t) return "IS_POSSIBLE";
                    if (r === "FIXED_LINE_OR_MOBILE") {
                        if (!d.type("FIXED_LINE")) return s(e, "MOBILE", d);
                        var i = d.type("MOBILE");
                        i && (t = p(t, i.possibleLengths()))
                    } else if (r && !l) return "INVALID_LENGTH";
                    var c = e.length,
                        g = t[0];
                    return g === c ? "IS_POSSIBLE" : g > c ? "TOO_SHORT" : t[t.length - 1] < c ? "TOO_LONG" : t.indexOf(c, 1) >= 0 ? "IS_POSSIBLE" : "INVALID_LENGTH"
                }
            },
            45384: (M, O, a) => {
                a.d(O, {
                    A: () => _
                });
                var y = a(17305),
                    v = a(75078),
                    m = a(96955),
                    p = a(55069);

                function _(s, e, r, d) {
                    if (!s) return {};
                    var l;
                    if (s[0] !== "+") {
                        var t = (0, y.A)(s, e, r, d);
                        if (t && t !== s) l = !0, s = "+" + t;
                        else {
                            if (e || r) {
                                var i = (0, v.A)(s, e, r, d),
                                    c = i.countryCallingCode,
                                    g = i.number;
                                if (c) return {
                                    countryCallingCodeSource: "FROM_NUMBER_WITHOUT_PLUS_SIGN",
                                    countryCallingCode: c,
                                    number: g
                                }
                            }
                            return {
                                number: s
                            }
                        }
                    }
                    if (s[1] === "0") return {};
                    d = new m.Ay(d);
                    for (var N = 2; N - 1 <= p.Jq && N <= s.length;) {
                        var b = s.slice(1, N);
                        if (d.hasCallingCode(b)) return d.selectNumberingPlan(b), {
                            countryCallingCodeSource: l ? "FROM_NUMBER_WITH_IDD" : "FROM_NUMBER_WITH_PLUS_SIGN",
                            countryCallingCode: b,
                            number: s.slice(N)
                        };
                        N++
                    }
                    return {}
                }
            },
            50319: (M, O, a) => {
                a.d(O, {
                    A: () => p
                });
                var y = a(55069),
                    v = ";ext=",
                    m = function(s) {
                        return "([".concat(y.OA, "]{1,").concat(s, "})")
                    };

                function p(_) {
                    var s = "20",
                        e = "15",
                        r = "9",
                        d = "6",
                        l = "[ \xA0\\t,]*",
                        t = "[:\\.\uFF0E]?[ \xA0\\t,-]*",
                        i = "#?",
                        c = "(?:e?xt(?:ensi(?:o\u0301?|\xF3))?n?|\uFF45?\uFF58\uFF54\uFF4E?|\u0434\u043E\u0431|anexo)",
                        g = "(?:[x\uFF58#\uFF03~\uFF5E]|int|\uFF49\uFF4E\uFF54)",
                        N = "[- ]+",
                        b = "[ \xA0\\t]*",
                        A = "(?:,{2}|;)",
                        C = v + m(s),
                        o = l + c + t + m(s) + i,
                        P = l + g + t + m(r) + i,
                        u = N + m(d) + "#",
                        f = b + A + t + m(e) + i,
                        h = b + "(?:,)+" + t + m(r) + i;
                    return C + "|" + o + "|" + P + "|" + u + "|" + f + "|" + h
                }
            },
            55069: (M, O, a) => {
                a.d(O, {
                    Cb: () => v,
                    Jq: () => m,
                    OA: () => p,
                    c7: () => y,
                    cv: () => r,
                    tz: () => i,
                    uD: () => t
                });
                var y = 2,
                    v = 17,
                    m = 3,
                    p = "0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9",
                    _ = "-\u2010-\u2015\u2212\u30FC\uFF0D",
                    s = "\uFF0F/",
                    e = "\uFF0E.",
                    r = " \xA0\xAD\u200B\u2060\u3000",
                    d = "()\uFF08\uFF09\uFF3B\uFF3D\\[\\]",
                    l = "~\u2053\u223C\uFF5E",
                    t = "".concat(_).concat(s).concat(e).concat(r).concat(d).concat(l),
                    i = "+\uFF0B"
            },
            55165: (M, O, a) => {
                a.d(O, {
                    A: () => N
                });

                function y(b) {
                    "@babel/helpers - typeof";
                    return y = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
                        return typeof A
                    } : function(A) {
                        return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A
                    }, y(b)
                }

                function v(b, A) {
                    for (var C = 0; C < A.length; C++) {
                        var o = A[C];
                        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(b, o.key, o)
                    }
                }

                function m(b, A, C) {
                    return A && v(b.prototype, A), C && v(b, C), Object.defineProperty(b, "prototype", {
                        writable: !1
                    }), b
                }

                function p(b, A) {
                    if (!(b instanceof A)) throw new TypeError("Cannot call a class as a function")
                }

                function _(b, A) {
                    if (typeof A != "function" && A !== null) throw new TypeError("Super expression must either be null or a function");
                    b.prototype = Object.create(A && A.prototype, {
                        constructor: {
                            value: b,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(b, "prototype", {
                        writable: !1
                    }), A && c(b, A)
                }

                function s(b) {
                    var A = t();
                    return function() {
                        var o = g(b),
                            P;
                        if (A) {
                            var u = g(this).constructor;
                            P = Reflect.construct(o, arguments, u)
                        } else P = o.apply(this, arguments);
                        return e(this, P)
                    }
                }

                function e(b, A) {
                    if (A && (y(A) === "object" || typeof A == "function")) return A;
                    if (A !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return r(b)
                }

                function r(b) {
                    if (b === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return b
                }

                function d(b) {
                    var A = typeof Map == "function" ? new Map : void 0;
                    return d = function(o) {
                        if (o === null || !i(o)) return o;
                        if (typeof o != "function") throw new TypeError("Super expression must either be null or a function");
                        if (typeof A != "undefined") {
                            if (A.has(o)) return A.get(o);
                            A.set(o, P)
                        }

                        function P() {
                            return l(o, arguments, g(this).constructor)
                        }
                        return P.prototype = Object.create(o.prototype, {
                            constructor: {
                                value: P,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), c(P, o)
                    }, d(b)
                }

                function l(b, A, C) {
                    return t() ? l = Reflect.construct : l = function(P, u, f) {
                        var h = [null];
                        h.push.apply(h, u);
                        var n = Function.bind.apply(P, h),
                            $ = new n;
                        return f && c($, f.prototype), $
                    }, l.apply(null, arguments)
                }

                function t() {
                    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham) return !1;
                    if (typeof Proxy == "function") return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                    } catch (b) {
                        return !1
                    }
                }

                function i(b) {
                    return Function.toString.call(b).indexOf("[native code]") !== -1
                }

                function c(b, A) {
                    return c = Object.setPrototypeOf || function(o, P) {
                        return o.__proto__ = P, o
                    }, c(b, A)
                }

                function g(b) {
                    return g = Object.setPrototypeOf ? Object.getPrototypeOf : function(C) {
                        return C.__proto__ || Object.getPrototypeOf(C)
                    }, g(b)
                }
                var N = function(b) {
                    _(C, b);
                    var A = s(C);

                    function C(o) {
                        var P;
                        return p(this, C), P = A.call(this, o), Object.setPrototypeOf(r(P), C.prototype), P.name = P.constructor.name, P
                    }
                    return m(C)
                }(d(Error))
            },
            69427: (M, O, a) => {
                a.d(O, {
                    A: () => A
                });
                var y = a(96955),
                    v = a(83501),
                    m = a(882),
                    p = a(7995);

                function _(u, f, h) {
                    var n = new y.Ay(h),
                        $ = n.getCountryCodesForCallingCode(u);
                    return $ ? $.filter(function(E) {
                        return s(f, E, h)
                    }) : []
                }

                function s(u, f, h) {
                    var n = new y.Ay(h);
                    return n.selectNumberingPlan(f), n.numberingPlan.possibleLengths().indexOf(u.length) >= 0
                }
                var e = a(45384),
                    r = a(73159),
                    d = a(70730);

                function l(u, f) {
                    var h = Object.keys(u);
                    if (Object.getOwnPropertySymbols) {
                        var n = Object.getOwnPropertySymbols(u);
                        f && (n = n.filter(function($) {
                            return Object.getOwnPropertyDescriptor(u, $).enumerable
                        })), h.push.apply(h, n)
                    }
                    return h
                }

                function t(u) {
                    for (var f = 1; f < arguments.length; f++) {
                        var h = arguments[f] != null ? arguments[f] : {};
                        f % 2 ? l(Object(h), !0).forEach(function(n) {
                            i(u, n, h[n])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(u, Object.getOwnPropertyDescriptors(h)) : l(Object(h)).forEach(function(n) {
                            Object.defineProperty(u, n, Object.getOwnPropertyDescriptor(h, n))
                        })
                    }
                    return u
                }

                function i(u, f, h) {
                    return f in u ? Object.defineProperty(u, f, {
                        value: h,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : u[f] = h, u
                }

                function c(u, f) {
                    if (!(u instanceof f)) throw new TypeError("Cannot call a class as a function")
                }

                function g(u, f) {
                    for (var h = 0; h < f.length; h++) {
                        var n = f[h];
                        n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(u, n.key, n)
                    }
                }

                function N(u, f, h) {
                    return f && g(u.prototype, f), h && g(u, h), Object.defineProperty(u, "prototype", {
                        writable: !1
                    }), u
                }
                var b = !1,
                    A = function() {
                        function u(f, h, n) {
                            if (c(this, u), !f) throw new TypeError("First argument is required");
                            if (typeof f != "string") throw new TypeError("First argument must be a string");
                            if (typeof f == "string") {
                                if (f[0] === "+" && !h) throw new TypeError("`metadata` argument not passed");
                                if ((0, r.A)(h) && (0, r.A)(h.countries)) {
                                    n = h;
                                    var $ = f;
                                    if (!P.test($)) throw new Error('Invalid `number` argument passed: must consist of a "+" followed by digits');
                                    var E = (0, e.A)($, void 0, void 0, n),
                                        T = E.countryCallingCode,
                                        x = E.number;
                                    if (h = x, f = T, !h) throw new Error("Invalid `number` argument passed: too short")
                                }
                            }
                            if (!h) throw new TypeError("`nationalNumber` argument is required");
                            if (typeof h != "string") throw new TypeError("`nationalNumber` argument must be a string");
                            (0, y.aR)(n);
                            var B = o(f, n),
                                k = B.country,
                                V = B.countryCallingCode;
                            this.country = k, this.countryCallingCode = V, this.nationalNumber = h, this.number = "+" + this.countryCallingCode + this.nationalNumber, this.getMetadata = function() {
                                return n
                            }
                        }
                        return N(u, [{
                            key: "setExt",
                            value: function(h) {
                                this.ext = h
                            }
                        }, {
                            key: "getPossibleCountries",
                            value: function() {
                                return this.country ? [this.country] : _(this.countryCallingCode, this.nationalNumber, this.getMetadata())
                            }
                        }, {
                            key: "isPossible",
                            value: function() {
                                return (0, v.A)(this, {
                                    v2: !0
                                }, this.getMetadata())
                            }
                        }, {
                            key: "isValid",
                            value: function() {
                                return (0, m.A)(this, {
                                    v2: !0
                                }, this.getMetadata())
                            }
                        }, {
                            key: "isNonGeographic",
                            value: function() {
                                var h = new y.Ay(this.getMetadata());
                                return h.isNonGeographicCallingCode(this.countryCallingCode)
                            }
                        }, {
                            key: "isEqual",
                            value: function(h) {
                                return this.number === h.number && this.ext === h.ext
                            }
                        }, {
                            key: "getType",
                            value: function() {
                                return (0, p.A)(this, {
                                    v2: !0
                                }, this.getMetadata())
                            }
                        }, {
                            key: "format",
                            value: function(h, n) {
                                return (0, d.A)(this, h, n ? t(t({}, n), {}, {
                                    v2: !0
                                }) : {
                                    v2: !0
                                }, this.getMetadata())
                            }
                        }, {
                            key: "formatNational",
                            value: function(h) {
                                return this.format("NATIONAL", h)
                            }
                        }, {
                            key: "formatInternational",
                            value: function(h) {
                                return this.format("INTERNATIONAL", h)
                            }
                        }, {
                            key: "getURI",
                            value: function(h) {
                                return this.format("RFC3966", h)
                            }
                        }]), u
                    }(),
                    C = function(f) {
                        return /^[A-Z]{2}$/.test(f)
                    };

                function o(u, f) {
                    var h, n, $ = new y.Ay(f);
                    return C(u) ? (h = u, $.selectNumberingPlan(h), n = $.countryCallingCode()) : (n = u, b && $.isNonGeographicCallingCode(n) && (h = "001")), {
                        country: h,
                        countryCallingCode: n
                    }
                }
                var P = /^\+\d+$/
            },
            70730: (M, O, a) => {
                a.d(O, {
                    x: () => b,
                    A: () => g
                });
                var y = a(82925),
                    v = a(10589),
                    m = a(96955),
                    p = /^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;

                function _(o, P, u) {
                    var f = new m.Ay(u);
                    if (f.selectNumberingPlan(o, P), f.defaultIDDPrefix()) return f.defaultIDDPrefix();
                    if (p.test(f.IDDPrefix())) return f.IDDPrefix()
                }
                var s = a(19243);

                function e(o, P) {
                    var u = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
                    if (u) return (u = u.call(o)).next.bind(u);
                    if (Array.isArray(o) || (u = r(o)) || P && o && typeof o.length == "number") {
                        u && (o = u);
                        var f = 0;
                        return function() {
                            return f >= o.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: o[f++]
                            }
                        }
                    }
                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function r(o, P) {
                    if (o) {
                        if (typeof o == "string") return d(o, P);
                        var u = Object.prototype.toString.call(o).slice(8, -1);
                        if (u === "Object" && o.constructor && (u = o.constructor.name), u === "Map" || u === "Set") return Array.from(o);
                        if (u === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u)) return d(o, P)
                    }
                }

                function d(o, P) {
                    (P == null || P > o.length) && (P = o.length);
                    for (var u = 0, f = new Array(P); u < P; u++) f[u] = o[u];
                    return f
                }

                function l(o, P) {
                    var u = Object.keys(o);
                    if (Object.getOwnPropertySymbols) {
                        var f = Object.getOwnPropertySymbols(o);
                        P && (f = f.filter(function(h) {
                            return Object.getOwnPropertyDescriptor(o, h).enumerable
                        })), u.push.apply(u, f)
                    }
                    return u
                }

                function t(o) {
                    for (var P = 1; P < arguments.length; P++) {
                        var u = arguments[P] != null ? arguments[P] : {};
                        P % 2 ? l(Object(u), !0).forEach(function(f) {
                            i(o, f, u[f])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(o, Object.getOwnPropertyDescriptors(u)) : l(Object(u)).forEach(function(f) {
                            Object.defineProperty(o, f, Object.getOwnPropertyDescriptor(u, f))
                        })
                    }
                    return o
                }

                function i(o, P, u) {
                    return P in o ? Object.defineProperty(o, P, {
                        value: u,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : o[P] = u, o
                }
                var c = {
                    formatExtension: function(P, u, f) {
                        return "".concat(P).concat(f.ext()).concat(u)
                    }
                };

                function g(o, P, u, f) {
                    if (u ? u = t(t({}, c), u) : u = c, f = new m.Ay(f), o.country && o.country !== "001") {
                        if (!f.hasCountry(o.country)) throw new Error("Unknown country: ".concat(o.country));
                        f.country(o.country)
                    } else if (o.countryCallingCode) f.selectNumberingPlan(o.countryCallingCode);
                    else return o.phone || "";
                    var h = f.countryCallingCode(),
                        n = u.v2 ? o.nationalNumber : o.phone,
                        $;
                    switch (P) {
                        case "NATIONAL":
                            return n ? ($ = N(n, o.carrierCode, "NATIONAL", f, u), A($, o.ext, f, u.formatExtension)) : "";
                        case "INTERNATIONAL":
                            return n ? ($ = N(n, null, "INTERNATIONAL", f, u), $ = "+".concat(h, " ").concat($), A($, o.ext, f, u.formatExtension)) : "+".concat(h);
                        case "E.164":
                            return "+".concat(h).concat(n);
                        case "RFC3966":
                            return (0, s.h)({
                                number: "+".concat(h).concat(n),
                                ext: o.ext
                            });
                        case "IDD":
                            if (!u.fromCountry) return;
                            var E = C(n, o.carrierCode, h, u.fromCountry, f);
                            return A(E, o.ext, f, u.formatExtension);
                        default:
                            throw new Error('Unknown "format" argument passed to "formatNumber()": "'.concat(P, '"'))
                    }
                }

                function N(o, P, u, f, h) {
                    var n = b(f.formats(), o);
                    return n ? (0, v.A)(o, n, {
                        useInternationalFormat: u === "INTERNATIONAL",
                        withNationalPrefix: !(n.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && h && h.nationalPrefix === !1),
                        carrierCode: P,
                        metadata: f
                    }) : o
                }

                function b(o, P) {
                    for (var u = e(o), f; !(f = u()).done;) {
                        var h = f.value;
                        if (h.leadingDigitsPatterns().length > 0) {
                            var n = h.leadingDigitsPatterns()[h.leadingDigitsPatterns().length - 1];
                            if (P.search(n) !== 0) continue
                        }
                        if ((0, y.A)(P, h.pattern())) return h
                    }
                }

                function A(o, P, u, f) {
                    return P ? f(o, P, u) : o
                }

                function C(o, P, u, f, h) {
                    var n = (0, m.Ko)(f, h.metadata);
                    if (n === u) {
                        var $ = N(o, P, "NATIONAL", h);
                        return u === "1" ? u + " " + $ : $
                    }
                    var E = _(f, void 0, h.metadata);
                    if (E) return "".concat(E, " ").concat(u, " ").concat(N(o, null, "INTERNATIONAL", h))
                }
            },
            71406: (M, O, a) => {
                a.d(O, {
                    A: () => v
                });
                var y = a(5168);

                function v(m, p) {
                    var _ = Array.prototype.slice.call(p);
                    return _.push(y.A), m.apply(this, _)
                }
            },
            71892: (M, O, a) => {
                a.d(O, {
                    A: () => v
                });
                var y = a(55069);

                function v(m) {
                    return m.replace(new RegExp("[".concat(y.uD, "]+"), "g"), " ").trim()
                }
            },
            73159: (M, O, a) => {
                a.d(O, {
                    A: () => v
                });
                var y = {}.constructor;

                function v(m) {
                    return m != null && m.constructor === y
                }
            },
            75078: (M, O, a) => {
                a.d(O, {
                    A: () => _
                });
                var y = a(96955),
                    v = a(82925),
                    m = a(75796),
                    p = a(28196);

                function _(s, e, r, d) {
                    var l = e ? (0, y.Ko)(e, d) : r;
                    if (s.indexOf(l) === 0) {
                        d = new y.Ay(d), d.selectNumberingPlan(e, r);
                        var t = s.slice(l.length),
                            i = (0, m.A)(t, d),
                            c = i.nationalNumber,
                            g = (0, m.A)(s, d),
                            N = g.nationalNumber;
                        if (!(0, v.A)(N, d.nationalNumberPattern()) && (0, v.A)(c, d.nationalNumberPattern()) || (0, p.A)(N, d) === "TOO_LONG") return {
                            countryCallingCode: l,
                            number: t
                        }
                    }
                    return {
                        number: s
                    }
                }
            },
            75796: (M, O, a) => {
                a.d(O, {
                    A: () => p
                });
                var y = a(97914),
                    v = a(82925),
                    m = a(28196);

                function p(e, r) {
                    var d = (0, y.A)(e, r),
                        l = d.carrierCode,
                        t = d.nationalNumber;
                    if (t !== e) {
                        if (!_(e, t, r)) return {
                            nationalNumber: e
                        };
                        if (r.possibleLengths() && !s(t, r)) return {
                            nationalNumber: e
                        }
                    }
                    return {
                        nationalNumber: t,
                        carrierCode: l
                    }
                }

                function _(e, r, d) {
                    return !((0, v.A)(e, d.nationalNumberPattern()) && !(0, v.A)(r, d.nationalNumberPattern()))
                }

                function s(e, r) {
                    switch ((0, m.A)(e, r)) {
                        case "TOO_SHORT":
                        case "INVALID_LENGTH":
                            return !1;
                        default:
                            return !0
                    }
                }
            },
            75870: (M, O, a) => {
                a.d(O, {
                    A: () => _,
                    G: () => s
                });
                var y = a(12699);

                function v(e, r) {
                    var d = typeof Symbol != "undefined" && e[Symbol.iterator] || e["@@iterator"];
                    if (d) return (d = d.call(e)).next.bind(d);
                    if (Array.isArray(e) || (d = m(e)) || r && e && typeof e.length == "number") {
                        d && (e = d);
                        var l = 0;
                        return function() {
                            return l >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[l++]
                            }
                        }
                    }
                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function m(e, r) {
                    if (e) {
                        if (typeof e == "string") return p(e, r);
                        var d = Object.prototype.toString.call(e).slice(8, -1);
                        if (d === "Object" && e.constructor && (d = e.constructor.name), d === "Map" || d === "Set") return Array.from(e);
                        if (d === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(d)) return p(e, r)
                    }
                }

                function p(e, r) {
                    (r == null || r > e.length) && (r = e.length);
                    for (var d = 0, l = new Array(r); d < r; d++) l[d] = e[d];
                    return l
                }

                function _(e) {
                    for (var r = "", d = v(e.split("")), l; !(l = d()).done;) {
                        var t = l.value;
                        r += s(t, r) || ""
                    }
                    return r
                }

                function s(e, r, d) {
                    if (e === "+") {
                        if (r) {
                            typeof d == "function" && d("end");
                            return
                        }
                        return "+"
                    }
                    return (0, y.ZW)(e)
                }
            },
            79831: (M, O, a) => {
                a.d(O, {
                    A: () => t
                });
                var y = a(73159);

                function v(i, c) {
                    var g = Object.keys(i);
                    if (Object.getOwnPropertySymbols) {
                        var N = Object.getOwnPropertySymbols(i);
                        c && (N = N.filter(function(b) {
                            return Object.getOwnPropertyDescriptor(i, b).enumerable
                        })), g.push.apply(g, N)
                    }
                    return g
                }

                function m(i) {
                    for (var c = 1; c < arguments.length; c++) {
                        var g = arguments[c] != null ? arguments[c] : {};
                        c % 2 ? v(Object(g), !0).forEach(function(N) {
                            p(i, N, g[N])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(i, Object.getOwnPropertyDescriptors(g)) : v(Object(g)).forEach(function(N) {
                            Object.defineProperty(i, N, Object.getOwnPropertyDescriptor(g, N))
                        })
                    }
                    return i
                }

                function p(i, c, g) {
                    return c in i ? Object.defineProperty(i, c, {
                        value: g,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : i[c] = g, i
                }

                function _(i, c) {
                    return l(i) || d(i, c) || e(i, c) || s()
                }

                function s() {
                    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function e(i, c) {
                    if (i) {
                        if (typeof i == "string") return r(i, c);
                        var g = Object.prototype.toString.call(i).slice(8, -1);
                        if (g === "Object" && i.constructor && (g = i.constructor.name), g === "Map" || g === "Set") return Array.from(i);
                        if (g === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(g)) return r(i, c)
                    }
                }

                function r(i, c) {
                    (c == null || c > i.length) && (c = i.length);
                    for (var g = 0, N = new Array(c); g < c; g++) N[g] = i[g];
                    return N
                }

                function d(i, c) {
                    var g = i == null ? null : typeof Symbol != "undefined" && i[Symbol.iterator] || i["@@iterator"];
                    if (g != null) {
                        var N = [],
                            b = !0,
                            A = !1,
                            C, o;
                        try {
                            for (g = g.call(i); !(b = (C = g.next()).done) && (N.push(C.value), !(c && N.length === c)); b = !0);
                        } catch (P) {
                            A = !0, o = P
                        } finally {
                            try {
                                !b && g.return != null && g.return()
                            } finally {
                                if (A) throw o
                            }
                        }
                        return N
                    }
                }

                function l(i) {
                    if (Array.isArray(i)) return i
                }

                function t(i) {
                    var c = Array.prototype.slice.call(i),
                        g = _(c, 4),
                        N = g[0],
                        b = g[1],
                        A = g[2],
                        C = g[3],
                        o, P, u;
                    if (typeof N == "string") o = N;
                    else throw new TypeError("A text for parsing must be a string.");
                    if (!b || typeof b == "string") C ? (P = A, u = C) : (P = void 0, u = A), b && (P = m({
                        defaultCountry: b
                    }, P));
                    else if ((0, y.A)(b)) A ? (P = b, u = A) : u = b;
                    else throw new Error("Invalid second argument: ".concat(b));
                    return {
                        text: o,
                        options: P,
                        metadata: u
                    }
                }
            },
            82925: (M, O, a) => {
                a.d(O, {
                    A: () => y
                });

                function y(v, m) {
                    return v = v || "", new RegExp("^(?:" + m + ")$").test(v)
                }
            },
            83501: (M, O, a) => {
                a.d(O, {
                    A: () => m,
                    x: () => p
                });
                var y = a(96955),
                    v = a(28196);

                function m(_, s, e) {
                    if (s === void 0 && (s = {}), e = new y.Ay(e), s.v2) {
                        if (!_.countryCallingCode) throw new Error("Invalid phone number object passed");
                        e.selectNumberingPlan(_.countryCallingCode)
                    } else {
                        if (!_.phone) return !1;
                        if (_.country) {
                            if (!e.hasCountry(_.country)) throw new Error("Unknown country: ".concat(_.country));
                            e.country(_.country)
                        } else {
                            if (!_.countryCallingCode) throw new Error("Invalid phone number object passed");
                            e.selectNumberingPlan(_.countryCallingCode)
                        }
                    }
                    if (e.possibleLengths()) return p(_.phone || _.nationalNumber, e);
                    if (_.countryCallingCode && e.isNonGeographicCallingCode(_.countryCallingCode)) return !0;
                    throw new Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.')
                }

                function p(_, s) {
                    switch ((0, v.A)(_, s)) {
                        case "IS_POSSIBLE":
                            return !0;
                        default:
                            return !1
                    }
                }
            },
            85720: (M, O, a) => {
                a.d(O, {
                    Ay: () => r,
                    hQ: () => s,
                    hr: () => d
                });
                var y = a(55069),
                    v = a(50319),
                    m = "[" + y.OA + "]{" + y.c7 + "}",
                    p = "[" + y.tz + "]{0,1}(?:[" + y.uD + "]*[" + y.OA + "]){3,}[" + y.uD + y.OA + "]*",
                    _ = new RegExp("^[" + y.tz + "]{0,1}(?:[" + y.uD + "]*[" + y.OA + "]){1,2}$", "i"),
                    s = p + "(?:" + (0, v.A)() + ")?",
                    e = new RegExp("^" + m + "$|^" + s + "$", "i");

                function r(l) {
                    return l.length >= y.c7 && e.test(l)
                }

                function d(l) {
                    return _.test(l)
                }
            },
            86668: (M, O, a) => {
                a.d(O, {
                    A: () => s
                });
                var y = a(96955),
                    v = a(7995);

                function m(e, r) {
                    var d = typeof Symbol != "undefined" && e[Symbol.iterator] || e["@@iterator"];
                    if (d) return (d = d.call(e)).next.bind(d);
                    if (Array.isArray(e) || (d = p(e)) || r && e && typeof e.length == "number") {
                        d && (e = d);
                        var l = 0;
                        return function() {
                            return l >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[l++]
                            }
                        }
                    }
                    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function p(e, r) {
                    if (e) {
                        if (typeof e == "string") return _(e, r);
                        var d = Object.prototype.toString.call(e).slice(8, -1);
                        if (d === "Object" && e.constructor && (d = e.constructor.name), d === "Map" || d === "Set") return Array.from(e);
                        if (d === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(d)) return _(e, r)
                    }
                }

                function _(e, r) {
                    (r == null || r > e.length) && (r = e.length);
                    for (var d = 0, l = new Array(r); d < r; d++) l[d] = e[d];
                    return l
                }

                function s(e, r) {
                    var d = r.countries,
                        l = r.defaultCountry,
                        t = r.metadata;
                    t = new y.Ay(t);
                    for (var i = m(d), c; !(c = i()).done;) {
                        var g = c.value;
                        if (t.country(g), t.leadingDigits()) {
                            if (e && e.search(t.leadingDigits()) === 0) return g
                        } else if ((0, v.A)({
                                phone: e,
                                country: g
                            }, void 0, t.metadata)) return g
                    }
                }
            },
            96955: (M, O, a) => {
                a.d(O, {
                    Ay: () => i,
                    Ko: () => u,
                    GF: () => P,
                    J_: () => f,
                    aR: () => C
                });

                function y(n, $) {
                    n = n.split("-"), $ = $.split("-");
                    for (var E = n[0].split("."), T = $[0].split("."), x = 0; x < 3; x++) {
                        var B = Number(E[x]),
                            k = Number(T[x]);
                        if (B > k) return 1;
                        if (k > B) return -1;
                        if (!isNaN(B) && isNaN(k)) return 1;
                        if (isNaN(B) && !isNaN(k)) return -1
                    }
                    return n[1] && $[1] ? n[1] > $[1] ? 1 : n[1] < $[1] ? -1 : 0 : !n[1] && $[1] ? 1 : n[1] && !$[1] ? -1 : 0
                }
                var v = a(73159);

                function m(n) {
                    "@babel/helpers - typeof";
                    return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function($) {
                        return typeof $
                    } : function($) {
                        return $ && typeof Symbol == "function" && $.constructor === Symbol && $ !== Symbol.prototype ? "symbol" : typeof $
                    }, m(n)
                }

                function p(n, $) {
                    if (!(n instanceof $)) throw new TypeError("Cannot call a class as a function")
                }

                function _(n, $) {
                    for (var E = 0; E < $.length; E++) {
                        var T = $[E];
                        T.enumerable = T.enumerable || !1, T.configurable = !0, "value" in T && (T.writable = !0), Object.defineProperty(n, T.key, T)
                    }
                }

                function s(n, $, E) {
                    return $ && _(n.prototype, $), E && _(n, E), Object.defineProperty(n, "prototype", {
                        writable: !1
                    }), n
                }
                var e = "1.0.18",
                    r = "1.2.0",
                    d = "1.7.35",
                    l = " ext. ",
                    t = /^\d+$/,
                    i = function() {
                        function n($) {
                            p(this, n), C($), this.metadata = $, h.call(this, $)
                        }
                        return s(n, [{
                            key: "getCountries",
                            value: function() {
                                return Object.keys(this.metadata.countries).filter(function(E) {
                                    return E !== "001"
                                })
                            }
                        }, {
                            key: "getCountryMetadata",
                            value: function(E) {
                                return this.metadata.countries[E]
                            }
                        }, {
                            key: "nonGeographic",
                            value: function() {
                                if (!(this.v1 || this.v2 || this.v3)) return this.metadata.nonGeographic || this.metadata.nonGeographical
                            }
                        }, {
                            key: "hasCountry",
                            value: function(E) {
                                return this.getCountryMetadata(E) !== void 0
                            }
                        }, {
                            key: "hasCallingCode",
                            value: function(E) {
                                if (this.getCountryCodesForCallingCode(E)) return !0;
                                if (this.nonGeographic()) {
                                    if (this.nonGeographic()[E]) return !0
                                } else {
                                    var T = this.countryCallingCodes()[E];
                                    if (T && T.length === 1 && T[0] === "001") return !0
                                }
                            }
                        }, {
                            key: "isNonGeographicCallingCode",
                            value: function(E) {
                                return this.nonGeographic() ? !!this.nonGeographic()[E] : !this.getCountryCodesForCallingCode(E)
                            }
                        }, {
                            key: "country",
                            value: function(E) {
                                return this.selectNumberingPlan(E)
                            }
                        }, {
                            key: "selectNumberingPlan",
                            value: function(E, T) {
                                if (E && t.test(E) && (T = E, E = null), E && E !== "001") {
                                    if (!this.hasCountry(E)) throw new Error("Unknown country: ".concat(E));
                                    this.numberingPlan = new c(this.getCountryMetadata(E), this)
                                } else if (T) {
                                    if (!this.hasCallingCode(T)) throw new Error("Unknown calling code: ".concat(T));
                                    this.numberingPlan = new c(this.getNumberingPlanMetadata(T), this)
                                } else this.numberingPlan = void 0;
                                return this
                            }
                        }, {
                            key: "getCountryCodesForCallingCode",
                            value: function(E) {
                                var T = this.countryCallingCodes()[E];
                                if (T) return T.length === 1 && T[0].length === 3 ? void 0 : T
                            }
                        }, {
                            key: "getCountryCodeForCallingCode",
                            value: function(E) {
                                var T = this.getCountryCodesForCallingCode(E);
                                if (T) return T[0]
                            }
                        }, {
                            key: "getNumberingPlanMetadata",
                            value: function(E) {
                                var T = this.getCountryCodeForCallingCode(E);
                                if (T) return this.getCountryMetadata(T);
                                if (this.nonGeographic()) {
                                    var x = this.nonGeographic()[E];
                                    if (x) return x
                                } else {
                                    var B = this.countryCallingCodes()[E];
                                    if (B && B.length === 1 && B[0] === "001") return this.metadata.countries["001"]
                                }
                            }
                        }, {
                            key: "countryCallingCode",
                            value: function() {
                                return this.numberingPlan.callingCode()
                            }
                        }, {
                            key: "IDDPrefix",
                            value: function() {
                                return this.numberingPlan.IDDPrefix()
                            }
                        }, {
                            key: "defaultIDDPrefix",
                            value: function() {
                                return this.numberingPlan.defaultIDDPrefix()
                            }
                        }, {
                            key: "nationalNumberPattern",
                            value: function() {
                                return this.numberingPlan.nationalNumberPattern()
                            }
                        }, {
                            key: "possibleLengths",
                            value: function() {
                                return this.numberingPlan.possibleLengths()
                            }
                        }, {
                            key: "formats",
                            value: function() {
                                return this.numberingPlan.formats()
                            }
                        }, {
                            key: "nationalPrefixForParsing",
                            value: function() {
                                return this.numberingPlan.nationalPrefixForParsing()
                            }
                        }, {
                            key: "nationalPrefixTransformRule",
                            value: function() {
                                return this.numberingPlan.nationalPrefixTransformRule()
                            }
                        }, {
                            key: "leadingDigits",
                            value: function() {
                                return this.numberingPlan.leadingDigits()
                            }
                        }, {
                            key: "hasTypes",
                            value: function() {
                                return this.numberingPlan.hasTypes()
                            }
                        }, {
                            key: "type",
                            value: function(E) {
                                return this.numberingPlan.type(E)
                            }
                        }, {
                            key: "ext",
                            value: function() {
                                return this.numberingPlan.ext()
                            }
                        }, {
                            key: "countryCallingCodes",
                            value: function() {
                                return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes
                            }
                        }, {
                            key: "chooseCountryByCountryCallingCode",
                            value: function(E) {
                                return this.selectNumberingPlan(E)
                            }
                        }, {
                            key: "hasSelectedNumberingPlan",
                            value: function() {
                                return this.numberingPlan !== void 0
                            }
                        }]), n
                    }(),
                    c = function() {
                        function n($, E) {
                            p(this, n), this.globalMetadataObject = E, this.metadata = $, h.call(this, E.metadata)
                        }
                        return s(n, [{
                            key: "callingCode",
                            value: function() {
                                return this.metadata[0]
                            }
                        }, {
                            key: "getDefaultCountryMetadataForRegion",
                            value: function() {
                                return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())
                            }
                        }, {
                            key: "IDDPrefix",
                            value: function() {
                                if (!(this.v1 || this.v2)) return this.metadata[1]
                            }
                        }, {
                            key: "defaultIDDPrefix",
                            value: function() {
                                if (!(this.v1 || this.v2)) return this.metadata[12]
                            }
                        }, {
                            key: "nationalNumberPattern",
                            value: function() {
                                return this.v1 || this.v2 ? this.metadata[1] : this.metadata[2]
                            }
                        }, {
                            key: "possibleLengths",
                            value: function() {
                                if (!this.v1) return this.metadata[this.v2 ? 2 : 3]
                            }
                        }, {
                            key: "_getFormats",
                            value: function(E) {
                                return E[this.v1 ? 2 : this.v2 ? 3 : 4]
                            }
                        }, {
                            key: "formats",
                            value: function() {
                                var E = this,
                                    T = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];
                                return T.map(function(x) {
                                    return new g(x, E)
                                })
                            }
                        }, {
                            key: "nationalPrefix",
                            value: function() {
                                return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]
                            }
                        }, {
                            key: "_getNationalPrefixFormattingRule",
                            value: function(E) {
                                return E[this.v1 ? 4 : this.v2 ? 5 : 6]
                            }
                        }, {
                            key: "nationalPrefixFormattingRule",
                            value: function() {
                                return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())
                            }
                        }, {
                            key: "_nationalPrefixForParsing",
                            value: function() {
                                return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]
                            }
                        }, {
                            key: "nationalPrefixForParsing",
                            value: function() {
                                return this._nationalPrefixForParsing() || this.nationalPrefix()
                            }
                        }, {
                            key: "nationalPrefixTransformRule",
                            value: function() {
                                return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]
                            }
                        }, {
                            key: "_getNationalPrefixIsOptionalWhenFormatting",
                            value: function() {
                                return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]
                            }
                        }, {
                            key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
                            value: function() {
                                return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())
                            }
                        }, {
                            key: "leadingDigits",
                            value: function() {
                                return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]
                            }
                        }, {
                            key: "types",
                            value: function() {
                                return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]
                            }
                        }, {
                            key: "hasTypes",
                            value: function() {
                                return this.types() && this.types().length === 0 ? !1 : !!this.types()
                            }
                        }, {
                            key: "type",
                            value: function(E) {
                                if (this.hasTypes() && A(this.types(), E)) return new b(A(this.types(), E), this)
                            }
                        }, {
                            key: "ext",
                            value: function() {
                                return this.v1 || this.v2 ? l : this.metadata[13] || l
                            }
                        }]), n
                    }(),
                    g = function() {
                        function n($, E) {
                            p(this, n), this._format = $, this.metadata = E
                        }
                        return s(n, [{
                            key: "pattern",
                            value: function() {
                                return this._format[0]
                            }
                        }, {
                            key: "format",
                            value: function() {
                                return this._format[1]
                            }
                        }, {
                            key: "leadingDigitsPatterns",
                            value: function() {
                                return this._format[2] || []
                            }
                        }, {
                            key: "nationalPrefixFormattingRule",
                            value: function() {
                                return this._format[3] || this.metadata.nationalPrefixFormattingRule()
                            }
                        }, {
                            key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
                            value: function() {
                                return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()
                            }
                        }, {
                            key: "nationalPrefixIsMandatoryWhenFormattingInNationalFormat",
                            value: function() {
                                return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()
                            }
                        }, {
                            key: "usesNationalPrefix",
                            value: function() {
                                return !!(this.nationalPrefixFormattingRule() && !N.test(this.nationalPrefixFormattingRule()))
                            }
                        }, {
                            key: "internationalFormat",
                            value: function() {
                                return this._format[5] || this.format()
                            }
                        }]), n
                    }(),
                    N = /^\(?\$1\)?$/,
                    b = function() {
                        function n($, E) {
                            p(this, n), this.type = $, this.metadata = E
                        }
                        return s(n, [{
                            key: "pattern",
                            value: function() {
                                return this.metadata.v1 ? this.type : this.type[0]
                            }
                        }, {
                            key: "possibleLengths",
                            value: function() {
                                if (!this.metadata.v1) return this.type[1] || this.metadata.possibleLengths()
                            }
                        }]), n
                    }();

                function A(n, $) {
                    switch ($) {
                        case "FIXED_LINE":
                            return n[0];
                        case "MOBILE":
                            return n[1];
                        case "TOLL_FREE":
                            return n[2];
                        case "PREMIUM_RATE":
                            return n[3];
                        case "PERSONAL_NUMBER":
                            return n[4];
                        case "VOICEMAIL":
                            return n[5];
                        case "UAN":
                            return n[6];
                        case "PAGER":
                            return n[7];
                        case "VOIP":
                            return n[8];
                        case "SHARED_COST":
                            return n[9]
                    }
                }

                function C(n) {
                    if (!n) throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");
                    if (!(0, v.A)(n) || !(0, v.A)(n.countries)) throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat((0, v.A)(n) ? "an object of shape: { " + Object.keys(n).join(", ") + " }" : "a " + o(n) + ": " + n, "."))
                }
                var o = function($) {
                    return m($)
                };

                function P(n, $) {
                    return $ = new i($), $.hasCountry(n) ? $.country(n).ext() : l
                }

                function u(n, $) {
                    if ($ = new i($), $.hasCountry(n)) return $.country(n).countryCallingCode();
                    throw new Error("Unknown country: ".concat(n))
                }

                function f(n, $) {
                    return $.countries.hasOwnProperty(n)
                }

                function h(n) {
                    var $ = n.version;
                    typeof $ == "number" ? (this.v1 = $ === 1, this.v2 = $ === 2, this.v3 = $ === 3, this.v4 = $ === 4) : $ ? y($, r) === -1 ? this.v2 = !0 : y($, d) === -1 ? this.v3 = !0 : this.v4 = !0 : this.v1 = !0
                }
            },
            97914: (M, O, a) => {
                a.d(O, {
                    A: () => y
                });

                function y(v, m) {
                    if (v && m.numberingPlan.nationalPrefixForParsing()) {
                        var p = new RegExp("^(?:" + m.numberingPlan.nationalPrefixForParsing() + ")"),
                            _ = p.exec(v);
                        if (_) {
                            var s, e, r = _.length - 1,
                                d = r > 0 && _[r];
                            if (m.nationalPrefixTransformRule() && d) s = v.replace(p, m.nationalPrefixTransformRule()), r > 1 && (e = _[1]);
                            else {
                                var l = _[0];
                                s = v.slice(l.length), d && (e = _[1])
                            }
                            var t;
                            if (d) {
                                var i = v.indexOf(_[1]),
                                    c = v.slice(0, i);
                                c === m.numberingPlan.nationalPrefix() && (t = m.numberingPlan.nationalPrefix())
                            } else t = _[0];
                            return {
                                nationalNumber: s,
                                nationalPrefix: t,
                                carrierCode: e
                            }
                        }
                    }
                    return {
                        nationalNumber: v
                    }
                }
            }
        }
    ]);
})();