(() => {
    var Wp = Object.defineProperty;
    var dh = Object.getOwnPropertySymbols;
    var Tv = Object.prototype.hasOwnProperty,
        Av = Object.prototype.propertyIsEnumerable;
    var bv = (wt, Me, we) => Me in wt ? Wp(wt, Me, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: we
        }) : wt[Me] = we,
        gl = (wt, Me) => {
            for (var we in Me || (Me = {})) Tv.call(Me, we) && bv(wt, we, Me[we]);
            if (dh)
                for (var we of dh(Me)) Av.call(Me, we) && bv(wt, we, Me[we]);
            return wt
        };
    var zf = (wt, Me) => {
        var we = {};
        for (var je in wt) Tv.call(wt, je) && Me.indexOf(je) < 0 && (we[je] = wt[je]);
        if (wt != null && dh)
            for (var je of dh(wt)) Me.indexOf(je) < 0 && Av.call(wt, je) && (we[je] = wt[je]);
        return we
    };
    var Xf = (wt, Me, we) => new Promise((je, Ee) => {
        var Je = tt => {
                try {
                    Ct(we.next(tt))
                } catch (mt) {
                    Ee(mt)
                }
            },
            Y = tt => {
                try {
                    Ct(we.throw(tt))
                } catch (mt) {
                    Ee(mt)
                }
            },
            Ct = tt => tt.done ? je(tt.value) : Promise.resolve(tt.value).then(Je, Y);
        Ct((we = we.apply(wt, Me)).next())
    });
    (self.webpackChunk_typeform_renderer = self.webpackChunk_typeform_renderer || []).push([
        [3673], {
            3504: wt => {
                function Me(je, Ee, Je, Y, Ct, tt, mt) {
                    try {
                        var le = je[tt](mt),
                            x = le.value
                    } catch (K) {
                        return void Je(K)
                    }
                    le.done ? Ee(x) : Promise.resolve(x).then(Y, Ct)
                }

                function we(je) {
                    return function() {
                        var Ee = this,
                            Je = arguments;
                        return new Promise(function(Y, Ct) {
                            var tt = je.apply(Ee, Je);

                            function mt(x) {
                                Me(tt, Y, Ct, mt, le, "next", x)
                            }

                            function le(x) {
                                Me(tt, Y, Ct, mt, le, "throw", x)
                            }
                            mt(void 0)
                        })
                    }
                }
                wt.exports = we, wt.exports.__esModule = !0, wt.exports.default = wt.exports
            },
            4340: wt => {
                wt.exports = function(Je, Y, Ct) {
                    var tt = document.head || document.getElementsByTagName("head")[0],
                        mt = document.createElement("script");
                    typeof Y == "function" && (Ct = Y, Y = {}), Y = Y || {}, Ct = Ct || function() {}, mt.type = Y.type || "text/javascript", mt.charset = Y.charset || "utf8", mt.async = "async" in Y ? !!Y.async : !0, mt.src = Je, Y.attrs && Me(mt, Y.attrs), Y.text && (mt.text = "" + Y.text);
                    var le = "onload" in mt ? we : je;
                    le(mt, Ct), mt.onload || we(mt, Ct), tt.appendChild(mt)
                };

                function Me(Ee, Je) {
                    for (var Y in Je) Ee.setAttribute(Y, Je[Y])
                }

                function we(Ee, Je) {
                    Ee.onload = function() {
                        this.onerror = this.onload = null, Je(null, Ee)
                    }, Ee.onerror = function() {
                        this.onerror = this.onload = null, Je(new Error("Failed to load " + this.src), Ee)
                    }
                }

                function je(Ee, Je) {
                    Ee.onreadystatechange = function() {
                        this.readyState != "complete" && this.readyState != "loaded" || (this.onreadystatechange = null, Je(null, Ee))
                    }
                }
            },
            8232: (wt, Me) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.default = ["ready", "stateChange", "playbackQualityChange", "playbackRateChange", "error", "apiChange", "volumeChange"], wt.exports = Me.default
            },
            11304: (wt, Me, we) => {
                "use strict";
                var je = we(89249);
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.getBestFileForDevice = Me.default = void 0;
                var Ee = je(we(81987)),
                    Je = je(we(66326)),
                    Y = je(we(29296)),
                    Ct = je(we(3504)),
                    tt = function() {
                        var at = window,
                            bt = at.navigator,
                            Wt = bt.connection || bt.mozConnection || bt.webkitConnection;
                        return !Wt || !Wt.effectiveType ? null : Wt.effectiveType
                    },
                    mt = function(at) {
                        switch (at) {
                            case "slow-2g":
                            case "2g":
                                return [426, 240];
                            case "3g":
                                return [960, 540];
                            case "4g":
                            default:
                                return [1920, 1080]
                        }
                    },
                    le = function(at, bt) {
                        return Math.abs(at[0] * at[1] - bt[0] * bt[1])
                    },
                    x = function(at) {
                        return [at.width, at.height]
                    },
                    K = Me.getBestFileForDevice = function(at) {
                        var bt = mt(tt()),
                            Wt = at.filter(function(fe) {
                                return fe.file_type === "video/mp4"
                            }).filter(function(fe) {
                                return fe.width && fe.height
                            }).sort(function(fe, Ge) {
                                return le(x(fe), bt) - le(x(Ge), bt)
                            });
                        return Wt[0]
                    },
                    Q = function() {
                        var dt = (0, Ct.default)(Ee.default.mark(function at(bt, Wt) {
                            var fe, Ge;
                            return Ee.default.wrap(function(Be) {
                                for (;;) switch (Be.prev = Be.next) {
                                    case 0:
                                        return fe = "https://api.pexels.com/videos/videos/".concat(bt), Be.next = 3, fetch(fe, {
                                            headers: new Headers({
                                                Authorization: Wt,
                                                Accept: "application/json"
                                            })
                                        });
                                    case 3:
                                        if (Ge = Be.sent, Ge.ok) {
                                            Be.next = 6;
                                            break
                                        }
                                        return Be.abrupt("return", Promise.reject(Ge.status));
                                    case 6:
                                        return Be.abrupt("return", Ge.json());
                                    case 7:
                                    case "end":
                                        return Be.stop()
                                }
                            }, at)
                        }));
                        return function(bt, Wt) {
                            return dt.apply(this, arguments)
                        }
                    }(),
                    he = new Map,
                    ot = function() {
                        var dt = (0, Ct.default)(Ee.default.mark(function at(bt, Wt) {
                            var fe;
                            return Ee.default.wrap(function(B) {
                                for (;;) switch (B.prev = B.next) {
                                    case 0:
                                        if (!he.has(bt)) {
                                            B.next = 2;
                                            break
                                        }
                                        return B.abrupt("return", he.get(bt));
                                    case 2:
                                        return B.next = 4, Q(bt, Wt);
                                    case 4:
                                        return fe = B.sent, he.set(bt, fe), B.abrupt("return", fe);
                                    case 7:
                                    case "end":
                                        return B.stop()
                                }
                            }, at)
                        }));
                        return function(bt, Wt) {
                            return dt.apply(this, arguments)
                        }
                    }(),
                    it = function() {
                        var dt = (0, Ct.default)(Ee.default.mark(function at(bt, Wt) {
                            var fe, Ge;
                            return Ee.default.wrap(function(Be) {
                                for (;;) switch (Be.prev = Be.next) {
                                    case 0:
                                        return Be.next = 2, ot(bt, Wt);
                                    case 2:
                                        return fe = Be.sent, Ge = K(fe.video_files), Be.abrupt("return", {
                                            src: Ge.link,
                                            type: Ge.file_type
                                        });
                                    case 5:
                                    case "end":
                                        return Be.stop()
                                }
                            }, at)
                        }));
                        return function(bt, Wt) {
                            return dt.apply(this, arguments)
                        }
                    }(),
                    Rt = function() {
                        var dt = (0, Ct.default)(Ee.default.mark(function at(bt, Wt) {
                            var fe;
                            return Ee.default.wrap(function(B) {
                                for (;;) switch (B.prev = B.next) {
                                    case 0:
                                        return B.next = 2, ot(bt, Wt);
                                    case 2:
                                        return fe = B.sent, B.abrupt("return", fe.image);
                                    case 4:
                                    case "end":
                                        return B.stop()
                                }
                            }, at)
                        }));
                        return function(bt, Wt) {
                            return dt.apply(this, arguments)
                        }
                    }(),
                    Ft = function() {
                        function dt(at, bt) {
                            var Wt = bt.id,
                                fe = bt.cover,
                                Ge = bt.autoplay,
                                B = bt.pexelsApiKey;
                            (0, Je.default)(this, dt), this.id = Math.random(), this.init(at, Wt, fe, Ge, B), this.play = this.play.bind(this), this.pause = this.pause.bind(this), this.setCover = this.setCover.bind(this), this.init = this.init.bind(this)
                        }
                        return (0, Y.default)(dt, [{
                            key: "init",
                            value: function() {
                                var at = (0, Ct.default)(Ee.default.mark(function Wt(fe, Ge, B, Be, _) {
                                    var Ve = this,
                                        de, yt, Ir, ar, nt, dr;
                                    return Ee.default.wrap(function(V) {
                                        for (;;) switch (V.prev = V.next) {
                                            case 0:
                                                return V.prev = 0, V.next = 3, it(Ge, _);
                                            case 3:
                                                return de = V.sent, yt = de.src, Ir = de.type, V.next = 8, Rt(Ge, _);
                                            case 8:
                                                ar = V.sent, nt = document.createElement("video"), this.videoElement = nt, this.setCover(B), nt.setAttribute("preload", "auto"), nt.setAttribute("loop", ""), nt.setAttribute("muted", ""), nt.setAttribute("playsinline", ""), nt.setAttribute("loop", ""), nt.setAttribute("poster", ar), fe.innerHTML = "", fe.appendChild(nt), dr = document.createElement("source"), dr.setAttribute("type", Ir), dr.setAttribute("src", yt), nt.appendChild(dr), nt.muted = !0, Be && setTimeout(function() {
                                                    return Ve.play()
                                                }, 100), V.next = 31;
                                                break;
                                            case 28:
                                                V.prev = 28, V.t0 = V.catch(0);
                                            case 31:
                                            case "end":
                                                return V.stop()
                                        }
                                    }, Wt, this, [
                                        [0, 28]
                                    ])
                                }));

                                function bt(Wt, fe, Ge, B, Be) {
                                    return at.apply(this, arguments)
                                }
                                return bt
                            }()
                        }, {
                            key: "setCover",
                            value: function(bt) {
                                this.videoElement && this.videoElement.setAttribute("style", bt ? "width: 100%; height: 100%; object-fit: cover;" : "")
                            }
                        }, {
                            key: "pause",
                            value: function() {
                                this.videoElement && this.videoElement.pause()
                            }
                        }, {
                            key: "play",
                            value: function() {
                                var at = (0, Ct.default)(Ee.default.mark(function Wt() {
                                    var fe = this;
                                    return Ee.default.wrap(function(B) {
                                        for (;;) switch (B.prev = B.next) {
                                            case 0:
                                                return B.prev = 0, B.next = 3, this.videoElement.play();
                                            case 3:
                                                B.next = 8;
                                                break;
                                            case 5:
                                                B.prev = 5, B.t0 = B.catch(0), setTimeout(function() {
                                                    return fe.play()
                                                }, 200);
                                            case 8:
                                            case "end":
                                                return B.stop()
                                        }
                                    }, Wt, this, [
                                        [0, 5]
                                    ])
                                }));

                                function bt() {
                                    return at.apply(this, arguments)
                                }
                                return bt
                            }()
                        }])
                    }(),
                    Dt = Me.default = Ft
            },
            11471: (wt, Me, we) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                });
                var je = we(4340),
                    Ee = Je(je);

                function Je(Y) {
                    return Y && Y.__esModule ? Y : {
                        default: Y
                    }
                }
                Me.default = Y => new Promise(tt => {
                    if (window.YT && window.YT.Player && window.YT.Player instanceof Function) {
                        tt(window.YT);
                        return
                    } else {
                        const le = window.location.protocol === "http:" ? "http:" : "https:";
                        (0, Ee.default)(le + "//www.youtube.com/iframe_api", x => {
                            x && Y.trigger("error", x)
                        })
                    }
                    const mt = window.onYouTubeIframeAPIReady;
                    window.onYouTubeIframeAPIReady = () => {
                        mt && mt(), tt(window.YT)
                    }
                }), wt.exports = Me.default
            },
            13766: (wt, Me, we) => {
                "use strict";
                we.d(Me, {
                    A: () => Ee
                });

                function je(Je, Y, Ct, tt, mt, le, x) {
                    try {
                        var K = Je[le](x),
                            Q = K.value
                    } catch (he) {
                        return void Ct(he)
                    }
                    K.done ? Y(Q) : Promise.resolve(Q).then(tt, mt)
                }

                function Ee(Je) {
                    return function() {
                        var Y = this,
                            Ct = arguments;
                        return new Promise(function(tt, mt) {
                            var le = Je.apply(Y, Ct);

                            function x(Q) {
                                je(le, tt, mt, x, K, "next", Q)
                            }

                            function K(Q) {
                                je(le, tt, mt, x, K, "throw", Q)
                            }
                            x(void 0)
                        })
                    }
                }
            },
            18437: (wt, Me, we) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                });
                var je = we(38329),
                    Ee = Je(je);

                function Je(Y) {
                    return Y && Y.__esModule ? Y : {
                        default: Y
                    }
                }
                Me.default = {
                    pauseVideo: {
                        acceptableStates: [Ee.default.ENDED, Ee.default.PAUSED],
                        stateChangeRequired: !1
                    },
                    playVideo: {
                        acceptableStates: [Ee.default.ENDED, Ee.default.PLAYING],
                        stateChangeRequired: !1
                    },
                    seekTo: {
                        acceptableStates: [Ee.default.ENDED, Ee.default.PLAYING, Ee.default.PAUSED],
                        stateChangeRequired: !0,
                        timeout: 3e3
                    }
                }, wt.exports = Me.default
            },
            27764: wt => {
                var Me = 1e3,
                    we = Me * 60,
                    je = we * 60,
                    Ee = je * 24,
                    Je = Ee * 7,
                    Y = Ee * 365.25;
                wt.exports = function(x, K) {
                    K = K || {};
                    var Q = typeof x;
                    if (Q === "string" && x.length > 0) return Ct(x);
                    if (Q === "number" && isFinite(x)) return K.long ? mt(x) : tt(x);
                    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(x))
                };

                function Ct(x) {
                    if (x = String(x), !(x.length > 100)) {
                        var K = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(x);
                        if (K) {
                            var Q = parseFloat(K[1]),
                                he = (K[2] || "ms").toLowerCase();
                            switch (he) {
                                case "years":
                                case "year":
                                case "yrs":
                                case "yr":
                                case "y":
                                    return Q * Y;
                                case "weeks":
                                case "week":
                                case "w":
                                    return Q * Je;
                                case "days":
                                case "day":
                                case "d":
                                    return Q * Ee;
                                case "hours":
                                case "hour":
                                case "hrs":
                                case "hr":
                                case "h":
                                    return Q * je;
                                case "minutes":
                                case "minute":
                                case "mins":
                                case "min":
                                case "m":
                                    return Q * we;
                                case "seconds":
                                case "second":
                                case "secs":
                                case "sec":
                                case "s":
                                    return Q * Me;
                                case "milliseconds":
                                case "millisecond":
                                case "msecs":
                                case "msec":
                                case "ms":
                                    return Q;
                                default:
                                    return
                            }
                        }
                    }
                }

                function tt(x) {
                    var K = Math.abs(x);
                    return K >= Ee ? Math.round(x / Ee) + "d" : K >= je ? Math.round(x / je) + "h" : K >= we ? Math.round(x / we) + "m" : K >= Me ? Math.round(x / Me) + "s" : x + "ms"
                }

                function mt(x) {
                    var K = Math.abs(x);
                    return K >= Ee ? le(x, K, Ee, "day") : K >= je ? le(x, K, je, "hour") : K >= we ? le(x, K, we, "minute") : K >= Me ? le(x, K, Me, "second") : x + " ms"
                }

                function le(x, K, Q, he) {
                    var ot = K >= Q * 1.5;
                    return Math.round(x / Q) + " " + he + (ot ? "s" : "")
                }
            },
            29521: (wt, Me, we) => {
                "use strict";
                we.r(Me), we.d(Me, {
                    default: () => el
                });
                var je = v => {
                        throw TypeError(v)
                    },
                    Ee = (v, T, R) => T.has(v) || je("Cannot " + R),
                    Je = (v, T, R) => (Ee(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Y = (v, T, R) => T.has(v) ? je("Cannot add the same private member more than once") : T instanceof WeakSet ? T.add(v) : T.set(v, R),
                    Ct = (v, T, R, J) => (Ee(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    tt = `<!-- prettier-ignore -->
<template id="media-theme-classic">
  <style>
    :host {
      --_primary-color: var(--media-primary-color, white);
      --_secondary-color: var(--media-secondary-color, rgb(0 0 0 / .75));
      --media-icon-color: var(--_primary-color);
      --media-range-thumb-background: var(--_primary-color);
      --media-range-bar-color: var(--_primary-color);
      --media-control-background: var(--_secondary-color);
      --media-control-hover-background: var(--_secondary-color);
      --media-time-range-buffered-color: rgba(255, 255, 255, 0.4);
      --media-range-track-background:
        linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)),
        linear-gradient(rgba(20, 20, 30, 0.7), rgba(20, 20, 30, 0.7));
      --media-preview-thumbnail-border: 0;
      --media-preview-thumbnail-border-radius: 2px 2px 0 0;
      --media-preview-time-border-radius: 0 0 2px 2px;
      --media-preview-time-text-shadow: none;
      --media-menu-border-radius: 2px;
      --media-menu-transform-in: translateY(-8px) scale(1);
      --media-menu-transform-out: translateY(-6px) scale(.99);
      --media-menu-item-hover-background: rgba(255, 255, 255, 0.28);
      --media-tooltip-display: none;
      color: var(--_primary-color);
      display: inline-block;
      width: 100%;
      height: 100%;
    }

    media-rendition-menu,
    media-audio-track-menu,
    media-captions-menu {
      position: absolute; /* ensure they don't take up space in DOM on load */
    }

    :host([audio]) {
      --media-preview-time-border-radius: 3px;
      --media-preview-time-text-shadow: none;
    }

    :host([audio]) ::slotted([slot='media']) {
      height: 0px;
    }

    :host([audio]) media-loading-indicator {
      display: none;
    }

    :host([audio]) media-controller {
      background: transparent;
    }

    :host([audio]) media-controller::part(vertical-layer) {
      background: transparent;
    }

    :host([audio]) media-control-bar {
      width: 100%;
    }

    [disabled]:not(media-live-button),
    [aria-disabled='true']:not(media-live-button) {
      opacity: 60%;
      cursor: not-allowed;
    }

    /* 0.433s is the transition duration for VTT Regions.
     * Borrowed here, so the captions don't move too fast. */
    media-controller {
      --media-webkit-text-track-transition: transform 0.433s ease-out 0.3s;
    }
    media-controller:is([mediapaused],:not([userinactive])) {
      /* 42px is the height of the control bar and progress bar
       * with an additional 5px as a buffer, to get 47px */
      --media-webkit-text-track-transform: translateY(-47px);
      --media-webkit-text-track-transition: transform 0.15s ease;
    }

    /*
     * CSS specific to iOS devices.
     * See: https://stackoverflow.com/questions/30102792/css-media-query-to-target-only-ios-devices/60220757#60220757
     */
     @supports (-webkit-touch-callout: none) {
      /* Disable subtitle adjusting for iOS Safari */
      media-controller[mediaisfullscreen] {
        --media-webkit-text-track-transform: unset;
        --media-webkit-text-track-transition: unset;
      }
    }

    :host media-time-range {
      color: var(--_primary-color);
      --media-range-thumb-opacity: 0;
    }

    :host(:not([audio])) media-time-range {
      /* Adding px is required here for calc() */
      --media-range-padding: 0px;
      background: transparent;
      z-index: 10;
      height: 10px;
      bottom: -3px;
      width: 100%;
    }

    media-control-bar {
      --media-control-padding: 4px 3px;
    }

    [breakpointsm] media-control-bar {
      --media-control-padding: 9px 5px;
    }

    [breakpointmd] media-control-bar {
      --media-control-padding: 9px 7px;
    }

    media-control-bar :is([role='button'], [role='switch'], button) {
      line-height: 0;
    }

    media-control-bar :is(media-text-display, media-time-display):first-child {
      --media-control-padding: 9px 5px 9px 10px;
    }

    .spacer {
      flex-grow: 1;
      background-color: var(--media-control-background, rgba(20, 20, 30, 0.7));
    }

    /* Add a small space on the right to have the play button and
     * fullscreen button aligned in relation to the progress bar. */
    media-control-bar:not([slot])::after {
      content: '';
      width: 2px;
      height: 100%;
      background-color: var(--media-control-background, rgba(20, 20, 30, 0.7));
    }

    media-control-bar[slot='top-chrome'] {
      min-height: 42px;
      pointer-events: none;
    }

    :host([title]) media-control-bar[slot='top-chrome']::before {
      content: '';
      position: absolute;
      width: 100%;
      padding-bottom: min(160px, 25%);
      background: linear-gradient(rgb(0 0 0 / 0.4), transparent);
    }

    media-control-bar[slot='top-chrome'] > * {
      --media-control-background: transparent;
      --media-control-hover-background: transparent;
      position: relative;
    }

    media-controller::part(vertical-layer) {
      transition: background-color 1s;
    }

    media-controller:is([mediapaused], :not([userinactive]))::part(vertical-layer) {
      background-color: var(--controls-backdrop-color, var(--controls, transparent));
      transition: background-color 0.25s;
    }

    .center-controls {
      --media-button-icon-width: 100%;
      --media-button-icon-height: auto;
      pointer-events: none;
      width: 100%;
      display: flex;
      flex-flow: row;
      align-items: center;
      justify-content: center;
      filter: drop-shadow(0 0 2px rgb(0 0 0 / 0.25)) drop-shadow(0 0 6px rgb(0 0 0 / 0.25));
      paint-order: stroke;
      stroke: rgba(102, 102, 102, 1);
      stroke-width: 0.3px;
      text-shadow: 0 0 2px rgb(0 0 0 / 0.25), 0 0 6px rgb(0 0 0 / 0.25);
    }

    .center-controls media-play-button {
      --media-control-background: transparent;
      --media-control-hover-background: transparent;
      padding: 0;
      width: max(43px, min(10%, 55px));
    }

    .center-controls media-seek-backward-button,
    .center-controls media-seek-forward-button {
      --media-control-background: transparent;
      --media-control-hover-background: transparent;
      padding: 0;
      margin: 0 2%;
      width: max(33px, min(8%, 40px));
    }

    media-control-bar:not([slot]) media-seek-backward-button {
      padding-right: 5px;
    }

    media-control-bar:not([slot]) media-seek-forward-button {
      padding-left: 5px;
    }

    media-loading-indicator {
      --media-loading-icon-width: 100%;
      --media-button-icon-height: auto;
      display: var(--media-control-display, var(--media-loading-indicator-display, flex));
      pointer-events: none;
      position: absolute;
      width: min(15%, 150px);
      flex-flow: row;
      align-items: center;
      justify-content: center;
    }

    /* Intentionally don't target the div for transition but the children
     of the div. Prevents messing with media-chrome's autohide feature. */
    media-loading-indicator + div * {
      transition: opacity 0.15s;
      opacity: 1;
    }

    media-loading-indicator[medialoading]:not([mediapaused]) ~ div > * {
      opacity: 0;
      transition-delay: 400ms;
    }

    media-volume-range {
      /* Adding px is required here for calc() */
      --media-range-padding-left: 10px;
      --media-range-padding-right: 10px;
      width: min(100%, 100px);
    }

    media-time-display {
      white-space: nowrap;
    }

    :is(media-time-display, media-text-display, media-playback-rate-button[role='button']) {
      color: inherit;
      line-height: 24px;
    }

    :is(.title-display, media-live-button) {
      color: inherit;
      font-size: 16px;
      text-shadow: 0 0 2px rgb(0 0 0 / 0.6);
    }

    :host([audio]) .title-display {
      flex-grow: 1;
      font-size: 21px;
    }
  </style>

  <template partial="TitleDisplay">
    <template if="title">
      <media-text-display part="top title display" class="title-display">
        {{title}}
      </media-text-display>
    </template>
  </template>

  <template partial="PlayButton">
    <media-play-button
      part="{{section ?? 'bottom'}} play button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="play">
        <path d="m6.73 20.93 14.05-8.54a.46.46 0 0 0 0-.78L6.73 3.07a.48.48 0 0 0-.73.39v17.07a.48.48 0 0 0 .73.4Z" />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="pause">
        <path
          d="M6 19.5a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-15a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v15ZM14.5 4a.5.5 0 0 0-.5.5v15a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-15a.5.5 0 0 0-.5-.5h-3Z"
        />
      </svg>
    </media-play-button>
  </template>

  <template partial="SeekBackwardButton">
    <media-seek-backward-button
      seekoffset="{{backwardseekoffset}}"
      part="{{section ?? 'bottom'}} seek-backward button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <svg aria-hidden="true" viewBox="0 0 22 24" slot="backward">
        <path d="M11 6V3L5.37 7 11 10.94V8a5.54 5.54 0 0 1 1.9 10.48v2.12A7.5 7.5 0 0 0 11 6Z" />
        <text class="value" transform="translate(2.5 21)" style="font-size: 8px; font-family: 'ArialMT', 'Arial'">
          {{backwardseekoffset}}
        </text>
      </svg>
    </media-seek-backward-button>
  </template>

  <template partial="SeekForwardButton">
    <media-seek-forward-button
      seekoffset="{{forwardseekoffset}}"
      part="{{section ?? 'bottom'}} seek-forward button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <svg aria-hidden="true" viewBox="0 0 22 24" slot="forward">
        <path d="M11 6V3l5.61 4L11 10.94V8a5.54 5.54 0 0 0-1.9 10.48v2.12A7.5 7.5 0 0 1 11 6Z" />
        <text class="value" transform="translate(10 21)" style="font-size: 8px; font-family: 'ArialMT', 'Arial'">
          {{forwardseekoffset}}
        </text>
      </svg>
    </media-seek-forward-button>
  </template>

  <template partial="MuteButton">
    <media-mute-button part="bottom mute button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="high">
        <path
          d="m11.14 4.86-4 4a.49.49 0 0 1-.35.14H3.25a.25.25 0 0 0-.25.25v5.5a.25.25 0 0 0 .25.25h3.54a.49.49 0 0 1 .36.15l4 4a.5.5 0 0 0 .85-.36V5.21a.5.5 0 0 0-.86-.35Zm2.74-1.56v1.52A7.52 7.52 0 0 1 19.47 12a7.52 7.52 0 0 1-5.59 7.18v1.52A9 9 0 0 0 21 12a9 9 0 0 0-7.12-8.7Zm3.56 8.7a5.49 5.49 0 0 0-3.56-5.1v1.66a3.93 3.93 0 0 1 0 6.88v1.66a5.49 5.49 0 0 0 3.56-5.1Z"
        />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="low">
        <path
          d="m11.14 4.853-4 4a.49.49 0 0 1-.35.14H3.25a.25.25 0 0 0-.25.25v5.5a.25.25 0 0 0 .25.25h3.54a.49.49 0 0 1 .36.15l4 4a.5.5 0 0 0 .85-.36V5.203a.5.5 0 0 0-.86-.35Zm6.3 7.14a5.49 5.49 0 0 0-3.56-5.1v1.66a3.93 3.93 0 0 1 0 6.88v1.66a5.49 5.49 0 0 0 3.56-5.1Z"
        />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="medium">
        <path
          d="m11.14 4.853-4 4a.49.49 0 0 1-.35.14H3.25a.25.25 0 0 0-.25.25v5.5a.25.25 0 0 0 .25.25h3.54a.49.49 0 0 1 .36.15l4 4a.5.5 0 0 0 .85-.36V5.203a.5.5 0 0 0-.86-.35Zm6.3 7.14a5.49 5.49 0 0 0-3.56-5.1v1.66a3.93 3.93 0 0 1 0 6.88v1.66a5.49 5.49 0 0 0 3.56-5.1Z"
        />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="off">
        <path
          d="m3 4.05 4.48 4.47-.33.33a.49.49 0 0 1-.36.15H3.25a.25.25 0 0 0-.25.25v5.5a.25.25 0 0 0 .25.25h3.54a.49.49 0 0 1 .36.15l4 4a.48.48 0 0 0 .36.15.5.5 0 0 0 .5-.5v-5.75l4.67 4.66a7.71 7.71 0 0 1-2.79 1.47v1.52a9.32 9.32 0 0 0 3.87-1.91L20 21l1-1L4.06 3 3 4.05Zm5.36 5.36 2.39 2.39V17L8 14.26a1.74 1.74 0 0 0-1.24-.51H4.25v-3.5h2.54A1.74 1.74 0 0 0 8 9.74l.36-.33ZM19.47 12a7.19 7.19 0 0 1-.89 3.47l1.11 1.1A8.64 8.64 0 0 0 21 12a9 9 0 0 0-7.12-8.7v1.52A7.52 7.52 0 0 1 19.47 12ZM12 8.88V5.21a.5.5 0 0 0-.5-.5.48.48 0 0 0-.36.15L9.56 6.44 12 8.88ZM15.91 12a4.284 4.284 0 0 1-.07.72l1.22 1.22a5.2 5.2 0 0 0 .38-1.94 5.49 5.49 0 0 0-3.56-5.1v1.66A4 4 0 0 1 15.91 12Z"
        />
      </svg>
    </media-mute-button>
  </template>

  <template partial="RenditionSelect">
    <media-rendition-menu-button part="bottom rendition button">
      <svg aria-hidden="true" slot="icon" viewBox="0 0 18 24">
        <path
          d="M2.25 14.5a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm6.75 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm6.75 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"/>
      </svg>
    </media-rendition-menu-button>
    <media-rendition-menu
      hidden
      anchor="auto"
      part="bottom rendition menu"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <div slot="header">Quality</div>
    </media-rendition-menu>
  </template>

  <template partial="AudioTrackSelect">
    <media-audio-track-menu-button part="bottom audio-track button">
      <svg aria-hidden="true" slot="icon" viewBox="0 0 24 24">
        <path d="M12 20.5a8.5 8.5 0 1 0 0-17 8.5 8.5 0 0 0 0 17Zm0 1.5C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10Z"/>
        <path d="M7.25 9.75a.75.75 0 0 1 .75.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 .75-.75Zm3-3a.75.75 0 0 1 .75.75v9a.75.75 0 0 1-1.5 0v-9a.75.75 0 0 1 .75-.75Zm3 2a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75Zm3-1a.75.75 0 0 1 .75.75v7a.75.75 0 0 1-1.5 0v-7a.75.75 0 0 1 .75-.75Z"/>
      </svg>
    </media-audio-track-menu-button>
    <media-audio-track-menu
      hidden
      anchor="auto"
      part="bottom audio-track menu"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
      exportparts="menu-item"
    >
      <div slot="header">Audio</div>
    </media-audio-track-menu>
  </template>

  <template partial="CaptionsSelect">
    <media-captions-menu-button part="bottom captions button">
      <svg aria-hidden="true" viewBox="0 0 26 24" slot="on">
        <path d="M22.832 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.41 10.1a3.63 3.63 0 0 1-1.51.32 4.76 4.76 0 0 1-1.63-.27 4 4 0 0 1-1.28-.83 3.67 3.67 0 0 1-.84-1.26 4.23 4.23 0 0 1-.3-1.63 4.28 4.28 0 0 1 .3-1.64 3.53 3.53 0 0 1 .84-1.21 3.89 3.89 0 0 1 1.29-.8 4.76 4.76 0 0 1 1.63-.27 4.06 4.06 0 0 1 1.35.24c.225.091.44.205.64.34a2.7 2.7 0 0 1 .55.52l-1.27 1a1.79 1.79 0 0 0-.6-.46 2 2 0 0 0-.83-.16 2 2 0 0 0-1.56.69 2.35 2.35 0 0 0-.46.77 2.78 2.78 0 0 0-.16 1c-.009.34.046.68.16 1 .104.283.26.545.46.77.188.21.415.38.67.5a2 2 0 0 0 .84.18 1.87 1.87 0 0 0 .9-.21 1.78 1.78 0 0 0 .65-.6l1.38 1a2.88 2.88 0 0 1-1.22 1.01Zm7.52 0a3.63 3.63 0 0 1-1.51.32 4.76 4.76 0 0 1-1.63-.27 3.89 3.89 0 0 1-1.28-.83 3.55 3.55 0 0 1-.85-1.26 4.23 4.23 0 0 1-.3-1.63 4.28 4.28 0 0 1 .3-1.64 3.43 3.43 0 0 1 .85-1.25 3.75 3.75 0 0 1 1.28-.8 4.76 4.76 0 0 1 1.63-.27 4 4 0 0 1 1.35.24c.225.091.44.205.64.34.21.144.395.32.55.52l-1.27 1a1.79 1.79 0 0 0-.6-.46 2 2 0 0 0-.83-.16 2 2 0 0 0-1.56.69 2.352 2.352 0 0 0-.46.77 3.01 3.01 0 0 0-.16 1c-.003.34.05.678.16 1 .108.282.263.542.46.77.188.21.416.38.67.5a2 2 0 0 0 .84.18 1.87 1.87 0 0 0 .9-.21 1.78 1.78 0 0 0 .65-.6l1.38 1a2.82 2.82 0 0 1-1.21 1.05Z"/>
      </svg>
      <svg aria-hidden="true" viewBox="0 0 26 24" slot="off">
        <path d="M22.832 5.68a2.58 2.58 0 0 0-2.3-2.5c-1.81-.12-4.67-.18-7.53-.18-2.86 0-5.72.06-7.53.18a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c1.81.12 4.67.18 7.53.18 2.86 0 5.72-.06 7.53-.18a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.137-.21-8.283 0-12.42a1.11 1.11 0 0 1 .91-1.11c1.67-.11 4.43-.18 7.43-.18s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.137.21 8.283 0 12.42ZM10.843 14a1.55 1.55 0 0 1-.76.18 1.57 1.57 0 0 1-.71-.18 1.69 1.69 0 0 1-.57-.42 2.099 2.099 0 0 1-.38-.58 2.47 2.47 0 0 1 0-1.64 2 2 0 0 1 .39-.66 1.73 1.73 0 0 1 .58-.42c.23-.103.479-.158.73-.16.241-.004.48.044.7.14.199.088.373.222.51.39l1.08-.89a2.179 2.179 0 0 0-.47-.44 2.81 2.81 0 0 0-.54-.32 2.91 2.91 0 0 0-.58-.15 2.71 2.71 0 0 0-.56 0 4.08 4.08 0 0 0-1.38.15 3.27 3.27 0 0 0-1.09.67 3.14 3.14 0 0 0-.71 1.06 3.62 3.62 0 0 0-.26 1.39 3.57 3.57 0 0 0 .26 1.38 3 3 0 0 0 .71 1.06c.316.293.687.52 1.09.67.443.16.91.238 1.38.23a3.2 3.2 0 0 0 1.28-.27c.401-.183.747-.47 1-.83l-1.17-.88a1.42 1.42 0 0 1-.53.52Zm6.62 0a1.58 1.58 0 0 1-.76.18 1.54 1.54 0 0 1-.7-.18 1.69 1.69 0 0 1-.57-.42 2.12 2.12 0 0 1-.43-.58 2.29 2.29 0 0 1 .39-2.3 1.84 1.84 0 0 1 1.32-.58c.241-.003.48.045.7.14.199.088.373.222.51.39l1.08-.92a2.43 2.43 0 0 0-.47-.44 3.22 3.22 0 0 0-.53-.29 2.999 2.999 0 0 0-.57-.15 2.87 2.87 0 0 0-.57 0 4.06 4.06 0 0 0-1.36.15 3.17 3.17 0 0 0-1.09.67 3 3 0 0 0-.72 1.06 3.62 3.62 0 0 0-.25 1.39 3.57 3.57 0 0 0 .25 1.38c.16.402.405.764.72 1.06a3.17 3.17 0 0 0 1.09.67c.44.16.904.237 1.37.23.441 0 .877-.092 1.28-.27a2.45 2.45 0 0 0 1-.83l-1.15-.85a1.49 1.49 0 0 1-.54.49Z"/>
      </svg>
    </media-captions-menu-button>
    <media-captions-menu
      hidden
      anchor="auto"
      part="bottom captions menu"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
      exportparts="menu-item"
    ></media-captions-menu>
  </template>

  <template partial="AirplayButton">
    <media-airplay-button part="bottom airplay button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg aria-hidden="true" viewBox="0 0 26 24" slot="airplay">
        <path
          d="M13.19 14.22a.25.25 0 0 0-.38 0l-5.46 6.37a.25.25 0 0 0 .19.41h10.92a.25.25 0 0 0 .19-.41l-5.46-6.37Z"
        />
        <path
          d="M22 3H4a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h2.94L8 16.75H4.25V4.25h17.5v12.5H18L19.06 18H22a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Z"
        />
      </svg>
    </media-airplay-button>
  </template>

  <template partial="CastButton">
    <media-cast-button part="bottom cast button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg aria-hidden="true" viewBox="0 0 26 24" slot="enter">
        <path d="M3 15.5V17c2.206 0 4 1.794 4 4h1.5A5.5 5.5 0 0 0 3 15.5Zm0 3V21h2.5A2.5 2.5 0 0 0 3 18.5Z" />
        <path d="M3 12.5V14c3.86 0 7 3.14 7 7h1.5A8.5 8.5 0 0 0 3 12.5Z" />
        <path
          d="M22 3H4a1 1 0 0 0-1 1v6.984c.424 0 .84.035 1.25.086V4.25h17.5v15.5h-8.82c.051.41.086.826.086 1.25H22a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Z"
        />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 26 24" slot="exit">
        <path d="M3 15.5V17c2.206 0 4 1.794 4 4h1.5A5.5 5.5 0 0 0 3 15.5Zm0 3V21h2.5A2.5 2.5 0 0 0 3 18.5Z" />
        <path d="M3 12.5V14c3.86 0 7 3.14 7 7h1.5A8.5 8.5 0 0 0 3 12.5Z" />
        <path
          d="M22 3H4a1 1 0 0 0-1 1v6.984c.424 0 .84.035 1.25.086V4.25h17.5v15.5h-8.82c.051.41.086.826.086 1.25H22a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Z"
        />
        <path d="M20.5 5.5h-15v5.811c3.52.906 6.283 3.67 7.189 7.19H20.5V5.5Z" />
      </svg>
    </media-cast-button>
  </template>

  <template partial="PipButton">
    <media-pip-button part="bottom pip button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg aria-hidden="true" viewBox="0 0 26 24" slot="enter">
        <path
          d="M22 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h6.75v-1.25h-6.5V4.25h17.5v6.5H23V4a1 1 0 0 0-1-1Zm0 10h-8a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1Zm-.5 6.5h-7v-5h7v5Z"
        />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 26 24" slot="exit">
        <path
          d="M22 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h6.75v-1.25h-6.5V4.25h17.5v6.5H23V4a1 1 0 0 0-1-1Zm0 10h-8a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1Zm-.5 6.5h-7v-5h7v5Z"
        />
      </svg>
    </media-pip-button>
  </template>

  <template partial="FullscreenButton">
    <media-fullscreen-button part="bottom fullscreen button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="enter">
        <path
          d="M20.25 14.5a.76.76 0 0 0-.75.75v4.25h-4.25a.75.75 0 1 0 0 1.5h5a.76.76 0 0 0 .75-.75v-5a.76.76 0 0 0-.75-.75Zm0-11.5h-5a.76.76 0 0 0-.75.75.76.76 0 0 0 .75.75h4.25v4.25a.75.75 0 1 0 1.5 0v-5a.76.76 0 0 0-.75-.75ZM8.75 19.5H4.5v-4.25a.76.76 0 0 0-.75-.75.76.76 0 0 0-.75.75v5a.76.76 0 0 0 .75.75h5a.75.75 0 1 0 0-1.5Zm0-16.5h-5a.76.76 0 0 0-.75.75v5a.76.76 0 0 0 .75.75.76.76 0 0 0 .75-.75V4.5h4.25a.76.76 0 0 0 .75-.75.76.76 0 0 0-.75-.75Z"
        />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 24 24" slot="exit">
        <path
          d="M20.25 14.5h-5a.76.76 0 0 0-.75.75v5a.75.75 0 1 0 1.5 0V16h4.25a.75.75 0 1 0 0-1.5Zm-5-5h5a.75.75 0 1 0 0-1.5H16V3.75a.75.75 0 1 0-1.5 0v5a.76.76 0 0 0 .75.75Zm-6.5 5h-5a.75.75 0 1 0 0 1.5H8v4.25a.75.75 0 1 0 1.5 0v-5a.76.76 0 0 0-.75-.75Zm0-11.5a.76.76 0 0 0-.75.75V8H3.75a.75.75 0 0 0 0 1.5h5a.76.76 0 0 0 .75-.75v-5A.76.76 0 0 0 8.75 3Z"
        />
      </svg>
    </media-fullscreen-button>
  </template>

  <template partial="LiveButton">
    <media-live-button
      part="{{section ?? 'top'}} live button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-live-button>
  </template>

  <template partial="PlaybackRateButton">
    <media-playback-rate-button
      rates="{{playbackrates}}"
      part="bottom playback-rate button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-playback-rate-button>
  </template>

  <template partial="VolumeRange">
    <media-volume-range
      part="bottom volume range"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-volume-range>
  </template>

  <template partial="TimeDisplay">
    <media-time-display
      remaining="{{defaultshowremainingtime}}"
      showduration="{{!hideduration}}"
      part="bottom time display"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-time-display>
  </template>

  <template partial="TimeRange">
    <media-time-range
      part="bottom time range"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-time-range>
  </template>

  <media-controller
    part="controller"
    defaultstreamtype="{{defaultstreamtype ?? 'on-demand'}}"
    breakpoints="sm:300 md:700"
    gesturesdisabled="{{disabled}}"
    hotkeys="{{hotkeys}}"
    nohotkeys="{{nohotkeys}}"
    novolumepref="{{novolumepref}}"
    audio="{{audio}}"
    noautoseektolive="{{noautoseektolive}}"
    defaultsubtitles="{{defaultsubtitles}}"
    defaultduration="{{defaultduration ?? false}}"
    keyboardforwardseekoffset="{{forwardseekoffset}}"
    keyboardbackwardseekoffset="{{backwardseekoffset}}"
    exportparts="layer, media-layer, poster-layer, vertical-layer, centered-layer, gesture-layer"
  >
    <slot name="media" slot="media"></slot>
    <slot name="poster" slot="poster"></slot>
    <media-loading-indicator slot="centered-chrome" noautohide></media-loading-indicator>
    <media-error-dialog slot="dialog" noautohide></media-error-dialog>

    <template if="audio">

      <template if="streamtype == 'on-demand'">
        <template if="title">
          <media-control-bar part="control-bar top">{{>TitleDisplay}}</media-control-bar>
        </template>
        <media-control-bar part="control-bar bottom">
          {{>PlayButton}}
          {{>SeekBackwardButton}}
          {{>SeekForwardButton}}
          {{>TimeDisplay}}
          {{>TimeRange}}
          {{>MuteButton}}
          {{>VolumeRange}}
          {{>PlaybackRateButton}}
          {{>AudioTrackSelect}}
          {{>AirplayButton}}
          {{>CastButton}}
        </media-control-bar>
      </template>

      <template if="streamtype == 'live'">

        <template if="targetlivewindow > 0">
          <template if="title">
            <media-control-bar part="control-bar top">{{>TitleDisplay}}</media-control-bar>
          </template>
          <media-control-bar part="control-bar bottom">
            {{>PlayButton}}
            {{>LiveButton section="bottom"}}
            {{>SeekBackwardButton}}
            {{>SeekForwardButton}}
            {{>TimeDisplay}}
            {{>TimeRange}}
            {{>MuteButton}}
            {{>VolumeRange}}
            {{>PlaybackRateButton}}
            {{>AudioTrackSelect}}
            {{>AirplayButton}}
            {{>CastButton}}
          </media-control-bar>
        </template>

        <template if="!targetlivewindow">
          <template if="title">
            <media-control-bar part="control-bar top">{{>TitleDisplay}}</media-control-bar>
          </template>
          <media-control-bar part="control-bar bottom">
            {{>PlayButton}}
            {{>LiveButton section="bottom"}}
            {{>MuteButton}}
            {{>VolumeRange}}
            <div class="spacer"></div>
            {{>AudioTrackSelect}}
            {{>AirplayButton}}
            {{>CastButton}}
          </media-control-bar>
        </template>

      </template>
    </template>

    <template if="!audio">

      <template if="streamtype == 'on-demand'">

        <template if="!breakpointsm">
          {{>TimeRange}}
          <media-control-bar part="control-bar bottom">
            {{>PlayButton}}
            {{>MuteButton}}
            <div class="spacer"></div>
            {{>CaptionsSelect}}
            {{>FullscreenButton}}
          </media-control-bar>
        </template>

        <template if="breakpointsm">
          <template if="!breakpointmd">
            <media-control-bar part="control-bar top" slot="top-chrome">
              {{>TitleDisplay}}
            </media-control-bar>
            <div slot="centered-chrome" class="center-controls">
              {{>SeekBackwardButton section="center"}}
              {{>PlayButton section="center"}}
              {{>SeekForwardButton section="center"}}
            </div>
            {{>TimeRange}}
            <media-control-bar part="control-bar bottom">
              {{>PlayButton}}
              {{>TimeDisplay}}
              {{>MuteButton}}
              {{>VolumeRange}}
              <div class="spacer"></div>
              {{>RenditionSelect}}
              {{>PlaybackRateButton}}
              {{>AudioTrackSelect}}
              {{>CaptionsSelect}}
              {{>AirplayButton}}
              {{>CastButton}}
              {{>PipButton}}
              {{>FullscreenButton}}
            </media-control-bar>
          </template>
        </template>

        <template if="breakpointmd">
          <media-control-bar part="control-bar top" slot="top-chrome">
            {{>TitleDisplay}}
          </media-control-bar>
          <div slot="centered-chrome" class="center-controls">
            {{>PlayButton section="center"}}
          </div>
          {{>TimeRange}}
          <media-control-bar part="control-bar bottom">
            {{>PlayButton}}
            {{>SeekBackwardButton}}
            {{>SeekForwardButton}}
            {{>TimeDisplay}}
            {{>MuteButton}}
            {{>VolumeRange}}
            <div class="spacer"></div>
            {{>RenditionSelect}}
            {{>PlaybackRateButton}}
            {{>AudioTrackSelect}}
            {{>CaptionsSelect}}
            {{>AirplayButton}}
            {{>CastButton}}
            {{>PipButton}}
            {{>FullscreenButton}}
          </media-control-bar>
        </template>

      </template>

      <template if="streamtype == 'live'">

        <template if="!targetlivewindow">

          <template if="!breakpointsm">
            <media-control-bar part="control-bar top" slot="top-chrome">
              {{>LiveButton}}
            </media-control-bar>
            <media-control-bar part="control-bar bottom">
              {{>PlayButton}}
              {{>MuteButton}}
              <div class="spacer"></div>
              {{>CaptionsSelect}}
              {{>FullscreenButton}}
            </media-control-bar>
          </template>

          <template if="breakpointsm">
            <template if="!breakpointmd">
              <media-control-bar part="control-bar top" slot="top-chrome">
                {{>LiveButton}}
                {{>TitleDisplay}}
              </media-control-bar>
              <div slot="centered-chrome" class="center-controls">
                {{>PlayButton section="center"}}
              </div>
              <media-control-bar part="control-bar bottom">
                {{>PlayButton}}
                {{>MuteButton}}
                {{>VolumeRange}}
                <div class="spacer"></div>
                {{>RenditionSelect}}
                {{>AudioTrackSelect}}
                {{>CaptionsSelect}}
                {{>AirplayButton}}
                {{>CastButton}}
                {{>PipButton}}
                {{>FullscreenButton}}
              </media-control-bar>
            </template>
          </template>

          <template if="breakpointmd">
            <media-control-bar part="control-bar top" slot="top-chrome">
              {{>LiveButton}}
              {{>TitleDisplay}}
            </media-control-bar>
            <div slot="centered-chrome" class="center-controls">
              {{>PlayButton section="center"}}
            </div>
            <media-control-bar part="control-bar bottom">
              {{>PlayButton}}
              {{>MuteButton}}
              {{>VolumeRange}}
              <div class="spacer"></div>
              {{>RenditionSelect}}
              {{>AudioTrackSelect}}
              {{>CaptionsSelect}}
              {{>AirplayButton}}
              {{>CastButton}}
              {{>PipButton}}
              {{>FullscreenButton}}
            </media-control-bar>
          </template>
        </template>

        <template if="targetlivewindow > 0">

          <template if="!breakpointsm">
            <media-control-bar part="control-bar top" slot="top-chrome">
              {{>LiveButton}}
            </media-control-bar>
            {{>TimeRange}}
            <media-control-bar part="control-bar bottom">
              {{>PlayButton}}
              {{>MuteButton}}
              <div class="spacer"></div>
              {{>CaptionsSelect}}
              {{>FullscreenButton}}
            </media-control-bar>
          </template>

          <template if="breakpointsm">
            <template if="!breakpointmd">
              <media-control-bar part="control-bar top" slot="top-chrome">
                {{>LiveButton}}
                {{>TitleDisplay}}
              </media-control-bar>
              <div slot="centered-chrome" class="center-controls">
                {{>SeekBackwardButton section="center"}}
                {{>PlayButton section="center"}}
                {{>SeekForwardButton section="center"}}
              </div>
              {{>TimeRange}}
              <media-control-bar part="control-bar bottom">
                {{>PlayButton}}
                {{>MuteButton}}
                {{>VolumeRange}}
                <div class="spacer"></div>
                {{>RenditionSelect}}
                {{>AudioTrackSelect}}
                {{>CaptionsSelect}}
                {{>AirplayButton}}
                {{>CastButton}}
                {{>PipButton}}
                {{>FullscreenButton}}
              </media-control-bar>
            </template>
          </template>

          <template if="breakpointmd">
            <media-control-bar part="control-bar top" slot="top-chrome">
              {{>LiveButton}}
              {{>TitleDisplay}}
            </media-control-bar>
            <div slot="centered-chrome" class="center-controls">
              {{>PlayButton section="center"}}
            </div>
            {{>TimeRange}}
            <media-control-bar part="control-bar bottom">
              {{>PlayButton}}
              {{>SeekBackwardButton}}
              {{>SeekForwardButton}}
              {{>MuteButton}}
              {{>VolumeRange}}
              <div class="spacer"></div>
              {{>RenditionSelect}}
              {{>AudioTrackSelect}}
              {{>CaptionsSelect}}
              {{>AirplayButton}}
              {{>CastButton}}
              {{>PipButton}}
              {{>FullscreenButton}}
            </media-control-bar>
          </template>

        </template>

      </template>

    </template>

    <slot></slot>

  </media-controller>
</template>
`,
                    mt = class {
                        addEventListener() {}
                        removeEventListener() {}
                        dispatchEvent(v) {
                            return !0
                        }
                    };
                if (typeof DocumentFragment == "undefined") {
                    class v extends mt {}
                    globalThis.DocumentFragment = v
                }
                var le = class extends mt {},
                    x = class extends mt {},
                    K = {
                        get(v) {},
                        define(v, T, R) {},
                        getName(v) {
                            return null
                        },
                        upgrade(v) {},
                        whenDefined(v) {
                            return Promise.resolve(le)
                        }
                    },
                    Q, he = class {
                        constructor(v, T = {}) {
                            Y(this, Q), Ct(this, Q, T == null ? void 0 : T.detail)
                        }
                        get detail() {
                            return Je(this, Q)
                        }
                        initCustomEvent() {}
                    };
                Q = new WeakMap;

                function ot(v, T) {
                    return new le
                }
                var it = {
                        document: {
                            createElement: ot
                        },
                        DocumentFragment,
                        customElements: K,
                        CustomEvent: he,
                        EventTarget: mt,
                        HTMLElement: le,
                        HTMLVideoElement: x
                    },
                    Rt = typeof window == "undefined" || typeof globalThis.customElements == "undefined",
                    Ft = Rt ? it : globalThis,
                    Dt = Rt ? it.document : globalThis.document,
                    dt = {
                        MEDIA_PLAY_REQUEST: "mediaplayrequest",
                        MEDIA_PAUSE_REQUEST: "mediapauserequest",
                        MEDIA_MUTE_REQUEST: "mediamuterequest",
                        MEDIA_UNMUTE_REQUEST: "mediaunmuterequest",
                        MEDIA_VOLUME_REQUEST: "mediavolumerequest",
                        MEDIA_SEEK_REQUEST: "mediaseekrequest",
                        MEDIA_AIRPLAY_REQUEST: "mediaairplayrequest",
                        MEDIA_ENTER_FULLSCREEN_REQUEST: "mediaenterfullscreenrequest",
                        MEDIA_EXIT_FULLSCREEN_REQUEST: "mediaexitfullscreenrequest",
                        MEDIA_PREVIEW_REQUEST: "mediapreviewrequest",
                        MEDIA_ENTER_PIP_REQUEST: "mediaenterpiprequest",
                        MEDIA_EXIT_PIP_REQUEST: "mediaexitpiprequest",
                        MEDIA_ENTER_CAST_REQUEST: "mediaentercastrequest",
                        MEDIA_EXIT_CAST_REQUEST: "mediaexitcastrequest",
                        MEDIA_SHOW_TEXT_TRACKS_REQUEST: "mediashowtexttracksrequest",
                        MEDIA_HIDE_TEXT_TRACKS_REQUEST: "mediahidetexttracksrequest",
                        MEDIA_SHOW_SUBTITLES_REQUEST: "mediashowsubtitlesrequest",
                        MEDIA_DISABLE_SUBTITLES_REQUEST: "mediadisablesubtitlesrequest",
                        MEDIA_TOGGLE_SUBTITLES_REQUEST: "mediatogglesubtitlesrequest",
                        MEDIA_PLAYBACK_RATE_REQUEST: "mediaplaybackraterequest",
                        MEDIA_RENDITION_REQUEST: "mediarenditionrequest",
                        MEDIA_AUDIO_TRACK_REQUEST: "mediaaudiotrackrequest",
                        MEDIA_SEEK_TO_LIVE_REQUEST: "mediaseektoliverequest",
                        REGISTER_MEDIA_STATE_RECEIVER: "registermediastatereceiver",
                        UNREGISTER_MEDIA_STATE_RECEIVER: "unregistermediastatereceiver"
                    },
                    at = {
                        MEDIA_CHROME_ATTRIBUTES: "mediachromeattributes",
                        MEDIA_CONTROLLER: "mediacontroller"
                    },
                    bt = {
                        MEDIA_AIRPLAY_UNAVAILABLE: "mediaAirplayUnavailable",
                        MEDIA_AUDIO_TRACK_ENABLED: "mediaAudioTrackEnabled",
                        MEDIA_AUDIO_TRACK_LIST: "mediaAudioTrackList",
                        MEDIA_AUDIO_TRACK_UNAVAILABLE: "mediaAudioTrackUnavailable",
                        MEDIA_BUFFERED: "mediaBuffered",
                        MEDIA_CAST_UNAVAILABLE: "mediaCastUnavailable",
                        MEDIA_CHAPTERS_CUES: "mediaChaptersCues",
                        MEDIA_CURRENT_TIME: "mediaCurrentTime",
                        MEDIA_DURATION: "mediaDuration",
                        MEDIA_ENDED: "mediaEnded",
                        MEDIA_ERROR: "mediaError",
                        MEDIA_ERROR_CODE: "mediaErrorCode",
                        MEDIA_ERROR_MESSAGE: "mediaErrorMessage",
                        MEDIA_FULLSCREEN_UNAVAILABLE: "mediaFullscreenUnavailable",
                        MEDIA_HAS_PLAYED: "mediaHasPlayed",
                        MEDIA_HEIGHT: "mediaHeight",
                        MEDIA_IS_AIRPLAYING: "mediaIsAirplaying",
                        MEDIA_IS_CASTING: "mediaIsCasting",
                        MEDIA_IS_FULLSCREEN: "mediaIsFullscreen",
                        MEDIA_IS_PIP: "mediaIsPip",
                        MEDIA_LOADING: "mediaLoading",
                        MEDIA_MUTED: "mediaMuted",
                        MEDIA_PAUSED: "mediaPaused",
                        MEDIA_PIP_UNAVAILABLE: "mediaPipUnavailable",
                        MEDIA_PLAYBACK_RATE: "mediaPlaybackRate",
                        MEDIA_PREVIEW_CHAPTER: "mediaPreviewChapter",
                        MEDIA_PREVIEW_COORDS: "mediaPreviewCoords",
                        MEDIA_PREVIEW_IMAGE: "mediaPreviewImage",
                        MEDIA_PREVIEW_TIME: "mediaPreviewTime",
                        MEDIA_RENDITION_LIST: "mediaRenditionList",
                        MEDIA_RENDITION_SELECTED: "mediaRenditionSelected",
                        MEDIA_RENDITION_UNAVAILABLE: "mediaRenditionUnavailable",
                        MEDIA_SEEKABLE: "mediaSeekable",
                        MEDIA_STREAM_TYPE: "mediaStreamType",
                        MEDIA_SUBTITLES_LIST: "mediaSubtitlesList",
                        MEDIA_SUBTITLES_SHOWING: "mediaSubtitlesShowing",
                        MEDIA_TARGET_LIVE_WINDOW: "mediaTargetLiveWindow",
                        MEDIA_TIME_IS_LIVE: "mediaTimeIsLive",
                        MEDIA_VOLUME: "mediaVolume",
                        MEDIA_VOLUME_LEVEL: "mediaVolumeLevel",
                        MEDIA_VOLUME_UNAVAILABLE: "mediaVolumeUnavailable",
                        MEDIA_WIDTH: "mediaWidth"
                    },
                    Wt = Object.entries(bt),
                    fe = Wt.reduce((v, [T, R]) => (v[T] = R.toLowerCase(), v), {}),
                    Ge = {
                        USER_INACTIVE_CHANGE: "userinactivechange",
                        BREAKPOINTS_CHANGE: "breakpointchange",
                        BREAKPOINTS_COMPUTED: "breakpointscomputed"
                    },
                    B = Wt.reduce((v, [T, R]) => (v[T] = R.toLowerCase(), v), gl({}, Ge)),
                    Be = Object.entries(B).reduce((v, [T, R]) => {
                        const J = fe[T];
                        return J && (v[R] = J), v
                    }, {
                        userinactivechange: "userinactive"
                    }),
                    _ = Object.entries(fe).reduce((v, [T, R]) => {
                        const J = B[T];
                        return J && (v[R] = J), v
                    }, {
                        userinactive: "userinactivechange"
                    }),
                    Ve = {
                        SUBTITLES: "subtitles",
                        CAPTIONS: "captions",
                        DESCRIPTIONS: "descriptions",
                        CHAPTERS: "chapters",
                        METADATA: "metadata"
                    },
                    de = class {
                        addEventListener() {}
                        removeEventListener() {}
                        dispatchEvent() {
                            return !0
                        }
                    },
                    yt = class extends de {},
                    Ir = class extends yt {
                        constructor() {
                            super(...arguments), this.role = null
                        }
                    },
                    ar = class {
                        observe() {}
                        unobserve() {}
                        disconnect() {}
                    },
                    nt = {
                        createElement: function() {
                            return new dr.HTMLElement
                        },
                        createElementNS: function() {
                            return new dr.HTMLElement
                        },
                        addEventListener() {},
                        removeEventListener() {},
                        dispatchEvent(v) {
                            return !1
                        }
                    },
                    dr = {
                        ResizeObserver: ar,
                        document: nt,
                        Node: yt,
                        Element: Ir,
                        HTMLElement: class extends Ir {
                            constructor() {
                                super(...arguments), this.innerHTML = ""
                            }
                            get content() {
                                return new dr.DocumentFragment
                            }
                        },
                        DocumentFragment: class extends de {},
                        customElements: {
                            get: function() {},
                            define: function() {},
                            whenDefined: function() {}
                        },
                        localStorage: {
                            getItem(v) {
                                return null
                            },
                            setItem(v, T) {},
                            removeItem(v) {}
                        },
                        CustomEvent: function() {},
                        getComputedStyle: function() {},
                        navigator: {
                            languages: [],
                            get userAgent() {
                                return ""
                            }
                        },
                        matchMedia(v) {
                            return {
                                matches: !1,
                                media: v
                            }
                        }
                    },
                    ai = typeof window == "undefined" || typeof window.customElements == "undefined",
                    V = Object.keys(dr).every(v => v in globalThis),
                    ce = ai && !V ? dr : globalThis,
                    Pe = ai && !V ? nt : globalThis.document,
                    st = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    ct = (v, T, R) => (st(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Fe = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    ht = (v, T, R, J) => (st(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    Er, Xt, W, Zr, br, ni, Mi, si, ti, oa, Wr, Cr = 1,
                    La = 0,
                    Gr = 1,
                    Kt = {
                        processCallback(v, T, R) {
                            if (R) {
                                for (const [J, ye] of T)
                                    if (J in R) {
                                        const Ye = R[J];
                                        typeof Ye == "boolean" && ye instanceof pe && typeof ye.element[ye.attributeName] == "boolean" ? ye.booleanValue = Ye : typeof Ye == "function" && ye instanceof pe ? ye.element[ye.attributeName] = Ye : ye.value = Ye
                                    }
                            }
                        }
                    },
                    ri = class extends ce.DocumentFragment {
                        constructor(v, T, R = Kt) {
                            var J;
                            super(), Fe(this, Er, void 0), Fe(this, Xt, void 0), this.append(v.content.cloneNode(!0)), ht(this, Er, ki(this)), ht(this, Xt, R), (J = R.createCallback) == null || J.call(R, this, ct(this, Er), T), R.processCallback(this, ct(this, Er), T)
                        }
                        update(v) {
                            ct(this, Xt).processCallback(this, ct(this, Er), v)
                        }
                    };
                Er = new WeakMap, Xt = new WeakMap;
                var ki = (v, T = []) => {
                        let R, J;
                        for (const ye of v.attributes || [])
                            if (ye.value.includes("{{")) {
                                const Ye = new ne;
                                for ([R, J] of Tt(ye.value))
                                    if (!R) Ye.append(J);
                                    else {
                                        const Nt = new pe(v, ye.name, ye.namespaceURI);
                                        Ye.append(Nt), T.push([J, Nt])
                                    }
                                ye.value = Ye.toString()
                            }
                        for (const ye of v.childNodes)
                            if (ye.nodeType === Cr && !(ye instanceof HTMLTemplateElement)) ki(ye, T);
                            else {
                                const Ye = ye.data;
                                if (ye.nodeType === Cr || Ye.includes("{{")) {
                                    const Nt = [];
                                    if (Ye)
                                        for ([R, J] of Tt(Ye))
                                            if (!R) Nt.push(new Text(J));
                                            else {
                                                const jt = new De(v);
                                                Nt.push(jt), T.push([J, jt])
                                            }
                                    else if (ye instanceof HTMLTemplateElement) {
                                        const jt = new ze(v, ye);
                                        Nt.push(jt), T.push([jt.expression, jt])
                                    }
                                    ye.replaceWith(...Nt.flatMap(jt => jt.replacementNodes || [jt]))
                                }
                            }
                        return T
                    },
                    aa = {},
                    Tt = v => {
                        let T = "",
                            R = 0,
                            J = aa[v],
                            ye = 0,
                            Ye;
                        if (J) return J;
                        for (J = []; Ye = v[ye]; ye++) Ye === "{" && v[ye + 1] === "{" && v[ye - 1] !== "\\" && v[ye + 2] && ++R == 1 ? (T && J.push([La, T]), T = "", ye++) : Ye === "}" && v[ye + 1] === "}" && v[ye - 1] !== "\\" && !--R ? (J.push([Gr, T.trim()]), T = "", ye++) : T += Ye || "";
                        return T && J.push([La, (R > 0 ? "{{" : "") + T]), aa[v] = J
                    },
                    ie = 11,
                    j = class {
                        get value() {
                            return ""
                        }
                        set value(v) {}
                        toString() {
                            return this.value
                        }
                    },
                    Z = new WeakMap,
                    ne = class {
                        constructor() {
                            Fe(this, W, [])
                        }[Symbol.iterator]() {
                            return ct(this, W).values()
                        }
                        get length() {
                            return ct(this, W).length
                        }
                        item(v) {
                            return ct(this, W)[v]
                        }
                        append(...v) {
                            for (const T of v) T instanceof pe && Z.set(T, this), ct(this, W).push(T)
                        }
                        toString() {
                            return ct(this, W).join("")
                        }
                    };
                W = new WeakMap;
                var pe = class extends j {
                    constructor(v, T, R) {
                        super(), Fe(this, si), Fe(this, Zr, ""), Fe(this, br, void 0), Fe(this, ni, void 0), Fe(this, Mi, void 0), ht(this, br, v), ht(this, ni, T), ht(this, Mi, R)
                    }
                    get attributeName() {
                        return ct(this, ni)
                    }
                    get attributeNamespace() {
                        return ct(this, Mi)
                    }
                    get element() {
                        return ct(this, br)
                    }
                    get value() {
                        return ct(this, Zr)
                    }
                    set value(v) {
                        ct(this, Zr) !== v && (ht(this, Zr, v), !ct(this, si, ti) || ct(this, si, ti).length === 1 ? v == null ? ct(this, br).removeAttributeNS(ct(this, Mi), ct(this, ni)) : ct(this, br).setAttributeNS(ct(this, Mi), ct(this, ni), v) : ct(this, br).setAttributeNS(ct(this, Mi), ct(this, ni), ct(this, si, ti).toString()))
                    }
                    get booleanValue() {
                        return ct(this, br).hasAttributeNS(ct(this, Mi), ct(this, ni))
                    }
                    set booleanValue(v) {
                        if (!ct(this, si, ti) || ct(this, si, ti).length === 1) this.value = v ? "" : null;
                        else throw new DOMException("Value is not fully templatized")
                    }
                };
                Zr = new WeakMap, br = new WeakMap, ni = new WeakMap, Mi = new WeakMap, si = new WeakSet, ti = function() {
                    return Z.get(this)
                };
                var De = class extends j {
                    constructor(v, T) {
                        super(), Fe(this, oa, void 0), Fe(this, Wr, void 0), ht(this, oa, v), ht(this, Wr, T ? [...T] : [new Text])
                    }
                    get replacementNodes() {
                        return ct(this, Wr)
                    }
                    get parentNode() {
                        return ct(this, oa)
                    }
                    get nextSibling() {
                        return ct(this, Wr)[ct(this, Wr).length - 1].nextSibling
                    }
                    get previousSibling() {
                        return ct(this, Wr)[0].previousSibling
                    }
                    get value() {
                        return ct(this, Wr).map(v => v.textContent).join("")
                    }
                    set value(v) {
                        this.replace(v)
                    }
                    replace(...v) {
                        const T = v.flat().flatMap(R => R == null ? [new Text] : R.forEach ? [...R] : R.nodeType === ie ? [...R.childNodes] : R.nodeType ? [R] : [new Text(R)]);
                        T.length || T.push(new Text), ht(this, Wr, ft(ct(this, Wr)[0].parentNode, ct(this, Wr), T, this.nextSibling))
                    }
                };
                oa = new WeakMap, Wr = new WeakMap;
                var ze = class extends De {
                    constructor(v, T) {
                        const R = T.getAttribute("directive") || T.getAttribute("type");
                        let J = T.getAttribute("expression") || T.getAttribute(R) || "";
                        J.startsWith("{{") && (J = J.trim().slice(2, -2).trim()), super(v), this.expression = J, this.template = T, this.directive = R
                    }
                };

                function ft(v, T, R, J = null) {
                    let ye = 0,
                        Ye, Nt, jt, Xi = R.length,
                        Xr = T.length;
                    for (; ye < Xi && ye < Xr && T[ye] == R[ye];) ye++;
                    for (; ye < Xi && ye < Xr && R[Xi - 1] == T[Xr - 1];) J = R[--Xr, --Xi];
                    if (ye == Xr)
                        for (; ye < Xi;) v.insertBefore(R[ye++], J);
                    if (ye == Xi)
                        for (; ye < Xr;) v.removeChild(T[ye++]);
                    else {
                        for (Ye = T[ye]; ye < Xi;) jt = R[ye++], Nt = Ye ? Ye.nextSibling : J, Ye == jt ? Ye = Nt : ye < Xi && R[ye] == Nt ? (v.replaceChild(jt, Ye), Ye = Nt) : v.insertBefore(jt, Ye);
                        for (; Ye != J;) Nt = Ye.nextSibling, v.removeChild(Ye), Ye = Nt
                    }
                    return R
                }

                function gt(v) {
                    return v == null ? void 0 : v.split(/\s+/).map(qe)
                }

                function qe(v) {
                    if (v) {
                        const [T, R, J] = v.split(":");
                        return {
                            id: T,
                            width: +R,
                            height: +J
                        }
                    }
                }

                function wr(v) {
                    return v == null ? void 0 : v.split(/\s+/).map(kr)
                }

                function kr(v) {
                    if (v) {
                        const [T, R, J, ye] = v.split(":");
                        return {
                            id: T,
                            kind: R,
                            language: J,
                            label: ye
                        }
                    }
                }

                function Ar(v) {
                    return v.replace(/[-_]([a-z])/g, (T, R) => R.toUpperCase())
                }

                function $t(v) {
                    return typeof v != "string" ? !1 : !isNaN(v) && !isNaN(parseFloat(v))
                }
                var hr = {
                        string: v => String(v)
                    },
                    Gi = class {
                        constructor(v) {
                            this.template = v, this.state = void 0
                        }
                    },
                    vt = new WeakMap,
                    oi = new WeakMap,
                    Mt = {
                        partial: (v, T) => {
                            T[v.expression] = new Gi(v.template)
                        },
                        if: (v, T) => {
                            var R;
                            if (Lr(v.expression, T))
                                if (vt.get(v) !== v.template) {
                                    vt.set(v, v.template);
                                    const J = new ri(v.template, T, Ze);
                                    v.replace(J), oi.set(v, J)
                                } else(R = oi.get(v)) == null || R.update(T);
                            else v.replace(""), vt.delete(v), oi.delete(v)
                        }
                    },
                    Ht = Object.keys(Mt),
                    Ze = {
                        processCallback(v, T, R) {
                            var J, ye;
                            if (R)
                                for (const [Ye, Nt] of T) {
                                    if (Nt instanceof ze) {
                                        if (!Nt.directive) {
                                            const Xi = Ht.find(Xr => Nt.template.hasAttribute(Xr));
                                            Xi && (Nt.directive = Xi, Nt.expression = Nt.template.getAttribute(Xi))
                                        }(J = Mt[Nt.directive]) == null || J.call(Mt, Nt, R);
                                        continue
                                    }
                                    let jt = Lr(Ye, R);
                                    if (jt instanceof Gi) {
                                        vt.get(Nt) !== jt.template ? (vt.set(Nt, jt.template), jt = new ri(jt.template, jt.state, Ze), Nt.value = jt, oi.set(Nt, jt)) : (ye = oi.get(Nt)) == null || ye.update(jt.state);
                                        continue
                                    }
                                    jt ? (Nt instanceof pe && Nt.attributeName.startsWith("aria-") && (jt = String(jt)), Nt instanceof pe ? typeof jt == "boolean" ? Nt.booleanValue = jt : typeof jt == "function" ? Nt.element[Nt.attributeName] = jt : Nt.value = jt : (Nt.value = jt, vt.delete(Nt), oi.delete(Nt))) : Nt instanceof pe ? Nt.value = void 0 : (Nt.value = void 0, vt.delete(Nt), oi.delete(Nt))
                                }
                        }
                    },
                    sr = {
                        "!": v => !v,
                        "!!": v => !!v,
                        "==": (v, T) => v == T,
                        "!=": (v, T) => v != T,
                        ">": (v, T) => v > T,
                        ">=": (v, T) => v >= T,
                        "<": (v, T) => v < T,
                        "<=": (v, T) => v <= T,
                        "??": (v, T) => v != null ? v : T,
                        "|": (v, T) => {
                            var R;
                            return (R = hr[T]) == null ? void 0 : R.call(hr, v)
                        }
                    };

                function mr(v) {
                    return yi(v, {
                        boolean: /true|false/,
                        number: /-?\d+\.?\d*/,
                        string: /(["'])((?:\\.|[^\\])*?)\1/,
                        operator: /[!=><][=!]?|\?\?|\|/,
                        ws: /\s+/,
                        param: /[$a-z_][$\w]*/i
                    }).filter(({
                        type: T
                    }) => T !== "ws")
                }

                function Lr(v, T = {}) {
                    var R, J, ye, Ye, Nt, jt, Xi;
                    const Xr = mr(v);
                    if (Xr.length === 0 || Xr.some(({
                            type: nn
                        }) => !nn)) return Yt(v);
                    if (((R = Xr[0]) == null ? void 0 : R.token) === ">") {
                        const nn = T[(J = Xr[1]) == null ? void 0 : J.token];
                        if (!nn) return Yt(v);
                        const Mn = gl({}, T);
                        nn.state = Mn;
                        const Tn = Xr.slice(2);
                        for (let jn = 0; jn < Tn.length; jn += 3) {
                            const Il = (ye = Tn[jn]) == null ? void 0 : ye.token,
                                wo = (Ye = Tn[jn + 1]) == null ? void 0 : Ye.token,
                                ru = (Nt = Tn[jn + 2]) == null ? void 0 : Nt.token;
                            Il && wo === "=" && (Mn[Il] = Ut(ru, T))
                        }
                        return nn
                    }
                    if (Xr.length === 1) return oe(Xr[0]) ? Ut(Xr[0].token, T) : Yt(v);
                    if (Xr.length === 2) {
                        const nn = (jt = Xr[0]) == null ? void 0 : jt.token,
                            Mn = sr[nn];
                        if (!Mn || !oe(Xr[1])) return Yt(v);
                        const Tn = Ut(Xr[1].token, T);
                        return Mn(Tn)
                    }
                    if (Xr.length === 3) {
                        const nn = (Xi = Xr[1]) == null ? void 0 : Xi.token,
                            Mn = sr[nn];
                        if (!Mn || !oe(Xr[0]) || !oe(Xr[2])) return Yt(v);
                        const Tn = Ut(Xr[0].token, T);
                        if (nn === "|") return Mn(Tn, Xr[2].token);
                        const jn = Ut(Xr[2].token, T);
                        return Mn(Tn, jn)
                    }
                }

                function Yt(v) {
                    return console.warn(`Warning: invalid expression \`${v}\``), !1
                }

                function oe({
                    type: v
                }) {
                    return ["number", "boolean", "string", "param"].includes(v)
                }

                function Ut(v, T) {
                    const R = v[0],
                        J = v.slice(-1);
                    return v === "true" || v === "false" ? v === "true" : R === J && ["'", '"'].includes(R) ? v.slice(1, -1) : $t(v) ? parseFloat(v) : T[v]
                }

                function yi(v, T) {
                    let R, J, ye;
                    const Ye = [];
                    for (; v;) {
                        ye = null, R = v.length;
                        for (const Nt in T) J = T[Nt].exec(v), J && J.index < R && (ye = {
                            token: J[0],
                            type: Nt,
                            matches: J.slice(1)
                        }, R = J.index);
                        R && Ye.push({
                            token: v.substr(0, R),
                            type: void 0
                        }), ye && Ye.push(ye), v = v.substr(R + (ye ? ye.token.length : 0))
                    }
                    return Ye
                }
                var Ke = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    ge = (v, T, R) => (Ke(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Et = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    vr = (v, T, R, J) => (Ke(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    tr = (v, T, R) => (Ke(v, T, "access private method"), R),
                    Tr, Vt, Si, Qi, Ma, Ti, Ri, Lt = {
                        mediatargetlivewindow: "targetlivewindow",
                        mediastreamtype: "streamtype"
                    },
                    _n = Pe.createElement("template");
                _n.innerHTML = `
  <style>
    :host {
      display: inline-block;
      line-height: 0;
    }

    media-controller {
      width: 100%;
      height: 100%;
    }

    media-captions-button:not([mediasubtitleslist]),
    media-captions-menu:not([mediasubtitleslist]),
    media-captions-menu-button:not([mediasubtitleslist]),
    media-audio-track-menu[mediaaudiotrackunavailable],
    media-audio-track-menu-button[mediaaudiotrackunavailable],
    media-rendition-menu[mediarenditionunavailable],
    media-rendition-menu-button[mediarenditionunavailable],
    media-volume-range[mediavolumeunavailable],
    media-airplay-button[mediaairplayunavailable],
    media-fullscreen-button[mediafullscreenunavailable],
    media-cast-button[mediacastunavailable],
    media-pip-button[mediapipunavailable] {
      display: none;
    }
  </style>
`;
                var Qa = class extends ce.HTMLElement {
                    constructor() {
                        super(), Et(this, Qi), Et(this, Ti), Et(this, Tr, void 0), Et(this, Vt, void 0), Et(this, Si, void 0), this.shadowRoot ? this.renderRoot = this.shadowRoot : (this.renderRoot = this.attachShadow({
                            mode: "open"
                        }), this.createRenderer());
                        const v = new MutationObserver(T => {
                            var R;
                            this.mediaController && !((R = this.mediaController) != null && R.breakpointsComputed) || T.some(J => {
                                const ye = J.target;
                                return ye === this ? !0 : ye.localName !== "media-controller" ? !1 : !!(Lt[J.attributeName] || J.attributeName.startsWith("breakpoint"))
                            }) && this.render()
                        });
                        v.observe(this, {
                            attributes: !0
                        }), v.observe(this.renderRoot, {
                            attributes: !0,
                            subtree: !0
                        }), this.addEventListener(B.BREAKPOINTS_COMPUTED, this.render), tr(this, Qi, Ma).call(this, "template")
                    }
                    get mediaController() {
                        return this.renderRoot.querySelector("media-controller")
                    }
                    get template() {
                        var v;
                        return (v = ge(this, Tr)) != null ? v : this.constructor.template
                    }
                    set template(v) {
                        vr(this, Si, null), vr(this, Tr, v), this.createRenderer()
                    }
                    get props() {
                        var v, T, R;
                        const J = [...Array.from((T = (v = this.mediaController) == null ? void 0 : v.attributes) != null ? T : []).filter(({
                                name: Ye
                            }) => Lt[Ye] || Ye.startsWith("breakpoint")), ...Array.from(this.attributes)],
                            ye = {};
                        for (const Ye of J) {
                            const Nt = (R = Lt[Ye.name]) != null ? R : Ar(Ye.name);
                            let {
                                value: jt
                            } = Ye;
                            jt != null ? ($t(jt) && (jt = parseFloat(jt)), ye[Nt] = jt === "" ? !0 : jt) : ye[Nt] = !1
                        }
                        return ye
                    }
                    attributeChangedCallback(v, T, R) {
                        v === "template" && T != R && tr(this, Ti, Ri).call(this)
                    }
                    connectedCallback() {
                        tr(this, Ti, Ri).call(this)
                    }
                    createRenderer() {
                        this.template && this.template !== ge(this, Vt) && (vr(this, Vt, this.template), this.renderer = new ri(this.template, this.props, this.constructor.processor), this.renderRoot.textContent = "", this.renderRoot.append(_n.content.cloneNode(!0), this.renderer))
                    }
                    render() {
                        var v;
                        (v = this.renderer) == null || v.update(this.props)
                    }
                };
                Tr = new WeakMap, Vt = new WeakMap, Si = new WeakMap, Qi = new WeakSet, Ma = function(v) {
                    if (Object.prototype.hasOwnProperty.call(this, v)) {
                        const T = this[v];
                        delete this[v], this[v] = T
                    }
                }, Ti = new WeakSet, Ri = function() {
                    var v;
                    const T = this.getAttribute("template");
                    if (!T || T === ge(this, Si)) return;
                    const R = this.getRootNode(),
                        J = (v = R == null ? void 0 : R.getElementById) == null ? void 0 : v.call(R, T);
                    if (J) {
                        vr(this, Si, T), vr(this, Tr, J), this.createRenderer();
                        return
                    }
                    Hn(T) && (vr(this, Si, T), Pi(T).then(ye => {
                        const Ye = Pe.createElement("template");
                        Ye.innerHTML = ye, vr(this, Tr, Ye), this.createRenderer()
                    }).catch(console.error))
                }, Qa.observedAttributes = ["template"], Qa.processor = Ze;

                function Hn(v) {
                    if (!/^(\/|\.\/|https?:\/\/)/.test(v)) return !1;
                    const T = /^https?:\/\//.test(v) ? void 0 : location.origin;
                    try {
                        new URL(v, T)
                    } catch (R) {
                        return !1
                    }
                    return !0
                }

                function Pi(v) {
                    return Xf(this, null, function*() {
                        const T = yield fetch(v);
                        if (T.status !== 200) throw new Error(`Failed to load resource: the server responded with a status of ${T.status}`);
                        return T.text()
                    })
                }
                ce.customElements.get("media-theme") || ce.customElements.define("media-theme", Qa);

                function ln({
                    anchor: v,
                    floating: T,
                    placement: R
                }) {
                    const J = Ja({
                            anchor: v,
                            floating: T
                        }),
                        {
                            x: ye,
                            y: Ye
                        } = Nr(J, R);
                    return {
                        x: ye,
                        y: Ye
                    }
                }

                function Ja({
                    anchor: v,
                    floating: T
                }) {
                    return {
                        anchor: Qr(v, T.offsetParent),
                        floating: {
                            x: 0,
                            y: 0,
                            width: T.offsetWidth,
                            height: T.offsetHeight
                        }
                    }
                }

                function Qr(v, T) {
                    var R;
                    const J = v.getBoundingClientRect(),
                        ye = (R = T == null ? void 0 : T.getBoundingClientRect()) != null ? R : {
                            x: 0,
                            y: 0
                        };
                    return {
                        x: J.x - ye.x,
                        y: J.y - ye.y,
                        width: J.width,
                        height: J.height
                    }
                }

                function Nr({
                    anchor: v,
                    floating: T
                }, R) {
                    const J = Vr(R) === "x" ? "y" : "x",
                        ye = J === "y" ? "height" : "width",
                        Ye = xr(R),
                        Nt = v.x + v.width / 2 - T.width / 2,
                        jt = v.y + v.height / 2 - T.height / 2,
                        Xi = v[ye] / 2 - T[ye] / 2;
                    let Xr;
                    switch (Ye) {
                        case "top":
                            Xr = {
                                x: Nt,
                                y: v.y - T.height
                            };
                            break;
                        case "bottom":
                            Xr = {
                                x: Nt,
                                y: v.y + v.height
                            };
                            break;
                        case "right":
                            Xr = {
                                x: v.x + v.width,
                                y: jt
                            };
                            break;
                        case "left":
                            Xr = {
                                x: v.x - T.width,
                                y: jt
                            };
                            break;
                        default:
                            Xr = {
                                x: v.x,
                                y: v.y
                            }
                    }
                    switch (R.split("-")[1]) {
                        case "start":
                            Xr[J] -= Xi;
                            break;
                        case "end":
                            Xr[J] += Xi;
                            break
                    }
                    return Xr
                }

                function xr(v) {
                    return v.split("-")[0]
                }

                function Vr(v) {
                    return ["top", "bottom"].includes(xr(v)) ? "y" : "x"
                }
                var li = new WeakMap,
                    mi = v => {
                        let T = li.get(v);
                        return T || li.set(v, T = new Set), T
                    },
                    Vn = new ce.ResizeObserver(v => {
                        for (const T of v)
                            for (const R of mi(T.target)) R(T)
                    });

                function vi(v, T) {
                    mi(v).add(T), Vn.observe(v)
                }

                function la(v, T) {
                    const R = mi(v);
                    R.delete(T), R.size || Vn.unobserve(v)
                }
                var Ia = class extends Event {
                        constructor(J) {
                            var ye = J,
                                {
                                    action: v = "auto",
                                    relatedTarget: T
                                } = ye,
                                R = zf(ye, ["action", "relatedTarget"]);
                            super("invoke", R), this.action = v, this.relatedTarget = T
                        }
                    },
                    Oi = class extends Event {
                        constructor(J) {
                            var ye = J,
                                {
                                    newState: v,
                                    oldState: T
                                } = ye,
                                R = zf(ye, ["newState", "oldState"]);
                            super("toggle", R), this.newState = v, this.oldState = T
                        }
                    };

                function Ki(v) {
                    var T;
                    return (T = un(v)) != null ? T : Sn(v, "media-controller")
                }

                function un(v) {
                    var T;
                    const {
                        MEDIA_CONTROLLER: R
                    } = at, J = v.getAttribute(R);
                    if (J) return (T = xi(v)) == null ? void 0 : T.getElementById(J)
                }
                var Ha = (v, T) => !v || !T ? !1 : v != null && v.contains(T) ? !0 : Ha(v, T.getRootNode().host),
                    Sn = (v, T) => {
                        if (!v) return null;
                        const R = v.closest(T);
                        return R || Sn(v.getRootNode().host, T)
                    };

                function Yi(v = document) {
                    var T;
                    const R = v == null ? void 0 : v.activeElement;
                    return R ? (T = Yi(R.shadowRoot)) != null ? T : R : null
                }

                function xi(v) {
                    var T;
                    const R = (T = v == null ? void 0 : v.getRootNode) == null ? void 0 : T.call(v);
                    return R instanceof ShadowRoot || R instanceof Document ? R : null
                }

                function Li(v, T) {
                    const R = _a(v, J => J === T);
                    return R || gn(v, T)
                }

                function _a(v, T) {
                    var R, J;
                    let ye;
                    for (ye of (R = v.querySelectorAll("style:not([media])")) != null ? R : []) {
                        let Ye;
                        try {
                            Ye = (J = ye.sheet) == null ? void 0 : J.cssRules
                        } catch (Nt) {
                            continue
                        }
                        for (const Nt of Ye != null ? Ye : [])
                            if (T(Nt.selectorText)) return Nt
                    }
                }

                function gn(v, T) {
                    var R, J;
                    const ye = (R = v.querySelectorAll("style:not([media])")) != null ? R : [],
                        Ye = ye == null ? void 0 : ye[ye.length - 1];
                    return Ye != null && Ye.sheet ? (Ye == null || Ye.sheet.insertRule(`${T}{}`, Ye.sheet.cssRules.length), (J = Ye.sheet.cssRules) == null ? void 0 : J[Ye.sheet.cssRules.length - 1]) : (console.warn("Media Chrome: No style sheet found on style tag of", v), {
                        style: {
                            setProperty: () => {},
                            removeProperty: () => "",
                            getPropertyValue: () => ""
                        }
                    })
                }

                function Ji(v, T, R = Number.NaN) {
                    const J = v.getAttribute(T);
                    return J != null ? +J : R
                }

                function Ni(v, T, R) {
                    const J = +R;
                    if (R == null || Number.isNaN(J)) {
                        v.hasAttribute(T) && v.removeAttribute(T);
                        return
                    }
                    Ji(v, T, void 0) !== J && v.setAttribute(T, `${J}`)
                }

                function ea(v, T) {
                    return v.hasAttribute(T)
                }

                function ma(v, T, R) {
                    if (R == null) {
                        v.hasAttribute(T) && v.removeAttribute(T);
                        return
                    }
                    ea(v, T) != R && v.toggleAttribute(T, R)
                }

                function Sa(v, T, R = null) {
                    var J;
                    return (J = v.getAttribute(T)) != null ? J : R
                }

                function Ca(v, T, R) {
                    if (R == null) {
                        v.hasAttribute(T) && v.removeAttribute(T);
                        return
                    }
                    const J = `${R}`;
                    Sa(v, T, void 0) !== J && v.setAttribute(T, J)
                }
                var en = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    Pr = (v, T, R) => (en(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    qr = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    va = (v, T, R, J) => (en(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    Kr = (v, T, R) => (en(v, T, "access private method"), R),
                    ta, ra, Vi, Da, tn, ia, Pa, or, qa, En, pa, Va, kn, Zn, lt, Oa, rn, di, D, C, H, re, se, Ce, He, Qe, ke, We, Xe, Ot, qt, fr, rr, y, F, z, be, pt, Gt, pr, nr, Zt, wi, qi;

                function _t({
                    type: v,
                    text: T,
                    value: R,
                    checked: J
                }) {
                    const ye = Pe.createElement("media-chrome-menu-item");
                    ye.type = v != null ? v : "", ye.part.add("menu-item"), v && ye.part.add(v), ye.value = R, ye.checked = J;
                    const Ye = Pe.createElement("span");
                    return Ye.textContent = T, ye.append(Ye), ye
                }

                function Qt(v, T) {
                    let R = v.querySelector(`:scope > [slot="${T}"]`);
                    if ((R == null ? void 0 : R.nodeName) == "SLOT" && (R = R.assignedElements({
                            flatten: !0
                        })[0]), R) return R = R.cloneNode(!0), R;
                    const J = v.shadowRoot.querySelector(`[name="${T}"] > svg`);
                    return J ? J.cloneNode(!0) : ""
                }
                var yr = Pe.createElement("template");
                yr.innerHTML = `
  <style>
    :host {
      font: var(--media-font,
        var(--media-font-weight, normal)
        var(--media-font-size, 14px) /
        var(--media-text-content-height, var(--media-control-height, 24px))
        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));
      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
      --_menu-bg: rgb(20 20 30 / .8);
      background: var(--media-menu-background, var(--media-control-background, var(--media-secondary-color, var(--_menu-bg))));
      border-radius: var(--media-menu-border-radius);
      border: var(--media-menu-border, none);
      display: var(--media-menu-display, inline-flex);
      transition: var(--media-menu-transition-in,
        visibility 0s,
        opacity .2s ease-out,
        transform .15s ease-out,
        left .2s ease-in-out,
        min-width .2s ease-in-out,
        min-height .2s ease-in-out
      ) !important;
      
      visibility: var(--media-menu-visibility, visible);
      opacity: var(--media-menu-opacity, 1);
      max-height: var(--media-menu-max-height, var(--_menu-max-height, 300px));
      transform: var(--media-menu-transform-in, translateY(0) scale(1));
      flex-direction: column;
      
      min-height: 0;
      position: relative;
      bottom: var(--_menu-bottom);
      box-sizing: border-box;
    } 

    @-moz-document url-prefix() {
      :host{
        --_menu-bg: rgb(20 20 30);
      }
    }

    :host([hidden]) {
      transition: var(--media-menu-transition-out,
        visibility .15s ease-in,
        opacity .15s ease-in,
        transform .15s ease-in
      ) !important;
      visibility: var(--media-menu-hidden-visibility, hidden);
      opacity: var(--media-menu-hidden-opacity, 0);
      max-height: var(--media-menu-hidden-max-height,
        var(--media-menu-max-height, var(--_menu-max-height, 300px)));
      transform: var(--media-menu-transform-out, translateY(2px) scale(.99));
      pointer-events: none;
    }

    :host([slot="submenu"]) {
      background: none;
      width: 100%;
      min-height: 100%;
      position: absolute;
      bottom: 0;
      right: -100%;
    }

    #container {
      display: flex;
      flex-direction: column;
      min-height: 0;
      transition: transform .2s ease-out;
      transform: translate(0, 0);
    }

    #container.has-expanded {
      transition: transform .2s ease-in;
      transform: translate(-100%, 0);
    }

    button {
      background: none;
      color: inherit;
      border: none;
      padding: 0;
      font: inherit;
      outline: inherit;
      display: inline-flex;
      align-items: center;
    }

    slot[name="header"][hidden] {
      display: none;
    }

    slot[name="header"] > *,
    slot[name="header"]::slotted(*) {
      padding: .4em .7em;
      border-bottom: 1px solid rgb(255 255 255 / .25);
      cursor: var(--media-cursor, default);
    }

    slot[name="header"] > button[part~="back"],
    slot[name="header"]::slotted(button[part~="back"]) {
      cursor: var(--media-cursor, pointer);
    }

    svg[part~="back"] {
      height: var(--media-menu-icon-height, var(--media-control-height, 24px));
      fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));
      display: block;
      margin-right: .5ch;
    }

    slot:not([name]) {
      gap: var(--media-menu-gap);
      flex-direction: var(--media-menu-flex-direction, column);
      overflow: var(--media-menu-overflow, hidden auto);
      display: flex;
      min-height: 0;
    }

    :host([role="menu"]) slot:not([name]) {
      padding-block: .4em;
    }

    slot:not([name])::slotted([role="menu"]) {
      background: none;
    }

    media-chrome-menu-item > span {
      margin-right: .5ch;
      max-width: var(--media-menu-item-max-width);
      text-overflow: ellipsis;
      overflow: hidden;
    }
  </style>
  <style id="layout-row" media="width:0">

    slot[name="header"] > *,
    slot[name="header"]::slotted(*) {
      padding: .4em .5em;
    }

    slot:not([name]) {
      gap: var(--media-menu-gap, .25em);
      flex-direction: var(--media-menu-flex-direction, row);
      padding-inline: .5em;
    }

    media-chrome-menu-item {
      padding: .3em .5em;
    }

    media-chrome-menu-item[aria-checked="true"] {
      background: var(--media-menu-item-checked-background, rgb(255 255 255 / .2));
    }

    
    media-chrome-menu-item::part(checked-indicator) {
      display: var(--media-menu-item-checked-indicator-display, none);
    }
  </style>
  <div id="container">
    <slot name="header" hidden>
      <button part="back button" aria-label="Back to previous menu">
        <slot name="back-icon">
          <svg aria-hidden="true" viewBox="0 0 20 24" part="back indicator">
            <path d="m11.88 17.585.742-.669-4.2-4.665 4.2-4.666-.743-.669-4.803 5.335 4.803 5.334Z"/>
          </svg>
        </slot>
        <slot name="title"></slot>
      </button>
    </slot>
    <slot></slot>
  </div>
  <slot name="checked-indicator" hidden></slot>
`;
                var gi = {
                        STYLE: "style",
                        HIDDEN: "hidden",
                        DISABLED: "disabled",
                        ANCHOR: "anchor"
                    },
                    $i = class extends ce.HTMLElement {
                        constructor() {
                            super(), qr(this, or), qr(this, pa), qr(this, kn), qr(this, lt), qr(this, rn), qr(this, H), qr(this, se), qr(this, He), qr(this, ke), qr(this, Xe), qr(this, qt), qr(this, rr), qr(this, F), qr(this, be), qr(this, Gt), qr(this, nr), qr(this, wi), qr(this, ta, null), qr(this, ra, null), qr(this, Vi, null), qr(this, Da, new Set), qr(this, tn, void 0), qr(this, ia, !1), qr(this, Pa, null), qr(this, En, () => {
                                const v = Pr(this, Da),
                                    T = new Set(this.items);
                                for (const R of v) T.has(R) || this.dispatchEvent(new CustomEvent("removemenuitem", {
                                    detail: R
                                }));
                                for (const R of T) v.has(R) || this.dispatchEvent(new CustomEvent("addmenuitem", {
                                    detail: R
                                }));
                                va(this, Da, T)
                            }), qr(this, D, () => {
                                Kr(this, H, re).call(this), Kr(this, se, Ce).call(this, !1)
                            }), qr(this, C, () => {
                                Kr(this, H, re).call(this)
                            }), this.shadowRoot || (this.attachShadow({
                                mode: "open"
                            }), this.nativeEl = this.constructor.template.content.cloneNode(!0), this.shadowRoot.append(this.nativeEl)), this.container = this.shadowRoot.querySelector("#container"), this.defaultSlot = this.shadowRoot.querySelector("slot:not([name])"), this.shadowRoot.addEventListener("slotchange", this), va(this, tn, new MutationObserver(Pr(this, En))), Pr(this, tn).observe(this.defaultSlot, {
                                childList: !0
                            })
                        }
                        static get observedAttributes() {
                            return [gi.DISABLED, gi.HIDDEN, gi.STYLE, gi.ANCHOR, at.MEDIA_CONTROLLER]
                        }
                        static formatMenuItemText(v, T) {
                            return v
                        }
                        enable() {
                            this.addEventListener("click", this), this.addEventListener("focusout", this), this.addEventListener("keydown", this), this.addEventListener("invoke", this), this.addEventListener("toggle", this)
                        }
                        disable() {
                            this.removeEventListener("click", this), this.removeEventListener("focusout", this), this.removeEventListener("keyup", this), this.removeEventListener("invoke", this), this.removeEventListener("toggle", this)
                        }
                        handleEvent(v) {
                            switch (v.type) {
                                case "slotchange":
                                    Kr(this, or, qa).call(this, v);
                                    break;
                                case "invoke":
                                    Kr(this, kn, Zn).call(this, v);
                                    break;
                                case "click":
                                    Kr(this, He, Qe).call(this, v);
                                    break;
                                case "toggle":
                                    Kr(this, Xe, Ot).call(this, v);
                                    break;
                                case "focusout":
                                    Kr(this, rr, y).call(this, v);
                                    break;
                                case "keydown":
                                    Kr(this, F, z).call(this, v);
                                    break
                            }
                        }
                        connectedCallback() {
                            var v, T;
                            va(this, Pa, gn(this.shadowRoot, ":host")), Kr(this, pa, Va).call(this), this.hasAttribute("disabled") || this.enable(), this.role || (this.role = "menu"), va(this, ta, un(this)), (T = (v = Pr(this, ta)) == null ? void 0 : v.associateElement) == null || T.call(v, this), this.hidden || (vi(ua(this), Pr(this, D)), vi(this, Pr(this, C)))
                        }
                        disconnectedCallback() {
                            var v, T;
                            la(ua(this), Pr(this, D)), la(this, Pr(this, C)), this.disable(), (T = (v = Pr(this, ta)) == null ? void 0 : v.unassociateElement) == null || T.call(v, this), va(this, ta, null)
                        }
                        attributeChangedCallback(v, T, R) {
                            var J, ye, Ye, Nt;
                            v === gi.HIDDEN && R !== T ? (Pr(this, ia) || va(this, ia, !0), this.hidden ? Kr(this, rn, di).call(this) : Kr(this, lt, Oa).call(this), this.dispatchEvent(new Oi({
                                oldState: this.hidden ? "open" : "closed",
                                newState: this.hidden ? "closed" : "open",
                                bubbles: !0
                            }))) : v === at.MEDIA_CONTROLLER ? (T && ((ye = (J = Pr(this, ta)) == null ? void 0 : J.unassociateElement) == null || ye.call(J, this), va(this, ta, null)), R && this.isConnected && (va(this, ta, un(this)), (Nt = (Ye = Pr(this, ta)) == null ? void 0 : Ye.associateElement) == null || Nt.call(Ye, this))) : v === gi.DISABLED && R !== T ? R == null ? this.enable() : this.disable() : v === gi.STYLE && R !== T && Kr(this, pa, Va).call(this)
                        }
                        formatMenuItemText(v, T) {
                            return this.constructor.formatMenuItemText(v, T)
                        }
                        get anchor() {
                            return this.getAttribute("anchor")
                        }
                        set anchor(v) {
                            this.setAttribute("anchor", `${v}`)
                        }
                        get anchorElement() {
                            var v;
                            return this.anchor ? (v = xi(this)) == null ? void 0 : v.querySelector(`#${this.anchor}`) : null
                        }
                        get items() {
                            return this.defaultSlot.assignedElements({
                                flatten: !0
                            }).filter(dn)
                        }
                        get radioGroupItems() {
                            return this.items.filter(v => v.role === "menuitemradio")
                        }
                        get checkedItems() {
                            return this.items.filter(v => v.checked)
                        }
                        get value() {
                            var v, T;
                            return (T = (v = this.checkedItems[0]) == null ? void 0 : v.value) != null ? T : ""
                        }
                        set value(v) {
                            const T = this.items.find(R => R.value === v);
                            T && Kr(this, wi, qi).call(this, T)
                        }
                        focus() {
                            if (va(this, ra, Yi()), this.items.length) {
                                Kr(this, nr, Zt).call(this, this.items[0]), this.items[0].focus();
                                return
                            }
                            const v = this.querySelector('[autofocus], [tabindex]:not([tabindex="-1"]), [role="menu"]');
                            v == null || v.focus()
                        }
                        handleSelect(v) {
                            var T;
                            const R = Kr(this, be, pt).call(this, v);
                            R && (Kr(this, wi, qi).call(this, R, R.type === "checkbox"), Pr(this, Vi) && !this.hidden && ((T = Pr(this, ra)) == null || T.focus(), this.hidden = !0))
                        }
                        get keysUsed() {
                            return ["Enter", "Escape", "Tab", " ", "ArrowDown", "ArrowUp", "Home", "End"]
                        }
                        handleMove(v) {
                            var T, R;
                            const {
                                key: J
                            } = v, ye = this.items, Ye = (R = (T = Kr(this, be, pt).call(this, v)) != null ? T : Kr(this, Gt, pr).call(this)) != null ? R : ye[0], Nt = ye.indexOf(Ye);
                            let jt = Math.max(0, Nt);
                            J === "ArrowDown" ? jt++ : J === "ArrowUp" ? jt-- : v.key === "Home" ? jt = 0 : v.key === "End" && (jt = ye.length - 1), jt < 0 && (jt = ye.length - 1), jt > ye.length - 1 && (jt = 0), Kr(this, nr, Zt).call(this, ye[jt]), ye[jt].focus()
                        }
                    };
                ta = new WeakMap, ra = new WeakMap, Vi = new WeakMap, Da = new WeakMap, tn = new WeakMap, ia = new WeakMap, Pa = new WeakMap, or = new WeakSet, qa = function(v) {
                    const T = v.target;
                    for (const R of T.assignedNodes({
                            flatten: !0
                        })) R.nodeType === 3 && R.textContent.trim() === "" && R.remove();
                    if (["header", "title"].includes(T.name)) {
                        const R = this.shadowRoot.querySelector('slot[name="header"]');
                        R.hidden = T.assignedNodes().length === 0
                    }
                    T.name || Pr(this, En).call(this)
                }, En = new WeakMap, pa = new WeakSet, Va = function() {
                    var v;
                    const T = this.shadowRoot.querySelector("#layout-row"),
                        R = (v = getComputedStyle(this).getPropertyValue("--media-menu-layout")) == null ? void 0 : v.trim();
                    T.setAttribute("media", R === "row" ? "" : "width:0")
                }, kn = new WeakSet, Zn = function(v) {
                    va(this, Vi, v.relatedTarget), Ha(this, v.relatedTarget) || (this.hidden = !this.hidden)
                }, lt = new WeakSet, Oa = function() {
                    var v;
                    (v = Pr(this, Vi)) == null || v.setAttribute("aria-expanded", "true"), this.addEventListener("transitionend", () => this.focus(), {
                        once: !0
                    }), vi(ua(this), Pr(this, D)), vi(this, Pr(this, C))
                }, rn = new WeakSet, di = function() {
                    var v;
                    (v = Pr(this, Vi)) == null || v.setAttribute("aria-expanded", "false"), la(ua(this), Pr(this, D)), la(this, Pr(this, C))
                }, D = new WeakMap, C = new WeakMap, H = new WeakSet, re = function(v) {
                    if (this.hasAttribute("mediacontroller") && !this.anchor || this.hidden || !this.anchorElement) return;
                    const {
                        x: T,
                        y: R
                    } = ln({
                        anchor: this.anchorElement,
                        floating: this,
                        placement: "top-start"
                    });
                    v != null || (v = this.offsetWidth);
                    const ye = ua(this).getBoundingClientRect(),
                        Ye = ye.width - T - v,
                        Nt = ye.height - R - this.offsetHeight,
                        {
                            style: jt
                        } = Pr(this, Pa);
                    jt.setProperty("position", "absolute"), jt.setProperty("right", `${Math.max(0,Ye)}px`), jt.setProperty("--_menu-bottom", `${Nt}px`);
                    const Xi = getComputedStyle(this),
                        nn = jt.getPropertyValue("--_menu-bottom") === Xi.bottom ? Nt : parseFloat(Xi.bottom),
                        Mn = ye.height - nn - parseFloat(Xi.marginBottom);
                    this.style.setProperty("--_menu-max-height", `${Mn}px`)
                }, se = new WeakSet, Ce = function(v) {
                    const T = this.querySelector('[role="menuitem"][aria-haspopup][aria-expanded="true"]'),
                        R = T == null ? void 0 : T.querySelector('[role="menu"]'),
                        {
                            style: J
                        } = Pr(this, Pa);
                    if (v || J.setProperty("--media-menu-transition-in", "none"), R) {
                        const ye = R.offsetHeight,
                            Ye = Math.max(R.offsetWidth, T.offsetWidth);
                        this.style.setProperty("min-width", `${Ye}px`), this.style.setProperty("min-height", `${ye}px`), Kr(this, H, re).call(this, Ye)
                    } else this.style.removeProperty("min-width"), this.style.removeProperty("min-height"), Kr(this, H, re).call(this);
                    J.removeProperty("--media-menu-transition-in")
                }, He = new WeakSet, Qe = function(v) {
                    var T;
                    if (v.stopPropagation(), v.composedPath().includes(Pr(this, ke, We))) {
                        (T = Pr(this, ra)) == null || T.focus(), this.hidden = !0;
                        return
                    }
                    const R = Kr(this, be, pt).call(this, v);
                    !R || R.hasAttribute("disabled") || (Kr(this, nr, Zt).call(this, R), this.handleSelect(v))
                }, ke = new WeakSet, We = function() {
                    var v;
                    return (v = this.shadowRoot.querySelector('slot[name="header"]').assignedElements({
                        flatten: !0
                    })) == null ? void 0 : v.find(R => R.matches('button[part~="back"]'))
                }, Xe = new WeakSet, Ot = function(v) {
                    if (v.target === this) return;
                    Kr(this, qt, fr).call(this);
                    const T = Array.from(this.querySelectorAll('[role="menuitem"][aria-haspopup]'));
                    for (const R of T) R.invokeTargetElement != v.target && v.newState == "open" && R.getAttribute("aria-expanded") == "true" && !R.invokeTargetElement.hidden && R.invokeTargetElement.dispatchEvent(new Ia({
                        relatedTarget: R
                    }));
                    for (const R of T) R.setAttribute("aria-expanded", `${!R.submenuElement.hidden}`);
                    Kr(this, se, Ce).call(this, !0)
                }, qt = new WeakSet, fr = function() {
                    const T = this.querySelector('[role="menuitem"] > [role="menu"]:not([hidden])');
                    this.container.classList.toggle("has-expanded", !!T)
                }, rr = new WeakSet, y = function(v) {
                    var T;
                    Ha(this, v.relatedTarget) || (Pr(this, ia) && ((T = Pr(this, ra)) == null || T.focus()), Pr(this, Vi) && Pr(this, Vi) !== v.relatedTarget && !this.hidden && (this.hidden = !0))
                }, F = new WeakSet, z = function(v) {
                    var T, R, J, ye, Ye;
                    const {
                        key: Nt,
                        ctrlKey: jt,
                        altKey: Xi,
                        metaKey: Xr
                    } = v;
                    if (!(jt || Xi || Xr) && this.keysUsed.includes(Nt))
                        if (v.preventDefault(), v.stopPropagation(), Nt === "Tab") {
                            if (Pr(this, ia)) {
                                this.hidden = !0;
                                return
                            }
                            v.shiftKey ? (R = (T = this.previousElementSibling) == null ? void 0 : T.focus) == null || R.call(T) : (ye = (J = this.nextElementSibling) == null ? void 0 : J.focus) == null || ye.call(J), this.blur()
                        } else Nt === "Escape" ? ((Ye = Pr(this, ra)) == null || Ye.focus(), Pr(this, ia) && (this.hidden = !0)) : Nt === "Enter" || Nt === " " ? this.handleSelect(v) : this.handleMove(v)
                }, be = new WeakSet, pt = function(v) {
                    return v.composedPath().find(T => ["menuitemradio", "menuitemcheckbox"].includes(T.role))
                }, Gt = new WeakSet, pr = function() {
                    return this.items.find(v => v.tabIndex === 0)
                }, nr = new WeakSet, Zt = function(v) {
                    for (const T of this.items) T.tabIndex = T === v ? 0 : -1
                }, wi = new WeakSet, qi = function(v, T) {
                    const R = [...this.checkedItems];
                    v.type === "radio" && this.radioGroupItems.forEach(J => J.checked = !1), T ? v.checked = !v.checked : v.checked = !0, this.checkedItems.some((J, ye) => J != R[ye]) && this.dispatchEvent(new Event("change", {
                        bubbles: !0,
                        composed: !0
                    }))
                }, $i.template = yr;

                function dn(v) {
                    return ["menuitem", "menuitemradio", "menuitemcheckbox"].includes(v == null ? void 0 : v.role)
                }

                function ua(v) {
                    var T;
                    return (T = v.getAttribute("bounds") ? Sn(v, `#${v.getAttribute("bounds")}`) : Ki(v) || v.parentElement) != null ? T : v
                }
                ce.customElements.get("media-chrome-menu") || ce.customElements.define("media-chrome-menu", $i);
                var da = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    ga = (v, T, R) => (da(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    ji = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    ys = (v, T, R, J) => (da(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    Jt = (v, T, R) => (da(v, T, "access private method"), R),
                    Dr, Ai, $r, _i, ka, $a, wn, Eo, ci, ja, Wn, Qn, k, b, A, P = Pe.createElement("template");
                P.innerHTML = `
  <style>
    :host {
      transition: var(--media-menu-item-transition,
        background .15s linear,
        opacity .2s ease-in-out
      );
      outline: var(--media-menu-item-outline, 0);
      outline-offset: var(--media-menu-item-outline-offset, -1px);
      cursor: var(--media-cursor, pointer);
      display: flex;
      align-items: center;
      align-self: stretch;
      justify-self: stretch;
      white-space: nowrap;
      white-space-collapse: collapse;
      text-wrap: nowrap;
      padding: .4em .8em .4em 1em;
    }

    :host(:focus-visible) {
      box-shadow: var(--media-menu-item-focus-shadow, inset 0 0 0 2px rgb(27 127 204 / .9));
      outline: var(--media-menu-item-hover-outline, 0);
      outline-offset: var(--media-menu-item-hover-outline-offset,  var(--media-menu-item-outline-offset, -1px));
    }

    :host(:hover) {
      cursor: var(--media-cursor, pointer);
      background: var(--media-menu-item-hover-background, rgb(92 92 102 / .5));
      outline: var(--media-menu-item-hover-outline);
      outline-offset: var(--media-menu-item-hover-outline-offset,  var(--media-menu-item-outline-offset, -1px));
    }

    :host([aria-checked="true"]) {
      background: var(--media-menu-item-checked-background);
    }

    :host([hidden]) {
      display: none;
    }

    :host([disabled]) {
      pointer-events: none;
      color: rgba(255, 255, 255, .3);
    }

    slot:not([name]) {
      width: 100%;
    }

    slot:not([name="submenu"]) {
      display: inline-flex;
      align-items: center;
      transition: inherit;
      opacity: var(--media-menu-item-opacity, 1);
    }

    slot[name="description"] {
      justify-content: end;
    }

    slot[name="description"] > span {
      display: inline-block;
      margin-inline: 1em .2em;
      max-width: var(--media-menu-item-description-max-width, 100px);
      text-overflow: ellipsis;
      overflow: hidden;
      font-size: .8em;
      font-weight: 400;
      text-align: right;
      position: relative;
      top: .04em;
    }

    slot[name="checked-indicator"] {
      display: none;
    }

    :host(:is([role="menuitemradio"],[role="menuitemcheckbox"])) slot[name="checked-indicator"] {
      display: var(--media-menu-item-checked-indicator-display, inline-block);
    }

    
    svg, img, ::slotted(svg), ::slotted(img) {
      height: var(--media-menu-item-icon-height, var(--media-control-height, 24px));
      fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));
      display: block;
    }

    
    [part~="indicator"],
    ::slotted([part~="indicator"]) {
      fill: var(--media-menu-item-indicator-fill,
        var(--media-icon-color, var(--media-primary-color, rgb(238 238 238))));
      height: var(--media-menu-item-indicator-height, 1.25em);
      margin-right: .5ch;
    }

    [part~="checked-indicator"] {
      visibility: hidden;
    }

    :host([aria-checked="true"]) [part~="checked-indicator"] {
      visibility: visible;
    }
  </style>
  <slot name="checked-indicator">
    <svg aria-hidden="true" viewBox="0 1 24 24" part="checked-indicator indicator">
      <path d="m10 15.17 9.193-9.191 1.414 1.414-10.606 10.606-6.364-6.364 1.414-1.414 4.95 4.95Z"/>
    </svg>
  </slot>
  <slot name="prefix"></slot>
  <slot></slot>
  <slot name="description"></slot>
  <slot name="suffix"></slot>
  <slot name="submenu"></slot>
`;
                var M = {
                        TYPE: "type",
                        VALUE: "value",
                        CHECKED: "checked",
                        DISABLED: "disabled"
                    },
                    q = class extends ce.HTMLElement {
                        constructor() {
                            super(), ji(this, $r), ji(this, ka), ji(this, wn), ji(this, ja), ji(this, Qn), ji(this, b), ji(this, Dr, !1), ji(this, Ai, void 0), ji(this, ci, () => {
                                var v, T;
                                this.setAttribute("submenusize", `${this.submenuElement.items.length}`);
                                const R = this.shadowRoot.querySelector('slot[name="description"]'),
                                    J = (v = this.submenuElement.checkedItems) == null ? void 0 : v[0],
                                    ye = (T = J == null ? void 0 : J.dataset.description) != null ? T : J == null ? void 0 : J.text,
                                    Ye = Pe.createElement("span");
                                Ye.textContent = ye != null ? ye : "", R.replaceChildren(Ye)
                            }), this.shadowRoot || (this.attachShadow({
                                mode: "open"
                            }), this.shadowRoot.append(this.constructor.template.content.cloneNode(!0))), this.shadowRoot.addEventListener("slotchange", this)
                        }
                        static get observedAttributes() {
                            return [M.TYPE, M.DISABLED, M.CHECKED, M.VALUE]
                        }
                        enable() {
                            this.hasAttribute("tabindex") || this.setAttribute("tabindex", "-1"), $(this) && !this.hasAttribute("aria-checked") && this.setAttribute("aria-checked", "false"), this.addEventListener("click", this), this.addEventListener("keydown", this)
                        }
                        disable() {
                            this.removeAttribute("tabindex"), this.removeEventListener("click", this), this.removeEventListener("keydown", this), this.removeEventListener("keyup", this)
                        }
                        handleEvent(v) {
                            switch (v.type) {
                                case "slotchange":
                                    Jt(this, $r, _i).call(this, v);
                                    break;
                                case "click":
                                    this.handleClick(v);
                                    break;
                                case "keydown":
                                    Jt(this, Qn, k).call(this, v);
                                    break;
                                case "keyup":
                                    Jt(this, ja, Wn).call(this, v);
                                    break
                            }
                        }
                        attributeChangedCallback(v, T, R) {
                            v === M.CHECKED && $(this) && !ga(this, Dr) ? this.setAttribute("aria-checked", R != null ? "true" : "false") : v === M.TYPE && R !== T ? this.role = "menuitem" + R : v === M.DISABLED && R !== T && (R == null ? this.enable() : this.disable())
                        }
                        connectedCallback() {
                            this.hasAttribute(M.DISABLED) || this.enable(), this.role = "menuitem" + this.type, ys(this, Ai, Te(this, this.parentNode)), Jt(this, b, A).call(this)
                        }
                        disconnectedCallback() {
                            this.disable(), Jt(this, b, A).call(this), ys(this, Ai, null)
                        }
                        get invokeTarget() {
                            return this.getAttribute("invoketarget")
                        }
                        set invokeTarget(v) {
                            this.setAttribute("invoketarget", `${v}`)
                        }
                        get invokeTargetElement() {
                            var v;
                            return this.invokeTarget ? (v = xi(this)) == null ? void 0 : v.querySelector(`#${this.invokeTarget}`) : this.submenuElement
                        }
                        get submenuElement() {
                            return this.shadowRoot.querySelector('slot[name="submenu"]').assignedElements({
                                flatten: !0
                            })[0]
                        }
                        get type() {
                            var v;
                            return (v = this.getAttribute(M.TYPE)) != null ? v : ""
                        }
                        set type(v) {
                            this.setAttribute(M.TYPE, `${v}`)
                        }
                        get value() {
                            var v;
                            return (v = this.getAttribute(M.VALUE)) != null ? v : this.text
                        }
                        set value(v) {
                            this.setAttribute(M.VALUE, v)
                        }
                        get text() {
                            var v;
                            return ((v = this.textContent) != null ? v : "").trim()
                        }
                        get checked() {
                            if ($(this)) return this.getAttribute("aria-checked") === "true"
                        }
                        set checked(v) {
                            $(this) && (ys(this, Dr, !0), this.setAttribute("aria-checked", v ? "true" : "false"), v ? this.part.add("checked") : this.part.remove("checked"))
                        }
                        handleClick(v) {
                            $(this) || this.invokeTargetElement && Ha(this, v.target) && this.invokeTargetElement.dispatchEvent(new Ia({
                                relatedTarget: this
                            }))
                        }
                        get keysUsed() {
                            return ["Enter", " "]
                        }
                    };
                Dr = new WeakMap, Ai = new WeakMap, $r = new WeakSet, _i = function(v) {
                    const T = v.target;
                    if (!(T != null && T.name))
                        for (const J of T.assignedNodes({
                                flatten: !0
                            })) J instanceof Text && J.textContent.trim() === "" && J.remove();
                    T.name === "submenu" && (this.submenuElement ? Jt(this, ka, $a).call(this) : Jt(this, wn, Eo).call(this))
                }, ka = new WeakSet, $a = function() {
                    return Xf(this, null, function*() {
                        this.setAttribute("aria-haspopup", "menu"), this.setAttribute("aria-expanded", `${!this.submenuElement.hidden}`), this.submenuElement.addEventListener("change", ga(this, ci)), this.submenuElement.addEventListener("addmenuitem", ga(this, ci)), this.submenuElement.addEventListener("removemenuitem", ga(this, ci)), ga(this, ci).call(this)
                    })
                }, wn = new WeakSet, Eo = function() {
                    this.removeAttribute("aria-haspopup"), this.removeAttribute("aria-expanded"), this.submenuElement.removeEventListener("change", ga(this, ci)), this.submenuElement.removeEventListener("addmenuitem", ga(this, ci)), this.submenuElement.removeEventListener("removemenuitem", ga(this, ci)), ga(this, ci).call(this)
                }, ci = new WeakMap, ja = new WeakSet, Wn = function(v) {
                    const {
                        key: T
                    } = v;
                    if (!this.keysUsed.includes(T)) {
                        this.removeEventListener("keyup", Jt(this, ja, Wn));
                        return
                    }
                    this.handleClick(v)
                }, Qn = new WeakSet, k = function(v) {
                    const {
                        metaKey: T,
                        altKey: R,
                        key: J
                    } = v;
                    if (T || R || !this.keysUsed.includes(J)) {
                        this.removeEventListener("keyup", Jt(this, ja, Wn));
                        return
                    }
                    this.addEventListener("keyup", Jt(this, ja, Wn), {
                        once: !0
                    })
                }, b = new WeakSet, A = function() {
                    var v;
                    const T = (v = ga(this, Ai)) == null ? void 0 : v.radioGroupItems;
                    if (!T) return;
                    let R = T.filter(J => J.getAttribute("aria-checked") === "true").pop();
                    R || (R = T[0]);
                    for (const J of T) J.setAttribute("aria-checked", "false");
                    R == null || R.setAttribute("aria-checked", "true")
                }, q.template = P;

                function $(v) {
                    return v.type === "radio" || v.type === "checkbox"
                }

                function Te(v, T) {
                    if (!v) return null;
                    const {
                        host: R
                    } = v.getRootNode();
                    return !T && R ? Te(v, R) : T != null && T.items ? T : Te(T, T == null ? void 0 : T.parentNode)
                }
                ce.customElements.get("media-chrome-menu-item") || ce.customElements.define("media-chrome-menu-item", q);
                var Le = Pe.createElement("template");
                Le.innerHTML = $i.template.innerHTML + `
  <style>
    :host {
      --_menu-bg: rgb(20 20 30 / .8);
      background: var(--media-settings-menu-background,
          var(--media-menu-background,
            var(--media-control-background,
              var(--media-secondary-color, var(--_menu-bg)))));
      min-width: var(--media-settings-menu-min-width, 170px);
      border-radius: 2px 2px 0 0;
      overflow: hidden;
    }

    @-moz-document url-prefix() {
      :host{
        --_menu-bg: rgb(20 20 30);
      }
    }

    :host([role="menu"]) {
      
      justify-content: end;
    }

    slot:not([name]) {
      justify-content: var(--media-settings-menu-justify-content);
      flex-direction: var(--media-settings-menu-flex-direction, column);
      overflow: visible;
    }

    #container.has-expanded {
      --media-settings-menu-item-opacity: 0;
    }
  </style>
`;
                var Re = class extends $i {
                    get anchorElement() {
                        return this.anchor !== "auto" ? super.anchorElement : Ki(this).querySelector("media-settings-menu-button")
                    }
                };
                Re.template = Le, ce.customElements.get("media-settings-menu") || ce.customElements.define("media-settings-menu", Re);
                var It, xt = Pe.createElement("template");
                xt.innerHTML = q.template.innerHTML + `
  <style>
    slot:not([name="submenu"]) {
      opacity: var(--media-settings-menu-item-opacity, var(--media-menu-item-opacity));
    }

    :host([aria-expanded="true"]:hover) {
      background: transparent;
    }
  </style>
`, (It = xt.content) != null && It.querySelector && (xt.content.querySelector('slot[name="suffix"]').innerHTML = `
    <svg aria-hidden="true" viewBox="0 0 20 24">
      <path d="m8.12 17.585-.742-.669 4.2-4.665-4.2-4.666.743-.669 4.803 5.335-4.803 5.334Z"/>
    </svg>
  `);
                var xe = class extends q {};
                xe.template = xt, ce.customElements.get("media-settings-menu-item") || ce.customElements.define("media-settings-menu-item", xe);
                var Ae = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    Ue = (v, T, R) => (Ae(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Bt = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    cr = (v, T, R, J) => (Ae(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    Ur = (v, T, R) => (Ae(v, T, "access private method"), R),
                    Pt, St, ut, Oe, Mr, Yr, jr, Jr = {
                        TOOLTIP_PLACEMENT: "tooltipplacement",
                        DISABLED: "disabled",
                        NO_TOOLTIP: "notooltip"
                    },
                    ca = Pe.createElement("template");
                ca.innerHTML = `
<style>
  :host {
    position: relative;
    font: var(--media-font,
      var(--media-font-weight, bold)
      var(--media-font-size, 14px) /
      var(--media-text-content-height, var(--media-control-height, 24px))
      var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));
    color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
    background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));
    padding: var(--media-button-padding, var(--media-control-padding, 10px));
    justify-content: var(--media-button-justify-content, center);
    display: inline-flex;
    align-items: center;
    vertical-align: middle;
    box-sizing: border-box;
    transition: background .15s linear;
    pointer-events: auto;
    cursor: var(--media-cursor, pointer);
    -webkit-tap-highlight-color: transparent;
  }

  
  :host(:focus-visible) {
    box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);
    outline: 0;
  }
  
  :host(:where(:focus)) {
    box-shadow: none;
    outline: 0;
  }

  :host(:hover) {
    background: var(--media-control-hover-background, rgba(50 50 70 / .7));
  }

  svg, img, ::slotted(svg), ::slotted(img) {
    width: var(--media-button-icon-width);
    height: var(--media-button-icon-height, var(--media-control-height, 24px));
    transform: var(--media-button-icon-transform);
    transition: var(--media-button-icon-transition);
    fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));
    vertical-align: middle;
    max-width: 100%;
    max-height: 100%;
    min-width: 100%;
  }

  media-tooltip {
    
    max-width: 0;
    overflow-x: clip;
    opacity: 0;
    transition: opacity .3s, max-width 0s 9s;
  }

  :host(:hover) media-tooltip,
  :host(:focus-visible) media-tooltip {
    max-width: 100vw;
    opacity: 1;
    transition: opacity .3s;
  }

  :host([notooltip]) slot[name="tooltip"] {
    display: none;
  }
</style>

<slot name="tooltip">
  <media-tooltip part="tooltip" aria-hidden="true">
    <slot name="tooltip-content"></slot>
  </media-tooltip>
</slot>
`;
                var ii = class extends ce.HTMLElement {
                    constructor(v = {}) {
                        var T;
                        if (super(), Bt(this, Yr), Bt(this, Pt, void 0), this.preventClick = !1, this.tooltipEl = null, this.tooltipContent = "", Bt(this, St, R => {
                                this.preventClick || this.handleClick(R), setTimeout(Ue(this, ut), 0)
                            }), Bt(this, ut, () => {
                                var R, J;
                                (J = (R = this.tooltipEl) == null ? void 0 : R.updateXOffset) == null || J.call(R)
                            }), Bt(this, Oe, R => {
                                const {
                                    key: J
                                } = R;
                                if (!this.keysUsed.includes(J)) {
                                    this.removeEventListener("keyup", Ue(this, Oe));
                                    return
                                }
                                this.preventClick || this.handleClick(R)
                            }), Bt(this, Mr, R => {
                                const {
                                    metaKey: J,
                                    altKey: ye,
                                    key: Ye
                                } = R;
                                if (J || ye || !this.keysUsed.includes(Ye)) {
                                    this.removeEventListener("keyup", Ue(this, Oe));
                                    return
                                }
                                this.addEventListener("keyup", Ue(this, Oe), {
                                    once: !0
                                })
                            }), !this.shadowRoot) {
                            this.attachShadow({
                                mode: "open"
                            });
                            const R = ca.content.cloneNode(!0);
                            this.nativeEl = R;
                            let J = v.slotTemplate;
                            J || (J = Pe.createElement("template"), J.innerHTML = `<slot>${v.defaultContent||""}</slot>`), v.tooltipContent && (R.querySelector('slot[name="tooltip-content"]').innerHTML = (T = v.tooltipContent) != null ? T : "", this.tooltipContent = v.tooltipContent), this.nativeEl.appendChild(J.content.cloneNode(!0)), this.shadowRoot.appendChild(R)
                        }
                        this.tooltipEl = this.shadowRoot.querySelector("media-tooltip")
                    }
                    static get observedAttributes() {
                        return ["disabled", Jr.TOOLTIP_PLACEMENT, at.MEDIA_CONTROLLER]
                    }
                    enable() {
                        this.addEventListener("click", Ue(this, St)), this.addEventListener("keydown", Ue(this, Mr)), this.tabIndex = 0
                    }
                    disable() {
                        this.removeEventListener("click", Ue(this, St)), this.removeEventListener("keydown", Ue(this, Mr)), this.removeEventListener("keyup", Ue(this, Oe)), this.tabIndex = -1
                    }
                    attributeChangedCallback(v, T, R) {
                        var J, ye, Ye, Nt, jt;
                        v === at.MEDIA_CONTROLLER ? (T && ((ye = (J = Ue(this, Pt)) == null ? void 0 : J.unassociateElement) == null || ye.call(J, this), cr(this, Pt, null)), R && this.isConnected && (cr(this, Pt, (Ye = this.getRootNode()) == null ? void 0 : Ye.getElementById(R)), (jt = (Nt = Ue(this, Pt)) == null ? void 0 : Nt.associateElement) == null || jt.call(Nt, this))) : v === "disabled" && R !== T ? R == null ? this.enable() : this.disable() : v === Jr.TOOLTIP_PLACEMENT && this.tooltipEl && R !== T && (this.tooltipEl.placement = R), Ue(this, ut).call(this)
                    }
                    connectedCallback() {
                        var v, T, R;
                        const {
                            style: J
                        } = Li(this.shadowRoot, ":host");
                        J.setProperty("display", `var(--media-control-display, var(--${this.localName}-display, inline-flex))`), this.hasAttribute("disabled") ? this.disable() : this.enable(), this.setAttribute("role", "button");
                        const ye = this.getAttribute(at.MEDIA_CONTROLLER);
                        ye && (cr(this, Pt, (v = this.getRootNode()) == null ? void 0 : v.getElementById(ye)), (R = (T = Ue(this, Pt)) == null ? void 0 : T.associateElement) == null || R.call(T, this)), ce.customElements.whenDefined("media-tooltip").then(() => Ur(this, Yr, jr).call(this))
                    }
                    disconnectedCallback() {
                        var v, T;
                        this.disable(), (T = (v = Ue(this, Pt)) == null ? void 0 : v.unassociateElement) == null || T.call(v, this), cr(this, Pt, null), this.removeEventListener("mouseenter", Ue(this, ut)), this.removeEventListener("focus", Ue(this, ut)), this.removeEventListener("click", Ue(this, St))
                    }
                    get keysUsed() {
                        return ["Enter", " "]
                    }
                    get tooltipPlacement() {
                        return Sa(this, Jr.TOOLTIP_PLACEMENT)
                    }
                    set tooltipPlacement(v) {
                        Ca(this, Jr.TOOLTIP_PLACEMENT, v)
                    }
                    get mediaController() {
                        return Sa(this, at.MEDIA_CONTROLLER)
                    }
                    set mediaController(v) {
                        Ca(this, at.MEDIA_CONTROLLER, v)
                    }
                    get disabled() {
                        return ea(this, Jr.DISABLED)
                    }
                    set disabled(v) {
                        ma(this, Jr.DISABLED, v)
                    }
                    get noTooltip() {
                        return ea(this, Jr.NO_TOOLTIP)
                    }
                    set noTooltip(v) {
                        ma(this, Jr.NO_TOOLTIP, v)
                    }
                    handleClick(v) {}
                };
                Pt = new WeakMap, St = new WeakMap, ut = new WeakMap, Oe = new WeakMap, Mr = new WeakMap, Yr = new WeakSet, jr = function() {
                    this.addEventListener("mouseenter", Ue(this, ut)), this.addEventListener("focus", Ue(this, ut)), this.addEventListener("click", Ue(this, St));
                    const v = this.tooltipPlacement;
                    v && this.tooltipEl && (this.tooltipEl.placement = v)
                }, ce.customElements.get("media-chrome-button") || ce.customElements.define("media-chrome-button", ii);
                var zr = class extends ii {
                    connectedCallback() {
                        super.connectedCallback(), this.invokeTargetElement && this.setAttribute("aria-haspopup", "menu")
                    }
                    get invokeTarget() {
                        return this.getAttribute("invoketarget")
                    }
                    set invokeTarget(v) {
                        this.setAttribute("invoketarget", `${v}`)
                    }
                    get invokeTargetElement() {
                        var v;
                        return this.invokeTarget ? (v = xi(this)) == null ? void 0 : v.querySelector(`#${this.invokeTarget}`) : null
                    }
                    handleClick() {
                        var v;
                        (v = this.invokeTargetElement) == null || v.dispatchEvent(new Ia({
                            relatedTarget: this
                        }))
                    }
                };
                ce.customElements.get("media-chrome-menu-button") || ce.customElements.define("media-chrome-menu-button", zr);
                var yn = {
                        "Start airplay": "Start airplay",
                        "Stop airplay": "Stop airplay",
                        Audio: "Audio",
                        Captions: "Captions",
                        "Enable captions": "Enable captions",
                        "Disable captions": "Disable captions",
                        "Start casting": "Start casting",
                        "Stop casting": "Stop casting",
                        "Enter fullscreen mode": "Enter fullscreen mode",
                        "Exit fullscreen mode": "Exit fullscreen mode",
                        Mute: "Mute",
                        Unmute: "Unmute",
                        "Enter picture in picture mode": "Enter picture in picture mode",
                        "Exit picture in picture mode": "Exit picture in picture mode",
                        Play: "Play",
                        Pause: "Pause",
                        "Playback rate": "Playback rate",
                        "Playback rate {playbackRate}": "Playback rate {playbackRate}",
                        Quality: "Quality",
                        "Seek backward": "Seek backward",
                        "Seek forward": "Seek forward",
                        Settings: "Settings",
                        "audio player": "audio player",
                        "video player": "video player",
                        volume: "volume",
                        seek: "seek",
                        "closed captions": "closed captions",
                        "current playback rate": "current playback rate",
                        "playback time": "playback time",
                        "media loading": "media loading",
                        settings: "settings",
                        "audio tracks": "audio tracks",
                        quality: "quality",
                        play: "play",
                        pause: "pause",
                        mute: "mute",
                        unmute: "unmute",
                        live: "live",
                        "start airplay": "start airplay",
                        "stop airplay": "stop airplay",
                        "start casting": "start casting",
                        "stop casting": "stop casting",
                        "enter fullscreen mode": "enter fullscreen mode",
                        "exit fullscreen mode": "exit fullscreen mode",
                        "enter picture in picture mode": "enter picture in picture mode",
                        "exit picture in picture mode": "exit picture in picture mode",
                        "seek to live": "seek to live",
                        "playing live": "playing live",
                        "seek back {seekOffset} seconds": "seek back {seekOffset} seconds",
                        "seek forward {seekOffset} seconds": "seek forward {seekOffset} seconds",
                        "Network Error": "Network Error",
                        "Decode Error": "Decode Error",
                        "Source Not Supported": "Source Not Supported",
                        "Encryption Error": "Encryption Error",
                        "A network error caused the media download to fail.": "A network error caused the media download to fail.",
                        "A media error caused playback to be aborted. The media could be corrupt or your browser does not support this format.": "A media error caused playback to be aborted. The media could be corrupt or your browser does not support this format.",
                        "An unsupported error occurred. The server or network failed, or your browser does not support this format.": "An unsupported error occurred. The server or network failed, or your browser does not support this format.",
                        "The media is encrypted and there are no keys to decrypt it.": "The media is encrypted and there are no keys to decrypt it."
                    },
                    bs, Ls = {
                        en: yn
                    },
                    ui = ((bs = globalThis.navigator) == null ? void 0 : bs.language.split("-")[0]) || "en",
                    Ea = (v, T = {}) => {
                        var R;
                        return (((R = Ls[ui]) == null ? void 0 : R[v]) || yn[v]).replace(/\{(\w+)\}/g, (ye, Ye) => T[Ye] !== void 0 ? String(T[Ye]) : `{${Ye}}`)
                    },
                    Jn = Pe.createElement("template");
                Jn.innerHTML = `
  <style>
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon">
    <svg aria-hidden="true" viewBox="0 0 24 24">
      <path d="M4.5 14.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Zm7.5 0a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Zm7.5 0a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"/>
    </svg>
  </slot>
`;
                var Gn = class extends zr {
                    static get observedAttributes() {
                        return [...super.observedAttributes, "target"]
                    }
                    constructor() {
                        super({
                            slotTemplate: Jn,
                            tooltipContent: Ea("Settings")
                        })
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.setAttribute("aria-label", Ea("settings"))
                    }
                    get invokeTargetElement() {
                        return this.invokeTarget != null ? super.invokeTargetElement : Ki(this).querySelector("media-settings-menu")
                    }
                };
                ce.customElements.get("media-settings-menu-button") || ce.customElements.define("media-settings-menu-button", Gn);
                var es = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    Or = (v, T, R) => (es(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    ha = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    Pn = (v, T, R, J) => (es(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    ts = (v, T, R) => (es(v, T, "access private method"), R),
                    za, On, Rn, rs, Is, yo, bo = class extends $i {
                        constructor() {
                            super(...arguments), ha(this, Rn), ha(this, Is), ha(this, za, []), ha(this, On, void 0)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, fe.MEDIA_AUDIO_TRACK_LIST, fe.MEDIA_AUDIO_TRACK_ENABLED, fe.MEDIA_AUDIO_TRACK_UNAVAILABLE]
                        }
                        attributeChangedCallback(v, T, R) {
                            super.attributeChangedCallback(v, T, R), v === fe.MEDIA_AUDIO_TRACK_ENABLED && T !== R ? this.value = R : v === fe.MEDIA_AUDIO_TRACK_LIST && T !== R && (Pn(this, za, wr(R != null ? R : "")), ts(this, Rn, rs).call(this))
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.addEventListener("change", ts(this, Is, yo))
                        }
                        disconnectedCallback() {
                            super.disconnectedCallback(), this.removeEventListener("change", ts(this, Is, yo))
                        }
                        get anchorElement() {
                            var v;
                            return this.anchor !== "auto" ? super.anchorElement : (v = Ki(this)) == null ? void 0 : v.querySelector("media-audio-track-menu-button")
                        }
                        get mediaAudioTrackList() {
                            return Or(this, za)
                        }
                        set mediaAudioTrackList(v) {
                            Pn(this, za, v), ts(this, Rn, rs).call(this)
                        }
                        get mediaAudioTrackEnabled() {
                            var v;
                            return (v = Sa(this, fe.MEDIA_AUDIO_TRACK_ENABLED)) != null ? v : ""
                        }
                        set mediaAudioTrackEnabled(v) {
                            Ca(this, fe.MEDIA_AUDIO_TRACK_ENABLED, v)
                        }
                    };
                za = new WeakMap, On = new WeakMap, Rn = new WeakSet, rs = function() {
                    if (Or(this, On) === JSON.stringify(this.mediaAudioTrackList)) return;
                    Pn(this, On, JSON.stringify(this.mediaAudioTrackList));
                    const v = this.mediaAudioTrackList;
                    this.defaultSlot.textContent = "";
                    for (const T of v) {
                        const R = this.formatMenuItemText(T.label, T),
                            J = _t({
                                type: "radio",
                                text: R,
                                value: `${T.id}`,
                                checked: T.enabled
                            });
                        J.prepend(Qt(this, "checked-indicator")), this.defaultSlot.append(J)
                    }
                }, Is = new WeakSet, yo = function() {
                    if (this.value == null) return;
                    const v = new ce.CustomEvent(dt.MEDIA_AUDIO_TRACK_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(v)
                }, ce.customElements.get("media-audio-track-menu") || ce.customElements.define("media-audio-track-menu", bo);
                var is = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M11 17H9.5V7H11v10Zm-3-3H6.5v-4H8v4Zm6-5h-1.5v6H14V9Zm3 7h-1.5V8H17v8Z"/>
  <path d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10Zm-2 0a8 8 0 1 0-16 0 8 8 0 0 0 16 0Z"/>
</svg>`,
                    El = Pe.createElement("template");
                El.innerHTML = `
  <style>
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon">${is}</slot>
`;
                var cn = class extends zr {
                    static get observedAttributes() {
                        return [...super.observedAttributes, fe.MEDIA_AUDIO_TRACK_ENABLED, fe.MEDIA_AUDIO_TRACK_UNAVAILABLE]
                    }
                    constructor() {
                        super({
                            slotTemplate: El,
                            tooltipContent: Ea("Audio")
                        })
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.setAttribute("aria-label", Ea("Audio"))
                    }
                    attributeChangedCallback(v, T, R) {
                        super.attributeChangedCallback(v, T, R)
                    }
                    get invokeTargetElement() {
                        var v;
                        return this.invokeTarget != null ? super.invokeTargetElement : (v = Ki(this)) == null ? void 0 : v.querySelector("media-audio-track-menu")
                    }
                    get mediaAudioTrackEnabled() {
                        var v;
                        return (v = Sa(this, fe.MEDIA_AUDIO_TRACK_ENABLED)) != null ? v : ""
                    }
                    set mediaAudioTrackEnabled(v) {
                        Ca(this, fe.MEDIA_AUDIO_TRACK_ENABLED, v)
                    }
                };
                ce.customElements.get("media-audio-track-menu-button") || ce.customElements.define("media-audio-track-menu-button", cn);
                var yl = (v = "") => v.split(/\s+/),
                    Kn = (v = "") => {
                        const [T, R, J] = v.split(":"), ye = J ? decodeURIComponent(J) : void 0;
                        return {
                            kind: T === "cc" ? Ve.CAPTIONS : Ve.SUBTITLES,
                            language: R,
                            label: ye
                        }
                    },
                    Jl = (v = "", T = {}) => yl(v).map(R => {
                        const J = Kn(R);
                        return gl(gl({}, T), J)
                    }),
                    Go = ({
                        kind: v,
                        label: T,
                        language: R
                    } = {
                        kind: "subtitles"
                    }) => T ? `${v==="captions"?"cc":"sb"}:${R}:${encodeURIComponent(T)}` : R,
                    eu = (v = []) => Array.prototype.map.call(v, Go).join(" "),
                    Gu = v => {
                        var T;
                        return !!((T = v.mediaSubtitlesShowing) != null && T.length) || v.hasAttribute(fe.MEDIA_SUBTITLES_SHOWING)
                    },
                    bl = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    Ko = (v, T, R) => (bl(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Tl = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    rt = (v, T, R, J) => (bl(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    To = (v, T, R) => (bl(v, T, "access private method"), R),
                    zs, Yo, xn, Xs, qo, Ku = `
  <svg aria-hidden="true" viewBox="0 0 26 24" part="captions-indicator indicator">
    <path d="M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z"/>
  </svg>`,
                    $o = Pe.createElement("template");
                $o.innerHTML = $i.template.innerHTML + `
  <slot name="captions-indicator" hidden>${Ku}</slot>`;
                var Al = class extends $i {
                    constructor() {
                        super(...arguments), Tl(this, Yo), Tl(this, Xs), Tl(this, zs, void 0)
                    }
                    static get observedAttributes() {
                        return [...super.observedAttributes, fe.MEDIA_SUBTITLES_LIST, fe.MEDIA_SUBTITLES_SHOWING]
                    }
                    attributeChangedCallback(v, T, R) {
                        super.attributeChangedCallback(v, T, R), v === fe.MEDIA_SUBTITLES_LIST && T !== R ? To(this, Yo, xn).call(this) : v === fe.MEDIA_SUBTITLES_SHOWING && T !== R && (this.value = R)
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.addEventListener("change", To(this, Xs, qo))
                    }
                    disconnectedCallback() {
                        super.disconnectedCallback(), this.removeEventListener("change", To(this, Xs, qo))
                    }
                    get anchorElement() {
                        return this.anchor !== "auto" ? super.anchorElement : Ki(this).querySelector("media-captions-menu-button")
                    }
                    get mediaSubtitlesList() {
                        return Zs(this, fe.MEDIA_SUBTITLES_LIST)
                    }
                    set mediaSubtitlesList(v) {
                        Ts(this, fe.MEDIA_SUBTITLES_LIST, v)
                    }
                    get mediaSubtitlesShowing() {
                        return Zs(this, fe.MEDIA_SUBTITLES_SHOWING)
                    }
                    set mediaSubtitlesShowing(v) {
                        Ts(this, fe.MEDIA_SUBTITLES_SHOWING, v)
                    }
                };
                zs = new WeakMap, Yo = new WeakSet, xn = function() {
                    var v;
                    if (Ko(this, zs) === JSON.stringify(this.mediaSubtitlesList)) return;
                    rt(this, zs, JSON.stringify(this.mediaSubtitlesList)), this.defaultSlot.textContent = "";
                    const T = !this.value,
                        R = _t({
                            type: "radio",
                            text: this.formatMenuItemText("Off"),
                            value: "off",
                            checked: T
                        });
                    R.prepend(Qt(this, "checked-indicator")), this.defaultSlot.append(R);
                    const J = this.mediaSubtitlesList;
                    for (const ye of J) {
                        const Ye = _t({
                            type: "radio",
                            text: this.formatMenuItemText(ye.label, ye),
                            value: Go(ye),
                            checked: this.value == Go(ye)
                        });
                        Ye.prepend(Qt(this, "checked-indicator")), ((v = ye.kind) != null ? v : "subs") === "captions" && Ye.append(Qt(this, "captions-indicator")), this.defaultSlot.append(Ye)
                    }
                }, Xs = new WeakSet, qo = function() {
                    const v = this.mediaSubtitlesShowing,
                        T = this.getAttribute(fe.MEDIA_SUBTITLES_SHOWING),
                        R = this.value !== T;
                    if (v != null && v.length && R && this.dispatchEvent(new ce.CustomEvent(dt.MEDIA_DISABLE_SUBTITLES_REQUEST, {
                            composed: !0,
                            bubbles: !0,
                            detail: v
                        })), !this.value || !R) return;
                    const J = new ce.CustomEvent(dt.MEDIA_SHOW_SUBTITLES_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(J)
                }, Al.template = $o;
                var Zs = (v, T) => {
                        const R = v.getAttribute(T);
                        return R ? Jl(R) : []
                    },
                    Ts = (v, T, R) => {
                        if (!(R != null && R.length)) {
                            v.removeAttribute(T);
                            return
                        }
                        const J = eu(R);
                        v.getAttribute(T) !== J && v.setAttribute(T, J)
                    };
                ce.customElements.get("media-captions-menu") || ce.customElements.define("media-captions-menu", Al);
                var Ln = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    _l = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    Cs = (v, T, R, J) => (Ln(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    Ds, Qs = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z"/>
</svg>`,
                    Ms = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z"/>
</svg>`,
                    Js = Pe.createElement("template");
                Js.innerHTML = `
  <style>
    :host([aria-checked="true"]) slot[name=off] {
      display: none !important;
    }

    
    :host(:not([aria-checked="true"])) slot[name=on] {
      display: none !important;
    }

    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>

  <slot name="icon">
    <slot name="on">${Qs}</slot>
    <slot name="off">${Ms}</slot>
  </slot>
`;
                var Ps = v => {
                        v.setAttribute("aria-checked", Gu(v).toString())
                    },
                    Sl = class extends zr {
                        constructor(v = {}) {
                            super(gl({
                                slotTemplate: Js,
                                tooltipContent: Ea("Captions")
                            }, v)), _l(this, Ds, void 0), Cs(this, Ds, !1)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, fe.MEDIA_SUBTITLES_LIST, fe.MEDIA_SUBTITLES_SHOWING]
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.setAttribute("aria-label", Ea("closed captions")), Ps(this)
                        }
                        attributeChangedCallback(v, T, R) {
                            super.attributeChangedCallback(v, T, R), v === fe.MEDIA_SUBTITLES_SHOWING && Ps(this)
                        }
                        get invokeTargetElement() {
                            var v;
                            return this.invokeTarget != null ? super.invokeTargetElement : (v = Ki(this)) == null ? void 0 : v.querySelector("media-captions-menu")
                        }
                        get mediaSubtitlesList() {
                            return kl(this, fe.MEDIA_SUBTITLES_LIST)
                        }
                        set mediaSubtitlesList(v) {
                            jo(this, fe.MEDIA_SUBTITLES_LIST, v)
                        }
                        get mediaSubtitlesShowing() {
                            return kl(this, fe.MEDIA_SUBTITLES_SHOWING)
                        }
                        set mediaSubtitlesShowing(v) {
                            jo(this, fe.MEDIA_SUBTITLES_SHOWING, v)
                        }
                    };
                Ds = new WeakMap;
                var kl = (v, T) => {
                        const R = v.getAttribute(T);
                        return R ? Jl(R) : []
                    },
                    jo = (v, T, R) => {
                        if (!(R != null && R.length)) {
                            v.removeAttribute(T);
                            return
                        }
                        const J = eu(R);
                        v.getAttribute(T) !== J && v.setAttribute(T, J)
                    };
                ce.customElements.get("media-captions-menu-button") || ce.customElements.define("media-captions-menu-button", Sl);
                var wl = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    ya = (v, T, R) => (wl(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Os = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    As = (v, T, R, J) => (wl(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    _s, Ss, eo, xs, as, In, Ns = class {
                        constructor(v, T, {
                            defaultValue: R
                        } = {
                            defaultValue: void 0
                        }) {
                            Os(this, as), Os(this, _s, void 0), Os(this, Ss, void 0), Os(this, eo, void 0), Os(this, xs, new Set), As(this, _s, v), As(this, Ss, T), As(this, eo, new Set(R))
                        }[Symbol.iterator]() {
                            return ya(this, as, In).values()
                        }
                        get length() {
                            return ya(this, as, In).size
                        }
                        get value() {
                            var v;
                            return (v = [...ya(this, as, In)].join(" ")) != null ? v : ""
                        }
                        set value(v) {
                            var T;
                            v !== this.value && (As(this, xs, new Set), this.add(...(T = v == null ? void 0 : v.split(" ")) != null ? T : []))
                        }
                        toString() {
                            return this.value
                        }
                        item(v) {
                            return [...ya(this, as, In)][v]
                        }
                        values() {
                            return ya(this, as, In).values()
                        }
                        forEach(v, T) {
                            ya(this, as, In).forEach(v, T)
                        }
                        add(...v) {
                            var T, R;
                            v.forEach(J => ya(this, xs).add(J)), !(this.value === "" && !((T = ya(this, _s)) != null && T.hasAttribute(`${ya(this,Ss)}`))) && ((R = ya(this, _s)) == null || R.setAttribute(`${ya(this,Ss)}`, `${this.value}`))
                        }
                        remove(...v) {
                            var T;
                            v.forEach(R => ya(this, xs).delete(R)), (T = ya(this, _s)) == null || T.setAttribute(`${ya(this,Ss)}`, `${this.value}`)
                        }
                        contains(v) {
                            return ya(this, as, In).has(v)
                        }
                        toggle(v, T) {
                            return typeof T != "undefined" ? T ? (this.add(v), !0) : (this.remove(v), !1) : this.contains(v) ? (this.remove(v), !1) : (this.add(v), !0)
                        }
                        replace(v, T) {
                            return this.remove(v), this.add(T), v === T
                        }
                    };
                _s = new WeakMap, Ss = new WeakMap, eo = new WeakMap, xs = new WeakMap, as = new WeakSet, In = function() {
                    return ya(this, xs).size ? ya(this, xs) : ya(this, eo)
                };
                var Rl = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    Ui = (v, T, R) => (Rl(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Wa = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    hn, bn = {
                        RATES: "rates"
                    },
                    Nn = [1, 1.2, 1.5, 1.7, 2],
                    zi = 1,
                    Ao = Pe.createElement("template");
                Ao.innerHTML = `
  <style>
    :host {
      min-width: 5ch;
      padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));
    }
  </style>
  <slot name="icon"></slot>
`;
                var to = class extends ii {
                    constructor(v = {}) {
                        super(gl({
                            slotTemplate: Ao,
                            tooltipContent: Ea("Playback rate")
                        }, v)), Wa(this, hn, new Ns(this, bn.RATES, {
                            defaultValue: Nn
                        })), this.container = this.shadowRoot.querySelector('slot[name="icon"]'), this.container.innerHTML = `${zi}x`
                    }
                    static get observedAttributes() {
                        return [...super.observedAttributes, fe.MEDIA_PLAYBACK_RATE, bn.RATES]
                    }
                    attributeChangedCallback(v, T, R) {
                        if (super.attributeChangedCallback(v, T, R), v === bn.RATES && (Ui(this, hn).value = R), v === fe.MEDIA_PLAYBACK_RATE) {
                            const J = R ? +R : Number.NaN,
                                ye = Number.isNaN(J) ? zi : J;
                            this.container.innerHTML = `${ye}x`, this.setAttribute("aria-label", Ea("Playback rate {playbackRate}", {
                                playbackRate: ye
                            }))
                        }
                    }
                    get rates() {
                        return Ui(this, hn)
                    }
                    set rates(v) {
                        v ? Array.isArray(v) && (Ui(this, hn).value = v.join(" ")) : Ui(this, hn).value = ""
                    }
                    get mediaPlaybackRate() {
                        return Ji(this, fe.MEDIA_PLAYBACK_RATE, zi)
                    }
                    set mediaPlaybackRate(v) {
                        Ni(this, fe.MEDIA_PLAYBACK_RATE, v)
                    }
                    handleClick() {
                        var v, T;
                        const R = Array.from(this.rates.values(), Ye => +Ye).sort((Ye, Nt) => Ye - Nt),
                            J = (T = (v = R.find(Ye => Ye > this.mediaPlaybackRate)) != null ? v : R[0]) != null ? T : zi,
                            ye = new ce.CustomEvent(dt.MEDIA_PLAYBACK_RATE_REQUEST, {
                                composed: !0,
                                bubbles: !0,
                                detail: J
                            });
                        this.dispatchEvent(ye)
                    }
                };
                hn = new WeakMap, ce.customElements.get("media-playback-rate-button") || ce.customElements.define("media-playback-rate-button", to);
                var Cn = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    Us = (v, T, R) => (Cn(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    ns = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    Yn = (v, T, R) => (Cn(v, T, "access private method"), R),
                    fn, Fs, ro, mn, ba, Bs = {
                        RATES: "rates"
                    },
                    _o = class extends $i {
                        constructor() {
                            super(), ns(this, Fs), ns(this, mn), ns(this, fn, new Ns(this, Bs.RATES, {
                                defaultValue: Nn
                            })), Yn(this, Fs, ro).call(this)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, fe.MEDIA_PLAYBACK_RATE, Bs.RATES]
                        }
                        attributeChangedCallback(v, T, R) {
                            super.attributeChangedCallback(v, T, R), v === fe.MEDIA_PLAYBACK_RATE && T != R ? this.value = R : v === Bs.RATES && T != R && (Us(this, fn).value = R, Yn(this, Fs, ro).call(this))
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.addEventListener("change", Yn(this, mn, ba))
                        }
                        disconnectedCallback() {
                            super.disconnectedCallback(), this.removeEventListener("change", Yn(this, mn, ba))
                        }
                        get anchorElement() {
                            return this.anchor !== "auto" ? super.anchorElement : Ki(this).querySelector("media-playback-rate-menu-button")
                        }
                        get rates() {
                            return Us(this, fn)
                        }
                        set rates(v) {
                            v ? Array.isArray(v) && (Us(this, fn).value = v.join(" ")) : Us(this, fn).value = "", Yn(this, Fs, ro).call(this)
                        }
                        get mediaPlaybackRate() {
                            return Ji(this, fe.MEDIA_PLAYBACK_RATE, zi)
                        }
                        set mediaPlaybackRate(v) {
                            Ni(this, fe.MEDIA_PLAYBACK_RATE, v)
                        }
                    };
                fn = new WeakMap, Fs = new WeakSet, ro = function() {
                    this.defaultSlot.textContent = "";
                    for (const v of this.rates) {
                        const T = _t({
                            type: "radio",
                            text: this.formatMenuItemText(`${v}x`, v),
                            value: v,
                            checked: this.mediaPlaybackRate == v
                        });
                        T.prepend(Qt(this, "checked-indicator")), this.defaultSlot.append(T)
                    }
                }, mn = new WeakSet, ba = function() {
                    if (!this.value) return;
                    const v = new ce.CustomEvent(dt.MEDIA_PLAYBACK_RATE_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(v)
                }, ce.customElements.get("media-playback-rate-menu") || ce.customElements.define("media-playback-rate-menu", _o);
                var zo = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    qn = (v, T, R) => (zo(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    Ll = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    Hs, io = {
                        RATES: "rates"
                    },
                    tu = [1, 1.2, 1.5, 1.7, 2],
                    So = 1,
                    ks = Pe.createElement("template");
                ks.innerHTML = `
  <style>
    :host {
      min-width: 5ch;
      padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));
    }
    
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon"></slot>
`;
                var ko = class extends zr {
                    constructor(v = {}) {
                        super(gl({
                            slotTemplate: ks,
                            tooltipContent: Ea("Playback rate")
                        }, v)), Ll(this, Hs, new Ns(this, io.RATES, {
                            defaultValue: tu
                        })), this.container = this.shadowRoot.querySelector('slot[name="icon"]'), this.container.innerHTML = `${So}x`
                    }
                    static get observedAttributes() {
                        return [...super.observedAttributes, fe.MEDIA_PLAYBACK_RATE, io.RATES]
                    }
                    attributeChangedCallback(v, T, R) {
                        if (super.attributeChangedCallback(v, T, R), v === io.RATES && (qn(this, Hs).value = R), v === fe.MEDIA_PLAYBACK_RATE) {
                            const J = R ? +R : Number.NaN,
                                ye = Number.isNaN(J) ? So : J;
                            this.container.innerHTML = `${ye}x`, this.setAttribute("aria-label", Ea("Playback rate {playbackRate}", {
                                playbackRate: ye
                            }))
                        }
                    }
                    get invokeTargetElement() {
                        return this.invokeTarget != null ? super.invokeTargetElement : Ki(this).querySelector("media-playback-rate-menu")
                    }
                    get rates() {
                        return qn(this, Hs)
                    }
                    set rates(v) {
                        v ? Array.isArray(v) && (qn(this, Hs).value = v.join(" ")) : qn(this, Hs).value = ""
                    }
                    get mediaPlaybackRate() {
                        return Ji(this, fe.MEDIA_PLAYBACK_RATE, So)
                    }
                    set mediaPlaybackRate(v) {
                        Ni(this, fe.MEDIA_PLAYBACK_RATE, v)
                    }
                };
                Hs = new WeakMap, ce.customElements.get("media-playback-rate-menu-button") || ce.customElements.define("media-playback-rate-menu-button", ko);
                var Vs = (v, T, R) => {
                        if (!T.has(v)) throw TypeError("Cannot " + R)
                    },
                    Ga = (v, T, R) => (Vs(v, T, "read from private field"), R ? R.call(v) : T.get(v)),
                    ao = (v, T, R) => {
                        if (T.has(v)) throw TypeError("Cannot add the same private member more than once");
                        T instanceof WeakSet ? T.add(v) : T.set(v, R)
                    },
                    Xo = (v, T, R, J) => (Vs(v, T, "write to private field"), J ? J.call(v, R) : T.set(v, R), R),
                    $n = (v, T, R) => (Vs(v, T, "access private method"), R),
                    no, ss, an, Ws, Dn, Gs, so = class extends $i {
                        constructor() {
                            super(...arguments), ao(this, an), ao(this, Dn), ao(this, no, []), ao(this, ss, {})
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, fe.MEDIA_RENDITION_LIST, fe.MEDIA_RENDITION_SELECTED, fe.MEDIA_RENDITION_UNAVAILABLE, fe.MEDIA_HEIGHT]
                        }
                        attributeChangedCallback(v, T, R) {
                            super.attributeChangedCallback(v, T, R), v === fe.MEDIA_RENDITION_SELECTED && T !== R ? (this.value = R != null ? R : "auto", $n(this, an, Ws).call(this)) : v === fe.MEDIA_RENDITION_LIST && T !== R ? (Xo(this, no, gt(R)), $n(this, an, Ws).call(this)) : v === fe.MEDIA_HEIGHT && T !== R && $n(this, an, Ws).call(this)
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.addEventListener("change", $n(this, Dn, Gs))
                        }
                        disconnectedCallback() {
                            super.disconnectedCallback(), this.removeEventListener("change", $n(this, Dn, Gs))
                        }
                        get anchorElement() {
                            return this.anchor !== "auto" ? super.anchorElement : Ki(this).querySelector("media-rendition-menu-button")
                        }
                        get mediaRenditionList() {
                            return Ga(this, no)
                        }
                        set mediaRenditionList(v) {
                            Xo(this, no, v), $n(this, an, Ws).call(this)
                        }
                        get mediaRenditionSelected() {
                            return Sa(this, fe.MEDIA_RENDITION_SELECTED)
                        }
                        set mediaRenditionSelected(v) {
                            Ca(this, fe.MEDIA_RENDITION_SELECTED, v)
                        }
                        get mediaHeight() {
                            return Ji(this, fe.MEDIA_HEIGHT)
                        }
                        set mediaHeight(v) {
                            Ni(this, fe.MEDIA_HEIGHT, v)
                        }
                    };
                no = new WeakMap, ss = new WeakMap, an = new WeakSet, Ws = function() {
                    if (Ga(this, ss).mediaRenditionList === JSON.stringify(this.mediaRenditionList) && Ga(this, ss).mediaHeight === this.mediaHeight) return;
                    Ga(this, ss).mediaRenditionList = JSON.stringify(this.mediaRenditionList), Ga(this, ss).mediaHeight = this.mediaHeight;
                    const v = this.mediaRenditionList.sort((Ye, Nt) => Nt.height - Ye.height);
                    for (const Ye of v) Ye.selected = Ye.id === this.mediaRenditionSelected;
                    this.defaultSlot.textContent = "";
                    const T = !this.mediaRenditionSelected;
                    for (const Ye of v) {
                        const Nt = this.formatMenuItemText(`${Math.min(Ye.width,Ye.height)}p`, Ye),
                            jt = _t({
                                type: "radio",
                                text: Nt,
                                value: `${Ye.id}`,
                                checked: Ye.selected && !T
                            });
                        jt.prepend(Qt(this, "checked-indicator")), this.defaultSlot.append(jt)
                    }
                    const R = T ? this.formatMenuItemText(`Auto (${this.mediaHeight}p)`) : this.formatMenuItemText("Auto"),
                        J = _t({
                            type: "radio",
                            text: R,
                            value: "auto",
                            checked: T
                        }),
                        ye = this.mediaHeight > 0 ? `Auto (${this.mediaHeight}p)` : "Auto";
                    J.dataset.description = ye, J.prepend(Qt(this, "checked-indicator")), this.defaultSlot.append(J)
                }, Dn = new WeakSet, Gs = function() {
                    if (this.value == null) return;
                    const v = new ce.CustomEvent(dt.MEDIA_RENDITION_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(v)
                }, ce.customElements.get("media-rendition-menu") || ce.customElements.define("media-rendition-menu", so);
                var Yu = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M13.5 2.5h2v6h-2v-2h-11v-2h11v-2Zm4 2h4v2h-4v-2Zm-12 4h2v6h-2v-2h-3v-2h3v-2Zm4 2h12v2h-12v-2Zm1 4h2v6h-2v-2h-8v-2h8v-2Zm4 2h7v2h-7v-2Z" />
</svg>`,
                    Ks = Pe.createElement("template");
                Ks.innerHTML = `
  <style>
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon">${Yu}</slot>
`;
                var Xa = class extends zr {
                    static get observedAttributes() {
                        return [...super.observedAttributes, fe.MEDIA_RENDITION_SELECTED, fe.MEDIA_RENDITION_UNAVAILABLE, fe.MEDIA_HEIGHT]
                    }
                    constructor() {
                        super({
                            slotTemplate: Ks,
                            tooltipContent: Ea("Quality")
                        })
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.setAttribute("aria-label", Ea("quality"))
                    }
                    get invokeTargetElement() {
                        return this.invokeTarget != null ? super.invokeTargetElement : Ki(this).querySelector("media-rendition-menu")
                    }
                    get mediaRenditionSelected() {
                        return Sa(this, fe.MEDIA_RENDITION_SELECTED)
                    }
                    set mediaRenditionSelected(v) {
                        Ca(this, fe.MEDIA_RENDITION_SELECTED, v)
                    }
                    get mediaHeight() {
                        return Ji(this, fe.MEDIA_HEIGHT)
                    }
                    set mediaHeight(v) {
                        Ni(this, fe.MEDIA_HEIGHT, v)
                    }
                };
                ce.customElements.get("media-rendition-menu-button") || ce.customElements.define("media-rendition-menu-button", Xa);
                var Zo = Dt.createElement("template");
                "innerHTML" in Zo && (Zo.innerHTML = tt);
                var oo, Qo, Jo = class extends Qa {};
                Jo.template = (Qo = (oo = Zo.content) == null ? void 0 : oo.children) == null ? void 0 : Qo[0], Ft.customElements.get("media-theme-classic") || Ft.customElements.define("media-theme-classic", Jo);
                var el = Jo
            },
            33437: (wt, Me, we) => {
                function je(Ee) {
                    Y.debug = Y, Y.default = Y, Y.coerce = K, Y.disable = le, Y.enable = tt, Y.enabled = x, Y.humanize = we(27764), Y.destroy = Q, Object.keys(Ee).forEach(he => {
                        Y[he] = Ee[he]
                    }), Y.names = [], Y.skips = [], Y.formatters = {};

                    function Je(he) {
                        let ot = 0;
                        for (let it = 0; it < he.length; it++) ot = (ot << 5) - ot + he.charCodeAt(it), ot |= 0;
                        return Y.colors[Math.abs(ot) % Y.colors.length]
                    }
                    Y.selectColor = Je;

                    function Y(he) {
                        let ot, it = null,
                            Rt, Ft;

                        function Dt(...dt) {
                            if (!Dt.enabled) return;
                            const at = Dt,
                                bt = Number(new Date),
                                Wt = bt - (ot || bt);
                            at.diff = Wt, at.prev = ot, at.curr = bt, ot = bt, dt[0] = Y.coerce(dt[0]), typeof dt[0] != "string" && dt.unshift("%O");
                            let fe = 0;
                            dt[0] = dt[0].replace(/%([a-zA-Z%])/g, (B, Be) => {
                                if (B === "%%") return "%";
                                fe++;
                                const _ = Y.formatters[Be];
                                if (typeof _ == "function") {
                                    const Ve = dt[fe];
                                    B = _.call(at, Ve), dt.splice(fe, 1), fe--
                                }
                                return B
                            }), Y.formatArgs.call(at, dt), (at.log || Y.log).apply(at, dt)
                        }
                        return Dt.namespace = he, Dt.useColors = Y.useColors(), Dt.color = Y.selectColor(he), Dt.extend = Ct, Dt.destroy = Y.destroy, Object.defineProperty(Dt, "enabled", {
                            enumerable: !0,
                            configurable: !1,
                            get: () => it !== null ? it : (Rt !== Y.namespaces && (Rt = Y.namespaces, Ft = Y.enabled(he)), Ft),
                            set: dt => {
                                it = dt
                            }
                        }), typeof Y.init == "function" && Y.init(Dt), Dt
                    }

                    function Ct(he, ot) {
                        const it = Y(this.namespace + (typeof ot == "undefined" ? ":" : ot) + he);
                        return it.log = this.log, it
                    }

                    function tt(he) {
                        Y.save(he), Y.namespaces = he, Y.names = [], Y.skips = [];
                        const ot = (typeof he == "string" ? he : "").trim().replace(" ", ",").split(",").filter(Boolean);
                        for (const it of ot) it[0] === "-" ? Y.skips.push(it.slice(1)) : Y.names.push(it)
                    }

                    function mt(he, ot) {
                        let it = 0,
                            Rt = 0,
                            Ft = -1,
                            Dt = 0;
                        for (; it < he.length;)
                            if (Rt < ot.length && (ot[Rt] === he[it] || ot[Rt] === "*")) ot[Rt] === "*" ? (Ft = Rt, Dt = it, Rt++) : (it++, Rt++);
                            else if (Ft !== -1) Rt = Ft + 1, Dt++, it = Dt;
                        else return !1;
                        for (; Rt < ot.length && ot[Rt] === "*";) Rt++;
                        return Rt === ot.length
                    }

                    function le() {
                        const he = [...Y.names, ...Y.skips.map(ot => "-" + ot)].join(",");
                        return Y.enable(""), he
                    }

                    function x(he) {
                        for (const ot of Y.skips)
                            if (mt(he, ot)) return !1;
                        for (const ot of Y.names)
                            if (mt(he, ot)) return !0;
                        return !1
                    }

                    function K(he) {
                        return he instanceof Error ? he.stack || he.message : he
                    }

                    function Q() {
                        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")
                    }
                    return Y.enable(Y.load()), Y
                }
                wt.exports = je
            },
            38329: (wt, Me) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.default = {
                    BUFFERING: 3,
                    ENDED: 0,
                    PAUSED: 2,
                    PLAYING: 1,
                    UNSTARTED: -1,
                    VIDEO_CUED: 5
                }, wt.exports = Me.default
            },
            38686: (wt, Me, we) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                });
                var je = we(80210),
                    Ee = x(je),
                    Je = we(18437),
                    Y = x(Je),
                    Ct = we(8232),
                    tt = x(Ct),
                    mt = we(57202),
                    le = x(mt);

                function x(he) {
                    return he && he.__esModule ? he : {
                        default: he
                    }
                }
                const K = (0, Ee.default)("youtube-player"),
                    Q = {};
                Q.proxyEvents = he => {
                    const ot = {};
                    for (const it of tt.default) {
                        const Rt = "on" + it.slice(0, 1).toUpperCase() + it.slice(1);
                        ot[Rt] = Ft => {
                            K('event "%s"', Rt, Ft), he.trigger(it, Ft)
                        }
                    }
                    return ot
                }, Q.promisifyPlayer = (he, ot = !1) => {
                    const it = {};
                    for (const Rt of le.default) ot && Y.default[Rt] ? it[Rt] = (...Ft) => he.then(Dt => {
                        const dt = Y.default[Rt],
                            at = Dt.getPlayerState(),
                            bt = Dt[Rt].apply(Dt, Ft);
                        return dt.stateChangeRequired || Array.isArray(dt.acceptableStates) && !dt.acceptableStates.includes(at) ? new Promise(Wt => {
                            const fe = () => {
                                const Ge = Dt.getPlayerState();
                                let B;
                                typeof dt.timeout == "number" && (B = setTimeout(() => {
                                    Dt.removeEventListener("onStateChange", fe), Wt()
                                }, dt.timeout)), Array.isArray(dt.acceptableStates) && dt.acceptableStates.includes(Ge) && (Dt.removeEventListener("onStateChange", fe), clearTimeout(B), Wt())
                            };
                            Dt.addEventListener("onStateChange", fe)
                        }).then(() => bt) : bt
                    }) : it[Rt] = (...Ft) => he.then(Dt => Dt[Rt].apply(Dt, Ft));
                    return it
                }, Me.default = Q, wt.exports = Me.default
            },
            40805: (wt, Me, we) => {
                "use strict";
                var je = we(89249);
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.default = Me.Status = Me.MUX_PLAYBACK_TOKEN_TTL = void 0;
                var Ee = je(we(81987)),
                    Je = je(we(3504)),
                    Y = je(we(71184)),
                    Ct = je(we(66326)),
                    tt = je(we(29296)),
                    mt = je(we(38144));
                we(29521);
                var le = we(88481),
                    x = je(we(52121)),
                    K = ["refetchTimeout"],
                    Q = ["id", "onError", "thumbnailTime"];

                function he(dt, at) {
                    var bt = Object.keys(dt);
                    if (Object.getOwnPropertySymbols) {
                        var Wt = Object.getOwnPropertySymbols(dt);
                        at && (Wt = Wt.filter(function(fe) {
                            return Object.getOwnPropertyDescriptor(dt, fe).enumerable
                        })), bt.push.apply(bt, Wt)
                    }
                    return bt
                }

                function ot(dt) {
                    for (var at = 1; at < arguments.length; at++) {
                        var bt = arguments[at] != null ? arguments[at] : {};
                        at % 2 ? he(Object(bt), !0).forEach(function(Wt) {
                            (0, mt.default)(dt, Wt, bt[Wt])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(dt, Object.getOwnPropertyDescriptors(bt)) : he(Object(bt)).forEach(function(Wt) {
                            Object.defineProperty(dt, Wt, Object.getOwnPropertyDescriptor(bt, Wt))
                        })
                    }
                    return dt
                }
                var it = Me.MUX_PLAYBACK_TOKEN_TTL = 60 * 15 * 1e3,
                    Rt = {
                        uploadPending: "upload_pending",
                        processing: "processing",
                        error: "error",
                        ready: "ready"
                    },
                    Ft = Me.Status = {
                        pending: "pending",
                        prepared: "prepared",
                        error: "error"
                    },
                    Dt = Me.default = function() {
                        function dt(at, bt) {
                            (0, Ct.default)(this, dt), (0, mt.default)(this, "refetchTimeout", null), this.status = Ft.pending, this.rootElement = at, this.ready = this.init(bt)
                        }
                        return (0, tt.default)(dt, [{
                            key: "init",
                            value: function(bt) {
                                var Wt = this,
                                    fe = bt.refetchTimeout,
                                    Ge = fe === void 0 ? it : fe,
                                    B = (0, Y.default)(bt, K);
                                return this.refetchTimeout = setTimeout((0, Je.default)(Ee.default.mark(function Be() {
                                    return Ee.default.wrap(function(Ve) {
                                        for (;;) switch (Ve.prev = Ve.next) {
                                            case 0:
                                                return Ve.next = 2, Wt.destroy();
                                            case 2:
                                                Wt.init(bt);
                                            case 3:
                                            case "end":
                                                return Ve.stop()
                                        }
                                    }, Be)
                                })), Ge), this.initPlayer(B)
                            }
                        }, {
                            key: "initPlayer",
                            value: function() {
                                var at = (0, Je.default)(Ee.default.mark(function Wt(fe) {
                                    var Ge, B, Be, _, Ve, de, yt, Ir, ar, nt, dr;
                                    return Ee.default.wrap(function(V) {
                                        for (;;) switch (V.prev = V.next) {
                                            case 0:
                                                return Ge = fe.id, B = fe.onError, Be = fe.thumbnailTime, _ = (0, Y.default)(fe, Q), Ve = (0, le.buildMediaServiceUrl)(Ge, Be), V.prev = 2, V.next = 5, fetch(Ve);
                                            case 5:
                                                if (de = V.sent, de.ok) {
                                                    V.next = 10;
                                                    break
                                                }
                                                return this.status = Ft.error, B == null || B(new Error("".concat(de == null ? void 0 : de.status, " ").concat(de == null ? void 0 : de.statusText))), V.abrupt("return");
                                            case 10:
                                                return V.next = 12, de.json();
                                            case 12:
                                                if (yt = V.sent, Ir = yt.playback_url, ar = yt.thumbnail_url, nt = yt.transcode_status, nt !== Rt.error) {
                                                    V.next = 19;
                                                    break
                                                }
                                                return B == null || B(new Error("video transcoding failed")), V.abrupt("return");
                                            case 19:
                                                if (Ir) {
                                                    V.next = 22;
                                                    break
                                                }
                                                return B == null || B(new Error("missing playback_url")), V.abrupt("return");
                                            case 22:
                                                dr = (0, le.getIsAudioUrl)(Ge), this.videoPlayer = new x.default(this.rootElement, ot({
                                                    id: Ir,
                                                    thumbnailUrl: ar,
                                                    audioMode: dr
                                                }, _)), this.status = Ft.prepared, V.next = 31;
                                                break;
                                            case 27:
                                                V.prev = 27, V.t0 = V.catch(2), this.status = Ft.error, B == null || B(V.t0);
                                            case 31:
                                            case "end":
                                                return V.stop()
                                        }
                                    }, Wt, this, [
                                        [2, 27]
                                    ])
                                }));

                                function bt(Wt) {
                                    return at.apply(this, arguments)
                                }
                                return bt
                            }()
                        }, {
                            key: "isReady",
                            value: function() {
                                return this.ready
                            }
                        }, {
                            key: "pause",
                            value: function() {
                                this.videoPlayer.pause()
                            }
                        }, {
                            key: "play",
                            value: function() {
                                this.videoPlayer.play()
                            }
                        }, {
                            key: "stop",
                            value: function() {
                                this.videoPlayer.stop()
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                var at = (0, Je.default)(Ee.default.mark(function Wt() {
                                    var fe;
                                    return Ee.default.wrap(function(B) {
                                        for (;;) switch (B.prev = B.next) {
                                            case 0:
                                                return this.refetchTimeout && (clearTimeout(this.refetchTimeout), this.refetchTimeout = null), B.abrupt("return", (fe = this.videoPlayer) === null || fe === void 0 ? void 0 : fe.destroy());
                                            case 2:
                                            case "end":
                                                return B.stop()
                                        }
                                    }, Wt, this)
                                }));

                                function bt() {
                                    return at.apply(this, arguments)
                                }
                                return bt
                            }()
                        }])
                    }()
            },
            43921: wt => {
                "use strict";
                var Me;
                /**
                 * @link https://github.com/gajus/sister for the canonical source repository
                 * @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause
                 */
                Me = function() {
                    var we = {},
                        je = {};
                    return we.on = function(Ee, Je) {
                        var Y = {
                            name: Ee,
                            handler: Je
                        };
                        return je[Ee] = je[Ee] || [], je[Ee].unshift(Y), Y
                    }, we.off = function(Ee) {
                        var Je = je[Ee.name].indexOf(Ee);
                        Je !== -1 && je[Ee.name].splice(Je, 1)
                    }, we.trigger = function(Ee, Je) {
                        var Y = je[Ee],
                            Ct;
                        if (Y)
                            for (Ct = Y.length; Ct--;) Y[Ct].handler(Je)
                    }, we
                }, wt.exports = Me
            },
            45397: (wt, Me, we) => {
                "use strict";
                var je = we(89249);
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.default = ot;
                var Ee = je(we(38144)),
                    Je = je(we(54656)),
                    Y = je(we(96554)),
                    Ct = je(we(71177)),
                    tt = je(we(11304)),
                    mt = we(88431),
                    le = we(88481),
                    x = je(we(40805)),
                    K = je(we(52121)),
                    Q = function(Rt) {
                        return (0, le.isVimeoVideo)(Rt.id) ? {
                            url: Rt.id
                        } : {
                            id: parseInt(Rt.id)
                        }
                    },
                    he = (0, Ee.default)((0, Ee.default)((0, Ee.default)((0, Ee.default)((0, Ee.default)((0, Ee.default)({}, mt.YOUTUBE_PROVIDER, function(it, Rt) {
                        var Ft = (0, Y.default)(it, {
                                videoId: Rt.id,
                                playerVars: {
                                    autoplay: 0,
                                    disablekb: 1,
                                    modestbranding: 1,
                                    origin: window.location.origin,
                                    rel: 0,
                                    loop: 1
                                }
                            }),
                            Dt = new Promise(function(dt, at) {
                                Ft.on("ready", dt), Ft.on("error", at)
                            });
                        return {
                            loadVideo: function(at) {
                                var bt = at.id;
                                return Ft.loadVideoById(bt)
                            },
                            pause: function() {
                                return Ft.pauseVideo()
                            },
                            play: function() {
                                return Ft.playVideo()
                            },
                            onLoad: function() {
                                return Dt
                            },
                            destroy: Ft.destroy
                        }
                    }), mt.VIMEO_PROVIDER, function(it, Rt) {
                        var Ft = Q(Rt),
                            Dt = new Je.default(it, Ft);
                        return {
                            loadVideo: function(at) {
                                Dt.destroy(), Dt = new Je.default(it, Q(at))
                            },
                            pause: function() {
                                return Dt.pause()
                            },
                            play: function() {
                                return Dt.play()
                            },
                            onLoad: function() {
                                return Dt.ready()
                            },
                            destroy: function() {
                                return Dt.destroy()
                            }
                        }
                    }), mt.TYPEFORM_PROVIDER, function(it, Rt) {
                        var Ft = new x.default(it, Rt);
                        return {
                            pause: function() {
                                return Ft.pause()
                            },
                            play: function() {
                                return Ft.play()
                            },
                            stop: function() {
                                return Ft.stop()
                            },
                            destroy: function() {
                                return Ft.destroy()
                            },
                            loadVideo: function(dt) {
                                Ft = new x.default(it, dt)
                            }
                        }
                    }), mt.MUX_PROVIDER, function(it, Rt) {
                        var Ft = new K.default(it, Rt);
                        return {
                            pause: function() {
                                return Ft.pause()
                            },
                            play: function() {
                                return Ft.play()
                            },
                            stop: function() {
                                return Ft.stop()
                            },
                            destroy: function() {
                                return Ft.destroy()
                            },
                            loadVideo: function(dt) {
                                Ft = new K.default(it, dt)
                            }
                        }
                    }), mt.VIDEOASK_PROVIDER, function(it, Rt) {
                        var Ft = new Ct.default(it, {
                            id: Rt.id
                        });
                        return {
                            loadVideo: function(dt) {
                                var at = dt.id;
                                Ft = new Ct.default(it, {
                                    id: at
                                })
                            },
                            pause: function() {
                                return Ft.pause()
                            },
                            play: function() {
                                return Ft.play()
                            }
                        }
                    }), mt.PEXELS_PROVIDER, function(it, Rt) {
                        var Ft = new tt.default(it, Rt);
                        return {
                            loadVideo: function(dt) {
                                Ft = new tt.default(it, dt)
                            },
                            setCover: Ft.setCover,
                            pause: Ft.pause,
                            play: Ft.play
                        }
                    });

                function ot(it, Rt, Ft) {
                    if (!it || !he[Rt]) return null;
                    var Dt = he[Rt];
                    return Dt(it, Ft)
                }
            },
            52121: (wt, Me, we) => {
                "use strict";
                var je = we(89249);
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.interactionEvents = Me.fullScreenEvents = Me.default = Me.MuxPlayerAutoplay = void 0;
                var Ee = je(we(81987)),
                    Je = je(we(3504)),
                    Y = je(we(66326)),
                    Ct = je(we(29296)),
                    tt = je(we(38144)),
                    mt = je(we(74956)),
                    le = we(76322),
                    x = we(88481),
                    K = "white",
                    Q = "#655D67",
                    he = "transparent",
                    ot = "white",
                    it = "#7C7C7C",
                    Rt = "black",
                    Ft = "300px",
                    Dt = {
                        COVER: "--media-object-fit: cover;",
                        CONTAIN: "--media-object-fit: contain;"
                    },
                    dt = 300,
                    at = "after-playing",
                    bt = "autoplay",
                    Wt = "16px",
                    fe = function(Ir) {
                        return `
  <style>
    mux-player#`.concat(Ir, ` {
      height: 100%;
      --volume-range: none;
      --mute-button: none;
      --seek-backward-button: none;
      --seek-forward-button: none;
      border: 1px solid #514c4026;
      border-radius: 8px;
      overflow: hidden;
    }
  </style>`)
                    },
                    Ge = function(Ir) {
                        var ar = Ir.id,
                            nt = Ir.cover,
                            dr = nt === void 0 ? !1 : nt,
                            ai = Ir.hideCaptionsControl,
                            V = ai === void 0 ? !1 : ai;
                        return `
  <style>
    mux-player#`.concat(ar, ` {
      height: 100%;
      --seek-backward-button: none;
      --seek-forward-button: none;
      --bottom-controls: none;
      `).concat(dr ? Dt.COVER : Dt.CONTAIN, `
    }
    
    mux-player#`).concat(ar, ".").concat(at, ` {
      --bottom-controls: initial;
      --live-button: none;
      --airplay-button: none;
      --pip-button: none;
      --cast-button: none;
      --volume-range: none;
      --media-rendition-menu-button-display: none;
      --media-range-track-border-radius: 48px; 
    }
      
    mux-player#`).concat(ar, ".").concat(bt, ` {
      --play-button: none;
      --loading-indicator: none;
      cursor: pointer;
    }   

    mux-player#`).concat(ar, `::part(control-bar bottom) {
      background: linear-gradient(transparent, `).concat(Rt, `);
    }

    mux-player#`).concat(ar, `::part(bottom time display) {
      pointer-events: none;
      padding-left: `).concat(Wt, `;
    }
    
    mux-player#`).concat(ar, `::part(bottom play button) {
      padding-left: `).concat(Wt, `;
    }

    mux-player#`).concat(ar, `::part(bottom fullscreen button) {
      padding-right: `).concat(Wt, `;
    }

    mux-player#`).concat(ar, `::part(captions listbox) {
      background: rgba(0,0,0,0.5);
      border-radius: 8px;
      margin-right: 16px;
    }
    
    mux-player#`).concat(ar, `::part(captions) {
        display: `).concat(V ? "none" : "block", `;
    }

    mux-player#`).concat(ar, `::part(range) {
      padding: 0 `).concat(Wt, `;
    }

    @container (min-width: `).concat(Ft, `) {
      mux-player#`).concat(ar, ` {
        --bottom-play-button: none;
      }
    }
  </style>`)
                    },
                    B = function(Ir) {
                        var ar = Ir.id,
                            nt = Ir.cover,
                            dr = nt === void 0 ? !1 : nt,
                            ai = Ir.hideCaptionsControl,
                            V = ai === void 0 ? !1 : ai,
                            ce = Ir.isAudioMode,
                            Pe = ce === void 0 ? !1 : ce;
                        return Pe ? fe(ar) : Ge({
                            id: ar,
                            cover: dr,
                            hideCaptionsControl: V
                        })
                    },
                    Be = Me.fullScreenEvents = ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"],
                    _ = Me.interactionEvents = ["click", "touchend", "touchstart", "keydown"],
                    Ve = Me.MuxPlayerAutoplay = {
                        UNMUTED: "unmuted",
                        MUTED: "muted"
                    },
                    de = Me.default = function() {
                        function yt(Ir, ar) {
                            var nt = this,
                                dr = ar.cover,
                                ai = ar.audioMode,
                                V = ai === void 0 ? !1 : ai,
                                ce = ar.hideCaptionsControl,
                                Pe = ar.autoplay,
                                st = ar.thumbnailUrl,
                                ct = ar.id,
                                Fe = ar.onPlay,
                                ht = ar.onAutoplayFailed,
                                Er = ar.onEnded,
                                Xt = ar.metadata,
                                W = ar.timeUpdateDelay,
                                Zr = ar.onTimeUpdate;
                            (0, Y.default)(this, yt), (0, tt.default)(this, "handleTimeUpdate", function() {
                                var ni, Mi = nt.videoElement,
                                    si = Mi.currentTime,
                                    ti = Mi.duration;
                                (ni = nt.onTimeUpdate) === null || ni === void 0 || ni.call(nt, {
                                    currentTime: si,
                                    videoDuration: ti
                                })
                            }), (0, tt.default)(this, "showBottomControls", function() {
                                nt.videoElement.classList.add(at)
                            }), (0, tt.default)(this, "onFullScreenChange", function() {
                                nt.isFullScreen = !nt.isFullScreen;
                                var ni = nt.rootElement.innerHTML.includes(Dt.COVER);
                                ni && (nt.isFullScreen ? (nt.videoElement.removeAttribute(Dt.COVER), nt.videoElement.setAttribute("style", Dt.CONTAIN)) : (nt.videoElement.removeAttribute(Dt.CONTAIN), nt.videoElement.setAttribute("style", Dt.COVER)))
                            }), (0, tt.default)(this, "defaultAbortController", new AbortController), (0, tt.default)(this, "interactionController", new AbortController), (0, tt.default)(this, "onAutoplayClick", function() {
                                var ni = (0, Je.default)(Ee.default.mark(function Mi(si) {
                                    var ti;
                                    return Ee.default.wrap(function(Wr) {
                                        for (;;) switch (Wr.prev = Wr.next) {
                                            case 0:
                                                if (nt.interactionController.abort(), si.preventDefault(), Wr.prev = 2, !nt.videoElement.muted) {
                                                    Wr.next = 13;
                                                    break
                                                }
                                                return nt.pause(), nt.videoElement.currentTime = 0, nt.showBottomControls(), nt.videoElement.muted = !1, Wr.next = 10, nt.play();
                                            case 10:
                                                nt.videoElement.classList.remove(bt), (ti = nt.onPlay) === null || ti === void 0 || ti.call(nt, !1), nt.shouldMuteAutoplay = !1;
                                            case 13:
                                                nt.videoElement.addEventListener("play", function() {
                                                    var Cr;
                                                    return (Cr = nt.onPlay) === null || Cr === void 0 ? void 0 : Cr.call(nt, !1)
                                                }, {
                                                    signal: nt.defaultAbortController.signal
                                                }), Wr.next = 19;
                                                break;
                                            case 16:
                                                Wr.prev = 16, Wr.t0 = Wr.catch(2), console.error(Wr.t0);
                                            case 19:
                                            case "end":
                                                return Wr.stop()
                                        }
                                    }, Mi, null, [
                                        [2, 16]
                                    ])
                                }));
                                return function(Mi) {
                                    return ni.apply(this, arguments)
                                }
                            }()), (0, tt.default)(this, "checkAutoplay", function() {
                                var ni;
                                if (nt.videoElement.hasPlayed || !nt.videoElement.paused) {
                                    nt.handleOnAutoplay();
                                    return
                                }(ni = nt.onAutoplayFailed) === null || ni === void 0 || ni.call(nt), nt.videoElement.classList.remove(bt)
                            }), (0, tt.default)(this, "handleOnAutoplay", function() {
                                var ni, Mi = nt.interactionController.signal,
                                    si = !nt.videoElement.muted;
                                si || (nt.videoElement.classList.add(bt), nt.videoElement.defaultHiddenCaptions = !1), (ni = nt.onPlay) === null || ni === void 0 || ni.call(nt, !0, si), _.forEach(function(ti) {
                                    nt.videoElement.addEventListener(ti, nt.onAutoplayClick, {
                                        once: !0,
                                        signal: Mi
                                    })
                                })
                            }), (0, tt.default)(this, "handleOnEnded", function() {
                                if (nt.shouldMuteAutoplay) nt.reset();
                                else {
                                    var ni;
                                    (ni = nt.onEnded) === null || ni === void 0 || ni.call(nt)
                                }
                            }), this.isFullScreen = !1, this.isAutoplay = !!Pe, this.shouldMuteAutoplay = Pe === Ve.MUTED, this.thumbnailUrl = st, this.onPlay = Fe, this.onEnded = Er, this.onAutoplayFailed = ht, this.onTimeUpdate = Zr, this.throttledTimeUpdate = (0, le.throttle)(W || 1e3, this.handleTimeUpdate), this.audioMode = V, this.rootElement = Ir, globalThis != null && globalThis.MuxPlayerElement ? this.videoElement = new globalThis.MuxPlayerElement : this.videoElement = new mt.default, this.videoElement.src = ct;
                            var br = (0, x.getRandomHtmlElementId)();
                            this.videoElement.id = br, st && (this.videoElement.poster = st), this.videoElement.theme = "classic", this.videoElement.primaryColor = V ? Q : K, this.videoElement.accentColor = it, this.videoElement.secondaryColor = V ? ot : he, this.videoElement.defaultHiddenCaptions = !0, this.videoElement.noTooltips = !0, this.videoElement.audio = V, this.isAutoplay && (this.videoElement.defaultHiddenCaptions = ce), this.rootElement.innerHTML = B({
                                id: br,
                                cover: dr,
                                hideCaptionsControl: ce,
                                isAudioMode: V
                            }), this.rootElement.appendChild(this.videoElement), Xt && (this.videoElement.metadata = Xt), this.addEventListeners(), this.isAutoplay && this.tryToAutoplay(this.shouldMuteAutoplay)
                        }
                        return (0, Ct.default)(yt, [{
                            key: "pause",
                            value: function() {
                                this.videoElement.autoplay = !1, this.videoElement.pause()
                            }
                        }, {
                            key: "play",
                            value: function() {
                                return this.videoElement.play()
                            }
                        }, {
                            key: "stop",
                            value: function() {
                                var ar = this.videoElement.src;
                                this.videoElement.removeAttribute("src"), this.videoElement.src = ar, this.videoElement.autoplay = !1
                            }
                        }, {
                            key: "reset",
                            value: function() {
                                this.pause(), this.videoElement.currentTime = 0, this.thumbnailUrl && (this.videoElement.poster = this.thumbnailUrl)
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                var Ir = (0, Je.default)(Ee.default.mark(function nt() {
                                    return Ee.default.wrap(function(ai) {
                                        for (;;) switch (ai.prev = ai.next) {
                                            case 0:
                                                this.videoElement.remove(), this.rootElement.innerHTML = "", this.defaultAbortController.abort(), this.interactionController.abort();
                                            case 4:
                                            case "end":
                                                return ai.stop()
                                        }
                                    }, nt, this)
                                }));

                                function ar() {
                                    return Ir.apply(this, arguments)
                                }
                                return ar
                            }()
                        }, {
                            key: "tryToAutoplay",
                            value: function() {
                                var Ir = (0, Je.default)(function() {
                                    var nt = this,
                                        dr = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
                                    return Ee.default.mark(function ai() {
                                        return Ee.default.wrap(function(ce) {
                                            for (;;) switch (ce.prev = ce.next) {
                                                case 0:
                                                    return nt.videoElement.autoplay = !1, nt.videoElement.muted = dr, ce.prev = 2, ce.next = 5, nt.play().then(function() {
                                                        nt.videoElement.muted = nt.shouldMuteAutoplay, nt.handleOnAutoplay()
                                                    });
                                                case 5:
                                                    ce.next = 15;
                                                    break;
                                                case 7:
                                                    if (ce.prev = 7, ce.t0 = ce.catch(2), dr) {
                                                        ce.next = 12;
                                                        break
                                                    }
                                                    return nt.tryToAutoplay(!0), ce.abrupt("return");
                                                case 12:
                                                    nt.videoElement.autoplay = !0, nt.videoElement.muted = nt.shouldMuteAutoplay, setTimeout(nt.checkAutoplay, dt);
                                                case 15:
                                                case "end":
                                                    return ce.stop()
                                            }
                                        }, ai, null, [
                                            [2, 7]
                                        ])
                                    })()
                                });

                                function ar() {
                                    return Ir.apply(this, arguments)
                                }
                                return ar
                            }()
                        }, {
                            key: "addEventListeners",
                            value: function() {
                                var ar = this,
                                    nt = this.defaultAbortController.signal;
                                Be.map(function(dr) {
                                    ar.videoElement.addEventListener(dr, ar.onFullScreenChange, {
                                        signal: nt
                                    })
                                }), this.onPlay && !this.isAutoplay && this.videoElement.addEventListener("play", function() {
                                    var dr;
                                    return (dr = ar.onPlay) === null || dr === void 0 ? void 0 : dr.call(ar, !1)
                                }, {
                                    signal: nt
                                }), !this.audioMode && !this.shouldMuteAutoplay && this.videoElement.addEventListener("play", this.showBottomControls, {
                                    once: !0,
                                    signal: nt
                                }), this.onEnded && this.videoElement.addEventListener("ended", this.handleOnEnded, {
                                    signal: nt
                                }), this.onTimeUpdate && this.videoElement.addEventListener("timeupdate", this.throttledTimeUpdate, {
                                    signal: nt
                                })
                            }
                        }])
                    }()
            },
            54656: (wt, Me, we) => {
                "use strict";
                we.r(Me), we.d(Me, {
                    default: () => Tt
                }); /*! @vimeo/player v2.26.0 | (c) 2025 Vimeo | MIT License | https://github.com/vimeo/player.js */
                function je(ie, j) {
                    var Z = Object.keys(ie);
                    if (Object.getOwnPropertySymbols) {
                        var ne = Object.getOwnPropertySymbols(ie);
                        j && (ne = ne.filter(function(pe) {
                            return Object.getOwnPropertyDescriptor(ie, pe).enumerable
                        })), Z.push.apply(Z, ne)
                    }
                    return Z
                }

                function Ee(ie) {
                    for (var j = 1; j < arguments.length; j++) {
                        var Z = arguments[j] != null ? arguments[j] : {};
                        j % 2 ? je(Object(Z), !0).forEach(function(ne) {
                            x(ie, ne, Z[ne])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(ie, Object.getOwnPropertyDescriptors(Z)) : je(Object(Z)).forEach(function(ne) {
                            Object.defineProperty(ie, ne, Object.getOwnPropertyDescriptor(Z, ne))
                        })
                    }
                    return ie
                }

                function Je() {
                    Je = function() {
                        return ie
                    };
                    var ie = {},
                        j = Object.prototype,
                        Z = j.hasOwnProperty,
                        ne = Object.defineProperty || function(Ke, ge, Et) {
                            Ke[ge] = Et.value
                        },
                        pe = typeof Symbol == "function" ? Symbol : {},
                        De = pe.iterator || "@@iterator",
                        ze = pe.asyncIterator || "@@asyncIterator",
                        ft = pe.toStringTag || "@@toStringTag";

                    function gt(Ke, ge, Et) {
                        return Object.defineProperty(Ke, ge, {
                            value: Et,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), Ke[ge]
                    }
                    try {
                        gt({}, "")
                    } catch (Ke) {
                        gt = function(ge, Et, vr) {
                            return ge[Et] = vr
                        }
                    }

                    function qe(Ke, ge, Et, vr) {
                        var tr = ge && ge.prototype instanceof Ar ? ge : Ar,
                            Tr = Object.create(tr.prototype),
                            Vt = new oe(vr || []);
                        return ne(Tr, "_invoke", {
                            value: sr(Ke, Et, Vt)
                        }), Tr
                    }

                    function wr(Ke, ge, Et) {
                        try {
                            return {
                                type: "normal",
                                arg: Ke.call(ge, Et)
                            }
                        } catch (vr) {
                            return {
                                type: "throw",
                                arg: vr
                            }
                        }
                    }
                    ie.wrap = qe;
                    var kr = {};

                    function Ar() {}

                    function $t() {}

                    function hr() {}
                    var Gi = {};
                    gt(Gi, De, function() {
                        return this
                    });
                    var vt = Object.getPrototypeOf,
                        oi = vt && vt(vt(Ut([])));
                    oi && oi !== j && Z.call(oi, De) && (Gi = oi);
                    var Mt = hr.prototype = Ar.prototype = Object.create(Gi);

                    function Ht(Ke) {
                        ["next", "throw", "return"].forEach(function(ge) {
                            gt(Ke, ge, function(Et) {
                                return this._invoke(ge, Et)
                            })
                        })
                    }

                    function Ze(Ke, ge) {
                        function Et(tr, Tr, Vt, Si) {
                            var Qi = wr(Ke[tr], Ke, Tr);
                            if (Qi.type !== "throw") {
                                var Ma = Qi.arg,
                                    Ti = Ma.value;
                                return Ti && typeof Ti == "object" && Z.call(Ti, "__await") ? ge.resolve(Ti.__await).then(function(Ri) {
                                    Et("next", Ri, Vt, Si)
                                }, function(Ri) {
                                    Et("throw", Ri, Vt, Si)
                                }) : ge.resolve(Ti).then(function(Ri) {
                                    Ma.value = Ri, Vt(Ma)
                                }, function(Ri) {
                                    return Et("throw", Ri, Vt, Si)
                                })
                            }
                            Si(Qi.arg)
                        }
                        var vr;
                        ne(this, "_invoke", {
                            value: function(tr, Tr) {
                                function Vt() {
                                    return new ge(function(Si, Qi) {
                                        Et(tr, Tr, Si, Qi)
                                    })
                                }
                                return vr = vr ? vr.then(Vt, Vt) : Vt()
                            }
                        })
                    }

                    function sr(Ke, ge, Et) {
                        var vr = "suspendedStart";
                        return function(tr, Tr) {
                            if (vr === "executing") throw new Error("Generator is already running");
                            if (vr === "completed") {
                                if (tr === "throw") throw Tr;
                                return yi()
                            }
                            for (Et.method = tr, Et.arg = Tr;;) {
                                var Vt = Et.delegate;
                                if (Vt) {
                                    var Si = mr(Vt, Et);
                                    if (Si) {
                                        if (Si === kr) continue;
                                        return Si
                                    }
                                }
                                if (Et.method === "next") Et.sent = Et._sent = Et.arg;
                                else if (Et.method === "throw") {
                                    if (vr === "suspendedStart") throw vr = "completed", Et.arg;
                                    Et.dispatchException(Et.arg)
                                } else Et.method === "return" && Et.abrupt("return", Et.arg);
                                vr = "executing";
                                var Qi = wr(Ke, ge, Et);
                                if (Qi.type === "normal") {
                                    if (vr = Et.done ? "completed" : "suspendedYield", Qi.arg === kr) continue;
                                    return {
                                        value: Qi.arg,
                                        done: Et.done
                                    }
                                }
                                Qi.type === "throw" && (vr = "completed", Et.method = "throw", Et.arg = Qi.arg)
                            }
                        }
                    }

                    function mr(Ke, ge) {
                        var Et = ge.method,
                            vr = Ke.iterator[Et];
                        if (vr === void 0) return ge.delegate = null, Et === "throw" && Ke.iterator.return && (ge.method = "return", ge.arg = void 0, mr(Ke, ge), ge.method === "throw") || Et !== "return" && (ge.method = "throw", ge.arg = new TypeError("The iterator does not provide a '" + Et + "' method")), kr;
                        var tr = wr(vr, Ke.iterator, ge.arg);
                        if (tr.type === "throw") return ge.method = "throw", ge.arg = tr.arg, ge.delegate = null, kr;
                        var Tr = tr.arg;
                        return Tr ? Tr.done ? (ge[Ke.resultName] = Tr.value, ge.next = Ke.nextLoc, ge.method !== "return" && (ge.method = "next", ge.arg = void 0), ge.delegate = null, kr) : Tr : (ge.method = "throw", ge.arg = new TypeError("iterator result is not an object"), ge.delegate = null, kr)
                    }

                    function Lr(Ke) {
                        var ge = {
                            tryLoc: Ke[0]
                        };
                        1 in Ke && (ge.catchLoc = Ke[1]), 2 in Ke && (ge.finallyLoc = Ke[2], ge.afterLoc = Ke[3]), this.tryEntries.push(ge)
                    }

                    function Yt(Ke) {
                        var ge = Ke.completion || {};
                        ge.type = "normal", delete ge.arg, Ke.completion = ge
                    }

                    function oe(Ke) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], Ke.forEach(Lr, this), this.reset(!0)
                    }

                    function Ut(Ke) {
                        if (Ke) {
                            var ge = Ke[De];
                            if (ge) return ge.call(Ke);
                            if (typeof Ke.next == "function") return Ke;
                            if (!isNaN(Ke.length)) {
                                var Et = -1,
                                    vr = function tr() {
                                        for (; ++Et < Ke.length;)
                                            if (Z.call(Ke, Et)) return tr.value = Ke[Et], tr.done = !1, tr;
                                        return tr.value = void 0, tr.done = !0, tr
                                    };
                                return vr.next = vr
                            }
                        }
                        return {
                            next: yi
                        }
                    }

                    function yi() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return $t.prototype = hr, ne(Mt, "constructor", {
                        value: hr,
                        configurable: !0
                    }), ne(hr, "constructor", {
                        value: $t,
                        configurable: !0
                    }), $t.displayName = gt(hr, ft, "GeneratorFunction"), ie.isGeneratorFunction = function(Ke) {
                        var ge = typeof Ke == "function" && Ke.constructor;
                        return !!ge && (ge === $t || (ge.displayName || ge.name) === "GeneratorFunction")
                    }, ie.mark = function(Ke) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(Ke, hr) : (Ke.__proto__ = hr, gt(Ke, ft, "GeneratorFunction")), Ke.prototype = Object.create(Mt), Ke
                    }, ie.awrap = function(Ke) {
                        return {
                            __await: Ke
                        }
                    }, Ht(Ze.prototype), gt(Ze.prototype, ze, function() {
                        return this
                    }), ie.AsyncIterator = Ze, ie.async = function(Ke, ge, Et, vr, tr) {
                        tr === void 0 && (tr = Promise);
                        var Tr = new Ze(qe(Ke, ge, Et, vr), tr);
                        return ie.isGeneratorFunction(ge) ? Tr : Tr.next().then(function(Vt) {
                            return Vt.done ? Vt.value : Tr.next()
                        })
                    }, Ht(Mt), gt(Mt, ft, "Generator"), gt(Mt, De, function() {
                        return this
                    }), gt(Mt, "toString", function() {
                        return "[object Generator]"
                    }), ie.keys = function(Ke) {
                        var ge = Object(Ke),
                            Et = [];
                        for (var vr in ge) Et.push(vr);
                        return Et.reverse(),
                            function tr() {
                                for (; Et.length;) {
                                    var Tr = Et.pop();
                                    if (Tr in ge) return tr.value = Tr, tr.done = !1, tr
                                }
                                return tr.done = !0, tr
                            }
                    }, ie.values = Ut, oe.prototype = {
                        constructor: oe,
                        reset: function(Ke) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(Yt), !Ke)
                                for (var ge in this) ge.charAt(0) === "t" && Z.call(this, ge) && !isNaN(+ge.slice(1)) && (this[ge] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var Ke = this.tryEntries[0].completion;
                            if (Ke.type === "throw") throw Ke.arg;
                            return this.rval
                        },
                        dispatchException: function(Ke) {
                            if (this.done) throw Ke;
                            var ge = this;

                            function Et(Qi, Ma) {
                                return Tr.type = "throw", Tr.arg = Ke, ge.next = Qi, Ma && (ge.method = "next", ge.arg = void 0), !!Ma
                            }
                            for (var vr = this.tryEntries.length - 1; vr >= 0; --vr) {
                                var tr = this.tryEntries[vr],
                                    Tr = tr.completion;
                                if (tr.tryLoc === "root") return Et("end");
                                if (tr.tryLoc <= this.prev) {
                                    var Vt = Z.call(tr, "catchLoc"),
                                        Si = Z.call(tr, "finallyLoc");
                                    if (Vt && Si) {
                                        if (this.prev < tr.catchLoc) return Et(tr.catchLoc, !0);
                                        if (this.prev < tr.finallyLoc) return Et(tr.finallyLoc)
                                    } else if (Vt) {
                                        if (this.prev < tr.catchLoc) return Et(tr.catchLoc, !0)
                                    } else {
                                        if (!Si) throw new Error("try statement without catch or finally");
                                        if (this.prev < tr.finallyLoc) return Et(tr.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(Ke, ge) {
                            for (var Et = this.tryEntries.length - 1; Et >= 0; --Et) {
                                var vr = this.tryEntries[Et];
                                if (vr.tryLoc <= this.prev && Z.call(vr, "finallyLoc") && this.prev < vr.finallyLoc) {
                                    var tr = vr;
                                    break
                                }
                            }
                            tr && (Ke === "break" || Ke === "continue") && tr.tryLoc <= ge && ge <= tr.finallyLoc && (tr = null);
                            var Tr = tr ? tr.completion : {};
                            return Tr.type = Ke, Tr.arg = ge, tr ? (this.method = "next", this.next = tr.finallyLoc, kr) : this.complete(Tr)
                        },
                        complete: function(Ke, ge) {
                            if (Ke.type === "throw") throw Ke.arg;
                            return Ke.type === "break" || Ke.type === "continue" ? this.next = Ke.arg : Ke.type === "return" ? (this.rval = this.arg = Ke.arg, this.method = "return", this.next = "end") : Ke.type === "normal" && ge && (this.next = ge), kr
                        },
                        finish: function(Ke) {
                            for (var ge = this.tryEntries.length - 1; ge >= 0; --ge) {
                                var Et = this.tryEntries[ge];
                                if (Et.finallyLoc === Ke) return this.complete(Et.completion, Et.afterLoc), Yt(Et), kr
                            }
                        },
                        catch: function(Ke) {
                            for (var ge = this.tryEntries.length - 1; ge >= 0; --ge) {
                                var Et = this.tryEntries[ge];
                                if (Et.tryLoc === Ke) {
                                    var vr = Et.completion;
                                    if (vr.type === "throw") {
                                        var tr = vr.arg;
                                        Yt(Et)
                                    }
                                    return tr
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(Ke, ge, Et) {
                            return this.delegate = {
                                iterator: Ut(Ke),
                                resultName: ge,
                                nextLoc: Et
                            }, this.method === "next" && (this.arg = void 0), kr
                        }
                    }, ie
                }

                function Y(ie, j, Z, ne, pe, De, ze) {
                    try {
                        var ft = ie[De](ze),
                            gt = ft.value
                    } catch (qe) {
                        Z(qe);
                        return
                    }
                    ft.done ? j(gt) : Promise.resolve(gt).then(ne, pe)
                }

                function Ct(ie) {
                    return function() {
                        var j = this,
                            Z = arguments;
                        return new Promise(function(ne, pe) {
                            var De = ie.apply(j, Z);

                            function ze(gt) {
                                Y(De, ne, pe, ze, ft, "next", gt)
                            }

                            function ft(gt) {
                                Y(De, ne, pe, ze, ft, "throw", gt)
                            }
                            ze(void 0)
                        })
                    }
                }

                function tt(ie, j) {
                    if (!(ie instanceof j)) throw new TypeError("Cannot call a class as a function")
                }

                function mt(ie, j) {
                    for (var Z = 0; Z < j.length; Z++) {
                        var ne = j[Z];
                        ne.enumerable = ne.enumerable || !1, ne.configurable = !0, "value" in ne && (ne.writable = !0), Object.defineProperty(ie, Wt(ne.key), ne)
                    }
                }

                function le(ie, j, Z) {
                    return j && mt(ie.prototype, j), Z && mt(ie, Z), Object.defineProperty(ie, "prototype", {
                        writable: !1
                    }), ie
                }

                function x(ie, j, Z) {
                    return j = Wt(j), j in ie ? Object.defineProperty(ie, j, {
                        value: Z,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : ie[j] = Z, ie
                }

                function K(ie, j) {
                    if (typeof j != "function" && j !== null) throw new TypeError("Super expression must either be null or a function");
                    ie.prototype = Object.create(j && j.prototype, {
                        constructor: {
                            value: ie,
                            writable: !0,
                            configurable: !0
                        }
                    }), Object.defineProperty(ie, "prototype", {
                        writable: !1
                    }), j && he(ie, j)
                }

                function Q(ie) {
                    return Q = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Z) {
                        return Z.__proto__ || Object.getPrototypeOf(Z)
                    }, Q(ie)
                }

                function he(ie, j) {
                    return he = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ne, pe) {
                        return ne.__proto__ = pe, ne
                    }, he(ie, j)
                }

                function ot() {
                    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham) return !1;
                    if (typeof Proxy == "function") return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                    } catch (ie) {
                        return !1
                    }
                }

                function it(ie, j, Z) {
                    return ot() ? it = Reflect.construct.bind() : it = function(pe, De, ze) {
                        var ft = [null];
                        ft.push.apply(ft, De);
                        var gt = Function.bind.apply(pe, ft),
                            qe = new gt;
                        return ze && he(qe, ze.prototype), qe
                    }, it.apply(null, arguments)
                }

                function Rt(ie) {
                    return Function.toString.call(ie).indexOf("[native code]") !== -1
                }

                function Ft(ie) {
                    var j = typeof Map == "function" ? new Map : void 0;
                    return Ft = function(ne) {
                        if (ne === null || !Rt(ne)) return ne;
                        if (typeof ne != "function") throw new TypeError("Super expression must either be null or a function");
                        if (typeof j != "undefined") {
                            if (j.has(ne)) return j.get(ne);
                            j.set(ne, pe)
                        }

                        function pe() {
                            return it(ne, arguments, Q(this).constructor)
                        }
                        return pe.prototype = Object.create(ne.prototype, {
                            constructor: {
                                value: pe,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), he(pe, ne)
                    }, Ft(ie)
                }

                function Dt(ie) {
                    if (ie === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return ie
                }

                function dt(ie, j) {
                    if (j && (typeof j == "object" || typeof j == "function")) return j;
                    if (j !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
                    return Dt(ie)
                }

                function at(ie) {
                    var j = ot();
                    return function() {
                        var ne = Q(ie),
                            pe;
                        if (j) {
                            var De = Q(this).constructor;
                            pe = Reflect.construct(ne, arguments, De)
                        } else pe = ne.apply(this, arguments);
                        return dt(this, pe)
                    }
                }

                function bt(ie, j) {
                    if (typeof ie != "object" || ie === null) return ie;
                    var Z = ie[Symbol.toPrimitive];
                    if (Z !== void 0) {
                        var ne = Z.call(ie, j || "default");
                        if (typeof ne != "object") return ne;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return (j === "string" ? String : Number)(ie)
                }

                function Wt(ie) {
                    var j = bt(ie, "string");
                    return typeof j == "symbol" ? j : String(j)
                }
                var fe = typeof we.g != "undefined" && {}.toString.call(we.g) === "[object global]";

                function Ge(ie, j) {
                    return ie.indexOf(j.toLowerCase()) === 0 ? ie : "".concat(j.toLowerCase()).concat(ie.substr(0, 1).toUpperCase()).concat(ie.substr(1))
                }

                function B(ie) {
                    return !!(ie && ie.nodeType === 1 && "nodeName" in ie && ie.ownerDocument && ie.ownerDocument.defaultView)
                }

                function Be(ie) {
                    return !isNaN(parseFloat(ie)) && isFinite(ie) && Math.floor(ie) == ie
                }

                function _(ie) {
                    return /^(https?:)?\/\/((((player|www)\.)?vimeo\.com)|((player\.)?[a-zA-Z0-9-]+\.(videoji\.(hk|cn)|vimeo\.work)))(?=$|\/)/.test(ie)
                }

                function Ve(ie) {
                    var j = /^https:\/\/player\.((vimeo\.com)|([a-zA-Z0-9-]+\.(videoji\.(hk|cn)|vimeo\.work)))\/video\/\d+/;
                    return j.test(ie)
                }

                function de(ie) {
                    for (var j = (ie || "").match(/^(?:https?:)?(?:\/\/)?([^/?]+)/), Z = (j && j[1] || "").replace("player.", ""), ne = [".videoji.hk", ".vimeo.work", ".videoji.cn"], pe = 0, De = ne; pe < De.length; pe++) {
                        var ze = De[pe];
                        if (Z.endsWith(ze)) return Z
                    }
                    return "vimeo.com"
                }

                function yt() {
                    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
                        j = ie.id,
                        Z = ie.url,
                        ne = j || Z;
                    if (!ne) throw new Error("An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.");
                    if (Be(ne)) return "https://vimeo.com/".concat(ne);
                    if (_(ne)) return ne.replace("http:", "https:");
                    throw j ? new TypeError("\u201C".concat(j, "\u201D is not a valid video id.")) : new TypeError("\u201C".concat(ne, "\u201D is not a vimeo.com url."))
                }
                var Ir = function(j, Z, ne) {
                        var pe = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "addEventListener",
                            De = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "removeEventListener",
                            ze = typeof Z == "string" ? [Z] : Z;
                        return ze.forEach(function(ft) {
                            j[pe](ft, ne)
                        }), {
                            cancel: function() {
                                return ze.forEach(function(gt) {
                                    return j[De](gt, ne)
                                })
                            }
                        }
                    },
                    ar = typeof Array.prototype.indexOf != "undefined",
                    nt = typeof window != "undefined" && typeof window.postMessage != "undefined";
                if (!fe && (!ar || !nt)) throw new Error("Sorry, the Vimeo Player API is not available in this browser.");
                var dr = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof we.g != "undefined" ? we.g : typeof self != "undefined" ? self : {};

                function ai(ie, j) {
                    return j = {
                        exports: {}
                    }, ie(j, j.exports), j.exports
                }
                /*!
                 * weakmap-polyfill v2.0.4 - ECMAScript6 WeakMap polyfill
                 * https://github.com/polygonplanet/weakmap-polyfill
                 * Copyright (c) 2015-2021 polygonplanet <polygon.planet.aqua@gmail.com>
                 * @license MIT
                 */
                (function(ie) {
                    if (ie.WeakMap) return;
                    var j = Object.prototype.hasOwnProperty,
                        Z = Object.defineProperty && function() {
                            try {
                                return Object.defineProperty({}, "x", {
                                    value: 1
                                }).x === 1
                            } catch (De) {}
                        }(),
                        ne = function(De, ze, ft) {
                            Z ? Object.defineProperty(De, ze, {
                                configurable: !0,
                                writable: !0,
                                value: ft
                            }) : De[ze] = ft
                        };
                    ie.WeakMap = function() {
                        function De() {
                            if (this === void 0) throw new TypeError("Constructor WeakMap requires 'new'");
                            if (ne(this, "_id", ft("_WeakMap")), arguments.length > 0) throw new TypeError("WeakMap iterable is not supported")
                        }
                        ne(De.prototype, "delete", function(qe) {
                            if (ze(this, "delete"), !pe(qe)) return !1;
                            var wr = qe[this._id];
                            return wr && wr[0] === qe ? (delete qe[this._id], !0) : !1
                        }), ne(De.prototype, "get", function(qe) {
                            if (ze(this, "get"), !!pe(qe)) {
                                var wr = qe[this._id];
                                if (wr && wr[0] === qe) return wr[1]
                            }
                        }), ne(De.prototype, "has", function(qe) {
                            if (ze(this, "has"), !pe(qe)) return !1;
                            var wr = qe[this._id];
                            return !!(wr && wr[0] === qe)
                        }), ne(De.prototype, "set", function(qe, wr) {
                            if (ze(this, "set"), !pe(qe)) throw new TypeError("Invalid value used as weak map key");
                            var kr = qe[this._id];
                            return kr && kr[0] === qe ? (kr[1] = wr, this) : (ne(qe, this._id, [qe, wr]), this)
                        });

                        function ze(qe, wr) {
                            if (!pe(qe) || !j.call(qe, "_id")) throw new TypeError(wr + " method called on incompatible receiver " + typeof qe)
                        }

                        function ft(qe) {
                            return qe + "_" + gt() + "." + gt()
                        }

                        function gt() {
                            return Math.random().toString().substring(2)
                        }
                        return ne(De, "_polyfill", !0), De
                    }();

                    function pe(De) {
                        return Object(De) === De
                    }
                })(typeof globalThis != "undefined" ? globalThis : typeof self != "undefined" ? self : typeof window != "undefined" ? window : dr);
                var V = ai(function(ie) {
                        /*! Native Promise Only
                            v0.8.1 (c) Kyle Simpson
                            MIT License: http://getify.mit-license.org
                        */
                        (function(Z, ne, pe) {
                            ne[Z] = ne[Z] || pe(), ie.exports && (ie.exports = ne[Z])
                        })("Promise", dr, function() {
                            var Z, ne, pe, De = Object.prototype.toString,
                                ze = typeof setImmediate != "undefined" ? function(Ht) {
                                    return setImmediate(Ht)
                                } : setTimeout;
                            try {
                                Object.defineProperty({}, "x", {}), Z = function(Ht, Ze, sr, mr) {
                                    return Object.defineProperty(Ht, Ze, {
                                        value: sr,
                                        writable: !0,
                                        configurable: mr !== !1
                                    })
                                }
                            } catch (Mt) {
                                Z = function(Ze, sr, mr) {
                                    return Ze[sr] = mr, Ze
                                }
                            }
                            pe = function() {
                                var Ht, Ze, sr;

                                function mr(Lr, Yt) {
                                    this.fn = Lr, this.self = Yt, this.next = void 0
                                }
                                return {
                                    add: function(Yt, oe) {
                                        sr = new mr(Yt, oe), Ze ? Ze.next = sr : Ht = sr, Ze = sr, sr = void 0
                                    },
                                    drain: function() {
                                        var Yt = Ht;
                                        for (Ht = Ze = ne = void 0; Yt;) Yt.fn.call(Yt.self), Yt = Yt.next
                                    }
                                }
                            }();

                            function ft(Mt, Ht) {
                                pe.add(Mt, Ht), ne || (ne = ze(pe.drain))
                            }

                            function gt(Mt) {
                                var Ht, Ze = typeof Mt;
                                return Mt != null && (Ze == "object" || Ze == "function") && (Ht = Mt.then), typeof Ht == "function" ? Ht : !1
                            }

                            function qe() {
                                for (var Mt = 0; Mt < this.chain.length; Mt++) wr(this, this.state === 1 ? this.chain[Mt].success : this.chain[Mt].failure, this.chain[Mt]);
                                this.chain.length = 0
                            }

                            function wr(Mt, Ht, Ze) {
                                var sr, mr;
                                try {
                                    Ht === !1 ? Ze.reject(Mt.msg) : (Ht === !0 ? sr = Mt.msg : sr = Ht.call(void 0, Mt.msg), sr === Ze.promise ? Ze.reject(TypeError("Promise-chain cycle")) : (mr = gt(sr)) ? mr.call(sr, Ze.resolve, Ze.reject) : Ze.resolve(sr))
                                } catch (Lr) {
                                    Ze.reject(Lr)
                                }
                            }

                            function kr(Mt) {
                                var Ht, Ze = this;
                                if (!Ze.triggered) {
                                    Ze.triggered = !0, Ze.def && (Ze = Ze.def);
                                    try {
                                        (Ht = gt(Mt)) ? ft(function() {
                                            var sr = new hr(Ze);
                                            try {
                                                Ht.call(Mt, function() {
                                                    kr.apply(sr, arguments)
                                                }, function() {
                                                    Ar.apply(sr, arguments)
                                                })
                                            } catch (mr) {
                                                Ar.call(sr, mr)
                                            }
                                        }): (Ze.msg = Mt, Ze.state = 1, Ze.chain.length > 0 && ft(qe, Ze))
                                    } catch (sr) {
                                        Ar.call(new hr(Ze), sr)
                                    }
                                }
                            }

                            function Ar(Mt) {
                                var Ht = this;
                                Ht.triggered || (Ht.triggered = !0, Ht.def && (Ht = Ht.def), Ht.msg = Mt, Ht.state = 2, Ht.chain.length > 0 && ft(qe, Ht))
                            }

                            function $t(Mt, Ht, Ze, sr) {
                                for (var mr = 0; mr < Ht.length; mr++)(function(Yt) {
                                    Mt.resolve(Ht[Yt]).then(function(Ut) {
                                        Ze(Yt, Ut)
                                    }, sr)
                                })(mr)
                            }

                            function hr(Mt) {
                                this.def = Mt, this.triggered = !1
                            }

                            function Gi(Mt) {
                                this.promise = Mt, this.state = 0, this.triggered = !1, this.chain = [], this.msg = void 0
                            }

                            function vt(Mt) {
                                if (typeof Mt != "function") throw TypeError("Not a function");
                                if (this.__NPO__ !== 0) throw TypeError("Not a promise");
                                this.__NPO__ = 1;
                                var Ht = new Gi(this);
                                this.then = function(sr, mr) {
                                    var Lr = {
                                        success: typeof sr == "function" ? sr : !0,
                                        failure: typeof mr == "function" ? mr : !1
                                    };
                                    return Lr.promise = new this.constructor(function(oe, Ut) {
                                        if (typeof oe != "function" || typeof Ut != "function") throw TypeError("Not a function");
                                        Lr.resolve = oe, Lr.reject = Ut
                                    }), Ht.chain.push(Lr), Ht.state !== 0 && ft(qe, Ht), Lr.promise
                                }, this.catch = function(sr) {
                                    return this.then(void 0, sr)
                                };
                                try {
                                    Mt.call(void 0, function(sr) {
                                        kr.call(Ht, sr)
                                    }, function(sr) {
                                        Ar.call(Ht, sr)
                                    })
                                } catch (Ze) {
                                    Ar.call(Ht, Ze)
                                }
                            }
                            var oi = Z({}, "constructor", vt, !1);
                            return vt.prototype = oi, Z(oi, "__NPO__", 0, !1), Z(vt, "resolve", function(Ht) {
                                var Ze = this;
                                return Ht && typeof Ht == "object" && Ht.__NPO__ === 1 ? Ht : new Ze(function(mr, Lr) {
                                    if (typeof mr != "function" || typeof Lr != "function") throw TypeError("Not a function");
                                    mr(Ht)
                                })
                            }), Z(vt, "reject", function(Ht) {
                                return new this(function(sr, mr) {
                                    if (typeof sr != "function" || typeof mr != "function") throw TypeError("Not a function");
                                    mr(Ht)
                                })
                            }), Z(vt, "all", function(Ht) {
                                var Ze = this;
                                return De.call(Ht) != "[object Array]" ? Ze.reject(TypeError("Not an array")) : Ht.length === 0 ? Ze.resolve([]) : new Ze(function(mr, Lr) {
                                    if (typeof mr != "function" || typeof Lr != "function") throw TypeError("Not a function");
                                    var Yt = Ht.length,
                                        oe = Array(Yt),
                                        Ut = 0;
                                    $t(Ze, Ht, function(Ke, ge) {
                                        oe[Ke] = ge, ++Ut === Yt && mr(oe)
                                    }, Lr)
                                })
                            }), Z(vt, "race", function(Ht) {
                                var Ze = this;
                                return De.call(Ht) != "[object Array]" ? Ze.reject(TypeError("Not an array")) : new Ze(function(mr, Lr) {
                                    if (typeof mr != "function" || typeof Lr != "function") throw TypeError("Not a function");
                                    $t(Ze, Ht, function(oe, Ut) {
                                        mr(Ut)
                                    }, Lr)
                                })
                            }), vt
                        })
                    }),
                    ce = new WeakMap;

                function Pe(ie, j, Z) {
                    var ne = ce.get(ie.element) || {};
                    j in ne || (ne[j] = []), ne[j].push(Z), ce.set(ie.element, ne)
                }

                function st(ie, j) {
                    var Z = ce.get(ie.element) || {};
                    return Z[j] || []
                }

                function ct(ie, j, Z) {
                    var ne = ce.get(ie.element) || {};
                    if (!ne[j]) return !0;
                    if (!Z) return ne[j] = [], ce.set(ie.element, ne), !0;
                    var pe = ne[j].indexOf(Z);
                    return pe !== -1 && ne[j].splice(pe, 1), ce.set(ie.element, ne), ne[j] && ne[j].length === 0
                }

                function Fe(ie, j) {
                    var Z = st(ie, j);
                    if (Z.length < 1) return !1;
                    var ne = Z.shift();
                    return ct(ie, j, ne), ne
                }

                function ht(ie, j) {
                    var Z = ce.get(ie);
                    ce.set(j, Z), ce.delete(ie)
                }

                function Er(ie) {
                    if (typeof ie == "string") try {
                        ie = JSON.parse(ie)
                    } catch (j) {
                        return console.warn(j), {}
                    }
                    return ie
                }

                function Xt(ie, j, Z) {
                    if (!(!ie.element.contentWindow || !ie.element.contentWindow.postMessage)) {
                        var ne = {
                            method: j
                        };
                        Z !== void 0 && (ne.value = Z);
                        var pe = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\d+).*$/, "$1"));
                        pe >= 8 && pe < 10 && (ne = JSON.stringify(ne)), ie.element.contentWindow.postMessage(ne, ie.origin)
                    }
                }

                function W(ie, j) {
                    j = Er(j);
                    var Z = [],
                        ne;
                    if (j.event) {
                        if (j.event === "error") {
                            var pe = st(ie, j.data.method);
                            pe.forEach(function(ze) {
                                var ft = new Error(j.data.message);
                                ft.name = j.data.name, ze.reject(ft), ct(ie, j.data.method, ze)
                            })
                        }
                        Z = st(ie, "event:".concat(j.event)), ne = j.data
                    } else if (j.method) {
                        var De = Fe(ie, j.method);
                        De && (Z.push(De), ne = j.value)
                    }
                    Z.forEach(function(ze) {
                        try {
                            if (typeof ze == "function") {
                                ze.call(ie, ne);
                                return
                            }
                            ze.resolve(ne)
                        } catch (ft) {}
                    })
                }
                var Zr = ["airplay", "audio_tracks", "audiotrack", "autopause", "autoplay", "background", "byline", "cc", "chapter_id", "chapters", "chromecast", "color", "colors", "controls", "dnt", "end_time", "fullscreen", "height", "id", "interactive_params", "keyboard", "loop", "maxheight", "maxwidth", "muted", "play_button_position", "playsinline", "portrait", "progress_bar", "quality_selector", "responsive", "skipping_forward", "speed", "start_time", "texttrack", "title", "transcript", "transparent", "unmute_button", "url", "vimeo_logo", "volume", "watch_full_video", "width"];

                function br(ie) {
                    var j = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    return Zr.reduce(function(Z, ne) {
                        var pe = ie.getAttribute("data-vimeo-".concat(ne));
                        return (pe || pe === "") && (Z[ne] = pe === "" ? 1 : pe), Z
                    }, j)
                }

                function ni(ie, j) {
                    var Z = ie.html;
                    if (!j) throw new TypeError("An element must be provided");
                    if (j.getAttribute("data-vimeo-initialized") !== null) return j.querySelector("iframe");
                    var ne = document.createElement("div");
                    return ne.innerHTML = Z, j.appendChild(ne.firstChild), j.setAttribute("data-vimeo-initialized", "true"), j.querySelector("iframe")
                }

                function Mi(ie) {
                    var j = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
                        Z = arguments.length > 2 ? arguments[2] : void 0;
                    return new Promise(function(ne, pe) {
                        if (!_(ie)) throw new TypeError("\u201C".concat(ie, "\u201D is not a vimeo.com url."));
                        var De = de(ie),
                            ze = "https://".concat(De, "/api/oembed.json?url=").concat(encodeURIComponent(ie));
                        for (var ft in j) j.hasOwnProperty(ft) && (ze += "&".concat(ft, "=").concat(encodeURIComponent(j[ft])));
                        var gt = "XDomainRequest" in window ? new XDomainRequest : new XMLHttpRequest;
                        gt.open("GET", ze, !0), gt.onload = function() {
                            if (gt.status === 404) {
                                pe(new Error("\u201C".concat(ie, "\u201D was not found.")));
                                return
                            }
                            if (gt.status === 403) {
                                pe(new Error("\u201C".concat(ie, "\u201D is not embeddable.")));
                                return
                            }
                            try {
                                var qe = JSON.parse(gt.responseText);
                                if (qe.domain_status_code === 403) {
                                    ni(qe, Z), pe(new Error("\u201C".concat(ie, "\u201D is not embeddable.")));
                                    return
                                }
                                ne(qe)
                            } catch (wr) {
                                pe(wr)
                            }
                        }, gt.onerror = function() {
                            var qe = gt.status ? " (".concat(gt.status, ")") : "";
                            pe(new Error("There was an error fetching the embed code from Vimeo".concat(qe, ".")))
                        }, gt.send()
                    })
                }

                function si() {
                    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document,
                        j = [].slice.call(ie.querySelectorAll("[data-vimeo-id], [data-vimeo-url]")),
                        Z = function(pe) {
                            "console" in window && console.error && console.error("There was an error creating an embed: ".concat(pe))
                        };
                    j.forEach(function(ne) {
                        try {
                            if (ne.getAttribute("data-vimeo-defer") !== null) return;
                            var pe = br(ne),
                                De = yt(pe);
                            Mi(De, pe, ne).then(function(ze) {
                                return ni(ze, ne)
                            }).catch(Z)
                        } catch (ze) {
                            Z(ze)
                        }
                    })
                }

                function ti() {
                    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document;
                    if (!window.VimeoPlayerResizeEmbeds_) {
                        window.VimeoPlayerResizeEmbeds_ = !0;
                        var j = function(ne) {
                            if (_(ne.origin) && !(!ne.data || ne.data.event !== "spacechange")) {
                                for (var pe = ie.querySelectorAll("iframe"), De = 0; De < pe.length; De++)
                                    if (pe[De].contentWindow === ne.source) {
                                        var ze = pe[De].parentElement;
                                        ze.style.paddingBottom = "".concat(ne.data.data[0].bottom, "px");
                                        break
                                    }
                            }
                        };
                        window.addEventListener("message", j)
                    }
                }

                function oa() {
                    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document;
                    if (!window.VimeoSeoMetadataAppended) {
                        window.VimeoSeoMetadataAppended = !0;
                        var j = function(ne) {
                            if (_(ne.origin)) {
                                var pe = Er(ne.data);
                                if (!(!pe || pe.event !== "ready"))
                                    for (var De = ie.querySelectorAll("iframe"), ze = 0; ze < De.length; ze++) {
                                        var ft = De[ze],
                                            gt = ft.contentWindow === ne.source;
                                        if (Ve(ft.src) && gt) {
                                            var qe = new aa(ft);
                                            qe.callMethod("appendVideoMetadata", window.location.href)
                                        }
                                    }
                            }
                        };
                        window.addEventListener("message", j)
                    }
                }

                function Wr() {
                    var ie = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document;
                    if (!window.VimeoCheckedUrlTimeParam) {
                        window.VimeoCheckedUrlTimeParam = !0;
                        var j = function(pe) {
                                "console" in window && console.error && console.error("There was an error getting video Id: ".concat(pe))
                            },
                            Z = function(pe) {
                                if (_(pe.origin)) {
                                    var De = Er(pe.data);
                                    if (!(!De || De.event !== "ready"))
                                        for (var ze = ie.querySelectorAll("iframe"), ft = function() {
                                                var wr = ze[gt],
                                                    kr = wr.contentWindow === pe.source;
                                                if (Ve(wr.src) && kr) {
                                                    var Ar = new aa(wr);
                                                    Ar.getVideoId().then(function($t) {
                                                        var hr = new RegExp("[?&]vimeo_t_".concat($t, "=([^&#]*)")).exec(window.location.href);
                                                        if (hr && hr[1]) {
                                                            var Gi = decodeURI(hr[1]);
                                                            Ar.setCurrentTime(Gi)
                                                        }
                                                    }).catch(j)
                                                }
                                            }, gt = 0; gt < ze.length; gt++) ft()
                                }
                            };
                        window.addEventListener("message", Z)
                    }
                }

                function Cr() {
                    var ie = function() {
                            for (var ne, pe = [
                                    ["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
                                    ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
                                    ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
                                    ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
                                    ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
                                ], De = 0, ze = pe.length, ft = {}; De < ze; De++)
                                if (ne = pe[De], ne && ne[1] in document) {
                                    for (De = 0; De < ne.length; De++) ft[pe[0][De]] = ne[De];
                                    return ft
                                }
                            return !1
                        }(),
                        j = {
                            fullscreenchange: ie.fullscreenchange,
                            fullscreenerror: ie.fullscreenerror
                        },
                        Z = {
                            request: function(pe) {
                                return new Promise(function(De, ze) {
                                    var ft = function qe() {
                                        Z.off("fullscreenchange", qe), De()
                                    };
                                    Z.on("fullscreenchange", ft), pe = pe || document.documentElement;
                                    var gt = pe[ie.requestFullscreen]();
                                    gt instanceof Promise && gt.then(ft).catch(ze)
                                })
                            },
                            exit: function() {
                                return new Promise(function(pe, De) {
                                    if (!Z.isFullscreen) {
                                        pe();
                                        return
                                    }
                                    var ze = function gt() {
                                        Z.off("fullscreenchange", gt), pe()
                                    };
                                    Z.on("fullscreenchange", ze);
                                    var ft = document[ie.exitFullscreen]();
                                    ft instanceof Promise && ft.then(ze).catch(De)
                                })
                            },
                            on: function(pe, De) {
                                var ze = j[pe];
                                ze && document.addEventListener(ze, De)
                            },
                            off: function(pe, De) {
                                var ze = j[pe];
                                ze && document.removeEventListener(ze, De)
                            }
                        };
                    return Object.defineProperties(Z, {
                        isFullscreen: {
                            get: function() {
                                return !!document[ie.fullscreenElement]
                            }
                        },
                        element: {
                            enumerable: !0,
                            get: function() {
                                return document[ie.fullscreenElement]
                            }
                        },
                        isEnabled: {
                            enumerable: !0,
                            get: function() {
                                return !!document[ie.fullscreenEnabled]
                            }
                        }
                    }), Z
                }
                var La = {
                        role: "viewer",
                        autoPlayMuted: !0,
                        allowedDrift: .3,
                        maxAllowedDrift: 1,
                        minCheckInterval: .1,
                        maxRateAdjustment: .2,
                        maxTimeToCatchUp: 1
                    },
                    Gr = function(ie) {
                        K(Z, ie);
                        var j = at(Z);

                        function Z(ne, pe) {
                            var De, ze = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
                                ft = arguments.length > 3 ? arguments[3] : void 0;
                            return tt(this, Z), De = j.call(this), x(Dt(De), "logger", void 0), x(Dt(De), "speedAdjustment", 0), x(Dt(De), "adjustSpeed", function() {
                                var gt = Ct(Je().mark(function qe(wr, kr) {
                                    var Ar;
                                    return Je().wrap(function(hr) {
                                        for (;;) switch (hr.prev = hr.next) {
                                            case 0:
                                                if (De.speedAdjustment !== kr) {
                                                    hr.next = 2;
                                                    break
                                                }
                                                return hr.abrupt("return");
                                            case 2:
                                                return hr.next = 4, wr.getPlaybackRate();
                                            case 4:
                                                return hr.t0 = hr.sent, hr.t1 = De.speedAdjustment, hr.t2 = hr.t0 - hr.t1, hr.t3 = kr, Ar = hr.t2 + hr.t3, De.log("New playbackRate:  ".concat(Ar)), hr.next = 12, wr.setPlaybackRate(Ar);
                                            case 12:
                                                De.speedAdjustment = kr;
                                            case 13:
                                            case "end":
                                                return hr.stop()
                                        }
                                    }, qe)
                                }));
                                return function(qe, wr) {
                                    return gt.apply(this, arguments)
                                }
                            }()), De.logger = ft, De.init(pe, ne, Ee(Ee({}, La), ze)), De
                        }
                        return le(Z, [{
                            key: "disconnect",
                            value: function() {
                                this.dispatchEvent(new Event("disconnect"))
                            }
                        }, {
                            key: "init",
                            value: function() {
                                var ne = Ct(Je().mark(function De(ze, ft, gt) {
                                    var qe = this,
                                        wr, kr, Ar;
                                    return Je().wrap(function(hr) {
                                        for (;;) switch (hr.prev = hr.next) {
                                            case 0:
                                                return hr.next = 2, this.waitForTOReadyState(ze, "open");
                                            case 2:
                                                if (gt.role !== "viewer") {
                                                    hr.next = 10;
                                                    break
                                                }
                                                return hr.next = 5, this.updatePlayer(ze, ft, gt);
                                            case 5:
                                                wr = Ir(ze, "change", function() {
                                                    return qe.updatePlayer(ze, ft, gt)
                                                }), kr = this.maintainPlaybackPosition(ze, ft, gt), this.addEventListener("disconnect", function() {
                                                    kr.cancel(), wr.cancel()
                                                }), hr.next = 14;
                                                break;
                                            case 10:
                                                return hr.next = 12, this.updateTimingObject(ze, ft);
                                            case 12:
                                                Ar = Ir(ft, ["seeked", "play", "pause", "ratechange"], function() {
                                                    return qe.updateTimingObject(ze, ft)
                                                }, "on", "off"), this.addEventListener("disconnect", function() {
                                                    return Ar.cancel()
                                                });
                                            case 14:
                                            case "end":
                                                return hr.stop()
                                        }
                                    }, De, this)
                                }));

                                function pe(De, ze, ft) {
                                    return ne.apply(this, arguments)
                                }
                                return pe
                            }()
                        }, {
                            key: "updateTimingObject",
                            value: function() {
                                var ne = Ct(Je().mark(function De(ze, ft) {
                                    return Je().wrap(function(qe) {
                                        for (;;) switch (qe.prev = qe.next) {
                                            case 0:
                                                return qe.t0 = ze, qe.next = 3, ft.getCurrentTime();
                                            case 3:
                                                return qe.t1 = qe.sent, qe.next = 6, ft.getPaused();
                                            case 6:
                                                if (!qe.sent) {
                                                    qe.next = 10;
                                                    break
                                                }
                                                qe.t2 = 0, qe.next = 13;
                                                break;
                                            case 10:
                                                return qe.next = 12, ft.getPlaybackRate();
                                            case 12:
                                                qe.t2 = qe.sent;
                                            case 13:
                                                qe.t3 = qe.t2, qe.t4 = {
                                                    position: qe.t1,
                                                    velocity: qe.t3
                                                }, qe.t0.update.call(qe.t0, qe.t4);
                                            case 16:
                                            case "end":
                                                return qe.stop()
                                        }
                                    }, De)
                                }));

                                function pe(De, ze) {
                                    return ne.apply(this, arguments)
                                }
                                return pe
                            }()
                        }, {
                            key: "updatePlayer",
                            value: function() {
                                var ne = Ct(Je().mark(function De(ze, ft, gt) {
                                    var qe, wr, kr;
                                    return Je().wrap(function($t) {
                                        for (;;) switch ($t.prev = $t.next) {
                                            case 0:
                                                if (qe = ze.query(), wr = qe.position, kr = qe.velocity, typeof wr == "number" && ft.setCurrentTime(wr), typeof kr != "number") {
                                                    $t.next = 25;
                                                    break
                                                }
                                                if (kr !== 0) {
                                                    $t.next = 11;
                                                    break
                                                }
                                                return $t.next = 6, ft.getPaused();
                                            case 6:
                                                if ($t.t0 = $t.sent, $t.t0 !== !1) {
                                                    $t.next = 9;
                                                    break
                                                }
                                                ft.pause();
                                            case 9:
                                                $t.next = 25;
                                                break;
                                            case 11:
                                                if (!(kr > 0)) {
                                                    $t.next = 25;
                                                    break
                                                }
                                                return $t.next = 14, ft.getPaused();
                                            case 14:
                                                if ($t.t1 = $t.sent, $t.t1 !== !0) {
                                                    $t.next = 19;
                                                    break
                                                }
                                                return $t.next = 18, ft.play().catch(function() {
                                                    var hr = Ct(Je().mark(function Gi(vt) {
                                                        return Je().wrap(function(Mt) {
                                                            for (;;) switch (Mt.prev = Mt.next) {
                                                                case 0:
                                                                    if (!(vt.name === "NotAllowedError" && gt.autoPlayMuted)) {
                                                                        Mt.next = 5;
                                                                        break
                                                                    }
                                                                    return Mt.next = 3, ft.setMuted(!0);
                                                                case 3:
                                                                    return Mt.next = 5, ft.play().catch(function(Ht) {
                                                                        return console.error("Couldn't play the video from TimingSrcConnector. Error:", Ht)
                                                                    });
                                                                case 5:
                                                                case "end":
                                                                    return Mt.stop()
                                                            }
                                                        }, Gi)
                                                    }));
                                                    return function(Gi) {
                                                        return hr.apply(this, arguments)
                                                    }
                                                }());
                                            case 18:
                                                this.updatePlayer(ze, ft, gt);
                                            case 19:
                                                return $t.next = 21, ft.getPlaybackRate();
                                            case 21:
                                                if ($t.t2 = $t.sent, $t.t3 = kr, $t.t2 === $t.t3) {
                                                    $t.next = 25;
                                                    break
                                                }
                                                ft.setPlaybackRate(kr);
                                            case 25:
                                            case "end":
                                                return $t.stop()
                                        }
                                    }, De, this)
                                }));

                                function pe(De, ze, ft) {
                                    return ne.apply(this, arguments)
                                }
                                return pe
                            }()
                        }, {
                            key: "maintainPlaybackPosition",
                            value: function(pe, De, ze) {
                                var ft = this,
                                    gt = ze.allowedDrift,
                                    qe = ze.maxAllowedDrift,
                                    wr = ze.minCheckInterval,
                                    kr = ze.maxRateAdjustment,
                                    Ar = ze.maxTimeToCatchUp,
                                    $t = Math.min(Ar, Math.max(wr, qe)) * 1e3,
                                    hr = function() {
                                        var vt = Ct(Je().mark(function oi() {
                                            var Mt, Ht, Ze, sr, mr;
                                            return Je().wrap(function(Yt) {
                                                for (;;) switch (Yt.prev = Yt.next) {
                                                    case 0:
                                                        if (Yt.t0 = pe.query().velocity === 0, Yt.t0) {
                                                            Yt.next = 6;
                                                            break
                                                        }
                                                        return Yt.next = 4, De.getPaused();
                                                    case 4:
                                                        Yt.t1 = Yt.sent, Yt.t0 = Yt.t1 === !0;
                                                    case 6:
                                                        if (!Yt.t0) {
                                                            Yt.next = 8;
                                                            break
                                                        }
                                                        return Yt.abrupt("return");
                                                    case 8:
                                                        return Yt.t2 = pe.query().position, Yt.next = 11, De.getCurrentTime();
                                                    case 11:
                                                        if (Yt.t3 = Yt.sent, Mt = Yt.t2 - Yt.t3, Ht = Math.abs(Mt), ft.log("Drift: ".concat(Mt)), !(Ht > qe)) {
                                                            Yt.next = 22;
                                                            break
                                                        }
                                                        return Yt.next = 18, ft.adjustSpeed(De, 0);
                                                    case 18:
                                                        De.setCurrentTime(pe.query().position), ft.log("Resync by currentTime"), Yt.next = 29;
                                                        break;
                                                    case 22:
                                                        if (!(Ht > gt)) {
                                                            Yt.next = 29;
                                                            break
                                                        }
                                                        return Ze = Ht / Ar, sr = kr, mr = Ze < sr ? (sr - Ze) / 2 : sr, Yt.next = 28, ft.adjustSpeed(De, mr * Math.sign(Mt));
                                                    case 28:
                                                        ft.log("Resync by playbackRate");
                                                    case 29:
                                                    case "end":
                                                        return Yt.stop()
                                                }
                                            }, oi)
                                        }));
                                        return function() {
                                            return vt.apply(this, arguments)
                                        }
                                    }(),
                                    Gi = setInterval(function() {
                                        return hr()
                                    }, $t);
                                return {
                                    cancel: function() {
                                        return clearInterval(Gi)
                                    }
                                }
                            }
                        }, {
                            key: "log",
                            value: function(pe) {
                                var De;
                                (De = this.logger) === null || De === void 0 || De.call(this, "TimingSrcConnector: ".concat(pe))
                            }
                        }, {
                            key: "waitForTOReadyState",
                            value: function(pe, De) {
                                return new Promise(function(ze) {
                                    var ft = function gt() {
                                        pe.readyState === De ? ze() : pe.addEventListener("readystatechange", gt, {
                                            once: !0
                                        })
                                    };
                                    ft()
                                })
                            }
                        }]), Z
                    }(Ft(EventTarget)),
                    Kt = new WeakMap,
                    ri = new WeakMap,
                    ki = {},
                    aa = function() {
                        function ie(j) {
                            var Z = this,
                                ne = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                            if (tt(this, ie), window.jQuery && j instanceof jQuery && (j.length > 1 && window.console && console.warn && console.warn("A jQuery object with multiple elements was passed, using the first element."), j = j[0]), typeof document != "undefined" && typeof j == "string" && (j = document.getElementById(j)), !B(j)) throw new TypeError("You must pass either a valid element or a valid id.");
                            if (j.nodeName !== "IFRAME") {
                                var pe = j.querySelector("iframe");
                                pe && (j = pe)
                            }
                            if (j.nodeName === "IFRAME" && !_(j.getAttribute("src") || "")) throw new Error("The player element passed isn\u2019t a Vimeo embed.");
                            if (Kt.has(j)) return Kt.get(j);
                            this._window = j.ownerDocument.defaultView, this.element = j, this.origin = "*";
                            var De = new V(function(ft, gt) {
                                if (Z._onMessage = function(kr) {
                                        if (!(!_(kr.origin) || Z.element.contentWindow !== kr.source)) {
                                            Z.origin === "*" && (Z.origin = kr.origin);
                                            var Ar = Er(kr.data),
                                                $t = Ar && Ar.event === "error",
                                                hr = $t && Ar.data && Ar.data.method === "ready";
                                            if (hr) {
                                                var Gi = new Error(Ar.data.message);
                                                Gi.name = Ar.data.name, gt(Gi);
                                                return
                                            }
                                            var vt = Ar && Ar.event === "ready",
                                                oi = Ar && Ar.method === "ping";
                                            if (vt || oi) {
                                                Z.element.setAttribute("data-ready", "true"), ft();
                                                return
                                            }
                                            W(Z, Ar)
                                        }
                                    }, Z._window.addEventListener("message", Z._onMessage), Z.element.nodeName !== "IFRAME") {
                                    var qe = br(j, ne),
                                        wr = yt(qe);
                                    Mi(wr, qe, j).then(function(kr) {
                                        var Ar = ni(kr, j);
                                        return Z.element = Ar, Z._originalElement = j, ht(j, Ar), Kt.set(Z.element, Z), kr
                                    }).catch(gt)
                                }
                            });
                            if (ri.set(this, De), Kt.set(this.element, this), this.element.nodeName === "IFRAME" && Xt(this, "ping"), ki.isEnabled) {
                                var ze = function() {
                                    return ki.exit()
                                };
                                this.fullscreenchangeHandler = function() {
                                    ki.isFullscreen ? Pe(Z, "event:exitFullscreen", ze) : ct(Z, "event:exitFullscreen", ze), Z.ready().then(function() {
                                        Xt(Z, "fullscreenchange", ki.isFullscreen)
                                    })
                                }, ki.on("fullscreenchange", this.fullscreenchangeHandler)
                            }
                            return this
                        }
                        return le(ie, [{
                            key: "callMethod",
                            value: function(Z) {
                                var ne = this,
                                    pe = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                                return new V(function(De, ze) {
                                    return ne.ready().then(function() {
                                        Pe(ne, Z, {
                                            resolve: De,
                                            reject: ze
                                        }), Xt(ne, Z, pe)
                                    }).catch(ze)
                                })
                            }
                        }, {
                            key: "get",
                            value: function(Z) {
                                var ne = this;
                                return new V(function(pe, De) {
                                    return Z = Ge(Z, "get"), ne.ready().then(function() {
                                        Pe(ne, Z, {
                                            resolve: pe,
                                            reject: De
                                        }), Xt(ne, Z)
                                    }).catch(De)
                                })
                            }
                        }, {
                            key: "set",
                            value: function(Z, ne) {
                                var pe = this;
                                return new V(function(De, ze) {
                                    if (Z = Ge(Z, "set"), ne == null) throw new TypeError("There must be a value to set.");
                                    return pe.ready().then(function() {
                                        Pe(pe, Z, {
                                            resolve: De,
                                            reject: ze
                                        }), Xt(pe, Z, ne)
                                    }).catch(ze)
                                })
                            }
                        }, {
                            key: "on",
                            value: function(Z, ne) {
                                if (!Z) throw new TypeError("You must pass an event name.");
                                if (!ne) throw new TypeError("You must pass a callback function.");
                                if (typeof ne != "function") throw new TypeError("The callback must be a function.");
                                var pe = st(this, "event:".concat(Z));
                                pe.length === 0 && this.callMethod("addEventListener", Z).catch(function() {}), Pe(this, "event:".concat(Z), ne)
                            }
                        }, {
                            key: "off",
                            value: function(Z, ne) {
                                if (!Z) throw new TypeError("You must pass an event name.");
                                if (ne && typeof ne != "function") throw new TypeError("The callback must be a function.");
                                var pe = ct(this, "event:".concat(Z), ne);
                                pe && this.callMethod("removeEventListener", Z).catch(function(De) {})
                            }
                        }, {
                            key: "loadVideo",
                            value: function(Z) {
                                return this.callMethod("loadVideo", Z)
                            }
                        }, {
                            key: "ready",
                            value: function() {
                                var Z = ri.get(this) || new V(function(ne, pe) {
                                    pe(new Error("Unknown player. Probably unloaded."))
                                });
                                return V.resolve(Z)
                            }
                        }, {
                            key: "addCuePoint",
                            value: function(Z) {
                                var ne = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                                return this.callMethod("addCuePoint", {
                                    time: Z,
                                    data: ne
                                })
                            }
                        }, {
                            key: "removeCuePoint",
                            value: function(Z) {
                                return this.callMethod("removeCuePoint", Z)
                            }
                        }, {
                            key: "enableTextTrack",
                            value: function(Z, ne) {
                                if (!Z) throw new TypeError("You must pass a language.");
                                return this.callMethod("enableTextTrack", {
                                    language: Z,
                                    kind: ne
                                })
                            }
                        }, {
                            key: "disableTextTrack",
                            value: function() {
                                return this.callMethod("disableTextTrack")
                            }
                        }, {
                            key: "pause",
                            value: function() {
                                return this.callMethod("pause")
                            }
                        }, {
                            key: "play",
                            value: function() {
                                return this.callMethod("play")
                            }
                        }, {
                            key: "requestFullscreen",
                            value: function() {
                                return ki.isEnabled ? ki.request(this.element) : this.callMethod("requestFullscreen")
                            }
                        }, {
                            key: "exitFullscreen",
                            value: function() {
                                return ki.isEnabled ? ki.exit() : this.callMethod("exitFullscreen")
                            }
                        }, {
                            key: "getFullscreen",
                            value: function() {
                                return ki.isEnabled ? V.resolve(ki.isFullscreen) : this.get("fullscreen")
                            }
                        }, {
                            key: "requestPictureInPicture",
                            value: function() {
                                return this.callMethod("requestPictureInPicture")
                            }
                        }, {
                            key: "exitPictureInPicture",
                            value: function() {
                                return this.callMethod("exitPictureInPicture")
                            }
                        }, {
                            key: "getPictureInPicture",
                            value: function() {
                                return this.get("pictureInPicture")
                            }
                        }, {
                            key: "remotePlaybackPrompt",
                            value: function() {
                                return this.callMethod("remotePlaybackPrompt")
                            }
                        }, {
                            key: "unload",
                            value: function() {
                                return this.callMethod("unload")
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                var Z = this;
                                return new V(function(ne) {
                                    if (ri.delete(Z), Kt.delete(Z.element), Z._originalElement && (Kt.delete(Z._originalElement), Z._originalElement.removeAttribute("data-vimeo-initialized")), Z.element && Z.element.nodeName === "IFRAME" && Z.element.parentNode && (Z.element.parentNode.parentNode && Z._originalElement && Z._originalElement !== Z.element.parentNode ? Z.element.parentNode.parentNode.removeChild(Z.element.parentNode) : Z.element.parentNode.removeChild(Z.element)), Z.element && Z.element.nodeName === "DIV" && Z.element.parentNode) {
                                        Z.element.removeAttribute("data-vimeo-initialized");
                                        var pe = Z.element.querySelector("iframe");
                                        pe && pe.parentNode && (pe.parentNode.parentNode && Z._originalElement && Z._originalElement !== pe.parentNode ? pe.parentNode.parentNode.removeChild(pe.parentNode) : pe.parentNode.removeChild(pe))
                                    }
                                    Z._window.removeEventListener("message", Z._onMessage), ki.isEnabled && ki.off("fullscreenchange", Z.fullscreenchangeHandler), ne()
                                })
                            }
                        }, {
                            key: "getAutopause",
                            value: function() {
                                return this.get("autopause")
                            }
                        }, {
                            key: "setAutopause",
                            value: function(Z) {
                                return this.set("autopause", Z)
                            }
                        }, {
                            key: "getBuffered",
                            value: function() {
                                return this.get("buffered")
                            }
                        }, {
                            key: "getCameraProps",
                            value: function() {
                                return this.get("cameraProps")
                            }
                        }, {
                            key: "setCameraProps",
                            value: function(Z) {
                                return this.set("cameraProps", Z)
                            }
                        }, {
                            key: "getChapters",
                            value: function() {
                                return this.get("chapters")
                            }
                        }, {
                            key: "getCurrentChapter",
                            value: function() {
                                return this.get("currentChapter")
                            }
                        }, {
                            key: "getColor",
                            value: function() {
                                return this.get("color")
                            }
                        }, {
                            key: "getColors",
                            value: function() {
                                return V.all([this.get("colorOne"), this.get("colorTwo"), this.get("colorThree"), this.get("colorFour")])
                            }
                        }, {
                            key: "setColor",
                            value: function(Z) {
                                return this.set("color", Z)
                            }
                        }, {
                            key: "setColors",
                            value: function(Z) {
                                if (!Array.isArray(Z)) return new V(function(De, ze) {
                                    return ze(new TypeError("Argument must be an array."))
                                });
                                var ne = new V(function(De) {
                                        return De(null)
                                    }),
                                    pe = [Z[0] ? this.set("colorOne", Z[0]) : ne, Z[1] ? this.set("colorTwo", Z[1]) : ne, Z[2] ? this.set("colorThree", Z[2]) : ne, Z[3] ? this.set("colorFour", Z[3]) : ne];
                                return V.all(pe)
                            }
                        }, {
                            key: "getCuePoints",
                            value: function() {
                                return this.get("cuePoints")
                            }
                        }, {
                            key: "getCurrentTime",
                            value: function() {
                                return this.get("currentTime")
                            }
                        }, {
                            key: "setCurrentTime",
                            value: function(Z) {
                                return this.set("currentTime", Z)
                            }
                        }, {
                            key: "getDuration",
                            value: function() {
                                return this.get("duration")
                            }
                        }, {
                            key: "getEnded",
                            value: function() {
                                return this.get("ended")
                            }
                        }, {
                            key: "getLoop",
                            value: function() {
                                return this.get("loop")
                            }
                        }, {
                            key: "setLoop",
                            value: function(Z) {
                                return this.set("loop", Z)
                            }
                        }, {
                            key: "setMuted",
                            value: function(Z) {
                                return this.set("muted", Z)
                            }
                        }, {
                            key: "getMuted",
                            value: function() {
                                return this.get("muted")
                            }
                        }, {
                            key: "getPaused",
                            value: function() {
                                return this.get("paused")
                            }
                        }, {
                            key: "getPlaybackRate",
                            value: function() {
                                return this.get("playbackRate")
                            }
                        }, {
                            key: "setPlaybackRate",
                            value: function(Z) {
                                return this.set("playbackRate", Z)
                            }
                        }, {
                            key: "getPlayed",
                            value: function() {
                                return this.get("played")
                            }
                        }, {
                            key: "getQualities",
                            value: function() {
                                return this.get("qualities")
                            }
                        }, {
                            key: "getQuality",
                            value: function() {
                                return this.get("quality")
                            }
                        }, {
                            key: "setQuality",
                            value: function(Z) {
                                return this.set("quality", Z)
                            }
                        }, {
                            key: "getRemotePlaybackAvailability",
                            value: function() {
                                return this.get("remotePlaybackAvailability")
                            }
                        }, {
                            key: "getRemotePlaybackState",
                            value: function() {
                                return this.get("remotePlaybackState")
                            }
                        }, {
                            key: "getSeekable",
                            value: function() {
                                return this.get("seekable")
                            }
                        }, {
                            key: "getSeeking",
                            value: function() {
                                return this.get("seeking")
                            }
                        }, {
                            key: "getTextTracks",
                            value: function() {
                                return this.get("textTracks")
                            }
                        }, {
                            key: "getVideoEmbedCode",
                            value: function() {
                                return this.get("videoEmbedCode")
                            }
                        }, {
                            key: "getVideoId",
                            value: function() {
                                return this.get("videoId")
                            }
                        }, {
                            key: "getVideoTitle",
                            value: function() {
                                return this.get("videoTitle")
                            }
                        }, {
                            key: "getVideoWidth",
                            value: function() {
                                return this.get("videoWidth")
                            }
                        }, {
                            key: "getVideoHeight",
                            value: function() {
                                return this.get("videoHeight")
                            }
                        }, {
                            key: "getVideoUrl",
                            value: function() {
                                return this.get("videoUrl")
                            }
                        }, {
                            key: "getVolume",
                            value: function() {
                                return this.get("volume")
                            }
                        }, {
                            key: "setVolume",
                            value: function(Z) {
                                return this.set("volume", Z)
                            }
                        }, {
                            key: "setTimingSrc",
                            value: function() {
                                var j = Ct(Je().mark(function ne(pe, De) {
                                    var ze = this,
                                        ft;
                                    return Je().wrap(function(qe) {
                                        for (;;) switch (qe.prev = qe.next) {
                                            case 0:
                                                if (pe) {
                                                    qe.next = 2;
                                                    break
                                                }
                                                throw new TypeError("A Timing Object must be provided.");
                                            case 2:
                                                return qe.next = 4, this.ready();
                                            case 4:
                                                return ft = new Gr(this, pe, De), Xt(this, "notifyTimingObjectConnect"), ft.addEventListener("disconnect", function() {
                                                    return Xt(ze, "notifyTimingObjectDisconnect")
                                                }), qe.abrupt("return", ft);
                                            case 8:
                                            case "end":
                                                return qe.stop()
                                        }
                                    }, ne, this)
                                }));

                                function Z(ne, pe) {
                                    return j.apply(this, arguments)
                                }
                                return Z
                            }()
                        }]), ie
                    }();
                fe || (ki = Cr(), si(), ti(), oa(), Wr());
                const Tt = aa
            },
            56543: function(wt, Me, we) {
                "use strict";
                var je = Object.defineProperty,
                    Ee = Object.defineProperties,
                    Je = Object.getOwnPropertyDescriptors,
                    Y = Object.getOwnPropertySymbols,
                    Ct = Object.prototype.hasOwnProperty,
                    tt = Object.prototype.propertyIsEnumerable,
                    mt = (D, C, H) => C in D ? je(D, C, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: H
                    }) : D[C] = H,
                    le = (D, C) => {
                        for (var H in C || (C = {})) Ct.call(C, H) && mt(D, H, C[H]);
                        if (Y)
                            for (var H of Y(C)) tt.call(C, H) && mt(D, H, C[H]);
                        return D
                    },
                    x = (D, C) => Ee(D, Je(C)),
                    K = (D, C, H) => new Promise((re, se) => {
                        var Ce = ke => {
                                try {
                                    Qe(H.next(ke))
                                } catch (We) {
                                    se(We)
                                }
                            },
                            He = ke => {
                                try {
                                    Qe(H.throw(ke))
                                } catch (We) {
                                    se(We)
                                }
                            },
                            Qe = ke => ke.done ? re(ke.value) : Promise.resolve(ke.value).then(Ce, He);
                        Qe((H = H.apply(D, C)).next())
                    }),
                    Q = Object.create,
                    he = Object.defineProperty,
                    ot = Object.getOwnPropertyDescriptor,
                    it = Object.getOwnPropertyNames,
                    Rt = Object.getPrototypeOf,
                    Ft = Object.prototype.hasOwnProperty,
                    Dt = (D, C) => {
                        for (var H in C) he(D, H, {
                            get: C[H],
                            enumerable: !0
                        })
                    },
                    dt = (D, C, H, re) => {
                        if (C && typeof C == "object" || typeof C == "function")
                            for (let se of it(C)) !Ft.call(D, se) && se !== H && he(D, se, {
                                get: () => C[se],
                                enumerable: !(re = ot(C, se)) || re.enumerable
                            });
                        return D
                    },
                    at = (D, C, H) => (H = D != null ? Q(Rt(D)) : {}, dt(C || !D || !D.__esModule ? he(H, "default", {
                        value: D,
                        enumerable: !0
                    }) : H, D)),
                    bt = D => dt(he({}, "__esModule", {
                        value: !0
                    }), D),
                    Wt = {};
                Dt(Wt, {
                    AutoplayTypes: () => nt,
                    CmcdTypeValues: () => ce,
                    CmcdTypes: () => V,
                    ExtensionMimeTypeMap: () => Pe,
                    Hls: () => B,
                    MaxResolution: () => ht,
                    MediaError: () => yt,
                    MimeTypeShorthandMap: () => st,
                    MinResolution: () => Er,
                    MuxErrorCategory: () => Be,
                    MuxErrorCode: () => _,
                    MuxJWTAud: () => Et,
                    PlaybackTypes: () => ai,
                    RenditionOrder: () => Xt,
                    StreamTypes: () => dr,
                    addChapters: () => Yt,
                    addCuePoints: () => vt,
                    addTextTrack: () => wr,
                    allMediaTypes: () => Fe,
                    errorCategoryToTokenNameOrPrefix: () => Ve,
                    generatePlayerInitTime: () => Ha,
                    generateUUID: () => Sn,
                    getActiveChapter: () => Ut,
                    getActiveCuePoint: () => Ht,
                    getAppCertificate: () => ia,
                    getChapters: () => oe,
                    getCuePoints: () => Mt,
                    getCurrentPdt: () => ge,
                    getDRMConfig: () => tn,
                    getEnded: () => va,
                    getError: () => gn,
                    getLicenseKey: () => Pa,
                    getLiveEdgeStart: () => ma,
                    getMediaPlaylistLinesFromMultivariantPlaylistSrc: () => Lt,
                    getSeekable: () => ea,
                    getStartDate: () => Ke,
                    getStreamInfoFromHlsjsLevelDetails: () => Pi,
                    getStreamInfoFromPlaylistLines: () => _n,
                    getStreamInfoFromSrcAndType: () => Qa,
                    getStreamType: () => Ji,
                    getStreamTypeConfig: () => Da,
                    getTargetLiveWindow: () => Ni,
                    getTextTrack: () => Ar,
                    i18n: () => ie,
                    initialize: () => Kr,
                    isKeyOf: () => ar,
                    isMuxVideoSrc: () => pa,
                    isPseudoEnded: () => Pr,
                    isStuckOnLastFragment: () => qr,
                    loadMedia: () => kn,
                    mux: () => fe.default,
                    muxMediaState: () => vi,
                    parseJwt: () => Gr,
                    removeTextTrack: () => kr,
                    setupChapters: () => yi,
                    setupCuePoints: () => Ze,
                    setupHls: () => Vi,
                    setupMux: () => Va,
                    setupNativeFairplayDRM: () => or,
                    shorthandKeys: () => ct,
                    teardown: () => ta,
                    toAppCertURL: () => En,
                    toDRMTypeFromKeySystem: () => Ri,
                    toLicenseKeyURL: () => qa,
                    toMuxVideoURL: () => Yi,
                    toPlaybackIdFromSrc: () => Li,
                    toPlaybackIdParts: () => Mi,
                    updateStreamInfoFromHlsjsLevelDetails: () => ln,
                    updateStreamInfoFromSrc: () => Hn
                }), wt.exports = bt(Wt);
                var fe = at(we(57233)),
                    Ge = at(we(74346)),
                    B = Ge.default,
                    Be = {
                        VIDEO: "video",
                        THUMBNAIL: "thumbnail",
                        STORYBOARD: "storyboard",
                        DRM: "drm"
                    },
                    _ = {
                        NOT_AN_ERROR: 0,
                        NETWORK_OFFLINE: 2000002,
                        NETWORK_UNKNOWN_ERROR: 2e6,
                        NETWORK_NO_STATUS: 2000001,
                        NETWORK_INVALID_URL: 24e5,
                        NETWORK_NOT_FOUND: 2404e3,
                        NETWORK_NOT_READY: 2412e3,
                        NETWORK_GENERIC_SERVER_FAIL: 25e5,
                        NETWORK_TOKEN_MISSING: 2403201,
                        NETWORK_TOKEN_MALFORMED: 2412202,
                        NETWORK_TOKEN_EXPIRED: 2403210,
                        NETWORK_TOKEN_AUD_MISSING: 2403221,
                        NETWORK_TOKEN_AUD_MISMATCH: 2403222,
                        NETWORK_TOKEN_SUB_MISMATCH: 2403232,
                        ENCRYPTED_ERROR: 5e6,
                        ENCRYPTED_UNSUPPORTED_KEY_SYSTEM: 5000001,
                        ENCRYPTED_GENERATE_REQUEST_FAILED: 5000002,
                        ENCRYPTED_UPDATE_LICENSE_FAILED: 5000003,
                        ENCRYPTED_UPDATE_SERVER_CERT_FAILED: 5000004,
                        ENCRYPTED_CDM_ERROR: 5000005,
                        ENCRYPTED_OUTPUT_RESTRICTED: 5000006,
                        ENCRYPTED_MISSING_TOKEN: 5000002
                    },
                    Ve = D => D === Be.VIDEO ? "playback" : D,
                    de = class Yd extends Error {
                        constructor(C, H = Yd.MEDIA_ERR_CUSTOM, re, se) {
                            var Ce;
                            super(C), this.name = "MediaError", this.code = H, this.context = se, this.fatal = re != null ? re : H >= Yd.MEDIA_ERR_NETWORK && H <= Yd.MEDIA_ERR_ENCRYPTED, this.message || (this.message = (Ce = Yd.defaultMessages[this.code]) != null ? Ce : "")
                        }
                    };
                de.MEDIA_ERR_ABORTED = 1, de.MEDIA_ERR_NETWORK = 2, de.MEDIA_ERR_DECODE = 3, de.MEDIA_ERR_SRC_NOT_SUPPORTED = 4, de.MEDIA_ERR_ENCRYPTED = 5, de.MEDIA_ERR_CUSTOM = 100, de.defaultMessages = {
                    1: "You aborted the media playback",
                    2: "A network error caused the media download to fail.",
                    3: "A media error caused playback to be aborted. The media could be corrupt or your browser does not support this format.",
                    4: "An unsupported error occurred. The server or network failed, or your browser does not support this format.",
                    5: "The media is encrypted and there are no keys to decrypt it."
                };
                var yt = de,
                    Ir = D => D == null,
                    ar = (D, C) => Ir(C) ? !1 : D in C,
                    nt = {
                        ANY: "any",
                        MUTED: "muted"
                    },
                    dr = {
                        ON_DEMAND: "on-demand",
                        LIVE: "live",
                        UNKNOWN: "unknown"
                    },
                    ai = {
                        MSE: "mse",
                        NATIVE: "native"
                    },
                    V = {
                        HEADER: "header",
                        QUERY: "query",
                        NONE: "none"
                    },
                    ce = Object.values(V),
                    Pe = {
                        M3U8: "application/vnd.apple.mpegurl",
                        MP4: "video/mp4"
                    },
                    st = {
                        HLS: Pe.M3U8
                    },
                    ct = Object.keys(st),
                    Fe = [...Object.values(Pe), "hls", "HLS"],
                    ht = {
                        upTo720p: "720p",
                        upTo1080p: "1080p",
                        upTo1440p: "1440p",
                        upTo2160p: "2160p"
                    },
                    Er = {
                        noLessThan480p: "480p",
                        noLessThan540p: "540p",
                        noLessThan720p: "720p",
                        noLessThan1080p: "1080p",
                        noLessThan1440p: "1440p",
                        noLessThan2160p: "2160p"
                    },
                    Xt = {
                        DESCENDING: "desc"
                    },
                    W = "en",
                    Zr = {
                        code: W
                    },
                    br = (D, C, H, re, se = D) => {
                        se.addEventListener(C, H, re), D.addEventListener("teardown", () => {
                            se.removeEventListener(C, H)
                        }, {
                            once: !0
                        })
                    };

                function ni(D, C, H) {
                    C && H > C && (H = C);
                    for (let re = 0; re < D.length; re++)
                        if (D.start(re) <= H && D.end(re) >= H) return !0;
                    return !1
                }
                var Mi = D => {
                        let C = D.indexOf("?");
                        if (C < 0) return [D];
                        let H = D.slice(0, C),
                            re = D.slice(C);
                        return [H, re]
                    },
                    si = D => {
                        let {
                            type: C
                        } = D;
                        if (C) {
                            let H = C.toUpperCase();
                            return ar(H, st) ? st[H] : C
                        }
                        return Wr(D)
                    },
                    ti = D => D === "VOD" ? dr.ON_DEMAND : dr.LIVE,
                    oa = D => D === "EVENT" ? Number.POSITIVE_INFINITY : D === "VOD" ? Number.NaN : 0,
                    Wr = D => {
                        let {
                            src: C
                        } = D;
                        if (!C) return "";
                        let H = "";
                        try {
                            H = new URL(C).pathname
                        } catch (Ce) {
                            console.error("invalid url")
                        }
                        let re = H.lastIndexOf(".");
                        if (re < 0) return La(D) ? Pe.M3U8 : "";
                        let se = H.slice(re + 1).toUpperCase();
                        return ar(se, Pe) ? Pe[se] : ""
                    },
                    Cr = "mux.com",
                    La = ({
                        src: D,
                        customDomain: C = Cr
                    }) => {
                        let H;
                        try {
                            H = new URL(`${D}`)
                        } catch (ke) {
                            return !1
                        }
                        let re = H.protocol === "https:",
                            se = H.hostname === `stream.${C}`.toLowerCase(),
                            Ce = H.pathname.split("/"),
                            He = Ce.length === 2,
                            Qe = !(Ce != null && Ce[1].includes("."));
                        return re && se && He && Qe
                    },
                    Gr = D => {
                        let C = (D != null ? D : "").split(".")[1];
                        if (C) try {
                            let H = C.replace(/-/g, "+").replace(/_/g, "/"),
                                re = decodeURIComponent(atob(H).split("").map(function(se) {
                                    return "%" + ("00" + se.charCodeAt(0).toString(16)).slice(-2)
                                }).join(""));
                            return JSON.parse(re)
                        } catch (H) {
                            return
                        }
                    },
                    Kt = ({
                        exp: D
                    }, C = Date.now()) => !D || D * 1e3 < C,
                    ri = ({
                        sub: D
                    }, C) => D !== C,
                    ki = ({
                        aud: D
                    }, C) => !D,
                    aa = ({
                        aud: D
                    }, C) => D !== C,
                    Tt = "en";

                function ie(D, C = !0) {
                    var H, re;
                    let se = C && (re = (H = Zr) == null ? void 0 : H[D]) != null ? re : D,
                        Ce = C ? Zr.code : Tt;
                    return new j(se, Ce)
                }
                var j = class {
                        constructor(D, C = (H => (H = Zr) != null ? H : Tt)()) {
                            this.message = D, this.locale = C
                        }
                        format(D) {
                            return this.message.replace(/\{(\w+)\}/g, (C, H) => {
                                var re;
                                return (re = D[H]) != null ? re : ""
                            })
                        }
                        toString() {
                            return this.message
                        }
                    },
                    Z = Object.values(nt),
                    ne = D => typeof D == "boolean" || typeof D == "string" && Z.includes(D),
                    pe = (D, C, H) => {
                        let {
                            autoplay: re
                        } = D, se = !1, Ce = !1, He = ne(re) ? re : !!re, Qe = () => {
                            se || br(C, "playing", () => {
                                se = !0
                            }, {
                                once: !0
                            })
                        };
                        if (Qe(), br(C, "loadstart", () => {
                                se = !1, Qe(), De(C, He)
                            }, {
                                once: !0
                            }), br(C, "loadstart", () => {
                                H || (D.streamType && D.streamType !== dr.UNKNOWN ? Ce = D.streamType === dr.LIVE : Ce = !Number.isFinite(C.duration)), De(C, He)
                            }, {
                                once: !0
                            }), H && H.once(B.Events.LEVEL_LOADED, (ke, We) => {
                                var Xe;
                                D.streamType && D.streamType !== dr.UNKNOWN ? Ce = D.streamType === dr.LIVE : Ce = (Xe = We.details.live) != null ? Xe : !1
                            }), !He) {
                            let ke = () => {
                                !Ce || Number.isFinite(D.startTime) || (H != null && H.liveSyncPosition ? C.currentTime = H.liveSyncPosition : Number.isFinite(C.seekable.end(0)) && (C.currentTime = C.seekable.end(0)))
                            };
                            H && br(C, "play", () => {
                                C.preload === "metadata" ? H.once(B.Events.LEVEL_UPDATED, ke) : ke()
                            }, {
                                once: !0
                            })
                        }
                        return ke => {
                            se || (He = ne(ke) ? ke : !!ke, De(C, He))
                        }
                    },
                    De = (D, C) => {
                        if (!C) return;
                        let H = D.muted,
                            re = () => D.muted = H;
                        switch (C) {
                            case nt.ANY:
                                D.play().catch(() => {
                                    D.muted = !0, D.play().catch(re)
                                });
                                break;
                            case nt.MUTED:
                                D.muted = !0, D.play().catch(re);
                                break;
                            default:
                                D.play().catch(() => {});
                                break
                        }
                    },
                    ze = ({
                        preload: D,
                        src: C
                    }, H, re) => {
                        let se = Ot => {
                            Ot != null && ["", "none", "metadata", "auto"].includes(Ot) ? H.setAttribute("preload", Ot) : H.removeAttribute("preload")
                        };
                        if (!re) return se(D), se;
                        let Ce = !1,
                            He = !1,
                            Qe = re.config.maxBufferLength,
                            ke = re.config.maxBufferSize,
                            We = Ot => {
                                se(Ot);
                                let qt = Ot != null ? Ot : H.preload;
                                He || qt === "none" || (qt === "metadata" ? (re.config.maxBufferLength = 1, re.config.maxBufferSize = 1) : (re.config.maxBufferLength = Qe, re.config.maxBufferSize = ke), Xe())
                            },
                            Xe = () => {
                                !Ce && C && (Ce = !0, re.loadSource(C))
                            };
                        return br(H, "play", () => {
                            He = !0, re.config.maxBufferLength = Qe, re.config.maxBufferSize = ke, Xe()
                        }, {
                            once: !0
                        }), We(D), We
                    };

                function ft(D, C) {
                    var H;
                    if (!("videoTracks" in D)) return;
                    let re = new WeakMap;
                    C.on(B.Events.MANIFEST_PARSED, function(We, Xe) {
                        ke();
                        let Ot = D.addVideoTrack("main");
                        Ot.selected = !0;
                        for (let [qt, fr] of Xe.levels.entries()) {
                            let rr = Ot.addRendition(fr.url[0], fr.width, fr.height, fr.videoCodec, fr.bitrate);
                            re.set(fr, `${qt}`), rr.id = `${qt}`
                        }
                    }), C.on(B.Events.AUDIO_TRACKS_UPDATED, function(We, Xe) {
                        Qe();
                        for (let Ot of Xe.audioTracks) {
                            let qt = Ot.default ? "main" : "alternative",
                                fr = D.addAudioTrack(qt, Ot.name, Ot.lang);
                            fr.id = `${Ot.id}`, Ot.default && (fr.enabled = !0)
                        }
                    }), D.audioTracks.addEventListener("change", () => {
                        var We;
                        let Xe = +((We = [...D.audioTracks].find(qt => qt.enabled)) == null ? void 0 : We.id),
                            Ot = C.audioTracks.map(qt => qt.id);
                        Xe != C.audioTrack && Ot.includes(Xe) && (C.audioTrack = Xe)
                    }), C.on(B.Events.LEVELS_UPDATED, function(We, Xe) {
                        var Ot;
                        let qt = D.videoTracks[(Ot = D.videoTracks.selectedIndex) != null ? Ot : 0];
                        if (!qt) return;
                        let fr = Xe.levels.map(rr => re.get(rr));
                        for (let rr of D.videoRenditions) rr.id && !fr.includes(rr.id) && qt.removeRendition(rr)
                    });
                    let se = We => {
                            let Xe = We.target.selectedIndex;
                            Xe != C.nextLevel && Ce(Xe)
                        },
                        Ce = We => {
                            let Xe = D.currentTime,
                                Ot = !1,
                                qt = (fr, rr) => {
                                    Ot || (Ot = !Number.isFinite(rr.endOffset))
                                };
                            C.on(B.Events.BUFFER_FLUSHING, qt), C.nextLevel = We, C.off(B.Events.BUFFER_FLUSHING, qt), Ot || C.trigger(B.Events.BUFFER_FLUSHING, {
                                startOffset: Xe + 10,
                                endOffset: 1 / 0,
                                type: "video"
                            })
                        };
                    (H = D.videoRenditions) == null || H.addEventListener("change", se);
                    let He = () => {
                            for (let We of D.videoTracks) D.removeVideoTrack(We)
                        },
                        Qe = () => {
                            for (let We of D.audioTracks) D.removeAudioTrack(We)
                        },
                        ke = () => {
                            He(), Qe()
                        };
                    C.once(B.Events.DESTROYING, ke)
                }
                var gt = D => "time" in D ? D.time : D.startTime;

                function qe(D, C) {
                    C.on(B.Events.NON_NATIVE_TEXT_TRACKS_FOUND, (se, {
                        tracks: Ce
                    }) => {
                        Ce.forEach(He => {
                            var Qe, ke;
                            let We = (Qe = He.subtitleTrack) != null ? Qe : He.closedCaptions,
                                Xe = C.subtitleTracks.findIndex(({
                                    lang: qt,
                                    name: fr,
                                    type: rr
                                }) => qt == (We == null ? void 0 : We.lang) && fr === He.label && rr.toLowerCase() === He.kind),
                                Ot = ((ke = He._id) != null ? ke : He.default) ? "default" : `${He.kind}${Xe}`;
                            wr(D, He.kind, He.label, We == null ? void 0 : We.lang, Ot, He.default)
                        })
                    });
                    let H = () => {
                        if (!C.subtitleTracks.length) return;
                        let se = Array.from(D.textTracks).find(Qe => Qe.id && Qe.mode === "showing" && ["subtitles", "captions"].includes(Qe.kind));
                        if (!se) return;
                        let Ce = C.subtitleTracks[C.subtitleTrack],
                            He = Ce ? Ce.default ? "default" : `${C.subtitleTracks[C.subtitleTrack].type.toLowerCase()}${C.subtitleTrack}` : void 0;
                        if (C.subtitleTrack < 0 || (se == null ? void 0 : se.id) !== He) {
                            let Qe = C.subtitleTracks.findIndex(({
                                lang: ke,
                                name: We,
                                type: Xe,
                                default: Ot
                            }) => se.id === "default" && Ot || ke == se.language && We === se.label && Xe.toLowerCase() === se.kind);
                            C.subtitleTrack = Qe
                        }(se == null ? void 0 : se.id) === He && se.cues && Array.from(se.cues).forEach(Qe => {
                            se.addCue(Qe)
                        })
                    };
                    D.textTracks.addEventListener("change", H), C.on(B.Events.CUES_PARSED, (se, {
                        track: Ce,
                        cues: He
                    }) => {
                        let Qe = D.textTracks.getTrackById(Ce);
                        if (!Qe) return;
                        let ke = Qe.mode === "disabled";
                        ke && (Qe.mode = "hidden"), He.forEach(We => {
                            var Xe;
                            (Xe = Qe.cues) != null && Xe.getCueById(We.id) || Qe.addCue(We)
                        }), ke && (Qe.mode = "disabled")
                    }), C.once(B.Events.DESTROYING, () => {
                        D.textTracks.removeEventListener("change", H), D.querySelectorAll("track[data-removeondestroy]").forEach(se => {
                            se.remove()
                        })
                    });
                    let re = () => {
                        Array.from(D.textTracks).forEach(se => {
                            var Ce, He;
                            if (!["subtitles", "caption"].includes(se.kind) && (se.label === "thumbnails" || se.kind === "chapters")) {
                                if (!((Ce = se.cues) != null && Ce.length)) {
                                    let Qe = "track";
                                    se.kind && (Qe += `[kind="${se.kind}"]`), se.label && (Qe += `[label="${se.label}"]`);
                                    let ke = D.querySelector(Qe),
                                        We = (He = ke == null ? void 0 : ke.getAttribute("src")) != null ? He : "";
                                    ke == null || ke.removeAttribute("src"), setTimeout(() => {
                                        ke == null || ke.setAttribute("src", We)
                                    }, 0)
                                }
                                se.mode !== "hidden" && (se.mode = "hidden")
                            }
                        })
                    };
                    C.once(B.Events.MANIFEST_LOADED, re), C.once(B.Events.MEDIA_ATTACHED, re)
                }

                function wr(D, C, H, re, se, Ce) {
                    let He = document.createElement("track");
                    return He.kind = C, He.label = H, re && (He.srclang = re), se && (He.id = se), Ce && (He.default = !0), He.track.mode = ["subtitles", "captions"].includes(C) ? "disabled" : "hidden", He.setAttribute("data-removeondestroy", ""), D.append(He), He.track
                }

                function kr(D, C) {
                    let H = Array.prototype.find.call(D.querySelectorAll("track"), re => re.track === C);
                    H == null || H.remove()
                }

                function Ar(D, C, H) {
                    var re;
                    return (re = Array.from(D.querySelectorAll("track")).find(se => se.track.label === C && se.track.kind === H)) == null ? void 0 : re.track
                }

                function $t(D, C, H, re) {
                    return K(this, null, function*() {
                        let se = Ar(D, H, re);
                        return se || (se = wr(D, re, H), se.mode = "hidden", yield new Promise(Ce => setTimeout(() => Ce(void 0), 0))), se.mode !== "hidden" && (se.mode = "hidden"), [...C].sort((Ce, He) => gt(He) - gt(Ce)).forEach(Ce => {
                            var He, Qe;
                            let ke = Ce.value,
                                We = gt(Ce);
                            if ("endTime" in Ce && Ce.endTime != null) se == null || se.addCue(new VTTCue(We, Ce.endTime, re === "chapters" ? ke : JSON.stringify(ke != null ? ke : null)));
                            else {
                                let Xe = Array.prototype.findIndex.call(se == null ? void 0 : se.cues, rr => rr.startTime >= We),
                                    Ot = (He = se == null ? void 0 : se.cues) == null ? void 0 : He[Xe],
                                    qt = Ot ? Ot.startTime : Number.isFinite(D.duration) ? D.duration : Number.MAX_SAFE_INTEGER,
                                    fr = (Qe = se == null ? void 0 : se.cues) == null ? void 0 : Qe[Xe - 1];
                                fr && (fr.endTime = We), se == null || se.addCue(new VTTCue(We, qt, re === "chapters" ? ke : JSON.stringify(ke != null ? ke : null)))
                            }
                        }), D.textTracks.dispatchEvent(new Event("change", {
                            bubbles: !0,
                            composed: !0
                        })), se
                    })
                }
                var hr = "cuepoints",
                    Gi = Object.freeze({
                        label: hr
                    });

                function vt(D, C) {
                    return K(this, arguments, function*(H, re, se = Gi) {
                        return $t(H, re, se.label, "metadata")
                    })
                }
                var oi = D => ({
                    time: D.startTime,
                    value: JSON.parse(D.text)
                });

                function Mt(D, C = {
                    label: hr
                }) {
                    let H = Ar(D, C.label, "metadata");
                    return H != null && H.cues ? Array.from(H.cues, re => oi(re)) : []
                }

                function Ht(D, C = {
                    label: hr
                }) {
                    var H, re;
                    let se = Ar(D, C.label, "metadata");
                    if (!((H = se == null ? void 0 : se.activeCues) != null && H.length)) return;
                    if (se.activeCues.length === 1) return oi(se.activeCues[0]);
                    let {
                        currentTime: Ce
                    } = D, He = Array.prototype.find.call((re = se.activeCues) != null ? re : [], ({
                        startTime: Qe,
                        endTime: ke
                    }) => Qe <= Ce && ke > Ce);
                    return oi(He || se.activeCues[0])
                }

                function Ze(D) {
                    return K(this, arguments, function*(C, H = Gi) {
                        return new Promise(re => {
                            br(C, "loadstart", () => K(this, null, function*() {
                                let se = yield vt(C, [], H);
                                br(C, "cuechange", () => {
                                    let Ce = Ht(C);
                                    if (Ce) {
                                        let He = new CustomEvent("cuepointchange", {
                                            composed: !0,
                                            bubbles: !0,
                                            detail: Ce
                                        });
                                        C.dispatchEvent(He)
                                    }
                                }, {}, se), re(se)
                            }))
                        })
                    })
                }
                var sr = "chapters",
                    mr = Object.freeze({
                        label: sr
                    }),
                    Lr = D => ({
                        startTime: D.startTime,
                        endTime: D.endTime,
                        value: D.text
                    });

                function Yt(D, C) {
                    return K(this, arguments, function*(H, re, se = mr) {
                        return $t(H, re, se.label, "chapters")
                    })
                }

                function oe(D, C = {
                    label: sr
                }) {
                    var H;
                    let re = Ar(D, C.label, "chapters");
                    return (H = re == null ? void 0 : re.cues) != null && H.length ? Array.from(re.cues, se => Lr(se)) : []
                }

                function Ut(D, C = {
                    label: sr
                }) {
                    var H, re;
                    let se = Ar(D, C.label, "chapters");
                    if (!((H = se == null ? void 0 : se.activeCues) != null && H.length)) return;
                    if (se.activeCues.length === 1) return Lr(se.activeCues[0]);
                    let {
                        currentTime: Ce
                    } = D, He = Array.prototype.find.call((re = se.activeCues) != null ? re : [], ({
                        startTime: Qe,
                        endTime: ke
                    }) => Qe <= Ce && ke > Ce);
                    return Lr(He || se.activeCues[0])
                }

                function yi(D) {
                    return K(this, arguments, function*(C, H = mr) {
                        return new Promise(re => {
                            br(C, "loadstart", () => K(this, null, function*() {
                                let se = yield Yt(C, [], H);
                                br(C, "cuechange", () => {
                                    let Ce = Ut(C);
                                    if (Ce) {
                                        let He = new CustomEvent("chapterchange", {
                                            composed: !0,
                                            bubbles: !0,
                                            detail: Ce
                                        });
                                        C.dispatchEvent(He)
                                    }
                                }, {}, se), re(se)
                            }))
                        })
                    })
                }

                function Ke(D, C) {
                    if (C) {
                        let H = C.playingDate;
                        if (H != null) return new Date(H.getTime() - D.currentTime * 1e3)
                    }
                    return typeof D.getStartDate == "function" ? D.getStartDate() : new Date(NaN)
                }

                function ge(D, C) {
                    if (C && C.playingDate) return C.playingDate;
                    if (typeof D.getStartDate == "function") {
                        let H = D.getStartDate();
                        return new Date(H.getTime() + D.currentTime * 1e3)
                    }
                    return new Date(NaN)
                }
                var Et = {
                        VIDEO: "v",
                        THUMBNAIL: "t",
                        STORYBOARD: "s",
                        DRM: "d"
                    },
                    vr = D => {
                        if (D === Be.VIDEO) return Et.VIDEO;
                        if (D === Be.DRM) return Et.DRM
                    },
                    tr = (D, C) => {
                        var H, re;
                        let se = Ve(D),
                            Ce = `${se}Token`;
                        return (H = C.tokens) != null && H[se] ? (re = C.tokens) == null ? void 0 : re[se] : ar(Ce, C) ? C[Ce] : void 0
                    },
                    Tr = (D, C, H, re = !1, se = !(Ce => (Ce = globalThis.navigator) == null ? void 0 : Ce.onLine)()) => {
                        var Ce, He;
                        if (se) {
                            let F = ie("Your device appears to be offline", re),
                                z, be = yt.MEDIA_ERR_NETWORK,
                                pt = new yt(F, be, !0, z);
                            return pt.errorCategory = C, pt.muxCode = _.NETWORK_OFFLINE, pt.data = D, pt
                        }
                        let Qe = "status" in D ? D.status : D.code,
                            ke = Date.now(),
                            We = yt.MEDIA_ERR_NETWORK;
                        if (Qe === 200) return;
                        let Xe = Ve(C),
                            Ot = tr(C, H),
                            qt = vr(C),
                            [fr] = Mi((Ce = H.playbackId) != null ? Ce : "");
                        if (!Qe || !fr) return;
                        let rr = Gr(Ot);
                        if (Ot && !rr) {
                            let F = ie("The {tokenNamePrefix}-token provided is invalid or malformed.", re).format({
                                    tokenNamePrefix: Xe
                                }),
                                z = ie("Compact JWT string: {token}", re).format({
                                    token: Ot
                                }),
                                be = new yt(F, We, !0, z);
                            return be.errorCategory = C, be.muxCode = _.NETWORK_TOKEN_MALFORMED, be.data = D, be
                        }
                        if (Qe >= 500) {
                            let F = new yt("", We, !0);
                            return F.errorCategory = C, F.muxCode = _.NETWORK_UNKNOWN_ERROR, F
                        }
                        if (Qe === 403)
                            if (rr) {
                                if (Kt(rr, ke)) {
                                    let F = {
                                            timeStyle: "medium",
                                            dateStyle: "medium"
                                        },
                                        z = ie("The video\u2019s secured {tokenNamePrefix}-token has expired.", re).format({
                                            tokenNamePrefix: Xe
                                        }),
                                        be = ie("Expired at: {expiredDate}. Current time: {currentDate}.", re).format({
                                            expiredDate: new Intl.DateTimeFormat("en", F).format((He = rr.exp) != null ? He : 0 * 1e3),
                                            currentDate: new Intl.DateTimeFormat("en", F).format(ke)
                                        }),
                                        pt = new yt(z, We, !0, be);
                                    return pt.errorCategory = C, pt.muxCode = _.NETWORK_TOKEN_EXPIRED, pt.data = D, pt
                                }
                                if (ri(rr, fr)) {
                                    let F = ie("The video\u2019s playback ID does not match the one encoded in the {tokenNamePrefix}-token.", re).format({
                                            tokenNamePrefix: Xe
                                        }),
                                        z = ie("Specified playback ID: {playbackId} and the playback ID encoded in the {tokenNamePrefix}-token: {tokenPlaybackId}", re).format({
                                            tokenNamePrefix: Xe,
                                            playbackId: fr,
                                            tokenPlaybackId: rr.sub
                                        }),
                                        be = new yt(F, We, !0, z);
                                    return be.errorCategory = C, be.muxCode = _.NETWORK_TOKEN_SUB_MISMATCH, be.data = D, be
                                }
                                if (ki(rr, qt)) {
                                    let F = ie("The {tokenNamePrefix}-token is formatted with incorrect information.", re).format({
                                            tokenNamePrefix: Xe
                                        }),
                                        z = ie("The {tokenNamePrefix}-token has no aud value. aud value should be {expectedAud}.", re).format({
                                            tokenNamePrefix: Xe,
                                            expectedAud: qt
                                        }),
                                        be = new yt(F, We, !0, z);
                                    return be.errorCategory = C, be.muxCode = _.NETWORK_TOKEN_AUD_MISSING, be.data = D, be
                                }
                                if (aa(rr, qt)) {
                                    let F = ie("The {tokenNamePrefix}-token is formatted with incorrect information.", re).format({
                                            tokenNamePrefix: Xe
                                        }),
                                        z = ie("The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.", re).format({
                                            tokenNamePrefix: Xe,
                                            expectedAud: qt,
                                            aud: rr.aud
                                        }),
                                        be = new yt(F, We, !0, z);
                                    return be.errorCategory = C, be.muxCode = _.NETWORK_TOKEN_AUD_MISMATCH, be.data = D, be
                                }
                            } else {
                                let F = ie("Authorization error trying to access this {category} URL. If this is a signed URL, you might need to provide a {tokenNamePrefix}-token.", re).format({
                                        tokenNamePrefix: Xe,
                                        category: C
                                    }),
                                    z = ie("Specified playback ID: {playbackId}", re).format({
                                        playbackId: fr
                                    }),
                                    be = new yt(F, We, !0, z);
                                return be.errorCategory = C, be.muxCode = _.NETWORK_TOKEN_MISSING, be.data = D, be
                            }
                        if (Qe === 412) {
                            let F = ie("This playback-id may belong to a live stream that is not currently active or an asset that is not ready.", re),
                                z = ie("Specified playback ID: {playbackId}", re).format({
                                    playbackId: fr
                                }),
                                be = new yt(F, We, !0, z);
                            return be.errorCategory = C, be.muxCode = _.NETWORK_NOT_READY, be.data = D, be
                        }
                        if (Qe === 404) {
                            let F = ie("This URL or playback-id does not exist. You may have used an Asset ID or an ID from a different resource.", re),
                                z = ie("Specified playback ID: {playbackId}", re).format({
                                    playbackId: fr
                                }),
                                be = new yt(F, We, !0, z);
                            return be.errorCategory = C, be.muxCode = _.NETWORK_NOT_FOUND, be.data = D, be
                        }
                        if (Qe === 400) {
                            let F = ie("The URL or playback-id was invalid. You may have used an invalid value as a playback-id."),
                                z = ie("Specified playback ID: {playbackId}", re).format({
                                    playbackId: fr
                                }),
                                be = new yt(F, We, !0, z);
                            return be.errorCategory = C, be.muxCode = _.NETWORK_INVALID_URL, be.data = D, be
                        }
                        let y = new yt("", We, !0);
                        return y.errorCategory = C, y.muxCode = _.NETWORK_UNKNOWN_ERROR, y.data = D, y
                    },
                    Vt = B.DefaultConfig.capLevelController,
                    Si = class _v extends Vt {
                        constructor(C) {
                            super(C)
                        }
                        get levels() {
                            var C;
                            return (C = this.hls.levels) != null ? C : []
                        }
                        getValidLevels(C) {
                            return this.levels.filter((H, re) => this.isLevelAllowed(H) && re <= C)
                        }
                        getMaxLevel(C) {
                            let H = super.getMaxLevel(C),
                                re = this.getValidLevels(C);
                            if (!re[H]) return H;
                            let se = Math.min(re[H].width, re[H].height),
                                Ce = _v.minMaxResolution;
                            return se >= Ce ? H : Vt.getMaxLevelByMediaSize(re, Ce * (16 / 9), Ce)
                        }
                    };
                Si.minMaxResolution = 720;
                var Qi = Si,
                    Ma = Qi,
                    Ti = {
                        FAIRPLAY: "fairplay",
                        PLAYREADY: "playready",
                        WIDEVINE: "widevine"
                    },
                    Ri = D => {
                        if (D.includes("fps")) return Ti.FAIRPLAY;
                        if (D.includes("playready")) return Ti.PLAYREADY;
                        if (D.includes("widevine")) return Ti.WIDEVINE
                    },
                    Lt = D => K(this, null, function*() {
                        return fetch(D).then(C => C.status !== 200 ? Promise.reject(C) : C.text()).then(C => {
                            let H = C.split(`
`).find((re, se, Ce) => se && Ce[se - 1].startsWith("#EXT-X-STREAM-INF"));
                            return fetch(H).then(re => re.status !== 200 ? Promise.reject(re) : re.text()).then(re => re.split(`
`))
                        })
                    }),
                    _n = D => {
                        var C, H, re;
                        let se = (H = ((C = D.find(ke => ke.startsWith("#EXT-X-PLAYLIST-TYPE"))) != null ? C : "").split(":")[1]) == null ? void 0 : H.trim(),
                            Ce = ti(se),
                            He = oa(se),
                            Qe;
                        if (Ce === dr.LIVE) {
                            let ke = D.find(We => We.startsWith("#EXT-X-PART-INF"));
                            if (ke) Qe = +ke.split(":")[1].split("=")[1] * 2;
                            else {
                                let We = D.find(Ot => Ot.startsWith("#EXT-X-TARGETDURATION")),
                                    Xe = (re = We == null ? void 0 : We.split(":")) == null ? void 0 : re[1];
                                Qe = +(Xe != null ? Xe : 6) * 3
                            }
                        }
                        return {
                            streamType: Ce,
                            targetLiveWindow: He,
                            liveEdgeStartOffset: Qe
                        }
                    },
                    Qa = (D, C) => K(this, null, function*() {
                        if (C === Pe.MP4) return {
                            streamType: dr.ON_DEMAND,
                            targetLiveWindow: Number.NaN,
                            liveEdgeStartOffset: void 0
                        };
                        if (C === Pe.M3U8) {
                            let H = yield Lt(D);
                            return _n(H)
                        }
                        return console.error(`Media type ${C} is an unrecognized or unsupported type for src ${D}.`), {
                            streamType: void 0,
                            targetLiveWindow: void 0,
                            liveEdgeStartOffset: void 0
                        }
                    }),
                    Hn = (D, C, ...H) => K(this, [D, C, ...H], function*(re, se, Ce = si({
                        src: re
                    })) {
                        var He, Qe, ke;
                        let {
                            streamType: We,
                            targetLiveWindow: Xe,
                            liveEdgeStartOffset: Ot
                        } = yield Qa(re, Ce);
                        ((He = vi.get(se)) != null ? He : {}).liveEdgeStartOffset = Ot, ((Qe = vi.get(se)) != null ? Qe : {}).targetLiveWindow = Xe, se.dispatchEvent(new CustomEvent("targetlivewindowchange", {
                            composed: !0,
                            bubbles: !0
                        })), ((ke = vi.get(se)) != null ? ke : {}).streamType = We, se.dispatchEvent(new CustomEvent("streamtypechange", {
                            composed: !0,
                            bubbles: !0
                        }))
                    }),
                    Pi = D => {
                        var C;
                        let H = D.type,
                            re = ti(H),
                            se = oa(H),
                            Ce, He = !!((C = D.partList) != null && C.length);
                        return re === dr.LIVE && (Ce = He ? D.partTarget * 2 : D.targetduration * 3), {
                            streamType: re,
                            targetLiveWindow: se,
                            liveEdgeStartOffset: Ce,
                            lowLatency: He
                        }
                    },
                    ln = (D, C, H) => {
                        var re, se, Ce, He, Qe, ke, We, Xe;
                        let {
                            streamType: Ot,
                            targetLiveWindow: qt,
                            liveEdgeStartOffset: fr,
                            lowLatency: rr
                        } = Pi(D);
                        if (Ot === dr.LIVE) {
                            rr ? (H.config.backBufferLength = (re = H.userConfig.backBufferLength) != null ? re : 4, H.config.maxFragLookUpTolerance = (se = H.userConfig.maxFragLookUpTolerance) != null ? se : .001, H.config.abrBandWidthUpFactor = (Ce = H.userConfig.abrBandWidthUpFactor) != null ? Ce : H.config.abrBandWidthFactor) : H.config.backBufferLength = (He = H.userConfig.backBufferLength) != null ? He : 8;
                            let y = Object.freeze({
                                get length() {
                                    return C.seekable.length
                                },
                                start(F) {
                                    return C.seekable.start(F)
                                },
                                end(F) {
                                    var z;
                                    return F > this.length || F < 0 || Number.isFinite(C.duration) ? C.seekable.end(F) : (z = H.liveSyncPosition) != null ? z : C.seekable.end(F)
                                }
                            });
                            ((Qe = vi.get(C)) != null ? Qe : {}).seekable = y
                        }((ke = vi.get(C)) != null ? ke : {}).liveEdgeStartOffset = fr, ((We = vi.get(C)) != null ? We : {}).targetLiveWindow = qt, C.dispatchEvent(new CustomEvent("targetlivewindowchange", {
                            composed: !0,
                            bubbles: !0
                        })), ((Xe = vi.get(C)) != null ? Xe : {}).streamType = Ot, C.dispatchEvent(new CustomEvent("streamtypechange", {
                            composed: !0,
                            bubbles: !0
                        }))
                    },
                    Ja, Qr, Nr = (Qr = (Ja = globalThis == null ? void 0 : globalThis.navigator) == null ? void 0 : Ja.userAgent) != null ? Qr : "",
                    xr, Vr, li, mi = (li = (Vr = (xr = globalThis == null ? void 0 : globalThis.navigator) == null ? void 0 : xr.userAgentData) == null ? void 0 : Vr.platform) != null ? li : "",
                    Vn = Nr.toLowerCase().includes("android") || ["x11", "android"].some(D => mi.toLowerCase().includes(D)),
                    vi = new WeakMap,
                    la = "mux.com",
                    Ia, Oi, Ki = (Oi = (Ia = B).isSupported) == null ? void 0 : Oi.call(Ia),
                    un = Vn,
                    Ha = () => fe.default.utils.now(),
                    Sn = fe.default.utils.generateUUID,
                    Yi = ({
                        playbackId: D,
                        customDomain: C = la,
                        maxResolution: H,
                        minResolution: re,
                        renditionOrder: se,
                        programStartTime: Ce,
                        programEndTime: He,
                        assetStartTime: Qe,
                        assetEndTime: ke,
                        playbackToken: We,
                        tokens: {
                            playback: Xe = We
                        } = {},
                        extraSourceParams: Ot = {}
                    } = {}) => {
                        if (!D) return;
                        let [qt, fr = ""] = Mi(D), rr = new URL(`https://stream.${C}/${qt}.m3u8${fr}`);
                        return Xe || rr.searchParams.has("token") ? (rr.searchParams.forEach((y, F) => {
                            F != "token" && rr.searchParams.delete(F)
                        }), Xe && rr.searchParams.set("token", Xe)) : (H && rr.searchParams.set("max_resolution", H), re && (rr.searchParams.set("min_resolution", re), H && +H.slice(0, -1) < +re.slice(0, -1) && console.error("minResolution must be <= maxResolution", "minResolution", re, "maxResolution", H)), se && rr.searchParams.set("rendition_order", se), Ce && rr.searchParams.set("program_start_time", `${Ce}`), He && rr.searchParams.set("program_end_time", `${He}`), Qe && rr.searchParams.set("asset_start_time", `${Qe}`), ke && rr.searchParams.set("asset_end_time", `${ke}`), Object.entries(Ot).forEach(([y, F]) => {
                            F != null && rr.searchParams.set(y, F)
                        })), rr.toString()
                    },
                    xi = D => {
                        if (!D) return;
                        let [C] = D.split("?");
                        return C || void 0
                    },
                    Li = D => {
                        if (!D || !D.startsWith("https://stream.")) return;
                        let [C] = new URL(D).pathname.slice(1).split(".m3u8");
                        return C || void 0
                    },
                    _a = D => {
                        var C, H, re;
                        return (C = D == null ? void 0 : D.metadata) != null && C.video_id ? D.metadata.video_id : pa(D) && (re = (H = xi(D.playbackId)) != null ? H : Li(D.src)) != null ? re : D.src
                    },
                    gn = D => {
                        var C;
                        return (C = vi.get(D)) == null ? void 0 : C.error
                    },
                    Ji = D => {
                        var C, H;
                        return (H = (C = vi.get(D)) == null ? void 0 : C.streamType) != null ? H : dr.UNKNOWN
                    },
                    Ni = D => {
                        var C, H;
                        return (H = (C = vi.get(D)) == null ? void 0 : C.targetLiveWindow) != null ? H : Number.NaN
                    },
                    ea = D => {
                        var C, H;
                        return (H = (C = vi.get(D)) == null ? void 0 : C.seekable) != null ? H : D.seekable
                    },
                    ma = D => {
                        var C;
                        let H = (C = vi.get(D)) == null ? void 0 : C.liveEdgeStartOffset;
                        if (typeof H != "number") return Number.NaN;
                        let re = ea(D);
                        return re.length ? re.end(re.length - 1) - H : Number.NaN
                    },
                    Sa = .034,
                    Ca = (D, C, H = Sa) => Math.abs(D - C) <= H,
                    en = (D, C, H = Sa) => D > C || Ca(D, C, H),
                    Pr = (D, C = Sa) => D.paused && en(D.currentTime, D.duration, C),
                    qr = (D, C) => {
                        var H, re, se;
                        if (!C || !D.buffered.length) return;
                        if (D.readyState > 2) return !1;
                        let Ce = C.currentLevel >= 0 ? (re = (H = C.levels) == null ? void 0 : H[C.currentLevel]) == null ? void 0 : re.details : (se = C.levels.find(Ot => !!Ot.details)) == null ? void 0 : se.details;
                        if (!Ce || Ce.live) return;
                        let {
                            fragments: He
                        } = Ce;
                        if (!(He != null && He.length)) return;
                        if (D.currentTime < D.duration - (Ce.targetduration + .5)) return !1;
                        let Qe = He[He.length - 1];
                        if (D.currentTime <= Qe.start) return !1;
                        let ke = Qe.start + Qe.duration / 2,
                            We = D.buffered.start(D.buffered.length - 1),
                            Xe = D.buffered.end(D.buffered.length - 1);
                        return ke > We && ke < Xe
                    },
                    va = (D, C) => D.ended || D.loop ? D.ended : C && qr(D, C) ? !0 : Pr(D),
                    Kr = (D, C, H) => {
                        ta(C, H);
                        let {
                            metadata: re = {}
                        } = D, {
                            view_session_id: se = Sn()
                        } = re, Ce = _a(D);
                        re.view_session_id = se, re.video_id = Ce, D.metadata = re;
                        let He = Xe => {
                            var Ot;
                            (Ot = C.mux) == null || Ot.emit("hb", {
                                view_drm_type: Xe
                            })
                        };
                        D.drmTypeCb = He, vi.set(C, {});
                        let Qe = Vi(D, C),
                            ke = ze(D, C, Qe);
                        Va(D, C, Qe), kn(D, C, Qe), Ze(C), yi(C);
                        let We = pe(D, C, Qe);
                        return {
                            engine: Qe,
                            setAutoplay: We,
                            setPreload: ke
                        }
                    },
                    ta = (D, C) => {
                        let H = C == null ? void 0 : C.engine;
                        H && (H.detachMedia(), H.destroy()), D != null && D.mux && !D.mux.deleted && (D.mux.destroy(), delete D.mux), D && (D.removeAttribute("src"), D.load(), D.removeEventListener("error", lt), D.removeEventListener("error", rn), D.removeEventListener("durationchange", Zn), vi.delete(D), D.dispatchEvent(new Event("teardown")))
                    };

                function ra(D, C) {
                    var H;
                    let re = si(D);
                    if (re !== Pe.M3U8) return !0;
                    let se = !re || ((H = C.canPlayType(re)) != null ? H : !0),
                        {
                            preferPlayback: Ce
                        } = D,
                        He = Ce === ai.MSE,
                        Qe = Ce === ai.NATIVE;
                    return se && (Qe || !(Ki && (He || un)))
                }
                var Vi = (D, C) => {
                        let {
                            debug: H,
                            streamType: re,
                            startTime: se = -1,
                            metadata: Ce,
                            preferCmcd: He,
                            _hlsConfig: Qe = {}
                        } = D, ke = si(D) === Pe.M3U8, We = ra(D, C);
                        if (ke && !We && Ki) {
                            let Xe = {
                                    backBufferLength: 30,
                                    renderTextTracksNatively: !1,
                                    liveDurationInfinity: !0,
                                    capLevelToPlayerSize: !0,
                                    capLevelOnFPSDrop: !0
                                },
                                Ot = Da(re),
                                qt = tn(D),
                                fr = He !== V.NONE ? {
                                    useHeaders: He === V.HEADER,
                                    sessionId: Ce == null ? void 0 : Ce.view_session_id,
                                    contentId: Ce == null ? void 0 : Ce.video_id
                                } : void 0;
                            return new B(le(le(le(le({
                                debug: H,
                                startPosition: se,
                                cmcd: fr,
                                xhrSetup: (rr, y) => {
                                    var F, z;
                                    if (He && He !== V.QUERY) return;
                                    let be = new URL(y);
                                    if (!be.searchParams.has("CMCD")) return;
                                    let pt = ((z = (F = be.searchParams.get("CMCD")) == null ? void 0 : F.split(",")) != null ? z : []).filter(Gt => Gt.startsWith("sid") || Gt.startsWith("cid")).join(",");
                                    be.searchParams.set("CMCD", pt), rr.open("GET", be)
                                },
                                capLevelController: Ma
                            }, Xe), Ot), qt), Qe))
                        }
                    },
                    Da = D => D === dr.LIVE ? {
                        backBufferLength: 8
                    } : {},
                    tn = D => {
                        let {
                            tokens: {
                                drm: C
                            } = {},
                            playbackId: H,
                            drmTypeCb: re
                        } = D, se = xi(H);
                        return !C || !se ? {} : {
                            emeEnabled: !0,
                            drmSystems: {
                                "com.apple.fps": {
                                    licenseUrl: qa(D, "fairplay"),
                                    serverCertificateUrl: En(D, "fairplay")
                                },
                                "com.widevine.alpha": {
                                    licenseUrl: qa(D, "widevine")
                                },
                                "com.microsoft.playready": {
                                    licenseUrl: qa(D, "playready")
                                }
                            },
                            requestMediaKeySystemAccessFunc: (Ce, He) => (Ce === "com.widevine.alpha" && (He = [...He.map(Qe => {
                                var ke;
                                let We = (ke = Qe.videoCapabilities) == null ? void 0 : ke.map(Xe => x(le({}, Xe), {
                                    robustness: "HW_SECURE_ALL"
                                }));
                                return x(le({}, Qe), {
                                    videoCapabilities: We
                                })
                            }), ...He]), navigator.requestMediaKeySystemAccess(Ce, He).then(Qe => {
                                let ke = Ri(Ce);
                                return re == null || re(ke), Qe
                            }))
                        }
                    },
                    ia = D => K(this, null, function*() {
                        let C = yield fetch(D);
                        return C.status !== 200 ? Promise.reject(C) : yield C.arrayBuffer()
                    }),
                    Pa = (D, C) => K(this, null, function*() {
                        let H = yield fetch(C, {
                            method: "POST",
                            headers: {
                                "Content-type": "application/octet-stream"
                            },
                            body: D
                        });
                        if (H.status !== 200) return Promise.reject(H);
                        let re = yield H.arrayBuffer();
                        return new Uint8Array(re)
                    }),
                    or = (D, C) => {
                        br(C, "encrypted", H => K(this, null, function*() {
                            try {
                                let re = H.initDataType;
                                if (re !== "skd") {
                                    console.error(`Received unexpected initialization data type "${re}"`);
                                    return
                                }
                                if (!C.mediaKeys) {
                                    let ke = yield navigator.requestMediaKeySystemAccess("com.apple.fps", [{
                                        initDataTypes: [re],
                                        videoCapabilities: [{
                                            contentType: "application/vnd.apple.mpegurl",
                                            robustness: ""
                                        }],
                                        distinctiveIdentifier: "not-allowed",
                                        persistentState: "not-allowed",
                                        sessionTypes: ["temporary"]
                                    }]).then(Xe => {
                                        var Ot;
                                        return (Ot = D.drmTypeCb) == null || Ot.call(D, Ti.FAIRPLAY), Xe
                                    }).catch(() => {
                                        let Xe = ie("Cannot play DRM-protected content with current security configuration on this browser. Try playing in another browser."),
                                            Ot = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, !0);
                                        Ot.errorCategory = Be.DRM, Ot.muxCode = _.ENCRYPTED_UNSUPPORTED_KEY_SYSTEM, Oa(C, Ot)
                                    });
                                    if (!ke) return;
                                    let We = yield ke.createMediaKeys();
                                    try {
                                        let Xe = yield ia(En(D, "fairplay")).catch(Ot => {
                                            if (Ot instanceof Response) {
                                                let qt = Tr(Ot, Be.DRM, D);
                                                return console.error("mediaError", qt == null ? void 0 : qt.message, qt == null ? void 0 : qt.context), qt ? Promise.reject(qt) : Promise.reject(new Error("Unexpected error in app cert request"))
                                            }
                                            return Promise.reject(Ot)
                                        });
                                        yield We.setServerCertificate(Xe).catch(() => {
                                            let Ot = ie("Your server certificate failed when attempting to set it. This may be an issue with a no longer valid certificate."),
                                                qt = new yt(Ot, yt.MEDIA_ERR_ENCRYPTED, !0);
                                            return qt.errorCategory = Be.DRM, qt.muxCode = _.ENCRYPTED_UPDATE_SERVER_CERT_FAILED, Promise.reject(qt)
                                        })
                                    } catch (Xe) {
                                        Oa(C, Xe);
                                        return
                                    }
                                    yield C.setMediaKeys(We)
                                }
                                let se = H.initData;
                                if (se == null) {
                                    console.error(`Could not start encrypted playback due to missing initData in ${H.type} event`);
                                    return
                                }
                                let Ce = C.mediaKeys.createSession();
                                Ce.addEventListener("keystatuseschange", () => {
                                    Ce.keyStatuses.forEach(ke => {
                                        let We;
                                        if (ke === "internal-error") {
                                            let Xe = ie("The DRM Content Decryption Module system had an internal failure. Try reloading the page, upading your browser, or playing in another browser.");
                                            We = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, !0), We.errorCategory = Be.DRM, We.muxCode = _.ENCRYPTED_CDM_ERROR
                                        } else if (ke === "output-restricted" || ke === "output-downscaled") {
                                            let Xe = ie("DRM playback is being attempted in an environment that is not sufficiently secure. User may see black screen.");
                                            We = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, !1), We.errorCategory = Be.DRM, We.muxCode = _.ENCRYPTED_OUTPUT_RESTRICTED
                                        }
                                        We && Oa(C, We)
                                    })
                                });
                                let He = yield Promise.all([Ce.generateRequest(re, se).catch(() => {
                                    let ke = ie("Failed to generate a DRM license request. This may be an issue with the player or your protected content."),
                                        We = new yt(ke, yt.MEDIA_ERR_ENCRYPTED, !0);
                                    We.errorCategory = Be.DRM, We.muxCode = _.ENCRYPTED_GENERATE_REQUEST_FAILED, Oa(C, We)
                                }), new Promise(ke => {
                                    Ce.addEventListener("message", We => {
                                        ke(We.message)
                                    }, {
                                        once: !0
                                    })
                                })]).then(([, ke]) => ke), Qe = yield Pa(He, qa(D, "fairplay")).catch(ke => {
                                    if (ke instanceof Response) {
                                        let We = Tr(ke, Be.DRM, D);
                                        return console.error("mediaError", We == null ? void 0 : We.message, We == null ? void 0 : We.context), We ? Promise.reject(We) : Promise.reject(new Error("Unexpected error in license key request"))
                                    }
                                    return Promise.reject(ke)
                                });
                                yield Ce.update(Qe).catch(() => {
                                    let ke = ie("Failed to update DRM license. This may be an issue with the player or your protected content."),
                                        We = new yt(ke, yt.MEDIA_ERR_ENCRYPTED, !0);
                                    return We.errorCategory = Be.DRM, We.muxCode = _.ENCRYPTED_UPDATE_LICENSE_FAILED, Promise.reject(We)
                                })
                            } catch (re) {
                                Oa(C, re);
                                return
                            }
                        }))
                    },
                    qa = ({
                        playbackId: D,
                        tokens: {
                            drm: C
                        } = {},
                        customDomain: H = la
                    }, re) => {
                        let se = xi(D);
                        return `https://license.${H.toLocaleLowerCase().endsWith(la)?H:la}/license/${re}/${se}?token=${C}`
                    },
                    En = ({
                        playbackId: D,
                        tokens: {
                            drm: C
                        } = {},
                        customDomain: H = la
                    }, re) => {
                        let se = xi(D);
                        return `https://license.${H.toLocaleLowerCase().endsWith(la)?H:la}/appcert/${re}/${se}?token=${C}`
                    },
                    pa = ({
                        playbackId: D,
                        src: C,
                        customDomain: H
                    }) => {
                        if (D) return !0;
                        if (typeof C != "string") return !1;
                        let re = window == null ? void 0 : window.location.href,
                            se = new URL(C, re).hostname.toLocaleLowerCase();
                        return se.includes(la) || !!H && se.includes(H.toLocaleLowerCase())
                    },
                    Va = (D, C, H) => {
                        var re;
                        let {
                            envKey: se,
                            disableTracking: Ce
                        } = D, He = pa(D);
                        if (!Ce && (se || He)) {
                            let {
                                playerInitTime: Qe,
                                playerSoftwareName: ke,
                                playerSoftwareVersion: We,
                                beaconCollectionDomain: Xe,
                                debug: Ot,
                                disableCookies: qt
                            } = D, fr = x(le({}, D.metadata), {
                                video_title: ((re = D == null ? void 0 : D.metadata) == null ? void 0 : re.video_title) || void 0
                            }), rr = y => typeof y.player_error_code == "string" ? !1 : typeof D.errorTranslator == "function" ? D.errorTranslator(y) : y;
                            fe.default.monitor(C, {
                                debug: Ot,
                                beaconCollectionDomain: Xe,
                                hlsjs: H,
                                Hls: H ? B : void 0,
                                automaticErrorTracking: !1,
                                errorTranslator: rr,
                                disableCookies: qt,
                                data: le(x(le({}, se ? {
                                    env_key: se
                                } : {}), {
                                    player_software_name: ke,
                                    player_software: ke,
                                    player_software_version: We,
                                    player_init_time: Qe
                                }), fr)
                            })
                        }
                    },
                    kn = (D, C, H) => {
                        var re, se;
                        let Ce = ra(D, C),
                            {
                                src: He
                            } = D,
                            Qe = () => {
                                C.ended || !va(C, H) || (qr(C, H) ? C.currentTime = C.buffered.end(C.buffered.length - 1) : C.dispatchEvent(new Event("ended")))
                            },
                            ke, We, Xe = () => {
                                let Ot = ea(C),
                                    qt, fr;
                                Ot.length > 0 && (qt = Ot.start(0), fr = Ot.end(0)), (We !== fr || ke !== qt) && C.dispatchEvent(new CustomEvent("seekablechange", {
                                    composed: !0
                                })), ke = qt, We = fr
                            };
                        if (br(C, "durationchange", Xe), C && Ce) {
                            let Ot = si(D);
                            if (typeof He == "string") {
                                let qt = () => {
                                        if (Ji(C) !== dr.LIVE || Number.isFinite(C.duration)) return;
                                        let rr = setInterval(Xe, 1e3);
                                        C.addEventListener("teardown", () => {
                                            clearInterval(rr)
                                        }, {
                                            once: !0
                                        }), br(C, "durationchange", () => {
                                            Number.isFinite(C.duration) && clearInterval(rr)
                                        })
                                    },
                                    fr = () => K(this, null, function*() {
                                        return Hn(He, C, Ot).then(qt).catch(rr => {
                                            if (rr instanceof Response) {
                                                let y = Tr(rr, Be.VIDEO, D);
                                                if (y) {
                                                    Oa(C, y);
                                                    return
                                                }
                                            } else rr instanceof Error
                                        })
                                    });
                                if (C.preload === "none") {
                                    let rr = () => {
                                            fr(), C.removeEventListener("loadedmetadata", y)
                                        },
                                        y = () => {
                                            fr(), C.removeEventListener("play", rr)
                                        };
                                    br(C, "play", rr, {
                                        once: !0
                                    }), br(C, "loadedmetadata", y, {
                                        once: !0
                                    })
                                } else fr();
                                (re = D.tokens) != null && re.drm ? or(D, C) : br(C, "encrypted", () => {
                                    let rr = ie("Attempting to play DRM-protected content without providing a DRM token."),
                                        y = new yt(rr, yt.MEDIA_ERR_ENCRYPTED, !0);
                                    y.errorCategory = Be.DRM, y.muxCode = _.ENCRYPTED_MISSING_TOKEN, Oa(C, y)
                                }, {
                                    once: !0
                                }), C.setAttribute("src", He), D.startTime && (((se = vi.get(C)) != null ? se : {}).startTime = D.startTime, C.addEventListener("durationchange", Zn, {
                                    once: !0
                                }))
                            } else C.removeAttribute("src");
                            C.addEventListener("error", lt), C.addEventListener("error", rn), C.addEventListener("emptied", () => {
                                C.querySelectorAll("track[data-removeondestroy]").forEach(qt => {
                                    qt.remove()
                                })
                            }, {
                                once: !0
                            }), br(C, "pause", Qe), br(C, "seeked", Qe), br(C, "play", () => {
                                C.ended || en(C.currentTime, C.duration) && (C.currentTime = C.seekable.length ? C.seekable.start(0) : 0)
                            })
                        } else H && He ? (H.once(B.Events.LEVEL_LOADED, (Ot, qt) => {
                            ln(qt.details, C, H), Xe(), Ji(C) === dr.LIVE && !Number.isFinite(C.duration) && (H.on(B.Events.LEVEL_UPDATED, Xe), br(C, "durationchange", () => {
                                Number.isFinite(C.duration) && H.off(B.Events.LEVELS_UPDATED, Xe)
                            }))
                        }), H.on(B.Events.ERROR, (Ot, qt) => {
                            Oa(C, di(qt, D))
                        }), C.addEventListener("error", rn), br(C, "waiting", Qe), ft(D, H), qe(C, H), H.attachMedia(C)) : console.error("It looks like the video you're trying to play will not work on this system! If possible, try upgrading to the newest versions of your browser or software.")
                    };

                function Zn(D) {
                    var C;
                    let H = D.target,
                        re = (C = vi.get(H)) == null ? void 0 : C.startTime;
                    if (re && ni(H.seekable, H.duration, re)) {
                        let se = H.preload === "auto";
                        se && (H.preload = "none"), H.currentTime = re, se && (H.preload = "auto")
                    }
                }

                function lt(D) {
                    return K(this, null, function*() {
                        if (!D.isTrusted) return;
                        D.stopImmediatePropagation();
                        let C = D.target;
                        if (!(C != null && C.error)) return;
                        let {
                            message: H,
                            code: re
                        } = C.error, se = new yt(H, re);
                        if (C.src && re === yt.MEDIA_ERR_SRC_NOT_SUPPORTED && C.readyState === HTMLMediaElement.HAVE_NOTHING) {
                            setTimeout(() => {
                                var Ce;
                                let He = (Ce = gn(C)) != null ? Ce : C.error;
                                (He == null ? void 0 : He.code) === yt.MEDIA_ERR_SRC_NOT_SUPPORTED && Oa(C, se)
                            }, 500);
                            return
                        }
                        if (C.src && (re !== yt.MEDIA_ERR_DECODE || re !== void 0)) try {
                            let {
                                status: Ce
                            } = yield fetch(C.src);
                            se.data = {
                                response: {
                                    code: Ce
                                }
                            }
                        } catch (Ce) {}
                        Oa(C, se)
                    })
                }

                function Oa(D, C) {
                    var H;
                    C.fatal && (((H = vi.get(D)) != null ? H : {}).error = C, D.dispatchEvent(new CustomEvent("error", {
                        detail: C
                    })))
                }

                function rn(D) {
                    var C, H;
                    if (!(D instanceof CustomEvent) || !(D.detail instanceof yt)) return;
                    let re = D.target,
                        se = D.detail;
                    !se || !se.fatal || (((C = vi.get(re)) != null ? C : {}).error = se, (H = re.mux) == null || H.emit("error", {
                        player_error_code: se.code,
                        player_error_message: se.message,
                        player_error_context: se.context
                    }))
                }
                var di = (D, C) => {
                    var H, re, se;
                    console.error("getErrorFromHlsErrorData()", D);
                    let Ce = {
                            [B.ErrorTypes.NETWORK_ERROR]: yt.MEDIA_ERR_NETWORK,
                            [B.ErrorTypes.MEDIA_ERROR]: yt.MEDIA_ERR_DECODE,
                            [B.ErrorTypes.KEY_SYSTEM_ERROR]: yt.MEDIA_ERR_ENCRYPTED
                        },
                        He = Xe => [B.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED, B.ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED].includes(Xe.details) ? yt.MEDIA_ERR_NETWORK : Ce[Xe.type],
                        Qe = Xe => {
                            if (Xe.type === B.ErrorTypes.KEY_SYSTEM_ERROR) return Be.DRM;
                            if (Xe.type === B.ErrorTypes.NETWORK_ERROR) return Be.VIDEO
                        },
                        ke, We = He(D);
                    if (We === yt.MEDIA_ERR_NETWORK && D.response) {
                        let Xe = (H = Qe(D)) != null ? H : Be.VIDEO;
                        ke = (re = Tr(D.response, Xe, C)) != null ? re : new yt("", We)
                    } else if (We === yt.MEDIA_ERR_ENCRYPTED)
                        if (D.details === B.ErrorDetails.KEY_SYSTEM_NO_CONFIGURED_LICENSE) {
                            let Xe = ie("Attempting to play DRM-protected content without providing a DRM token.");
                            ke = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, D.fatal), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_MISSING_TOKEN
                        } else if (D.details === B.ErrorDetails.KEY_SYSTEM_NO_ACCESS) {
                        let Xe = ie("Cannot play DRM-protected content with current security configuration on this browser. Try playing in another browser.");
                        ke = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, D.fatal), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_UNSUPPORTED_KEY_SYSTEM
                    } else if (D.details === B.ErrorDetails.KEY_SYSTEM_NO_SESSION) {
                        let Xe = ie("Failed to generate a DRM license request. This may be an issue with the player or your protected content.");
                        ke = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, !0), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_GENERATE_REQUEST_FAILED
                    } else if (D.details === B.ErrorDetails.KEY_SYSTEM_SESSION_UPDATE_FAILED) {
                        let Xe = ie("Failed to update DRM license. This may be an issue with the player or your protected content.");
                        ke = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, D.fatal), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_UPDATE_LICENSE_FAILED
                    } else if (D.details === B.ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED) {
                        let Xe = ie("Your server certificate failed when attempting to set it. This may be an issue with a no longer valid certificate.");
                        ke = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, D.fatal), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_UPDATE_SERVER_CERT_FAILED
                    } else if (D.details === B.ErrorDetails.KEY_SYSTEM_STATUS_INTERNAL_ERROR) {
                        let Xe = ie("The DRM Content Decryption Module system had an internal failure. Try reloading the page, upading your browser, or playing in another browser.");
                        ke = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, D.fatal), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_CDM_ERROR
                    } else if (D.details === B.ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED) {
                        let Xe = ie("DRM playback is being attempted in an environment that is not sufficiently secure. User may see black screen.");
                        ke = new yt(Xe, yt.MEDIA_ERR_ENCRYPTED, !1), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_OUTPUT_RESTRICTED
                    } else ke = new yt(D.error.message, yt.MEDIA_ERR_ENCRYPTED, D.fatal), ke.errorCategory = Be.DRM, ke.muxCode = _.ENCRYPTED_ERROR;
                    else ke = new yt("", We, D.fatal);
                    return ke.context || (ke.context = `${D.url?`url: ${D.url}
`:""}${D.response&&(D.response.code||D.response.text)?`response: ${D.response.code}, ${D.response.text}
`:""}${D.reason?`failure reason: ${D.reason}
`:""}${D.level?`level: ${D.level}
`:""}${D.parent?`parent stream controller: ${D.parent}
`:""}${D.buffer?`buffer length: ${D.buffer}
`:""}${D.error?`error: ${D.error}
`:""}${D.event?`event: ${D.event}
`:""}${D.err?`error message: ${(se=D.err)==null?void 0:se.message}
`:""}`), ke.data = D, ke
                }
            },
            57202: (wt, Me) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.default = ["cueVideoById", "loadVideoById", "cueVideoByUrl", "loadVideoByUrl", "playVideo", "pauseVideo", "stopVideo", "getVideoLoadedFraction", "cuePlaylist", "loadPlaylist", "nextVideo", "previousVideo", "playVideoAt", "setShuffle", "setLoop", "getPlaylist", "getPlaylistIndex", "setOption", "mute", "unMute", "isMuted", "setVolume", "getVolume", "seekTo", "getPlayerState", "getPlaybackRate", "setPlaybackRate", "getAvailablePlaybackRates", "getPlaybackQuality", "setPlaybackQuality", "getAvailableQualityLevels", "getCurrentTime", "getDuration", "removeEventListener", "getVideoUrl", "getVideoEmbedCode", "getOptions", "getOption", "addEventListener", "destroy", "setSize", "getIframe", "getSphericalProperties", "setSphericalProperties"], wt.exports = Me.default
            },
            57233: (wt, Me, we) => {
                "use strict";
                var je = Object.create,
                    Ee = Object.defineProperty,
                    Je = Object.getOwnPropertyDescriptor,
                    Y = Object.getOwnPropertyNames,
                    Ct = Object.getPrototypeOf,
                    tt = Object.prototype.hasOwnProperty,
                    mt = function(k, b) {
                        return function() {
                            return k && (b = k(k = 0)), b
                        }
                    },
                    le = function(k, b) {
                        return function() {
                            return b || k((b = {
                                exports: {}
                            }).exports, b), b.exports
                        }
                    },
                    x = function(k, b) {
                        for (var A in b) Ee(k, A, {
                            get: b[A],
                            enumerable: !0
                        })
                    },
                    K = function(k, b, A, P) {
                        if (b && typeof b == "object" || typeof b == "function")
                            for (var M = Y(b), q = 0, $ = M.length, Te; q < $; q++) Te = M[q], !tt.call(k, Te) && Te !== A && Ee(k, Te, {
                                get: function(Le) {
                                    return b[Le]
                                }.bind(null, Te),
                                enumerable: !(P = Je(b, Te)) || P.enumerable
                            });
                        return k
                    },
                    Q = function(k, b, A) {
                        return A = k != null ? je(Ct(k)) : {}, K(b || !k || !k.__esModule ? Ee(A, "default", {
                            value: k,
                            enumerable: !0
                        }) : A, k)
                    },
                    he = function(k) {
                        return K(Ee({}, "__esModule", {
                            value: !0
                        }), k)
                    },
                    ot = le(function(k, b) {
                        var A;
                        typeof window != "undefined" ? A = window : typeof we.g != "undefined" ? A = we.g : typeof self != "undefined" ? A = self : A = {}, b.exports = A
                    });

                function it(k, b) {
                    return b != null && typeof Symbol != "undefined" && b[Symbol.hasInstance] ? !!b[Symbol.hasInstance](k) : it(k, b)
                }
                var Rt = mt(function() {
                    Rt()
                });

                function Ft(k) {
                    "@swc/helpers - typeof";
                    return k && typeof Symbol != "undefined" && k.constructor === Symbol ? "symbol" : typeof k
                }
                var Dt = mt(function() {}),
                    dt = le(function(k, b) {
                        var A = Array.prototype.slice;
                        b.exports = P;

                        function P(M, q) {
                            for (("length" in M) || (M = [M]), M = A.call(M); M.length;) {
                                var $ = M.shift(),
                                    Te = q($);
                                if (Te) return Te;
                                $.childNodes && $.childNodes.length && (M = A.call($.childNodes).concat(M))
                            }
                        }
                    }),
                    at = le(function(k, b) {
                        Rt(), b.exports = A;

                        function A(P, M) {
                            if (!it(this, A)) return new A(P, M);
                            this.data = P, this.nodeValue = P, this.length = P.length, this.ownerDocument = M || null
                        }
                        A.prototype.nodeType = 8, A.prototype.nodeName = "#comment", A.prototype.toString = function() {
                            return "[object Comment]"
                        }
                    }),
                    bt = le(function(k, b) {
                        Rt(), b.exports = A;

                        function A(P, M) {
                            if (!it(this, A)) return new A(P);
                            this.data = P || "", this.length = this.data.length, this.ownerDocument = M || null
                        }
                        A.prototype.type = "DOMTextNode", A.prototype.nodeType = 3, A.prototype.nodeName = "#text", A.prototype.toString = function() {
                            return this.data
                        }, A.prototype.replaceData = function(P, M, q) {
                            var $ = this.data,
                                Te = $.substring(0, P),
                                Le = $.substring(P + M, $.length);
                            this.data = Te + q + Le, this.length = this.data.length
                        }
                    }),
                    Wt = le(function(k, b) {
                        b.exports = A;

                        function A(P) {
                            var M = this,
                                q = P.type;
                            P.target || (P.target = M), M.listeners || (M.listeners = {});
                            var $ = M.listeners[q];
                            if ($) return $.forEach(function(Te) {
                                P.currentTarget = M, typeof Te == "function" ? Te(P) : Te.handleEvent(P)
                            });
                            M.parentNode && M.parentNode.dispatchEvent(P)
                        }
                    }),
                    fe = le(function(k, b) {
                        b.exports = A;

                        function A(P, M) {
                            var q = this;
                            q.listeners || (q.listeners = {}), q.listeners[P] || (q.listeners[P] = []), q.listeners[P].indexOf(M) === -1 && q.listeners[P].push(M)
                        }
                    }),
                    Ge = le(function(k, b) {
                        b.exports = A;

                        function A(P, M) {
                            var q = this;
                            if (q.listeners && q.listeners[P]) {
                                var $ = q.listeners[P],
                                    Te = $.indexOf(M);
                                Te !== -1 && $.splice(Te, 1)
                            }
                        }
                    }),
                    B = le(function(k, b) {
                        Dt(), b.exports = P;
                        var A = ["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr"];

                        function P(xe) {
                            switch (xe.nodeType) {
                                case 3:
                                    return It(xe.data);
                                case 8:
                                    return "<!--" + xe.data + "-->";
                                default:
                                    return M(xe)
                            }
                        }

                        function M(xe) {
                            var Ae = [],
                                Ue = xe.tagName;
                            return xe.namespaceURI === "http://www.w3.org/1999/xhtml" && (Ue = Ue.toLowerCase()), Ae.push("<" + Ue + Re(xe) + Te(xe)), A.indexOf(Ue) > -1 ? Ae.push(" />") : (Ae.push(">"), xe.childNodes.length ? Ae.push.apply(Ae, xe.childNodes.map(P)) : xe.textContent || xe.innerText ? Ae.push(It(xe.textContent || xe.innerText)) : xe.innerHTML && Ae.push(xe.innerHTML), Ae.push("</" + Ue + ">")), Ae.join("")
                        }

                        function q(xe, Ae) {
                            var Ue = Ft(xe[Ae]);
                            return Ae === "style" && Object.keys(xe.style).length > 0 ? !0 : xe.hasOwnProperty(Ae) && (Ue === "string" || Ue === "boolean" || Ue === "number") && Ae !== "nodeName" && Ae !== "className" && Ae !== "tagName" && Ae !== "textContent" && Ae !== "innerText" && Ae !== "namespaceURI" && Ae !== "innerHTML"
                        }

                        function $(xe) {
                            if (typeof xe == "string") return xe;
                            var Ae = "";
                            return Object.keys(xe).forEach(function(Ue) {
                                var Bt = xe[Ue];
                                Ue = Ue.replace(/[A-Z]/g, function(cr) {
                                    return "-" + cr.toLowerCase()
                                }), Ae += Ue + ":" + Bt + ";"
                            }), Ae
                        }

                        function Te(xe) {
                            var Ae = xe.dataset,
                                Ue = [];
                            for (var Bt in Ae) Ue.push({
                                name: "data-" + Bt,
                                value: Ae[Bt]
                            });
                            return Ue.length ? Le(Ue) : ""
                        }

                        function Le(xe) {
                            var Ae = [];
                            return xe.forEach(function(Ue) {
                                var Bt = Ue.name,
                                    cr = Ue.value;
                                Bt === "style" && (cr = $(cr)), Ae.push(Bt + '="' + xt(cr) + '"')
                            }), Ae.length ? " " + Ae.join(" ") : ""
                        }

                        function Re(xe) {
                            var Ae = [];
                            for (var Ue in xe) q(xe, Ue) && Ae.push({
                                name: Ue,
                                value: xe[Ue]
                            });
                            for (var Bt in xe._attributes)
                                for (var cr in xe._attributes[Bt]) {
                                    var Ur = xe._attributes[Bt][cr],
                                        Pt = (Ur.prefix ? Ur.prefix + ":" : "") + cr;
                                    Ae.push({
                                        name: Pt,
                                        value: Ur.value
                                    })
                                }
                            return xe.className && Ae.push({
                                name: "class",
                                value: xe.className
                            }), Ae.length ? Le(Ae) : ""
                        }

                        function It(xe) {
                            var Ae = "";
                            return typeof xe == "string" ? Ae = xe : xe && (Ae = xe.toString()), Ae.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
                        }

                        function xt(xe) {
                            return It(xe).replace(/"/g, "&quot;")
                        }
                    }),
                    Be = le(function(k, b) {
                        Rt();
                        var A = dt(),
                            P = Wt(),
                            M = fe(),
                            q = Ge(),
                            $ = B(),
                            Te = "http://www.w3.org/1999/xhtml";
                        b.exports = Le;

                        function Le(Re, It, xt) {
                            if (!it(this, Le)) return new Le(Re);
                            var xe = xt === void 0 ? Te : xt || null;
                            this.tagName = xe === Te ? String(Re).toUpperCase() : Re, this.nodeName = this.tagName, this.className = "", this.dataset = {}, this.childNodes = [], this.parentNode = null, this.style = {}, this.ownerDocument = It || null, this.namespaceURI = xe, this._attributes = {}, this.tagName === "INPUT" && (this.type = "text")
                        }
                        Le.prototype.type = "DOMElement", Le.prototype.nodeType = 1, Le.prototype.appendChild = function(Re) {
                            return Re.parentNode && Re.parentNode.removeChild(Re), this.childNodes.push(Re), Re.parentNode = this, Re
                        }, Le.prototype.replaceChild = function(Re, It) {
                            Re.parentNode && Re.parentNode.removeChild(Re);
                            var xt = this.childNodes.indexOf(It);
                            return It.parentNode = null, this.childNodes[xt] = Re, Re.parentNode = this, It
                        }, Le.prototype.removeChild = function(Re) {
                            var It = this.childNodes.indexOf(Re);
                            return this.childNodes.splice(It, 1), Re.parentNode = null, Re
                        }, Le.prototype.insertBefore = function(Re, It) {
                            Re.parentNode && Re.parentNode.removeChild(Re);
                            var xt = It == null ? -1 : this.childNodes.indexOf(It);
                            return xt > -1 ? this.childNodes.splice(xt, 0, Re) : this.childNodes.push(Re), Re.parentNode = this, Re
                        }, Le.prototype.setAttributeNS = function(Re, It, xt) {
                            var xe = null,
                                Ae = It,
                                Ue = It.indexOf(":");
                            if (Ue > -1 && (xe = It.substr(0, Ue), Ae = It.substr(Ue + 1)), this.tagName === "INPUT" && It === "type") this.type = xt;
                            else {
                                var Bt = this._attributes[Re] || (this._attributes[Re] = {});
                                Bt[Ae] = {
                                    value: xt,
                                    prefix: xe
                                }
                            }
                        }, Le.prototype.getAttributeNS = function(Re, It) {
                            var xt = this._attributes[Re],
                                xe = xt && xt[It] && xt[It].value;
                            return this.tagName === "INPUT" && It === "type" ? this.type : typeof xe != "string" ? null : xe
                        }, Le.prototype.removeAttributeNS = function(Re, It) {
                            var xt = this._attributes[Re];
                            xt && delete xt[It]
                        }, Le.prototype.hasAttributeNS = function(Re, It) {
                            var xt = this._attributes[Re];
                            return !!xt && It in xt
                        }, Le.prototype.setAttribute = function(Re, It) {
                            return this.setAttributeNS(null, Re, It)
                        }, Le.prototype.getAttribute = function(Re) {
                            return this.getAttributeNS(null, Re)
                        }, Le.prototype.removeAttribute = function(Re) {
                            return this.removeAttributeNS(null, Re)
                        }, Le.prototype.hasAttribute = function(Re) {
                            return this.hasAttributeNS(null, Re)
                        }, Le.prototype.removeEventListener = q, Le.prototype.addEventListener = M, Le.prototype.dispatchEvent = P, Le.prototype.focus = function() {}, Le.prototype.toString = function() {
                            return $(this)
                        }, Le.prototype.getElementsByClassName = function(Re) {
                            var It = Re.split(" "),
                                xt = [];
                            return A(this, function(xe) {
                                if (xe.nodeType === 1) {
                                    var Ae = xe.className || "",
                                        Ue = Ae.split(" ");
                                    It.every(function(Bt) {
                                        return Ue.indexOf(Bt) !== -1
                                    }) && xt.push(xe)
                                }
                            }), xt
                        }, Le.prototype.getElementsByTagName = function(Re) {
                            Re = Re.toLowerCase();
                            var It = [];
                            return A(this.childNodes, function(xt) {
                                xt.nodeType === 1 && (Re === "*" || xt.tagName.toLowerCase() === Re) && It.push(xt)
                            }), It
                        }, Le.prototype.contains = function(Re) {
                            return A(this, function(It) {
                                return Re === It
                            }) || !1
                        }
                    }),
                    _ = le(function(k, b) {
                        Rt();
                        var A = Be();
                        b.exports = P;

                        function P(M) {
                            if (!it(this, P)) return new P;
                            this.childNodes = [], this.parentNode = null, this.ownerDocument = M || null
                        }
                        P.prototype.type = "DocumentFragment", P.prototype.nodeType = 11, P.prototype.nodeName = "#document-fragment", P.prototype.appendChild = A.prototype.appendChild, P.prototype.replaceChild = A.prototype.replaceChild, P.prototype.removeChild = A.prototype.removeChild, P.prototype.toString = function() {
                            return this.childNodes.map(function(M) {
                                return String(M)
                            }).join("")
                        }
                    }),
                    Ve = le(function(k, b) {
                        b.exports = A;

                        function A(P) {}
                        A.prototype.initEvent = function(P, M, q) {
                            this.type = P, this.bubbles = M, this.cancelable = q
                        }, A.prototype.preventDefault = function() {}
                    }),
                    de = le(function(k, b) {
                        Rt();
                        var A = dt(),
                            P = at(),
                            M = bt(),
                            q = Be(),
                            $ = _(),
                            Te = Ve(),
                            Le = Wt(),
                            Re = fe(),
                            It = Ge();
                        b.exports = xt;

                        function xt() {
                            if (!it(this, xt)) return new xt;
                            this.head = this.createElement("head"), this.body = this.createElement("body"), this.documentElement = this.createElement("html"), this.documentElement.appendChild(this.head), this.documentElement.appendChild(this.body), this.childNodes = [this.documentElement], this.nodeType = 9
                        }
                        var xe = xt.prototype;
                        xe.createTextNode = function(Ae) {
                            return new M(Ae, this)
                        }, xe.createElementNS = function(Ae, Ue) {
                            var Bt = Ae === null ? null : String(Ae);
                            return new q(Ue, this, Bt)
                        }, xe.createElement = function(Ae) {
                            return new q(Ae, this)
                        }, xe.createDocumentFragment = function() {
                            return new $(this)
                        }, xe.createEvent = function(Ae) {
                            return new Te(Ae)
                        }, xe.createComment = function(Ae) {
                            return new P(Ae, this)
                        }, xe.getElementById = function(Ae) {
                            Ae = String(Ae);
                            var Ue = A(this.childNodes, function(Bt) {
                                if (String(Bt.id) === Ae) return Bt
                            });
                            return Ue || null
                        }, xe.getElementsByClassName = q.prototype.getElementsByClassName, xe.getElementsByTagName = q.prototype.getElementsByTagName, xe.contains = q.prototype.contains, xe.removeEventListener = It, xe.addEventListener = Re, xe.dispatchEvent = Le
                    }),
                    yt = le(function(k, b) {
                        var A = de();
                        b.exports = new A
                    }),
                    Ir = le(function(k, b) {
                        var A = typeof we.g != "undefined" ? we.g : typeof window != "undefined" ? window : {},
                            P = yt(),
                            M;
                        typeof document != "undefined" ? M = document : (M = A["__GLOBAL_DOCUMENT_CACHE@4"], M || (M = A["__GLOBAL_DOCUMENT_CACHE@4"] = P)), b.exports = M
                    }),
                    ar = {};
                x(ar, {
                    default: function() {
                        return Qn
                    }
                }), wt.exports = he(ar);

                function nt(k) {
                    if (Array.isArray(k)) return k
                }

                function dr(k, b) {
                    var A = k == null ? null : typeof Symbol != "undefined" && k[Symbol.iterator] || k["@@iterator"];
                    if (A != null) {
                        var P = [],
                            M = !0,
                            q = !1,
                            $, Te;
                        try {
                            for (A = A.call(k); !(M = ($ = A.next()).done) && (P.push($.value), !(b && P.length === b)); M = !0);
                        } catch (Le) {
                            q = !0, Te = Le
                        } finally {
                            try {
                                !M && A.return != null && A.return()
                            } finally {
                                if (q) throw Te
                            }
                        }
                        return P
                    }
                }

                function ai() {
                    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function V(k, b) {
                    (b == null || b > k.length) && (b = k.length);
                    for (var A = 0, P = new Array(b); A < b; A++) P[A] = k[A];
                    return P
                }

                function ce(k, b) {
                    if (k) {
                        if (typeof k == "string") return V(k, b);
                        var A = Object.prototype.toString.call(k).slice(8, -1);
                        if (A === "Object" && k.constructor && (A = k.constructor.name), A === "Map" || A === "Set") return Array.from(A);
                        if (A === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(A)) return V(k, b)
                    }
                }

                function Pe(k, b) {
                    return nt(k) || dr(k, b) || ce(k, b) || ai()
                }
                var st = Q(ot()),
                    ct = Q(ot()),
                    Fe = Q(ot()),
                    ht = {
                        now: function() {
                            var k = Fe.default.performance,
                                b = k && k.timing,
                                A = b && b.navigationStart,
                                P = typeof A == "number" && typeof k.now == "function" ? A + k.now() : Date.now();
                            return Math.round(P)
                        }
                    },
                    Er = ht,
                    Xt = function() {
                        var k, b, A;
                        if (typeof((k = ct.default.crypto) === null || k === void 0 ? void 0 : k.getRandomValues) == "function") {
                            A = new Uint8Array(32), ct.default.crypto.getRandomValues(A);
                            for (var P = 0; P < 32; P++) A[P] = A[P] % 16
                        } else {
                            A = [];
                            for (var M = 0; M < 32; M++) A[M] = Math.random() * 16 | 0
                        }
                        var q = 0;
                        b = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(Le) {
                            var Re = Le === "x" ? A[q] : A[q] & 3 | 8;
                            return q++, Re.toString(16)
                        });
                        var $ = Er.now(),
                            Te = $ == null ? void 0 : $.toString(16).substring(3);
                        return Te ? b.substring(0, 28) + Te : b
                    },
                    W = function() {
                        return ("000000" + (Math.random() * Math.pow(36, 6) << 0).toString(36)).slice(-6)
                    },
                    Zr = function(k) {
                        if (k && typeof k.nodeName != "undefined") return k.muxId || (k.muxId = W()), k.muxId;
                        var b;
                        try {
                            b = document.querySelector(k)
                        } catch (A) {}
                        return b && !b.muxId && (b.muxId = k), (b == null ? void 0 : b.muxId) || k
                    },
                    br = function(k) {
                        var b;
                        k && typeof k.nodeName != "undefined" ? (b = k, k = Zr(b)) : b = document.querySelector(k);
                        var A = b && b.nodeName ? b.nodeName.toLowerCase() : "";
                        return [b, k, A]
                    };

                function ni(k) {
                    if (Array.isArray(k)) return V(k)
                }

                function Mi(k) {
                    if (typeof Symbol != "undefined" && k[Symbol.iterator] != null || k["@@iterator"] != null) return Array.from(k)
                }

                function si() {
                    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                }

                function ti(k) {
                    return ni(k) || Mi(k) || ce(k) || si()
                }
                var oa = {
                        TRACE: 0,
                        DEBUG: 1,
                        INFO: 2,
                        WARN: 3,
                        ERROR: 4,
                        SILENT: 5
                    },
                    Wr = function(k) {
                        var b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3,
                            A, P, M, q, $, Te = k ? [console, k] : [console],
                            Le = (A = console.trace).bind.apply(A, ti(Te)),
                            Re = (P = console.info).bind.apply(P, ti(Te)),
                            It = (M = console.debug).bind.apply(M, ti(Te)),
                            xt = (q = console.warn).bind.apply(q, ti(Te)),
                            xe = ($ = console.error).bind.apply($, ti(Te)),
                            Ae = b;
                        return {
                            trace: function() {
                                for (var Ue = arguments.length, Bt = new Array(Ue), cr = 0; cr < Ue; cr++) Bt[cr] = arguments[cr];
                                if (!(Ae > oa.TRACE)) return Le.apply(void 0, ti(Bt))
                            },
                            debug: function() {
                                for (var Ue = arguments.length, Bt = new Array(Ue), cr = 0; cr < Ue; cr++) Bt[cr] = arguments[cr];
                                if (!(Ae > oa.DEBUG)) return It.apply(void 0, ti(Bt))
                            },
                            info: function() {
                                for (var Ue = arguments.length, Bt = new Array(Ue), cr = 0; cr < Ue; cr++) Bt[cr] = arguments[cr];
                                if (!(Ae > oa.INFO)) return Re.apply(void 0, ti(Bt))
                            },
                            warn: function() {
                                for (var Ue = arguments.length, Bt = new Array(Ue), cr = 0; cr < Ue; cr++) Bt[cr] = arguments[cr];
                                if (!(Ae > oa.WARN)) return xt.apply(void 0, ti(Bt))
                            },
                            error: function() {
                                for (var Ue = arguments.length, Bt = new Array(Ue), cr = 0; cr < Ue; cr++) Bt[cr] = arguments[cr];
                                if (!(Ae > oa.ERROR)) return xe.apply(void 0, ti(Bt))
                            },
                            get level() {
                                return Ae
                            },
                            set level(Ue) {
                                Ue !== this.level && (Ae = Ue != null ? Ue : b)
                            }
                        }
                    },
                    Cr = Wr("[mux]"),
                    La = Q(ot());

                function Gr() {
                    var k = La.default.doNotTrack || La.default.navigator && La.default.navigator.doNotTrack;
                    return k === "1"
                }

                function Kt(k) {
                    if (k === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return k
                }
                Rt();

                function ri(k, b) {
                    if (!it(k, b)) throw new TypeError("Cannot call a class as a function")
                }

                function ki(k, b) {
                    for (var A = 0; A < b.length; A++) {
                        var P = b[A];
                        P.enumerable = P.enumerable || !1, P.configurable = !0, "value" in P && (P.writable = !0), Object.defineProperty(k, P.key, P)
                    }
                }

                function aa(k, b, A) {
                    return b && ki(k.prototype, b), A && ki(k, A), k
                }

                function Tt(k, b, A) {
                    return b in k ? Object.defineProperty(k, b, {
                        value: A,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : k[b] = A, k
                }

                function ie(k) {
                    return ie = Object.setPrototypeOf ? Object.getPrototypeOf : function(b) {
                        return b.__proto__ || Object.getPrototypeOf(b)
                    }, ie(k)
                }

                function j(k, b) {
                    for (; !Object.prototype.hasOwnProperty.call(k, b) && (k = ie(k), k !== null););
                    return k
                }

                function Z(k, b, A) {
                    return typeof Reflect != "undefined" && Reflect.get ? Z = Reflect.get : Z = function(P, M, q) {
                        var $ = j(P, M);
                        if ($) {
                            var Te = Object.getOwnPropertyDescriptor($, M);
                            return Te.get ? Te.get.call(q || P) : Te.value
                        }
                    }, Z(k, b, A || k)
                }

                function ne(k, b) {
                    return ne = Object.setPrototypeOf || function(A, P) {
                        return A.__proto__ = P, A
                    }, ne(k, b)
                }

                function pe(k, b) {
                    if (typeof b != "function" && b !== null) throw new TypeError("Super expression must either be null or a function");
                    k.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: k,
                            writable: !0,
                            configurable: !0
                        }
                    }), b && ne(k, b)
                }

                function De() {
                    if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham) return !1;
                    if (typeof Proxy == "function") return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                    } catch (k) {
                        return !1
                    }
                }
                Dt();

                function ze(k, b) {
                    return b && (Ft(b) === "object" || typeof b == "function") ? b : Kt(k)
                }

                function ft(k) {
                    var b = De();
                    return function() {
                        var A = ie(k),
                            P;
                        if (b) {
                            var M = ie(this).constructor;
                            P = Reflect.construct(A, arguments, M)
                        } else P = A.apply(this, arguments);
                        return ze(this, P)
                    }
                }
                var gt = function(k) {
                        return qe(k)[0]
                    },
                    qe = function(k) {
                        if (typeof k != "string" || k === "") return ["localhost"];
                        var b = /^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,
                            A = k.match(b) || [],
                            P = A[4],
                            M;
                        return P && (M = (P.match(/[^\.]+\.[^\.]+$/) || [])[0]), [P, M]
                    },
                    wr = Q(ot()),
                    kr = {
                        exists: function() {
                            var k = wr.default.performance,
                                b = k && k.timing;
                            return b !== void 0
                        },
                        domContentLoadedEventEnd: function() {
                            var k = wr.default.performance,
                                b = k && k.timing;
                            return b && b.domContentLoadedEventEnd
                        },
                        navigationStart: function() {
                            var k = wr.default.performance,
                                b = k && k.timing;
                            return b && b.navigationStart
                        }
                    },
                    Ar = kr;

                function $t(k, b, A) {
                    A = A === void 0 ? 1 : A, k[b] = k[b] || 0, k[b] += A
                }

                function hr(k) {
                    for (var b = 1; b < arguments.length; b++) {
                        var A = arguments[b] != null ? arguments[b] : {},
                            P = Object.keys(A);
                        typeof Object.getOwnPropertySymbols == "function" && (P = P.concat(Object.getOwnPropertySymbols(A).filter(function(M) {
                            return Object.getOwnPropertyDescriptor(A, M).enumerable
                        }))), P.forEach(function(M) {
                            Tt(k, M, A[M])
                        })
                    }
                    return k
                }

                function Gi(k, b) {
                    var A = Object.keys(k);
                    if (Object.getOwnPropertySymbols) {
                        var P = Object.getOwnPropertySymbols(k);
                        b && (P = P.filter(function(M) {
                            return Object.getOwnPropertyDescriptor(k, M).enumerable
                        })), A.push.apply(A, P)
                    }
                    return A
                }

                function vt(k, b) {
                    return b = b != null ? b : {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(k, Object.getOwnPropertyDescriptors(b)) : Gi(Object(b)).forEach(function(A) {
                        Object.defineProperty(k, A, Object.getOwnPropertyDescriptor(b, A))
                    }), k
                }
                var oi = ["x-cdn", "content-type"],
                    Mt = ["x-request-id", "cf-ray", "x-amz-cf-id", "x-akamai-request-id"],
                    Ht = oi.concat(Mt);

                function Ze(k) {
                    k = k || "";
                    var b = {},
                        A = k.trim().split(/[\r\n]+/);
                    return A.forEach(function(P) {
                        if (P) {
                            var M = P.split(": "),
                                q = M.shift();
                            q && (Ht.indexOf(q.toLowerCase()) >= 0 || q.toLowerCase().indexOf("x-litix-") === 0) && (b[q] = M.join(": "))
                        }
                    }), b
                }

                function sr(k) {
                    if (k) {
                        var b = Mt.find(function(A) {
                            return k[A] !== void 0
                        });
                        return b ? k[b] : void 0
                    }
                }
                var mr = function(k) {
                        var b = {};
                        for (var A in k) {
                            var P = k[A],
                                M = P["DATA-ID"].search("io.litix.data.");
                            if (M !== -1) {
                                var q = P["DATA-ID"].replace("io.litix.data.", "");
                                b[q] = P.VALUE
                            }
                        }
                        return b
                    },
                    Lr = mr,
                    Yt = function(k) {
                        if (!k) return {};
                        var b = Ar.navigationStart(),
                            A = k.loading,
                            P = A ? A.start : k.trequest,
                            M = A ? A.first : k.tfirst,
                            q = A ? A.end : k.tload;
                        return {
                            bytesLoaded: k.total,
                            requestStart: Math.round(b + P),
                            responseStart: Math.round(b + M),
                            responseEnd: Math.round(b + q)
                        }
                    },
                    oe = function(k) {
                        if (!(!k || typeof k.getAllResponseHeaders != "function")) return Ze(k.getAllResponseHeaders())
                    },
                    Ut = function(k, b, A) {
                        var P = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
                            M = arguments.length > 4 ? arguments[4] : void 0,
                            q = k.log,
                            $ = k.utils.secondsToMs,
                            Te = function(Ur) {
                                var Pt = parseInt(M.version),
                                    St;
                                return Pt === 1 && Ur.programDateTime !== null && (St = Ur.programDateTime), Pt === 0 && Ur.pdt !== null && (St = Ur.pdt), St
                            };
                        if (!Ar.exists()) {
                            q.warn("performance timing not supported. Not tracking HLS.js.");
                            return
                        }
                        var Le = function(Ur, Pt) {
                                return k.emit(b, Ur, Pt)
                            },
                            Re = function(Ur, Pt) {
                                var St = Pt.levels,
                                    ut = Pt.audioTracks,
                                    Oe = Pt.url,
                                    Mr = Pt.stats,
                                    Yr = Pt.networkDetails,
                                    jr = Pt.sessionData,
                                    Jr = {},
                                    ca = {};
                                St.forEach(function(ui, Ea) {
                                    Jr[Ea] = {
                                        width: ui.width,
                                        height: ui.height,
                                        bitrate: ui.bitrate,
                                        attrs: ui.attrs
                                    }
                                }), ut.forEach(function(ui, Ea) {
                                    ca[Ea] = {
                                        name: ui.name,
                                        language: ui.lang,
                                        bitrate: ui.bitrate
                                    }
                                });
                                var ii = Yt(Mr),
                                    zr = ii.bytesLoaded,
                                    yn = ii.requestStart,
                                    bs = ii.responseStart,
                                    Ls = ii.responseEnd;
                                Le("requestcompleted", vt(hr({}, Lr(jr)), {
                                    request_event_type: Ur,
                                    request_bytes_loaded: zr,
                                    request_start: yn,
                                    request_response_start: bs,
                                    request_response_end: Ls,
                                    request_type: "manifest",
                                    request_hostname: gt(Oe),
                                    request_response_headers: oe(Yr),
                                    request_rendition_lists: {
                                        media: Jr,
                                        audio: ca,
                                        video: {}
                                    }
                                }))
                            };
                        A.on(M.Events.MANIFEST_LOADED, Re);
                        var It = function(Ur, Pt) {
                            var St = Pt.details,
                                ut = Pt.level,
                                Oe = Pt.networkDetails,
                                Mr = Pt.stats,
                                Yr = Yt(Mr),
                                jr = Yr.bytesLoaded,
                                Jr = Yr.requestStart,
                                ca = Yr.responseStart,
                                ii = Yr.responseEnd,
                                zr = St.fragments[St.fragments.length - 1],
                                yn = Te(zr) + $(zr.duration);
                            Le("requestcompleted", {
                                request_event_type: Ur,
                                request_bytes_loaded: jr,
                                request_start: Jr,
                                request_response_start: ca,
                                request_response_end: ii,
                                request_current_level: ut,
                                request_type: "manifest",
                                request_hostname: gt(St.url),
                                request_response_headers: oe(Oe),
                                video_holdback: St.holdBack && $(St.holdBack),
                                video_part_holdback: St.partHoldBack && $(St.partHoldBack),
                                video_part_target_duration: St.partTarget && $(St.partTarget),
                                video_target_duration: St.targetduration && $(St.targetduration),
                                video_source_is_live: St.live,
                                player_manifest_newest_program_time: isNaN(yn) ? void 0 : yn
                            })
                        };
                        A.on(M.Events.LEVEL_LOADED, It);
                        var xt = function(Ur, Pt) {
                            var St = Pt.details,
                                ut = Pt.networkDetails,
                                Oe = Pt.stats,
                                Mr = Yt(Oe),
                                Yr = Mr.bytesLoaded,
                                jr = Mr.requestStart,
                                Jr = Mr.responseStart,
                                ca = Mr.responseEnd;
                            Le("requestcompleted", {
                                request_event_type: Ur,
                                request_bytes_loaded: Yr,
                                request_start: jr,
                                request_response_start: Jr,
                                request_response_end: ca,
                                request_type: "manifest",
                                request_hostname: gt(St.url),
                                request_response_headers: oe(ut)
                            })
                        };
                        A.on(M.Events.AUDIO_TRACK_LOADED, xt);
                        var xe = function(Ur, Pt) {
                            var St = Pt.stats,
                                ut = Pt.networkDetails,
                                Oe = Pt.frag;
                            St = St || Oe.stats;
                            var Mr = Yt(St),
                                Yr = Mr.bytesLoaded,
                                jr = Mr.requestStart,
                                Jr = Mr.responseStart,
                                ca = Mr.responseEnd,
                                ii = ut ? oe(ut) : void 0,
                                zr = {
                                    request_event_type: Ur,
                                    request_bytes_loaded: Yr,
                                    request_start: jr,
                                    request_response_start: Jr,
                                    request_response_end: ca,
                                    request_hostname: ut ? gt(ut.responseURL) : void 0,
                                    request_id: ii ? sr(ii) : void 0,
                                    request_response_headers: ii,
                                    request_media_duration: Oe.duration,
                                    request_url: ut == null ? void 0 : ut.responseURL
                                };
                            Oe.type === "main" ? (zr.request_type = "media", zr.request_current_level = Oe.level, zr.request_video_width = (A.levels[Oe.level] || {}).width, zr.request_video_height = (A.levels[Oe.level] || {}).height, zr.request_labeled_bitrate = (A.levels[Oe.level] || {}).bitrate) : zr.request_type = Oe.type, Le("requestcompleted", zr)
                        };
                        A.on(M.Events.FRAG_LOADED, xe);
                        var Ae = function(Ur, Pt) {
                            var St = Pt.frag,
                                ut = St.start,
                                Oe = Te(St),
                                Mr = {
                                    currentFragmentPDT: Oe,
                                    currentFragmentStart: $(ut)
                                };
                            Le("fragmentchange", Mr)
                        };
                        A.on(M.Events.FRAG_CHANGED, Ae);
                        var Ue = function(Ur, Pt) {
                            var St = Pt.type,
                                ut = Pt.details,
                                Oe = Pt.response,
                                Mr = Pt.fatal,
                                Yr = Pt.frag,
                                jr = Pt.networkDetails,
                                Jr = (Yr == null ? void 0 : Yr.url) || Pt.url || "",
                                ca = jr ? oe(jr) : void 0;
                            if ((ut === M.ErrorDetails.MANIFEST_LOAD_ERROR || ut === M.ErrorDetails.MANIFEST_LOAD_TIMEOUT || ut === M.ErrorDetails.FRAG_LOAD_ERROR || ut === M.ErrorDetails.FRAG_LOAD_TIMEOUT || ut === M.ErrorDetails.LEVEL_LOAD_ERROR || ut === M.ErrorDetails.LEVEL_LOAD_TIMEOUT || ut === M.ErrorDetails.AUDIO_TRACK_LOAD_ERROR || ut === M.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT || ut === M.ErrorDetails.SUBTITLE_LOAD_ERROR || ut === M.ErrorDetails.SUBTITLE_LOAD_TIMEOUT || ut === M.ErrorDetails.KEY_LOAD_ERROR || ut === M.ErrorDetails.KEY_LOAD_TIMEOUT) && Le("requestfailed", {
                                    request_error: ut,
                                    request_url: Jr,
                                    request_hostname: gt(Jr),
                                    request_id: ca ? sr(ca) : void 0,
                                    request_type: ut === M.ErrorDetails.FRAG_LOAD_ERROR || ut === M.ErrorDetails.FRAG_LOAD_TIMEOUT ? "media" : ut === M.ErrorDetails.AUDIO_TRACK_LOAD_ERROR || ut === M.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT ? "audio" : ut === M.ErrorDetails.SUBTITLE_LOAD_ERROR || ut === M.ErrorDetails.SUBTITLE_LOAD_TIMEOUT ? "subtitle" : ut === M.ErrorDetails.KEY_LOAD_ERROR || ut === M.ErrorDetails.KEY_LOAD_TIMEOUT ? "encryption" : "manifest",
                                    request_error_code: Oe == null ? void 0 : Oe.code,
                                    request_error_text: Oe == null ? void 0 : Oe.text
                                }), Mr) {
                                var ii, zr = "".concat(Jr ? "url: ".concat(Jr, `
`) : "") + "".concat(Oe && (Oe.code || Oe.text) ? "response: ".concat(Oe.code, ", ").concat(Oe.text, `
`) : "") + "".concat(Pt.reason ? "failure reason: ".concat(Pt.reason, `
`) : "") + "".concat(Pt.level ? "level: ".concat(Pt.level, `
`) : "") + "".concat(Pt.parent ? "parent stream controller: ".concat(Pt.parent, `
`) : "") + "".concat(Pt.buffer ? "buffer length: ".concat(Pt.buffer, `
`) : "") + "".concat(Pt.error ? "error: ".concat(Pt.error, `
`) : "") + "".concat(Pt.event ? "event: ".concat(Pt.event, `
`) : "") + "".concat(Pt.err ? "error message: ".concat((ii = Pt.err) === null || ii === void 0 ? void 0 : ii.message, `
`) : "");
                                Le("error", {
                                    player_error_code: St,
                                    player_error_message: ut,
                                    player_error_context: zr
                                })
                            }
                        };
                        A.on(M.Events.ERROR, Ue);
                        var Bt = function(Ur, Pt) {
                            var St = Pt.frag,
                                ut = St && St._url || "";
                            Le("requestcanceled", {
                                request_event_type: Ur,
                                request_url: ut,
                                request_type: "media",
                                request_hostname: gt(ut)
                            })
                        };
                        A.on(M.Events.FRAG_LOAD_EMERGENCY_ABORTED, Bt);
                        var cr = function(Ur, Pt) {
                            var St = Pt.level,
                                ut = A.levels[St];
                            if (ut && ut.attrs && ut.attrs.BANDWIDTH) {
                                var Oe = ut.attrs.BANDWIDTH,
                                    Mr, Yr = parseFloat(ut.attrs["FRAME-RATE"]);
                                isNaN(Yr) || (Mr = Yr), Oe ? Le("renditionchange", {
                                    video_source_fps: Mr,
                                    video_source_bitrate: Oe,
                                    video_source_width: ut.width,
                                    video_source_height: ut.height,
                                    video_source_rendition_name: ut.name,
                                    video_source_codec: ut == null ? void 0 : ut.videoCodec
                                }) : q.warn("missing BANDWIDTH from HLS manifest parsed by HLS.js")
                            }
                        };
                        A.on(M.Events.LEVEL_SWITCHED, cr), A._stopMuxMonitor = function() {
                            A.off(M.Events.MANIFEST_LOADED, Re), A.off(M.Events.LEVEL_LOADED, It), A.off(M.Events.AUDIO_TRACK_LOADED, xt), A.off(M.Events.FRAG_LOADED, xe), A.off(M.Events.FRAG_CHANGED, Ae), A.off(M.Events.ERROR, Ue), A.off(M.Events.FRAG_LOAD_EMERGENCY_ABORTED, Bt), A.off(M.Events.LEVEL_SWITCHED, cr), A.off(M.Events.DESTROYING, A._stopMuxMonitor), delete A._stopMuxMonitor
                        }, A.on(M.Events.DESTROYING, A._stopMuxMonitor)
                    },
                    yi = function(k) {
                        k && typeof k._stopMuxMonitor == "function" && k._stopMuxMonitor()
                    },
                    Ke = function(k, b) {
                        if (!k || !k.requestEndDate) return {};
                        var A = gt(k.url),
                            P = k.url,
                            M = k.bytesLoaded,
                            q = new Date(k.requestStartDate).getTime(),
                            $ = new Date(k.firstByteDate).getTime(),
                            Te = new Date(k.requestEndDate).getTime(),
                            Le = isNaN(k.duration) ? 0 : k.duration,
                            Re = typeof b.getMetricsFor == "function" ? b.getMetricsFor(k.mediaType).HttpList : b.getDashMetrics().getHttpRequests(k.mediaType),
                            It;
                        Re.length > 0 && (It = Ze(Re[Re.length - 1]._responseHeaders || ""));
                        var xt = It ? sr(It) : void 0;
                        return {
                            requestStart: q,
                            requestResponseStart: $,
                            requestResponseEnd: Te,
                            requestBytesLoaded: M,
                            requestResponseHeaders: It,
                            requestMediaDuration: Le,
                            requestHostname: A,
                            requestUrl: P,
                            requestId: xt
                        }
                    },
                    ge = function(k, b) {
                        var A = b.getQualityFor(k),
                            P = b.getCurrentTrackFor(k).bitrateList;
                        return P ? {
                            currentLevel: A,
                            renditionWidth: P[A].width || null,
                            renditionHeight: P[A].height || null,
                            renditionBitrate: P[A].bandwidth
                        } : {}
                    },
                    Et = function(k) {
                        var b;
                        return (b = k.match(/.*codecs\*?="(.*)"/)) === null || b === void 0 ? void 0 : b[1]
                    },
                    vr = function(k) {
                        try {
                            var b, A, P = (A = k.getVersion) === null || A === void 0 || (b = A.call(k)) === null || b === void 0 ? void 0 : b.split(".").map(function(M) {
                                return parseInt(M)
                            })[0];
                            return P
                        } catch (M) {
                            return !1
                        }
                    },
                    tr = function(k, b, A) {
                        var P = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {},
                            M = k.log;
                        if (!A || !A.on) {
                            M.warn("Invalid dash.js player reference. Monitoring blocked.");
                            return
                        }
                        var q = vr(A),
                            $ = function(St, ut) {
                                return k.emit(b, St, ut)
                            },
                            Te = function(St) {
                                var ut = St.type,
                                    Oe = St.data,
                                    Mr = (Oe || {}).url;
                                $("requestcompleted", {
                                    request_event_type: ut,
                                    request_start: 0,
                                    request_response_start: 0,
                                    request_response_end: 0,
                                    request_bytes_loaded: -1,
                                    request_type: "manifest",
                                    request_hostname: gt(Mr),
                                    request_url: Mr
                                })
                            };
                        A.on("manifestLoaded", Te);
                        var Le = {},
                            Re = function(St) {
                                if (typeof St.getRequests != "function") return null;
                                var ut = St.getRequests({
                                    state: "executed"
                                });
                                return ut.length === 0 ? null : ut[ut.length - 1]
                            },
                            It = function(St) {
                                var ut = St.type,
                                    Oe = St.fragmentModel,
                                    Mr = St.chunk,
                                    Yr = Re(Oe);
                                xt({
                                    type: ut,
                                    request: Yr,
                                    chunk: Mr
                                })
                            },
                            xt = function(St) {
                                var ut = St.type,
                                    Oe = St.chunk,
                                    Mr = St.request,
                                    Yr = (Oe || {}).mediaInfo,
                                    jr = Yr || {},
                                    Jr = jr.type,
                                    ca = jr.bitrateList;
                                ca = ca || [];
                                var ii = {};
                                ca.forEach(function(Or, ha) {
                                    ii[ha] = {}, ii[ha].width = Or.width, ii[ha].height = Or.height, ii[ha].bitrate = Or.bandwidth, ii[ha].attrs = {}
                                }), Jr === "video" ? Le.video = ii : Jr === "audio" ? Le.audio = ii : Le.media = ii;
                                var zr = Ke(Mr, A),
                                    yn = zr.requestStart,
                                    bs = zr.requestResponseStart,
                                    Ls = zr.requestResponseEnd,
                                    ui = zr.requestResponseHeaders,
                                    Ea = zr.requestMediaDuration,
                                    Jn = zr.requestHostname,
                                    Gn = zr.requestUrl,
                                    es = zr.requestId;
                                $("requestcompleted", {
                                    request_event_type: ut,
                                    request_start: yn,
                                    request_response_start: bs,
                                    request_response_end: Ls,
                                    request_bytes_loaded: -1,
                                    request_type: Jr + "_init",
                                    request_response_headers: ui,
                                    request_hostname: Jn,
                                    request_id: es,
                                    request_url: Gn,
                                    request_media_duration: Ea,
                                    request_rendition_lists: Le
                                })
                            };
                        q >= 4 ? A.on("initFragmentLoaded", xt) : A.on("initFragmentLoaded", It);
                        var xe = function(St) {
                                var ut = St.type,
                                    Oe = St.fragmentModel,
                                    Mr = St.chunk,
                                    Yr = Re(Oe);
                                Ae({
                                    type: ut,
                                    request: Yr,
                                    chunk: Mr
                                })
                            },
                            Ae = function(St) {
                                var ut = St.type,
                                    Oe = St.chunk,
                                    Mr = St.request,
                                    Yr = Oe || {},
                                    jr = Yr.mediaInfo,
                                    Jr = Yr.start,
                                    ca = jr || {},
                                    ii = ca.type,
                                    zr = Ke(Mr, A),
                                    yn = zr.requestStart,
                                    bs = zr.requestResponseStart,
                                    Ls = zr.requestResponseEnd,
                                    ui = zr.requestBytesLoaded,
                                    Ea = zr.requestResponseHeaders,
                                    Jn = zr.requestMediaDuration,
                                    Gn = zr.requestHostname,
                                    es = zr.requestUrl,
                                    Or = zr.requestId,
                                    ha = ge(ii, A),
                                    Pn = ha.currentLevel,
                                    ts = ha.renditionWidth,
                                    za = ha.renditionHeight,
                                    On = ha.renditionBitrate;
                                $("requestcompleted", {
                                    request_event_type: ut,
                                    request_start: yn,
                                    request_response_start: bs,
                                    request_response_end: Ls,
                                    request_bytes_loaded: ui,
                                    request_type: ii,
                                    request_response_headers: Ea,
                                    request_hostname: Gn,
                                    request_id: Or,
                                    request_url: es,
                                    request_media_start_time: Jr,
                                    request_media_duration: Jn,
                                    request_current_level: Pn,
                                    request_labeled_bitrate: On,
                                    request_video_width: ts,
                                    request_video_height: za
                                })
                            };
                        q >= 4 ? A.on("mediaFragmentLoaded", Ae) : A.on("mediaFragmentLoaded", xe);
                        var Ue = {
                                video: void 0,
                                audio: void 0,
                                totalBitrate: void 0
                            },
                            Bt = function() {
                                if (Ue.video && typeof Ue.video.bitrate == "number") {
                                    if (!(Ue.video.width && Ue.video.height)) {
                                        M.warn("have bitrate info for video but missing width/height");
                                        return
                                    }
                                    var St = Ue.video.bitrate;
                                    if (Ue.audio && typeof Ue.audio.bitrate == "number" && (St += Ue.audio.bitrate), St !== Ue.totalBitrate) return Ue.totalBitrate = St, {
                                        video_source_bitrate: St,
                                        video_source_height: Ue.video.height,
                                        video_source_width: Ue.video.width,
                                        video_source_codec: Et(Ue.video.codec)
                                    }
                                }
                            },
                            cr = function(St, ut, Oe) {
                                if (typeof St.newQuality != "number") {
                                    M.warn("missing evt.newQuality in qualityChangeRendered event", St);
                                    return
                                }
                                var Mr = St.mediaType;
                                if (Mr === "audio" || Mr === "video") {
                                    var Yr = A.getBitrateInfoListFor(Mr).find(function(Jr) {
                                        var ca = Jr.qualityIndex;
                                        return ca === St.newQuality
                                    });
                                    if (!(Yr && typeof Yr.bitrate == "number")) {
                                        M.warn("missing bitrate info for ".concat(Mr));
                                        return
                                    }
                                    Ue[Mr] = vt(hr({}, Yr), {
                                        codec: A.getCurrentTrackFor(Mr).codec
                                    });
                                    var jr = Bt();
                                    jr && $("renditionchange", jr)
                                }
                            };
                        A.on("qualityChangeRendered", cr);
                        var Ur = function(St) {
                            var ut = St.request,
                                Oe = St.mediaType;
                            ut = ut || {}, $("requestcanceled", {
                                request_event_type: ut.type + "_" + ut.action,
                                request_url: ut.url,
                                request_type: Oe,
                                request_hostname: gt(ut.url)
                            })
                        };
                        A.on("fragmentLoadingAbandoned", Ur);
                        var Pt = function(St) {
                            var ut = St.error,
                                Oe, Mr, Yr = (ut == null || (Oe = ut.data) === null || Oe === void 0 ? void 0 : Oe.request) || {},
                                jr = (ut == null || (Mr = ut.data) === null || Mr === void 0 ? void 0 : Mr.response) || {};
                            (ut == null ? void 0 : ut.code) === 27 && $("requestfailed", {
                                request_error: Yr.type + "_" + Yr.action,
                                request_url: Yr.url,
                                request_hostname: gt(Yr.url),
                                request_type: Yr.mediaType,
                                request_error_code: jr.status,
                                request_error_text: jr.statusText
                            });
                            var Jr = "".concat(Yr != null && Yr.url ? "url: ".concat(Yr.url, `
`) : "") + "".concat(jr != null && jr.status || jr != null && jr.statusText ? "response: ".concat(jr == null ? void 0 : jr.status, ", ").concat(jr == null ? void 0 : jr.statusText, `
`) : "");
                            $("error", {
                                player_error_code: ut == null ? void 0 : ut.code,
                                player_error_message: ut == null ? void 0 : ut.message,
                                player_error_context: Jr
                            })
                        };
                        A.on("error", Pt), A._stopMuxMonitor = function() {
                            A.off("manifestLoaded", Te), A.off("initFragmentLoaded", xt), A.off("mediaFragmentLoaded", Ae), A.off("qualityChangeRendered", cr), A.off("error", Pt), A.off("fragmentLoadingAbandoned", Ur), delete A._stopMuxMonitor
                        }
                    },
                    Tr = function(k) {
                        k && typeof k._stopMuxMonitor == "function" && k._stopMuxMonitor()
                    },
                    Vt = 0,
                    Si = function() {
                        "use strict";

                        function k() {
                            ri(this, k), Tt(this, "_listeners", void 0)
                        }
                        return aa(k, [{
                            key: "on",
                            value: function(b, A, P) {
                                return A._eventEmitterGuid = A._eventEmitterGuid || ++Vt, this._listeners = this._listeners || {}, this._listeners[b] = this._listeners[b] || [], P && (A = A.bind(P)), this._listeners[b].push(A), A
                            }
                        }, {
                            key: "off",
                            value: function(b, A) {
                                var P = this._listeners && this._listeners[b];
                                P && P.forEach(function(M, q) {
                                    M._eventEmitterGuid === A._eventEmitterGuid && P.splice(q, 1)
                                })
                            }
                        }, {
                            key: "one",
                            value: function(b, A, P) {
                                var M = this;
                                A._eventEmitterGuid = A._eventEmitterGuid || ++Vt;
                                var q = function() {
                                    M.off(b, q), A.apply(P || this, arguments)
                                };
                                q._eventEmitterGuid = A._eventEmitterGuid, this.on(b, q)
                            }
                        }, {
                            key: "emit",
                            value: function(b, A) {
                                var P = this;
                                if (this._listeners) {
                                    A = A || {};
                                    var M = this._listeners["before*"] || [],
                                        q = this._listeners[b] || [],
                                        $ = this._listeners["after" + b] || [],
                                        Te = function(Le, Re) {
                                            Le = Le.slice(), Le.forEach(function(It) {
                                                It.call(P, {
                                                    type: b
                                                }, Re)
                                            })
                                        };
                                    Te(M, A), Te(q, A), Te($, A)
                                }
                            }
                        }]), k
                    }(),
                    Qi = Si,
                    Ma = Q(ot()),
                    Ti = function() {
                        "use strict";

                        function k(b) {
                            var A = this;
                            ri(this, k), Tt(this, "_playbackHeartbeatInterval", void 0), Tt(this, "_playheadShouldBeProgressing", void 0), Tt(this, "pm", void 0), this.pm = b, this._playbackHeartbeatInterval = null, this._playheadShouldBeProgressing = !1, b.on("playing", function() {
                                A._playheadShouldBeProgressing = !0
                            }), b.on("play", this._startPlaybackHeartbeatInterval.bind(this)), b.on("playing", this._startPlaybackHeartbeatInterval.bind(this)), b.on("adbreakstart", this._startPlaybackHeartbeatInterval.bind(this)), b.on("adplay", this._startPlaybackHeartbeatInterval.bind(this)), b.on("adplaying", this._startPlaybackHeartbeatInterval.bind(this)), b.on("devicewake", this._startPlaybackHeartbeatInterval.bind(this)), b.on("viewstart", this._startPlaybackHeartbeatInterval.bind(this)), b.on("rebufferstart", this._startPlaybackHeartbeatInterval.bind(this)), b.on("pause", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("ended", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("viewend", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("error", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("aderror", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("adpause", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("adended", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("adbreakend", this._stopPlaybackHeartbeatInterval.bind(this)), b.on("seeked", function() {
                                b.data.player_is_paused ? A._stopPlaybackHeartbeatInterval() : A._startPlaybackHeartbeatInterval()
                            }), b.on("timeupdate", function() {
                                A._playbackHeartbeatInterval !== null && b.emit("playbackheartbeat")
                            }), b.on("devicesleep", function(P, M) {
                                A._playbackHeartbeatInterval !== null && (Ma.default.clearInterval(A._playbackHeartbeatInterval), b.emit("playbackheartbeatend", {
                                    viewer_time: M.viewer_time
                                }), A._playbackHeartbeatInterval = null)
                            })
                        }
                        return aa(k, [{
                            key: "_startPlaybackHeartbeatInterval",
                            value: function() {
                                var b = this;
                                this._playbackHeartbeatInterval === null && (this.pm.emit("playbackheartbeat"), this._playbackHeartbeatInterval = Ma.default.setInterval(function() {
                                    b.pm.emit("playbackheartbeat")
                                }, this.pm.playbackHeartbeatTime))
                            }
                        }, {
                            key: "_stopPlaybackHeartbeatInterval",
                            value: function() {
                                this._playheadShouldBeProgressing = !1, this._playbackHeartbeatInterval !== null && (Ma.default.clearInterval(this._playbackHeartbeatInterval), this.pm.emit("playbackheartbeatend"), this._playbackHeartbeatInterval = null)
                            }
                        }]), k
                    }(),
                    Ri = Ti,
                    Lt = function k(b) {
                        "use strict";
                        var A = this;
                        ri(this, k), Tt(this, "viewErrored", void 0), b.on("viewinit", function() {
                            A.viewErrored = !1
                        }), b.on("error", function(P, M) {
                            try {
                                var q = b.errorTranslator({
                                    player_error_code: M.player_error_code,
                                    player_error_message: M.player_error_message,
                                    player_error_context: M.player_error_context,
                                    player_error_severity: M.player_error_severity,
                                    player_error_business_exception: M.player_error_business_exception
                                });
                                q && (b.data.player_error_code = q.player_error_code || M.player_error_code, b.data.player_error_message = q.player_error_message || M.player_error_message, b.data.player_error_context = q.player_error_context || M.player_error_context, b.data.player_error_severity = q.player_error_severity || M.player_error_severity, b.data.player_error_business_exception = q.player_error_business_exception || M.player_error_business_exception, A.viewErrored = !0)
                            } catch ($) {
                                b.mux.log.warn("Exception in error translator callback.", $), A.viewErrored = !0
                            }
                        }), b.on("aftererror", function() {
                            var P, M, q, $, Te;
                            (P = b.data) === null || P === void 0 || delete P.player_error_code, (M = b.data) === null || M === void 0 || delete M.player_error_message, (q = b.data) === null || q === void 0 || delete q.player_error_context, ($ = b.data) === null || $ === void 0 || delete $.player_error_severity, (Te = b.data) === null || Te === void 0 || delete Te.player_error_business_exception
                        })
                    },
                    _n = Lt,
                    Qa = function() {
                        "use strict";

                        function k(b) {
                            ri(this, k), Tt(this, "_watchTimeTrackerLastCheckedTime", void 0), Tt(this, "pm", void 0), this.pm = b, this._watchTimeTrackerLastCheckedTime = null, b.on("playbackheartbeat", this._updateWatchTime.bind(this)), b.on("playbackheartbeatend", this._clearWatchTimeState.bind(this))
                        }
                        return aa(k, [{
                            key: "_updateWatchTime",
                            value: function(b, A) {
                                var P = A.viewer_time;
                                this._watchTimeTrackerLastCheckedTime === null && (this._watchTimeTrackerLastCheckedTime = P), $t(this.pm.data, "view_watch_time", P - this._watchTimeTrackerLastCheckedTime), this._watchTimeTrackerLastCheckedTime = P
                            }
                        }, {
                            key: "_clearWatchTimeState",
                            value: function(b, A) {
                                this._updateWatchTime(b, A), this._watchTimeTrackerLastCheckedTime = null
                            }
                        }]), k
                    }(),
                    Hn = Qa,
                    Pi = function() {
                        "use strict";

                        function k(b) {
                            var A = this;
                            ri(this, k), Tt(this, "_playbackTimeTrackerLastPlayheadPosition", void 0), Tt(this, "_lastTime", void 0), Tt(this, "_isAdPlaying", void 0), Tt(this, "_callbackUpdatePlaybackTime", void 0), Tt(this, "pm", void 0), this.pm = b, this._playbackTimeTrackerLastPlayheadPosition = -1, this._lastTime = Er.now(), this._isAdPlaying = !1, this._callbackUpdatePlaybackTime = null;
                            var P = this._startPlaybackTimeTracking.bind(this);
                            b.on("playing", P), b.on("adplaying", P), b.on("seeked", P);
                            var M = this._stopPlaybackTimeTracking.bind(this);
                            b.on("playbackheartbeatend", M), b.on("seeking", M), b.on("adplaying", function() {
                                A._isAdPlaying = !0
                            }), b.on("adended", function() {
                                A._isAdPlaying = !1
                            }), b.on("adpause", function() {
                                A._isAdPlaying = !1
                            }), b.on("adbreakstart", function() {
                                A._isAdPlaying = !1
                            }), b.on("adbreakend", function() {
                                A._isAdPlaying = !1
                            }), b.on("adplay", function() {
                                A._isAdPlaying = !1
                            }), b.on("viewinit", function() {
                                A._playbackTimeTrackerLastPlayheadPosition = -1, A._lastTime = Er.now(), A._isAdPlaying = !1, A._callbackUpdatePlaybackTime = null
                            })
                        }
                        return aa(k, [{
                            key: "_startPlaybackTimeTracking",
                            value: function() {
                                this._callbackUpdatePlaybackTime === null && (this._callbackUpdatePlaybackTime = this._updatePlaybackTime.bind(this), this._playbackTimeTrackerLastPlayheadPosition = this.pm.data.player_playhead_time, this.pm.on("playbackheartbeat", this._callbackUpdatePlaybackTime))
                            }
                        }, {
                            key: "_stopPlaybackTimeTracking",
                            value: function() {
                                this._callbackUpdatePlaybackTime && (this._updatePlaybackTime(), this.pm.off("playbackheartbeat", this._callbackUpdatePlaybackTime), this._callbackUpdatePlaybackTime = null, this._playbackTimeTrackerLastPlayheadPosition = -1)
                            }
                        }, {
                            key: "_updatePlaybackTime",
                            value: function() {
                                var b = this.pm.data.player_playhead_time,
                                    A = Er.now(),
                                    P = -1;
                                this._playbackTimeTrackerLastPlayheadPosition >= 0 && b > this._playbackTimeTrackerLastPlayheadPosition ? P = b - this._playbackTimeTrackerLastPlayheadPosition : this._isAdPlaying && (P = A - this._lastTime), P > 0 && P <= 1e3 && $t(this.pm.data, "view_content_playback_time", P), this._playbackTimeTrackerLastPlayheadPosition = b, this._lastTime = A
                            }
                        }]), k
                    }(),
                    ln = Pi,
                    Ja = function() {
                        "use strict";

                        function k(b) {
                            ri(this, k), Tt(this, "pm", void 0), this.pm = b;
                            var A = this._updatePlayheadTime.bind(this);
                            b.on("playbackheartbeat", A), b.on("playbackheartbeatend", A), b.on("timeupdate", A), b.on("destroy", function() {
                                b.off("timeupdate", A)
                            })
                        }
                        return aa(k, [{
                            key: "_updateMaxPlayheadPosition",
                            value: function() {
                                this.pm.data.view_max_playhead_position = typeof this.pm.data.view_max_playhead_position == "undefined" ? this.pm.data.player_playhead_time : Math.max(this.pm.data.view_max_playhead_position, this.pm.data.player_playhead_time)
                            }
                        }, {
                            key: "_updatePlayheadTime",
                            value: function(b, A) {
                                var P = this,
                                    M = function() {
                                        P.pm.currentFragmentPDT && P.pm.currentFragmentStart && (P.pm.data.player_program_time = P.pm.currentFragmentPDT + P.pm.data.player_playhead_time - P.pm.currentFragmentStart)
                                    };
                                if (A && A.player_playhead_time) this.pm.data.player_playhead_time = A.player_playhead_time, M(), this._updateMaxPlayheadPosition();
                                else if (this.pm.getPlayheadTime) {
                                    var q = this.pm.getPlayheadTime();
                                    typeof q != "undefined" && (this.pm.data.player_playhead_time = q, M(), this._updateMaxPlayheadPosition())
                                }
                            }
                        }]), k
                    }(),
                    Qr = Ja,
                    Nr = 5 * 60 * 1e3,
                    xr = function k(b) {
                        "use strict";
                        if (ri(this, k), !b.disableRebufferTracking) {
                            var A, P = function(q, $) {
                                    M($), A = void 0
                                },
                                M = function(q) {
                                    if (A) {
                                        var $ = q.viewer_time - A;
                                        $t(b.data, "view_rebuffer_duration", $), A = q.viewer_time, b.data.view_rebuffer_duration > Nr && (b.emit("viewend"), b.send("viewend"), b.mux.log.warn("Ending view after rebuffering for longer than ".concat(Nr, "ms, future events will be ignored unless a programchange or videochange occurs.")))
                                    }
                                    b.data.view_watch_time >= 0 && b.data.view_rebuffer_count > 0 && (b.data.view_rebuffer_frequency = b.data.view_rebuffer_count / b.data.view_watch_time, b.data.view_rebuffer_percentage = b.data.view_rebuffer_duration / b.data.view_watch_time)
                                };
                            b.on("playbackheartbeat", function(q, $) {
                                return M($)
                            }), b.on("rebufferstart", function(q, $) {
                                A || ($t(b.data, "view_rebuffer_count", 1), A = $.viewer_time, b.one("rebufferend", P))
                            }), b.on("viewinit", function() {
                                A = void 0, b.off("rebufferend", P)
                            })
                        }
                    },
                    Vr = xr,
                    li = function() {
                        "use strict";

                        function k(b) {
                            var A = this;
                            ri(this, k), Tt(this, "_lastCheckedTime", void 0), Tt(this, "_lastPlayheadTime", void 0), Tt(this, "_lastPlayheadTimeUpdatedTime", void 0), Tt(this, "_rebuffering", void 0), Tt(this, "pm", void 0), this.pm = b, !(b.disableRebufferTracking || b.disablePlayheadRebufferTracking) && (this._lastCheckedTime = null, this._lastPlayheadTime = null, this._lastPlayheadTimeUpdatedTime = null, b.on("playbackheartbeat", this._checkIfRebuffering.bind(this)), b.on("playbackheartbeatend", this._cleanupRebufferTracker.bind(this)), b.on("seeking", function() {
                                A._cleanupRebufferTracker(null, {
                                    viewer_time: Er.now()
                                })
                            }))
                        }
                        return aa(k, [{
                            key: "_checkIfRebuffering",
                            value: function(b, A) {
                                if (this.pm.seekingTracker.isSeeking || this.pm.adTracker.isAdBreak || !this.pm.playbackHeartbeat._playheadShouldBeProgressing) {
                                    this._cleanupRebufferTracker(b, A);
                                    return
                                }
                                if (this._lastCheckedTime === null) {
                                    this._prepareRebufferTrackerState(A.viewer_time);
                                    return
                                }
                                if (this._lastPlayheadTime !== this.pm.data.player_playhead_time) {
                                    this._cleanupRebufferTracker(b, A, !0);
                                    return
                                }
                                var P = A.viewer_time - this._lastPlayheadTimeUpdatedTime;
                                typeof this.pm.sustainedRebufferThreshold == "number" && P >= this.pm.sustainedRebufferThreshold && (this._rebuffering || (this._rebuffering = !0, this.pm.emit("rebufferstart", {
                                    viewer_time: this._lastPlayheadTimeUpdatedTime
                                }))), this._lastCheckedTime = A.viewer_time
                            }
                        }, {
                            key: "_clearRebufferTrackerState",
                            value: function() {
                                this._lastCheckedTime = null, this._lastPlayheadTime = null, this._lastPlayheadTimeUpdatedTime = null
                            }
                        }, {
                            key: "_prepareRebufferTrackerState",
                            value: function(b) {
                                this._lastCheckedTime = b, this._lastPlayheadTime = this.pm.data.player_playhead_time, this._lastPlayheadTimeUpdatedTime = b
                            }
                        }, {
                            key: "_cleanupRebufferTracker",
                            value: function(b, A) {
                                var P = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
                                if (this._rebuffering) this._rebuffering = !1, this.pm.emit("rebufferend", {
                                    viewer_time: A.viewer_time
                                });
                                else {
                                    if (this._lastCheckedTime === null) return;
                                    var M = this.pm.data.player_playhead_time - this._lastPlayheadTime,
                                        q = A.viewer_time - this._lastPlayheadTimeUpdatedTime;
                                    typeof this.pm.minimumRebufferDuration == "number" && M > 0 && q - M > this.pm.minimumRebufferDuration && (this._lastCheckedTime = null, this.pm.emit("rebufferstart", {
                                        viewer_time: this._lastPlayheadTimeUpdatedTime
                                    }), this.pm.emit("rebufferend", {
                                        viewer_time: this._lastPlayheadTimeUpdatedTime + q - M
                                    }))
                                }
                                P ? this._prepareRebufferTrackerState(A.viewer_time) : this._clearRebufferTrackerState()
                            }
                        }]), k
                    }(),
                    mi = li,
                    Vn = function() {
                        "use strict";

                        function k(b) {
                            var A = this;
                            ri(this, k), Tt(this, "NAVIGATION_START", void 0), Tt(this, "pm", void 0), this.pm = b, b.on("viewinit", function() {
                                var P = b.data,
                                    M = P.view_id;
                                if (!P.view_program_changed) {
                                    var q = function($, Te) {
                                        var Le = Te.viewer_time;
                                        ($.type === "playing" && typeof b.data.view_time_to_first_frame == "undefined" || $.type === "adplaying" && (typeof b.data.view_time_to_first_frame == "undefined" || A._inPrerollPosition())) && A.calculateTimeToFirstFrame(Le || Er.now(), M)
                                    };
                                    b.one("playing", q), b.one("adplaying", q), b.one("viewend", function() {
                                        b.off("playing", q), b.off("adplaying", q)
                                    })
                                }
                            })
                        }
                        return aa(k, [{
                            key: "_inPrerollPosition",
                            value: function() {
                                return typeof this.pm.data.view_content_playback_time == "undefined" || this.pm.data.view_content_playback_time <= 1e3
                            }
                        }, {
                            key: "calculateTimeToFirstFrame",
                            value: function(b, A) {
                                A === this.pm.data.view_id && (this.pm.watchTimeTracker._updateWatchTime(null, {
                                    viewer_time: b
                                }), this.pm.data.view_time_to_first_frame = this.pm.data.view_watch_time, (this.pm.data.player_autoplay_on || this.pm.data.video_is_autoplay) && this.NAVIGATION_START && (this.pm.data.view_aggregate_startup_time = this.pm.data.view_start + this.pm.data.view_watch_time - this.NAVIGATION_START))
                            }
                        }]), k
                    }(),
                    vi = Vn,
                    la = function k(b) {
                        "use strict";
                        var A = this;
                        ri(this, k), Tt(this, "_lastPlayerHeight", void 0), Tt(this, "_lastPlayerWidth", void 0), Tt(this, "_lastPlayheadPosition", void 0), Tt(this, "_lastSourceHeight", void 0), Tt(this, "_lastSourceWidth", void 0), b.on("viewinit", function() {
                            A._lastPlayheadPosition = -1
                        });
                        var P = ["pause", "rebufferstart", "seeking", "error", "adbreakstart", "hb", "renditionchange", "orientationchange", "viewend"],
                            M = ["playing", "hb", "renditionchange", "orientationchange"];
                        P.forEach(function(q) {
                            b.on(q, function() {
                                if (A._lastPlayheadPosition >= 0 && b.data.player_playhead_time >= 0 && A._lastPlayerWidth >= 0 && A._lastSourceWidth > 0 && A._lastPlayerHeight >= 0 && A._lastSourceHeight > 0) {
                                    var $ = b.data.player_playhead_time - A._lastPlayheadPosition;
                                    if ($ < 0) {
                                        A._lastPlayheadPosition = -1;
                                        return
                                    }
                                    var Te = Math.min(A._lastPlayerWidth / A._lastSourceWidth, A._lastPlayerHeight / A._lastSourceHeight),
                                        Le = Math.max(0, Te - 1),
                                        Re = Math.max(0, 1 - Te);
                                    b.data.view_max_upscale_percentage = Math.max(b.data.view_max_upscale_percentage || 0, Le), b.data.view_max_downscale_percentage = Math.max(b.data.view_max_downscale_percentage || 0, Re), $t(b.data, "view_total_content_playback_time", $), $t(b.data, "view_total_upscaling", Le * $), $t(b.data, "view_total_downscaling", Re * $)
                                }
                                A._lastPlayheadPosition = -1
                            })
                        }), M.forEach(function(q) {
                            b.on(q, function() {
                                A._lastPlayheadPosition = b.data.player_playhead_time, A._lastPlayerWidth = b.data.player_width, A._lastPlayerHeight = b.data.player_height, A._lastSourceWidth = b.data.video_source_width, A._lastSourceHeight = b.data.video_source_height
                            })
                        })
                    },
                    Ia = la,
                    Oi = 2e3,
                    Ki = function k(b) {
                        "use strict";
                        var A = this;
                        ri(this, k), Tt(this, "isSeeking", void 0), this.isSeeking = !1;
                        var P = -1,
                            M = function() {
                                var q = Er.now(),
                                    $ = (b.data.viewer_time || q) - (P || q);
                                $t(b.data, "view_seek_duration", $), b.data.view_max_seek_time = Math.max(b.data.view_max_seek_time || 0, $), A.isSeeking = !1, P = -1
                            };
                        b.on("seeking", function(q, $) {
                            if (Object.assign(b.data, $), A.isSeeking && $.viewer_time - P <= Oi) {
                                P = $.viewer_time;
                                return
                            }
                            A.isSeeking && M(), A.isSeeking = !0, P = $.viewer_time, $t(b.data, "view_seek_count", 1), b.send("seeking")
                        }), b.on("seeked", function() {
                            M()
                        }), b.on("viewend", function() {
                            A.isSeeking && (M(), b.send("seeked")), A.isSeeking = !1, P = -1
                        })
                    },
                    un = Ki,
                    Ha = function(k, b) {
                        k.push(b), k.sort(function(A, P) {
                            return A.viewer_time - P.viewer_time
                        })
                    },
                    Sn = ["adbreakstart", "adrequest", "adresponse", "adplay", "adplaying", "adpause", "adended", "adbreakend", "aderror", "adclicked", "adskipped"],
                    Yi = function() {
                        "use strict";

                        function k(b) {
                            var A = this;
                            ri(this, k), Tt(this, "_adHasPlayed", void 0), Tt(this, "_adRequests", void 0), Tt(this, "_adResponses", void 0), Tt(this, "_currentAdRequestNumber", void 0), Tt(this, "_currentAdResponseNumber", void 0), Tt(this, "_prerollPlayTime", void 0), Tt(this, "_wouldBeNewAdPlay", void 0), Tt(this, "isAdBreak", void 0), Tt(this, "pm", void 0), this.pm = b, b.on("viewinit", function() {
                                A.isAdBreak = !1, A._currentAdRequestNumber = 0, A._currentAdResponseNumber = 0, A._adRequests = [], A._adResponses = [], A._adHasPlayed = !1, A._wouldBeNewAdPlay = !0, A._prerollPlayTime = void 0
                            }), Sn.forEach(function(M) {
                                return b.on(M, A._updateAdData.bind(A))
                            });
                            var P = function() {
                                A.isAdBreak = !1
                            };
                            b.on("adbreakstart", function() {
                                A.isAdBreak = !0
                            }), b.on("play", P), b.on("playing", P), b.on("viewend", P), b.on("adrequest", function(M, q) {
                                q = Object.assign({
                                    ad_request_id: "generatedAdRequestId" + A._currentAdRequestNumber++
                                }, q), Ha(A._adRequests, q), $t(b.data, "view_ad_request_count"), A.inPrerollPosition() && (b.data.view_preroll_requested = !0, A._adHasPlayed || $t(b.data, "view_preroll_request_count"))
                            }), b.on("adresponse", function(M, q) {
                                q = Object.assign({
                                    ad_request_id: "generatedAdRequestId" + A._currentAdResponseNumber++
                                }, q), Ha(A._adResponses, q);
                                var $ = A.findAdRequest(q.ad_request_id);
                                $ && $t(b.data, "view_ad_request_time", Math.max(0, q.viewer_time - $.viewer_time))
                            }), b.on("adplay", function(M, q) {
                                A._adHasPlayed = !0, A._wouldBeNewAdPlay && (A._wouldBeNewAdPlay = !1, $t(b.data, "view_ad_played_count")), A.inPrerollPosition() && !b.data.view_preroll_played && (b.data.view_preroll_played = !0, A._adRequests.length > 0 && (b.data.view_preroll_request_time = Math.max(0, q.viewer_time - A._adRequests[0].viewer_time)), b.data.view_start && (b.data.view_startup_preroll_request_time = Math.max(0, q.viewer_time - b.data.view_start)), A._prerollPlayTime = q.viewer_time)
                            }), b.on("adplaying", function(M, q) {
                                A.inPrerollPosition() && typeof b.data.view_preroll_load_time == "undefined" && typeof A._prerollPlayTime != "undefined" && (b.data.view_preroll_load_time = q.viewer_time - A._prerollPlayTime, b.data.view_startup_preroll_load_time = q.viewer_time - A._prerollPlayTime)
                            }), b.on("adclicked", function(M, q) {
                                A._wouldBeNewAdPlay || $t(b.data, "view_ad_clicked_count")
                            }), b.on("adskipped", function(M, q) {
                                A._wouldBeNewAdPlay || $t(b.data, "view_ad_skipped_count")
                            }), b.on("adended", function() {
                                A._wouldBeNewAdPlay = !0
                            }), b.on("aderror", function() {
                                A._wouldBeNewAdPlay = !0
                            })
                        }
                        return aa(k, [{
                            key: "inPrerollPosition",
                            value: function() {
                                return typeof this.pm.data.view_content_playback_time == "undefined" || this.pm.data.view_content_playback_time <= 1e3
                            }
                        }, {
                            key: "findAdRequest",
                            value: function(b) {
                                for (var A = 0; A < this._adRequests.length; A++)
                                    if (this._adRequests[A].ad_request_id === b) return this._adRequests[A]
                            }
                        }, {
                            key: "_updateAdData",
                            value: function(b, A) {
                                if (this.inPrerollPosition()) {
                                    if (!this.pm.data.view_preroll_ad_tag_hostname && A.ad_tag_url) {
                                        var P = Pe(qe(A.ad_tag_url), 2),
                                            M = P[0],
                                            q = P[1];
                                        this.pm.data.view_preroll_ad_tag_domain = q, this.pm.data.view_preroll_ad_tag_hostname = M
                                    }
                                    if (!this.pm.data.view_preroll_ad_asset_hostname && A.ad_asset_url) {
                                        var $ = Pe(qe(A.ad_asset_url), 2),
                                            Te = $[0],
                                            Le = $[1];
                                        this.pm.data.view_preroll_ad_asset_domain = Le, this.pm.data.view_preroll_ad_asset_hostname = Te
                                    }
                                }
                                this.pm.data.ad_asset_url = A == null ? void 0 : A.ad_asset_url, this.pm.data.ad_tag_url = A == null ? void 0 : A.ad_tag_url, this.pm.data.ad_creative_id = A == null ? void 0 : A.ad_creative_id, this.pm.data.ad_id = A == null ? void 0 : A.ad_id, this.pm.data.ad_universal_id = A == null ? void 0 : A.ad_universal_id
                            }
                        }]), k
                    }(),
                    xi = Yi,
                    Li = Q(ot()),
                    _a = function k(b) {
                        "use strict";
                        ri(this, k);
                        var A, P, M = function() {
                                b.disableRebufferTracking || ($t(b.data, "view_waiting_rebuffer_count", 1), A = Er.now(), P = Li.default.setInterval(function() {
                                    if (A) {
                                        var Re = Er.now();
                                        $t(b.data, "view_waiting_rebuffer_duration", Re - A), A = Re
                                    }
                                }, 250))
                            },
                            q = function() {
                                b.disableRebufferTracking || A && ($t(b.data, "view_waiting_rebuffer_duration", Er.now() - A), A = !1, Li.default.clearInterval(P))
                            },
                            $ = !1,
                            Te = function() {
                                $ = !0
                            },
                            Le = function() {
                                $ = !1, q()
                            };
                        b.on("waiting", function() {
                            $ && M()
                        }), b.on("playing", function() {
                            q(), Te()
                        }), b.on("pause", Le), b.on("seeking", Le)
                    },
                    gn = _a,
                    Ji = function k(b) {
                        "use strict";
                        var A = this;
                        ri(this, k), Tt(this, "lastWallClockTime", void 0);
                        var P = function() {
                                A.lastWallClockTime = Er.now(), b.on("before*", M)
                            },
                            M = function(q) {
                                var $ = Er.now(),
                                    Te = A.lastWallClockTime;
                                A.lastWallClockTime = $, $ - Te > 3e4 && (b.emit("devicesleep", {
                                    viewer_time: Te
                                }), Object.assign(b.data, {
                                    viewer_time: Te
                                }), b.send("devicesleep"), b.emit("devicewake", {
                                    viewer_time: $
                                }), Object.assign(b.data, {
                                    viewer_time: $
                                }), b.send("devicewake"))
                            };
                        b.one("playbackheartbeat", P), b.on("playbackheartbeatend", function() {
                            b.off("before*", M), b.one("playbackheartbeat", P)
                        })
                    },
                    Ni = Ji,
                    ea = Q(ot()),
                    ma = function(k) {
                        return k()
                    }(function() {
                        var k = function() {
                            for (var A = 0, P = {}; A < arguments.length; A++) {
                                var M = arguments[A];
                                for (var q in M) P[q] = M[q]
                            }
                            return P
                        };

                        function b(A) {
                            function P(M, q, $) {
                                var Te;
                                if (typeof document != "undefined") {
                                    if (arguments.length > 1) {
                                        if ($ = k({
                                                path: "/"
                                            }, P.defaults, $), typeof $.expires == "number") {
                                            var Le = new Date;
                                            Le.setMilliseconds(Le.getMilliseconds() + $.expires * 864e5), $.expires = Le
                                        }
                                        try {
                                            Te = JSON.stringify(q), /^[\{\[]/.test(Te) && (q = Te)
                                        } catch (Bt) {}
                                        return A.write ? q = A.write(q, M) : q = encodeURIComponent(String(q)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), M = encodeURIComponent(String(M)), M = M.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent), M = M.replace(/[\(\)]/g, escape), document.cookie = [M, "=", q, $.expires ? "; expires=" + $.expires.toUTCString() : "", $.path ? "; path=" + $.path : "", $.domain ? "; domain=" + $.domain : "", $.secure ? "; secure" : ""].join("")
                                    }
                                    M || (Te = {});
                                    for (var Re = document.cookie ? document.cookie.split("; ") : [], It = /(%[0-9A-Z]{2})+/g, xt = 0; xt < Re.length; xt++) {
                                        var xe = Re[xt].split("="),
                                            Ae = xe.slice(1).join("=");
                                        Ae.charAt(0) === '"' && (Ae = Ae.slice(1, -1));
                                        try {
                                            var Ue = xe[0].replace(It, decodeURIComponent);
                                            if (Ae = A.read ? A.read(Ae, Ue) : A(Ae, Ue) || Ae.replace(It, decodeURIComponent), this.json) try {
                                                Ae = JSON.parse(Ae)
                                            } catch (Bt) {}
                                            if (M === Ue) {
                                                Te = Ae;
                                                break
                                            }
                                            M || (Te[Ue] = Ae)
                                        } catch (Bt) {}
                                    }
                                    return Te
                                }
                            }
                            return P.set = P, P.get = function(M) {
                                return P.call(P, M)
                            }, P.getJSON = function() {
                                return P.apply({
                                    json: !0
                                }, [].slice.call(arguments))
                            }, P.defaults = {}, P.remove = function(M, q) {
                                P(M, "", k(q, {
                                    expires: -1
                                }))
                            }, P.withConverter = b, P
                        }
                        return b(function() {})
                    }),
                    Sa = "muxData",
                    Ca = function(k) {
                        return Object.entries(k).map(function(b) {
                            var A = Pe(b, 2),
                                P = A[0],
                                M = A[1];
                            return "".concat(P, "=").concat(M)
                        }).join("&")
                    },
                    en = function(k) {
                        return k.split("&").reduce(function(b, A) {
                            var P = Pe(A.split("="), 2),
                                M = P[0],
                                q = P[1],
                                $ = +q,
                                Te = q && $ == q ? $ : q;
                            return b[M] = Te, b
                        }, {})
                    },
                    Pr = function() {
                        var k;
                        try {
                            k = en(ma.get(Sa) || "")
                        } catch (b) {
                            k = {}
                        }
                        return k
                    },
                    qr = function(k) {
                        try {
                            ma.set(Sa, Ca(k), {
                                expires: 365
                            })
                        } catch (b) {}
                    },
                    va = function() {
                        var k = Pr();
                        return k.mux_viewer_id = k.mux_viewer_id || Xt(), k.msn = k.msn || Math.random(), qr(k), {
                            mux_viewer_id: k.mux_viewer_id,
                            mux_sample_number: k.msn
                        }
                    },
                    Kr = function() {
                        var k = Pr(),
                            b = Er.now();
                        return k.session_start && (k.sst = k.session_start, delete k.session_start), k.session_id && (k.sid = k.session_id, delete k.session_id), k.session_expires && (k.sex = k.session_expires, delete k.session_expires), (!k.sex || k.sex < b) && (k.sid = Xt(), k.sst = b), k.sex = b + 25 * 60 * 1e3, qr(k), {
                            session_id: k.sid,
                            session_start: k.sst,
                            session_expires: k.sex
                        }
                    };

                function ta(k, b) {
                    var A = b.beaconCollectionDomain,
                        P = b.beaconDomain;
                    if (A) return "https://" + A;
                    k = k || "inferred";
                    var M = P || "litix.io";
                    return k.match(/^[a-z0-9]+$/) ? "https://" + k + "." + M : "https://img.litix.io/a.gif"
                }
                var ra = Q(ot()),
                    Vi = function() {
                        var k;
                        switch (Da()) {
                            case "cellular":
                                k = "cellular";
                                break;
                            case "ethernet":
                                k = "wired";
                                break;
                            case "wifi":
                                k = "wifi";
                                break;
                            case void 0:
                                break;
                            default:
                                k = "other"
                        }
                        return k
                    },
                    Da = function() {
                        var k = ra.default.navigator,
                            b = k && (k.connection || k.mozConnection || k.webkitConnection);
                        return b && b.type
                    };
                Vi.getConnectionFromAPI = Da;
                var tn = Vi,
                    ia = {
                        a: "env",
                        b: "beacon",
                        c: "custom",
                        d: "ad",
                        e: "event",
                        f: "experiment",
                        i: "internal",
                        m: "mux",
                        n: "response",
                        p: "player",
                        q: "request",
                        r: "retry",
                        s: "session",
                        t: "timestamp",
                        u: "viewer",
                        v: "video",
                        w: "page",
                        x: "view",
                        y: "sub"
                    },
                    Pa = En(ia),
                    or = {
                        ad: "ad",
                        af: "affiliate",
                        ag: "aggregate",
                        ap: "api",
                        al: "application",
                        ao: "audio",
                        ar: "architecture",
                        as: "asset",
                        au: "autoplay",
                        av: "average",
                        bi: "bitrate",
                        bn: "brand",
                        br: "break",
                        bw: "browser",
                        by: "bytes",
                        bz: "business",
                        ca: "cached",
                        cb: "cancel",
                        cc: "codec",
                        cd: "code",
                        cg: "category",
                        ch: "changed",
                        ci: "client",
                        ck: "clicked",
                        cl: "canceled",
                        cn: "config",
                        co: "count",
                        ce: "counter",
                        cp: "complete",
                        cq: "creator",
                        cr: "creative",
                        cs: "captions",
                        ct: "content",
                        cu: "current",
                        cx: "connection",
                        cz: "context",
                        dg: "downscaling",
                        dm: "domain",
                        dn: "cdn",
                        do: "downscale",
                        dr: "drm",
                        dp: "dropped",
                        du: "duration",
                        dv: "device",
                        dy: "dynamic",
                        eb: "enabled",
                        ec: "encoding",
                        ed: "edge",
                        en: "end",
                        eg: "engine",
                        em: "embed",
                        er: "error",
                        ep: "experiments",
                        es: "errorcode",
                        et: "errortext",
                        ee: "event",
                        ev: "events",
                        ex: "expires",
                        ez: "exception",
                        fa: "failed",
                        fi: "first",
                        fm: "family",
                        ft: "format",
                        fp: "fps",
                        fq: "frequency",
                        fr: "frame",
                        fs: "fullscreen",
                        ha: "has",
                        hb: "holdback",
                        he: "headers",
                        ho: "host",
                        hn: "hostname",
                        ht: "height",
                        id: "id",
                        ii: "init",
                        in: "instance",
                        ip: "ip",
                        is: "is",
                        ke: "key",
                        la: "language",
                        lb: "labeled",
                        le: "level",
                        li: "live",
                        ld: "loaded",
                        lo: "load",
                        ls: "lists",
                        lt: "latency",
                        ma: "max",
                        md: "media",
                        me: "message",
                        mf: "manifest",
                        mi: "mime",
                        ml: "midroll",
                        mm: "min",
                        mn: "manufacturer",
                        mo: "model",
                        mx: "mux",
                        ne: "newest",
                        nm: "name",
                        no: "number",
                        on: "on",
                        or: "origin",
                        os: "os",
                        pa: "paused",
                        pb: "playback",
                        pd: "producer",
                        pe: "percentage",
                        pf: "played",
                        pg: "program",
                        ph: "playhead",
                        pi: "plugin",
                        pl: "preroll",
                        pn: "playing",
                        po: "poster",
                        pp: "pip",
                        pr: "preload",
                        ps: "position",
                        pt: "part",
                        py: "property",
                        px: "pop",
                        pz: "plan",
                        ra: "rate",
                        rd: "requested",
                        re: "rebuffer",
                        rf: "rendition",
                        rg: "range",
                        rm: "remote",
                        ro: "ratio",
                        rp: "response",
                        rq: "request",
                        rs: "requests",
                        sa: "sample",
                        sd: "skipped",
                        se: "session",
                        sh: "shift",
                        sk: "seek",
                        sm: "stream",
                        so: "source",
                        sq: "sequence",
                        sr: "series",
                        ss: "status",
                        st: "start",
                        su: "startup",
                        sv: "server",
                        sw: "software",
                        sy: "severity",
                        ta: "tag",
                        tc: "tech",
                        te: "text",
                        tg: "target",
                        th: "throughput",
                        ti: "time",
                        tl: "total",
                        to: "to",
                        tt: "title",
                        ty: "type",
                        ug: "upscaling",
                        un: "universal",
                        up: "upscale",
                        ur: "url",
                        us: "user",
                        va: "variant",
                        vd: "viewed",
                        vi: "video",
                        ve: "version",
                        vw: "view",
                        vr: "viewer",
                        wd: "width",
                        wa: "watch",
                        wt: "waiting"
                    },
                    qa = En(or);

                function En(k) {
                    var b = {};
                    for (var A in k) k.hasOwnProperty(A) && (b[k[A]] = A);
                    return b
                }

                function pa(k) {
                    var b = {},
                        A = {};
                    return Object.keys(k).forEach(function(P) {
                        var M = !1;
                        if (k.hasOwnProperty(P) && k[P] !== void 0) {
                            var q = P.split("_"),
                                $ = q[0],
                                Te = Pa[$];
                            Te || (Cr.info("Data key word `" + q[0] + "` not expected in " + P), Te = $ + "_"), q.splice(1).forEach(function(Le) {
                                Le === "url" && (M = !0), qa[Le] ? Te += qa[Le] : Number.isInteger(Number(Le)) ? Te += Le : (Cr.info("Data key word `" + Le + "` not expected in " + P), Te += "_" + Le + "_")
                            }), M ? A[Te] = k[P] : b[Te] = k[P]
                        }
                    }), Object.assign(b, A)
                }
                var Va = Q(ot()),
                    kn = Q(Ir()),
                    Zn = {
                        maxBeaconSize: 300,
                        maxQueueLength: 3600,
                        baseTimeBetweenBeacons: 1e4,
                        maxPayloadKBSize: 500
                    },
                    lt = 56 * 1024,
                    Oa = ["hb", "requestcompleted", "requestfailed", "requestcanceled"],
                    rn = "https://img.litix.io",
                    di = function(k) {
                        var b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                        this._beaconUrl = k || rn, this._eventQueue = [], this._postInFlight = !1, this._resendAfterPost = !1, this._failureCount = 0, this._sendTimeout = !1, this._options = Object.assign({}, Zn, b)
                    };
                di.prototype.queueEvent = function(k, b) {
                    var A = Object.assign({}, b);
                    return this._eventQueue.length <= this._options.maxQueueLength || k === "eventrateexceeded" ? (this._eventQueue.push(A), this._sendTimeout || this._startBeaconSending(), this._eventQueue.length <= this._options.maxQueueLength) : !1
                }, di.prototype.flushEvents = function() {
                    var k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
                    if (k && this._eventQueue.length === 1) {
                        this._eventQueue.pop();
                        return
                    }
                    this._eventQueue.length && this._sendBeaconQueue(), this._startBeaconSending()
                }, di.prototype.destroy = function() {
                    var k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
                    this.destroyed = !0, k ? this._clearBeaconQueue() : this.flushEvents(), Va.default.clearTimeout(this._sendTimeout)
                }, di.prototype._clearBeaconQueue = function() {
                    var k = this._eventQueue.length > this._options.maxBeaconSize ? this._eventQueue.length - this._options.maxBeaconSize : 0,
                        b = this._eventQueue.slice(k);
                    k > 0 && Object.assign(b[b.length - 1], pa({
                        mux_view_message: "event queue truncated"
                    }));
                    var A = this._createPayload(b);
                    C(this._beaconUrl, A, !0, function() {})
                }, di.prototype._sendBeaconQueue = function() {
                    var k = this;
                    if (this._postInFlight) {
                        this._resendAfterPost = !0;
                        return
                    }
                    var b = this._eventQueue.slice(0, this._options.maxBeaconSize);
                    this._eventQueue = this._eventQueue.slice(this._options.maxBeaconSize), this._postInFlight = !0;
                    var A = this._createPayload(b),
                        P = Er.now();
                    C(this._beaconUrl, A, !1, function(M, q) {
                        q ? (k._eventQueue = b.concat(k._eventQueue), k._failureCount += 1, Cr.info("Error sending beacon: " + q)) : k._failureCount = 0, k._roundTripTime = Er.now() - P, k._postInFlight = !1, k._resendAfterPost && (k._resendAfterPost = !1, k._eventQueue.length > 0 && k._sendBeaconQueue())
                    })
                }, di.prototype._getNextBeaconTime = function() {
                    if (!this._failureCount) return this._options.baseTimeBetweenBeacons;
                    var k = Math.pow(2, this._failureCount - 1);
                    return k = k * Math.random(), (1 + k) * this._options.baseTimeBetweenBeacons
                }, di.prototype._startBeaconSending = function() {
                    var k = this;
                    Va.default.clearTimeout(this._sendTimeout), !this.destroyed && (this._sendTimeout = Va.default.setTimeout(function() {
                        k._eventQueue.length && k._sendBeaconQueue(), k._startBeaconSending()
                    }, this._getNextBeaconTime()))
                }, di.prototype._createPayload = function(k) {
                    var b = this,
                        A = {
                            transmission_timestamp: Math.round(Er.now())
                        };
                    this._roundTripTime && (A.rtt_ms = Math.round(this._roundTripTime));
                    var P, M, q, $ = function() {
                            P = JSON.stringify({
                                metadata: A,
                                events: M || k
                            }), q = P.length / 1024
                        },
                        Te = function() {
                            return q <= b._options.maxPayloadKBSize
                        };
                    return $(), Te() || (Cr.info("Payload size is too big (" + q + " kb). Removing unnecessary events."), M = k.filter(function(Le) {
                        return Oa.indexOf(Le.e) === -1
                    }), $()), Te() || (Cr.info("Payload size still too big (" + q + " kb). Cropping fields.."), M.forEach(function(Le) {
                        for (var Re in Le) {
                            var It = Le[Re],
                                xt = 50 * 1024;
                            typeof It == "string" && It.length > xt && (Le[Re] = It.substring(0, xt))
                        }
                    }), $()), P
                };
                var D = typeof kn.default.exitPictureInPicture == "function" ? function(k) {
                        return k.length <= lt
                    } : function(k) {
                        return !1
                    },
                    C = function(k, b, A, P) {
                        if (A && navigator && navigator.sendBeacon && navigator.sendBeacon(k, b)) {
                            P();
                            return
                        }
                        if (Va.default.fetch) {
                            Va.default.fetch(k, {
                                method: "POST",
                                body: b,
                                headers: {
                                    "Content-Type": "text/plain"
                                },
                                keepalive: D(b)
                            }).then(function(q) {
                                return P(null, q.ok ? null : "Error")
                            }).catch(function(q) {
                                return P(null, q)
                            });
                            return
                        }
                        if (Va.default.XMLHttpRequest) {
                            var M = new Va.default.XMLHttpRequest;
                            M.onreadystatechange = function() {
                                if (M.readyState === 4) return P(null, M.status !== 200 ? "error" : void 0)
                            }, M.open("POST", k), M.setRequestHeader("Content-Type", "text/plain"), M.send(b);
                            return
                        }
                        P()
                    },
                    H = di,
                    re = ["env_key", "view_id", "view_sequence_number", "player_sequence_number", "beacon_domain", "player_playhead_time", "viewer_time", "mux_api_version", "event", "video_id", "player_instance_id", "player_error_code", "player_error_message", "player_error_context", "player_error_severity", "player_error_business_exception"],
                    se = ["adplay", "adplaying", "adpause", "adfirstquartile", "admidpoint", "adthirdquartile", "adended", "adresponse", "adrequest"],
                    Ce = ["ad_id", "ad_creative_id", "ad_universal_id"],
                    He = ["viewstart", "error", "ended", "viewend"],
                    Qe = 10 * 60 * 1e3,
                    ke = function() {
                        "use strict";

                        function k(b, A) {
                            var P = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                            ri(this, k);
                            var M, q, $, Te, Le, Re, It, xt, xe, Ae, Ue, Bt;
                            Tt(this, "mux", void 0), Tt(this, "envKey", void 0), Tt(this, "options", void 0), Tt(this, "eventQueue", void 0), Tt(this, "sampleRate", void 0), Tt(this, "disableCookies", void 0), Tt(this, "respectDoNotTrack", void 0), Tt(this, "previousBeaconData", void 0), Tt(this, "lastEventTime", void 0), Tt(this, "rateLimited", void 0), Tt(this, "pageLevelData", void 0), Tt(this, "viewerData", void 0), this.mux = b, this.envKey = A, this.options = P, this.previousBeaconData = null, this.lastEventTime = 0, this.rateLimited = !1, this.eventQueue = new H(ta(this.envKey, this.options));
                            var cr;
                            this.sampleRate = (cr = this.options.sampleRate) !== null && cr !== void 0 ? cr : 1;
                            var Ur;
                            this.disableCookies = (Ur = this.options.disableCookies) !== null && Ur !== void 0 ? Ur : !1;
                            var Pt;
                            this.respectDoNotTrack = (Pt = this.options.respectDoNotTrack) !== null && Pt !== void 0 ? Pt : !1, this.previousBeaconData = null, this.lastEventTime = 0, this.rateLimited = !1, this.pageLevelData = {
                                mux_api_version: this.mux.API_VERSION,
                                mux_embed: this.mux.NAME,
                                mux_embed_version: this.mux.VERSION,
                                viewer_application_name: (M = this.options.platform) === null || M === void 0 ? void 0 : M.name,
                                viewer_application_version: (q = this.options.platform) === null || q === void 0 ? void 0 : q.version,
                                viewer_application_engine: ($ = this.options.platform) === null || $ === void 0 ? void 0 : $.layout,
                                viewer_device_name: (Te = this.options.platform) === null || Te === void 0 ? void 0 : Te.product,
                                viewer_device_category: "",
                                viewer_device_manufacturer: (Le = this.options.platform) === null || Le === void 0 ? void 0 : Le.manufacturer,
                                viewer_os_family: (It = this.options.platform) === null || It === void 0 || (Re = It.os) === null || Re === void 0 ? void 0 : Re.family,
                                viewer_os_architecture: (xe = this.options.platform) === null || xe === void 0 || (xt = xe.os) === null || xt === void 0 ? void 0 : xt.architecture,
                                viewer_os_version: (Ue = this.options.platform) === null || Ue === void 0 || (Ae = Ue.os) === null || Ae === void 0 ? void 0 : Ae.version,
                                viewer_connection_type: tn(),
                                page_url: ea.default === null || ea.default === void 0 || (Bt = ea.default.location) === null || Bt === void 0 ? void 0 : Bt.href
                            }, this.viewerData = this.disableCookies ? {} : va()
                        }
                        return aa(k, [{
                            key: "send",
                            value: function(b, A) {
                                if (!(!b || !(A != null && A.view_id))) {
                                    if (this.respectDoNotTrack && Gr()) return Cr.info("Not sending `" + b + "` because Do Not Track is enabled");
                                    if (!A || typeof A != "object") return Cr.error("A data object was expected in send() but was not provided");
                                    var P = this.disableCookies ? {} : Kr(),
                                        M = vt(hr({}, this.pageLevelData, A, P, this.viewerData), {
                                            event: b,
                                            env_key: this.envKey
                                        });
                                    M.user_id && (M.viewer_user_id = M.user_id, delete M.user_id);
                                    var q, $ = ((q = M.mux_sample_number) !== null && q !== void 0 ? q : 0) >= this.sampleRate,
                                        Te = this._deduplicateBeaconData(b, M),
                                        Le = pa(Te);
                                    if (this.lastEventTime = this.mux.utils.now(), $) return Cr.info("Not sending event due to sample rate restriction", b, M, Le);
                                    if (this.envKey || Cr.info("Missing environment key (envKey) - beacons will be dropped if the video source is not a valid mux video URL", b, M, Le), !this.rateLimited) {
                                        if (Cr.info("Sending event", b, M, Le), this.rateLimited = !this.eventQueue.queueEvent(b, Le), this.mux.WINDOW_UNLOADING && b === "viewend") this.eventQueue.destroy(!0);
                                        else if (this.mux.WINDOW_HIDDEN && b === "hb" ? this.eventQueue.flushEvents(!0) : He.indexOf(b) >= 0 && this.eventQueue.flushEvents(), this.rateLimited) return M.event = "eventrateexceeded", Le = pa(M), this.eventQueue.queueEvent(M.event, Le), Cr.error("Beaconing disabled due to rate limit.")
                                    }
                                }
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                this.eventQueue.destroy(!1)
                            }
                        }, {
                            key: "_deduplicateBeaconData",
                            value: function(b, A) {
                                var P = this,
                                    M = {},
                                    q = A.view_id;
                                if (q === "-1" || b === "viewstart" || b === "viewend" || !this.previousBeaconData || this.mux.utils.now() - this.lastEventTime >= Qe) M = hr({}, A), q && (this.previousBeaconData = M), q && b === "viewend" && (this.previousBeaconData = null);
                                else {
                                    var $ = b.indexOf("request") === 0;
                                    Object.entries(A).forEach(function(Te) {
                                        var Le = Pe(Te, 2),
                                            Re = Le[0],
                                            It = Le[1];
                                        P.previousBeaconData && (It !== P.previousBeaconData[Re] || re.indexOf(Re) > -1 || P.objectHasChanged($, Re, It, P.previousBeaconData[Re]) || P.eventRequiresKey(b, Re)) && (M[Re] = It, P.previousBeaconData[Re] = It)
                                    })
                                }
                                return M
                            }
                        }, {
                            key: "objectHasChanged",
                            value: function(b, A, P, M) {
                                return !b || A.indexOf("request_") !== 0 ? !1 : A === "request_response_headers" || typeof P != "object" || typeof M != "object" ? !0 : Object.keys(P || {}).length !== Object.keys(M || {}).length
                            }
                        }, {
                            key: "eventRequiresKey",
                            value: function(b, A) {
                                return !!(b === "renditionchange" && A.indexOf("video_source_") === 0 || Ce.includes(A) && se.includes(b))
                            }
                        }]), k
                    }(),
                    We = function k(b) {
                        "use strict";
                        ri(this, k);
                        var A = 0,
                            P = 0,
                            M = 0,
                            q = 0,
                            $ = 0,
                            Te = 0,
                            Le = 0,
                            Re = function(xe, Ae) {
                                var Ue = Ae.request_start,
                                    Bt = Ae.request_response_start,
                                    cr = Ae.request_response_end,
                                    Ur = Ae.request_bytes_loaded;
                                q++;
                                var Pt, St;
                                if (Bt ? (Pt = Bt - (Ue != null ? Ue : 0), St = (cr != null ? cr : 0) - Bt) : St = (cr != null ? cr : 0) - (Ue != null ? Ue : 0), St > 0 && Ur && Ur > 0) {
                                    var ut = Ur / St * 8e3;
                                    $++, P += Ur, M += St, b.data.view_min_request_throughput = Math.min(b.data.view_min_request_throughput || 1 / 0, ut), b.data.view_average_request_throughput = P / M * 8e3, b.data.view_request_count = q, Pt > 0 && (A += Pt, b.data.view_max_request_latency = Math.max(b.data.view_max_request_latency || 0, Pt), b.data.view_average_request_latency = A / $)
                                }
                            },
                            It = function(xe, Ae) {
                                q++, Te++, b.data.view_request_count = q, b.data.view_request_failed_count = Te
                            },
                            xt = function(xe, Ae) {
                                q++, Le++, b.data.view_request_count = q, b.data.view_request_canceled_count = Le
                            };
                        b.on("requestcompleted", Re), b.on("requestfailed", It), b.on("requestcanceled", xt)
                    },
                    Xe = We,
                    Ot = 60 * 60 * 1e3,
                    qt = function k(b) {
                        "use strict";
                        var A = this;
                        ri(this, k), Tt(this, "_lastEventTime", void 0), b.on("before*", function(P, M) {
                            var q = M.viewer_time,
                                $ = Er.now(),
                                Te = A._lastEventTime;
                            if (A._lastEventTime = $, Te && $ - Te > Ot) {
                                var Le = Object.keys(b.data).reduce(function(It, xt) {
                                    return xt.indexOf("video_") === 0 ? Object.assign(It, Tt({}, xt, b.data[xt])) : It
                                }, {});
                                b.mux.log.info("Received event after at least an hour inactivity, creating a new view");
                                var Re = b.playbackHeartbeat._playheadShouldBeProgressing;
                                b._resetView(Object.assign({
                                    viewer_time: q
                                }, Le)), b.playbackHeartbeat._playheadShouldBeProgressing = Re, b.playbackHeartbeat._playheadShouldBeProgressing && P.type !== "play" && P.type !== "adbreakstart" && (b.emit("play", {
                                    viewer_time: q
                                }), P.type !== "playing" && b.emit("playing", {
                                    viewer_time: q
                                }))
                            }
                        })
                    },
                    fr = qt,
                    rr = ["viewstart", "ended", "loadstart", "pause", "play", "playing", "ratechange", "waiting", "adplay", "adpause", "adended", "aderror", "adplaying", "adrequest", "adresponse", "adbreakstart", "adbreakend", "adfirstquartile", "admidpoint", "adthirdquartile", "rebufferstart", "rebufferend", "seeked", "error", "hb", "requestcompleted", "requestfailed", "requestcanceled", "renditionchange"],
                    y = new Set(["requestcompleted", "requestfailed", "requestcanceled"]),
                    F = function(k) {
                        "use strict";
                        pe(A, k);
                        var b = ft(A);

                        function A(P, M, q) {
                            ri(this, A);
                            var $;
                            $ = b.call(this), Tt(Kt($), "DOM_CONTENT_LOADED_EVENT_END", void 0), Tt(Kt($), "NAVIGATION_START", void 0), Tt(Kt($), "_destroyed", void 0), Tt(Kt($), "_heartBeatTimeout", void 0), Tt(Kt($), "adTracker", void 0), Tt(Kt($), "dashjs", void 0), Tt(Kt($), "data", void 0), Tt(Kt($), "disablePlayheadRebufferTracking", void 0), Tt(Kt($), "disableRebufferTracking", void 0), Tt(Kt($), "errorTracker", void 0), Tt(Kt($), "errorTranslator", void 0), Tt(Kt($), "emitTranslator", void 0), Tt(Kt($), "getAdData", void 0), Tt(Kt($), "getPlayheadTime", void 0), Tt(Kt($), "getStateData", void 0), Tt(Kt($), "stateDataTranslator", void 0), Tt(Kt($), "hlsjs", void 0), Tt(Kt($), "id", void 0), Tt(Kt($), "longResumeTracker", void 0), Tt(Kt($), "minimumRebufferDuration", void 0), Tt(Kt($), "mux", void 0), Tt(Kt($), "playbackEventDispatcher", void 0), Tt(Kt($), "playbackHeartbeat", void 0), Tt(Kt($), "playbackHeartbeatTime", void 0), Tt(Kt($), "playheadTime", void 0), Tt(Kt($), "seekingTracker", void 0), Tt(Kt($), "sustainedRebufferThreshold", void 0), Tt(Kt($), "watchTimeTracker", void 0), Tt(Kt($), "currentFragmentPDT", void 0), Tt(Kt($), "currentFragmentStart", void 0), $.DOM_CONTENT_LOADED_EVENT_END = Ar.domContentLoadedEventEnd(), $.NAVIGATION_START = Ar.navigationStart();
                            var Te = {
                                debug: !1,
                                minimumRebufferDuration: 250,
                                sustainedRebufferThreshold: 1e3,
                                playbackHeartbeatTime: 25,
                                beaconDomain: "litix.io",
                                sampleRate: 1,
                                disableCookies: !1,
                                respectDoNotTrack: !1,
                                disableRebufferTracking: !1,
                                disablePlayheadRebufferTracking: !1,
                                errorTranslator: function(xe) {
                                    return xe
                                },
                                emitTranslator: function() {
                                    for (var xe = arguments.length, Ae = new Array(xe), Ue = 0; Ue < xe; Ue++) Ae[Ue] = arguments[Ue];
                                    return Ae
                                },
                                stateDataTranslator: function(xe) {
                                    return xe
                                }
                            };
                            $.mux = P, $.id = M, q != null && q.beaconDomain && $.mux.log.warn("The `beaconDomain` setting has been deprecated in favor of `beaconCollectionDomain`. Please change your integration to use `beaconCollectionDomain` instead of `beaconDomain`."), q = Object.assign(Te, q), q.data = q.data || {}, q.data.property_key && (q.data.env_key = q.data.property_key, delete q.data.property_key), Cr.level = q.debug ? oa.DEBUG : oa.WARN, $.getPlayheadTime = q.getPlayheadTime, $.getStateData = q.getStateData || function() {
                                return {}
                            }, $.getAdData = q.getAdData || function() {}, $.minimumRebufferDuration = q.minimumRebufferDuration, $.sustainedRebufferThreshold = q.sustainedRebufferThreshold, $.playbackHeartbeatTime = q.playbackHeartbeatTime, $.disableRebufferTracking = q.disableRebufferTracking, $.disableRebufferTracking && $.mux.log.warn("Disabling rebuffer tracking. This should only be used in specific circumstances as a last resort when your player is known to unreliably track rebuffering."), $.disablePlayheadRebufferTracking = q.disablePlayheadRebufferTracking, $.errorTranslator = q.errorTranslator, $.emitTranslator = q.emitTranslator, $.stateDataTranslator = q.stateDataTranslator, $.playbackEventDispatcher = new ke(P, q.data.env_key, q), $.data = {
                                player_instance_id: Xt(),
                                mux_sample_rate: q.sampleRate,
                                beacon_domain: q.beaconCollectionDomain || q.beaconDomain
                            }, $.data.view_sequence_number = 1, $.data.player_sequence_number = 1;
                            var Le = function() {
                                typeof this.data.view_start == "undefined" && (this.data.view_start = this.mux.utils.now(), this.emit("viewstart"))
                            }.bind(Kt($));
                            if ($.on("viewinit", function(xe, Ae) {
                                    this._resetVideoData(), this._resetViewData(), this._resetErrorData(), this._updateStateData(), Object.assign(this.data, Ae), this._initializeViewData(), this.one("play", Le), this.one("adbreakstart", Le)
                                }), $.on("videochange", function(xe, Ae) {
                                    this._resetView(Ae)
                                }), $.on("programchange", function(xe, Ae) {
                                    this.data.player_is_paused && this.mux.log.warn("The `programchange` event is intended to be used when the content changes mid playback without the video source changing, however the video is not currently playing. If the video source is changing please use the videochange event otherwise you will lose startup time information."), this._resetView(Object.assign(Ae, {
                                        view_program_changed: !0
                                    })), Le(), this.emit("play"), this.emit("playing")
                                }), $.on("fragmentchange", function(xe, Ae) {
                                    this.currentFragmentPDT = Ae.currentFragmentPDT, this.currentFragmentStart = Ae.currentFragmentStart
                                }), $.on("destroy", $.destroy), typeof window != "undefined" && typeof window.addEventListener == "function" && typeof window.removeEventListener == "function") {
                                var Re = function() {
                                    var xe = typeof $.data.view_start != "undefined";
                                    $.mux.WINDOW_HIDDEN = document.visibilityState === "hidden", xe && $.mux.WINDOW_HIDDEN && ($.data.player_is_paused || $.emit("hb"))
                                };
                                window.addEventListener("visibilitychange", Re, !1);
                                var It = function(xe) {
                                    xe.persisted || $.destroy()
                                };
                                window.addEventListener("pagehide", It, !1), $.on("destroy", function() {
                                    window.removeEventListener("visibilitychange", Re), window.removeEventListener("pagehide", It)
                                })
                            }
                            $.on("playerready", function(xe, Ae) {
                                Object.assign(this.data, Ae)
                            }), rr.forEach(function(xe) {
                                $.on(xe, function(Ae, Ue) {
                                    xe.indexOf("ad") !== 0 && this._updateStateData(), Object.assign(this.data, Ue), this._sanitizeData()
                                }), $.on("after" + xe, function() {
                                    (xe !== "error" || this.errorTracker.viewErrored) && this.send(xe)
                                })
                            }), $.on("viewend", function(xe, Ae) {
                                Object.assign($.data, Ae)
                            });
                            var xt = function(xe) {
                                var Ae = this.mux.utils.now();
                                this.data.player_init_time && (this.data.player_startup_time = Ae - this.data.player_init_time), !this.mux.PLAYER_TRACKED && this.NAVIGATION_START && (this.mux.PLAYER_TRACKED = !0, (this.data.player_init_time || this.DOM_CONTENT_LOADED_EVENT_END) && (this.data.page_load_time = Math.min(this.data.player_init_time || 1 / 0, this.DOM_CONTENT_LOADED_EVENT_END || 1 / 0) - this.NAVIGATION_START)), this.send("playerready"), delete this.data.player_startup_time, delete this.data.page_load_time
                            };
                            return $.one("playerready", xt), $.longResumeTracker = new fr(Kt($)), $.errorTracker = new _n(Kt($)), new Ni(Kt($)), $.seekingTracker = new un(Kt($)), $.playheadTime = new Qr(Kt($)), $.playbackHeartbeat = new Ri(Kt($)), new Ia(Kt($)), $.watchTimeTracker = new Hn(Kt($)), new ln(Kt($)), $.adTracker = new xi(Kt($)), new mi(Kt($)), new Vr(Kt($)), new vi(Kt($)), new gn(Kt($)), new Xe(Kt($)), q.hlsjs && $.addHLSJS(q), q.dashjs && $.addDashJS(q), $.emit("viewinit", q.data), $
                        }
                        return aa(A, [{
                            key: "emit",
                            value: function(P, M) {
                                var q, $ = Object.assign({
                                        viewer_time: this.mux.utils.now()
                                    }, M),
                                    Te = [P, $];
                                if (this.emitTranslator) try {
                                    Te = this.emitTranslator(P, $)
                                } catch (Le) {
                                    this.mux.log.warn("Exception in emit translator callback.", Le)
                                }
                                Te != null && Te.length && (q = Z(ie(A.prototype), "emit", this)).call.apply(q, [this].concat(ti(Te)))
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                this._destroyed || (this._destroyed = !0, typeof this.data.view_start != "undefined" && (this.emit("viewend"), this.send("viewend")), this.playbackEventDispatcher.destroy(), this.removeHLSJS(), this.removeDashJS(), window.clearTimeout(this._heartBeatTimeout))
                            }
                        }, {
                            key: "send",
                            value: function(P) {
                                if (this.data.view_id) {
                                    var M = Object.assign({}, this.data),
                                        q = ["player_program_time", "player_manifest_newest_program_time", "player_live_edge_program_time", "player_program_time", "video_holdback", "video_part_holdback", "video_target_duration", "video_part_target_duration"];
                                    if (M.video_source_is_live === void 0 && (M.player_source_duration === 1 / 0 || M.video_source_duration === 1 / 0 ? M.video_source_is_live = !0 : (M.player_source_duration > 0 || M.video_source_duration > 0) && (M.video_source_is_live = !1)), M.video_source_is_live || q.forEach(function(Re) {
                                            M[Re] = void 0
                                        }), M.video_source_url = M.video_source_url || M.player_source_url, M.video_source_url) {
                                        var $ = Pe(qe(M.video_source_url), 2),
                                            Te = $[0],
                                            Le = $[1];
                                        M.video_source_domain = Le, M.video_source_hostname = Te
                                    }
                                    delete M.ad_request_id, this.playbackEventDispatcher.send(P, M), this.data.view_sequence_number++, this.data.player_sequence_number++, y.has(P) || this._restartHeartBeat(), P === "viewend" && delete this.data.view_id
                                }
                            }
                        }, {
                            key: "_resetView",
                            value: function(P) {
                                this.emit("viewend"), this.send("viewend"), this.emit("viewinit", P)
                            }
                        }, {
                            key: "_updateStateData",
                            value: function() {
                                var P = this.getStateData();
                                if (typeof this.stateDataTranslator == "function") try {
                                    P = this.stateDataTranslator(P)
                                } catch (M) {
                                    this.mux.log.warn("Exception in stateDataTranslator translator callback.", M)
                                }
                                Object.assign(this.data, P), this.playheadTime._updatePlayheadTime(), this._sanitizeData()
                            }
                        }, {
                            key: "_sanitizeData",
                            value: function() {
                                var P = this,
                                    M = ["player_width", "player_height", "video_source_width", "video_source_height", "player_playhead_time", "video_source_bitrate"];
                                M.forEach(function($) {
                                    var Te = parseInt(P.data[$], 10);
                                    P.data[$] = isNaN(Te) ? void 0 : Te
                                });
                                var q = ["player_source_url", "video_source_url"];
                                q.forEach(function($) {
                                    if (P.data[$]) {
                                        var Te = P.data[$].toLowerCase();
                                        (Te.indexOf("data:") === 0 || Te.indexOf("blob:") === 0) && (P.data[$] = "MSE style URL")
                                    }
                                })
                            }
                        }, {
                            key: "_resetVideoData",
                            value: function() {
                                var P = this;
                                Object.keys(this.data).forEach(function(M) {
                                    M.indexOf("video_") === 0 && delete P.data[M]
                                })
                            }
                        }, {
                            key: "_resetViewData",
                            value: function() {
                                var P = this;
                                Object.keys(this.data).forEach(function(M) {
                                    M.indexOf("view_") === 0 && delete P.data[M]
                                }), this.data.view_sequence_number = 1
                            }
                        }, {
                            key: "_resetErrorData",
                            value: function() {
                                delete this.data.player_error_code, delete this.data.player_error_message, delete this.data.player_error_context, delete this.data.player_error_severity, delete this.data.player_error_business_exception
                            }
                        }, {
                            key: "_initializeViewData",
                            value: function() {
                                var P = this,
                                    M = this.data.view_id = Xt(),
                                    q = function() {
                                        M === P.data.view_id && $t(P.data, "player_view_count", 1)
                                    };
                                this.data.player_is_paused ? this.one("play", q) : q()
                            }
                        }, {
                            key: "_restartHeartBeat",
                            value: function() {
                                var P = this;
                                window.clearTimeout(this._heartBeatTimeout), this._heartBeatTimeout = window.setTimeout(function() {
                                    P.data.player_is_paused || P.emit("hb")
                                }, 1e4)
                            }
                        }, {
                            key: "addHLSJS",
                            value: function(P) {
                                if (!P.hlsjs) {
                                    this.mux.log.warn("You must pass a valid hlsjs instance in order to track it.");
                                    return
                                }
                                if (this.hlsjs) {
                                    this.mux.log.warn("An instance of HLS.js is already being monitored for this player.");
                                    return
                                }
                                this.hlsjs = P.hlsjs, Ut(this.mux, this.id, P.hlsjs, {}, P.Hls || window.Hls)
                            }
                        }, {
                            key: "removeHLSJS",
                            value: function() {
                                this.hlsjs && (yi(this.hlsjs), this.hlsjs = void 0)
                            }
                        }, {
                            key: "addDashJS",
                            value: function(P) {
                                if (!P.dashjs) {
                                    this.mux.log.warn("You must pass a valid dashjs instance in order to track it.");
                                    return
                                }
                                if (this.dashjs) {
                                    this.mux.log.warn("An instance of Dash.js is already being monitored for this player.");
                                    return
                                }
                                this.dashjs = P.dashjs, tr(this.mux, this.id, P.dashjs)
                            }
                        }, {
                            key: "removeDashJS",
                            value: function() {
                                this.dashjs && (Tr(this.dashjs), this.dashjs = void 0)
                            }
                        }]), A
                    }(Qi),
                    z = F,
                    be = Q(Ir());

                function pt() {
                    return be.default && !!(be.default.fullscreenElement || be.default.webkitFullscreenElement || be.default.mozFullScreenElement || be.default.msFullscreenElement)
                }
                var Gt = ["loadstart", "pause", "play", "playing", "seeking", "seeked", "timeupdate", "ratechange", "stalled", "waiting", "error", "ended"],
                    pr = {
                        1: "MEDIA_ERR_ABORTED",
                        2: "MEDIA_ERR_NETWORK",
                        3: "MEDIA_ERR_DECODE",
                        4: "MEDIA_ERR_SRC_NOT_SUPPORTED"
                    };

                function nr(k, b, A) {
                    var P = Pe(br(b), 3),
                        M = P[0],
                        q = P[1],
                        $ = P[2],
                        Te = k.log,
                        Le = k.utils.getComputedStyle,
                        Re = k.utils.secondsToMs,
                        It = {
                            automaticErrorTracking: !0
                        };
                    if (M) {
                        if ($ !== "video" && $ !== "audio") return Te.error("The element of `" + q + "` was not a media element.")
                    } else return Te.error("No element was found with the `" + q + "` query selector.");
                    M.mux && (M.mux.destroy(), delete M.mux, Te.warn("Already monitoring this video element, replacing existing event listeners"));
                    var xt = {
                        getPlayheadTime: function() {
                            return Re(M.currentTime)
                        },
                        getStateData: function() {
                            var Ae, Ue, Bt, cr = ((Ae = (Ue = this).getPlayheadTime) === null || Ae === void 0 ? void 0 : Ae.call(Ue)) || Re(M.currentTime),
                                Ur = this.hlsjs && this.hlsjs.url,
                                Pt = this.dashjs && typeof this.dashjs.getSource == "function" && this.dashjs.getSource(),
                                St = {
                                    player_is_paused: M.paused,
                                    player_width: parseInt(Le(M, "width")),
                                    player_height: parseInt(Le(M, "height")),
                                    player_autoplay_on: M.autoplay,
                                    player_preload_on: M.preload,
                                    player_language_code: M.lang,
                                    player_is_fullscreen: pt(),
                                    video_poster_url: M.poster,
                                    video_source_url: Ur || Pt || M.currentSrc,
                                    video_source_duration: Re(M.duration),
                                    video_source_height: M.videoHeight,
                                    video_source_width: M.videoWidth,
                                    view_dropped_frame_count: M == null || (Bt = M.getVideoPlaybackQuality) === null || Bt === void 0 ? void 0 : Bt.call(M).droppedVideoFrames
                                };
                            if (M.getStartDate && cr > 0) {
                                var ut = M.getStartDate();
                                if (ut && typeof ut.getTime == "function" && ut.getTime()) {
                                    var Oe = ut.getTime();
                                    if (St.player_program_time = Oe + cr, M.seekable.length > 0) {
                                        var Mr = Oe + M.seekable.end(M.seekable.length - 1);
                                        St.player_live_edge_program_time = Mr
                                    }
                                }
                            }
                            return St
                        }
                    };
                    A = Object.assign(It, A, xt), A.data = Object.assign({
                        player_software: "HTML5 Video Element",
                        player_mux_plugin_name: "VideoElementMonitor",
                        player_mux_plugin_version: k.VERSION
                    }, A.data), M.mux = M.mux || {}, M.mux.deleted = !1, M.mux.emit = function(Ae, Ue) {
                        k.emit(q, Ae, Ue)
                    }, M.mux.updateData = function(Ae) {
                        M.mux.emit("hb", Ae)
                    };
                    var xe = function() {
                        Te.error("The monitor for this video element has already been destroyed.")
                    };
                    M.mux.destroy = function() {
                        Object.keys(M.mux.listeners).forEach(function(Ae) {
                            M.removeEventListener(Ae, M.mux.listeners[Ae], !1)
                        }), delete M.mux.listeners, M.mux.destroy = xe, M.mux.swapElement = xe, M.mux.emit = xe, M.mux.addHLSJS = xe, M.mux.addDashJS = xe, M.mux.removeHLSJS = xe, M.mux.removeDashJS = xe, M.mux.updateData = xe, M.mux.setEmitTranslator = xe, M.mux.setStateDataTranslator = xe, M.mux.setGetPlayheadTime = xe, M.mux.deleted = !0, k.emit(q, "destroy")
                    }, M.mux.swapElement = function(Ae) {
                        var Ue = Pe(br(Ae), 3),
                            Bt = Ue[0],
                            cr = Ue[1],
                            Ur = Ue[2];
                        if (Bt) {
                            if (Ur !== "video" && Ur !== "audio") return k.log.error("The element of `" + cr + "` was not a media element.")
                        } else return k.log.error("No element was found with the `" + cr + "` query selector.");
                        Bt.muxId = M.muxId, delete M.muxId, Bt.mux = Bt.mux || {}, Bt.mux.listeners = Object.assign({}, M.mux.listeners), delete M.mux.listeners, Object.keys(Bt.mux.listeners).forEach(function(Pt) {
                            M.removeEventListener(Pt, Bt.mux.listeners[Pt], !1), Bt.addEventListener(Pt, Bt.mux.listeners[Pt], !1)
                        }), Bt.mux.swapElement = M.mux.swapElement, Bt.mux.destroy = M.mux.destroy, delete M.mux, M = Bt
                    }, M.mux.addHLSJS = function(Ae) {
                        k.addHLSJS(q, Ae)
                    }, M.mux.addDashJS = function(Ae) {
                        k.addDashJS(q, Ae)
                    }, M.mux.removeHLSJS = function() {
                        k.removeHLSJS(q)
                    }, M.mux.removeDashJS = function() {
                        k.removeDashJS(q)
                    }, M.mux.setEmitTranslator = function(Ae) {
                        k.setEmitTranslator(q, Ae)
                    }, M.mux.setStateDataTranslator = function(Ae) {
                        k.setStateDataTranslator(q, Ae)
                    }, M.mux.setGetPlayheadTime = function(Ae) {
                        Ae || (Ae = A.getPlayheadTime), k.setGetPlayheadTime(q, Ae)
                    }, k.init(q, A), k.emit(q, "playerready"), M.paused || (k.emit(q, "play"), M.readyState > 2 && k.emit(q, "playing")), M.mux.listeners = {}, Gt.forEach(function(Ae) {
                        Ae === "error" && !A.automaticErrorTracking || (M.mux.listeners[Ae] = function() {
                            var Ue = {};
                            if (Ae === "error") {
                                if (!M.error || M.error.code === 1) return;
                                Ue.player_error_code = M.error.code, Ue.player_error_message = pr[M.error.code] || M.error.message
                            }
                            k.emit(q, Ae, Ue)
                        }, M.addEventListener(Ae, M.mux.listeners[Ae], !1))
                    })
                }

                function Zt(k, b, A, P) {
                    var M = P;
                    if (k && typeof k[b] == "function") try {
                        M = k[b].apply(k, A)
                    } catch (q) {
                        Cr.info("safeCall error", q)
                    }
                    return M
                }
                var wi = Q(ot()),
                    qi;
                wi.default && wi.default.WeakMap && (qi = new WeakMap);

                function _t(k, b) {
                    if (!k || !b || !wi.default || typeof wi.default.getComputedStyle != "function") return "";
                    var A;
                    return qi && qi.has(k) && (A = qi.get(k)), A || (A = wi.default.getComputedStyle(k, null), qi && qi.set(k, A)), A.getPropertyValue(b)
                }

                function Qt(k) {
                    return Math.floor(k * 1e3)
                }
                var yr = {
                        TARGET_DURATION: "#EXT-X-TARGETDURATION",
                        PART_INF: "#EXT-X-PART-INF",
                        SERVER_CONTROL: "#EXT-X-SERVER-CONTROL",
                        INF: "#EXTINF",
                        PROGRAM_DATE_TIME: "#EXT-X-PROGRAM-DATE-TIME",
                        VERSION: "#EXT-X-VERSION",
                        SESSION_DATA: "#EXT-X-SESSION-DATA"
                    },
                    gi = function(k) {
                        return this.buffer = "", this.manifest = {
                            segments: [],
                            serverControl: {},
                            sessionData: {}
                        }, this.currentUri = {}, this.process(k), this.manifest
                    };
                gi.prototype.process = function(k) {
                    var b;
                    for (this.buffer += k, b = this.buffer.indexOf(`
`); b > -1; b = this.buffer.indexOf(`
`)) this.processLine(this.buffer.substring(0, b)), this.buffer = this.buffer.substring(b + 1)
                }, gi.prototype.processLine = function(k) {
                    var b = k.indexOf(":"),
                        A = ys(k, b),
                        P = A[0],
                        M = A.length === 2 ? ua(A[1]) : void 0;
                    if (P[0] !== "#") this.currentUri.uri = P, this.manifest.segments.push(this.currentUri), this.manifest.targetDuration && !("duration" in this.currentUri) && (this.currentUri.duration = this.manifest.targetDuration), this.currentUri = {};
                    else switch (P) {
                        case yr.TARGET_DURATION:
                            {
                                if (!isFinite(M) || M < 0) return;this.manifest.targetDuration = M,
                                this.setHoldBack();
                                break
                            }
                        case yr.PART_INF:
                            {
                                $i(this.manifest, A),
                                this.manifest.partInf.partTarget && (this.manifest.partTargetDuration = this.manifest.partInf.partTarget),
                                this.setHoldBack();
                                break
                            }
                        case yr.SERVER_CONTROL:
                            {
                                $i(this.manifest, A),
                                this.setHoldBack();
                                break
                            }
                        case yr.INF:
                            {
                                M === 0 ? this.currentUri.duration = .01 : M > 0 && (this.currentUri.duration = M);
                                break
                            }
                        case yr.PROGRAM_DATE_TIME:
                            {
                                var q = M,
                                    $ = new Date(q);this.manifest.dateTimeString || (this.manifest.dateTimeString = q, this.manifest.dateTimeObject = $),
                                this.currentUri.dateTimeString = q,
                                this.currentUri.dateTimeObject = $;
                                break
                            }
                        case yr.VERSION:
                            {
                                $i(this.manifest, A);
                                break
                            }
                        case yr.SESSION_DATA:
                            {
                                var Te = Jt(A[1]),
                                    Le = Lr(Te);Object.assign(this.manifest.sessionData, Le)
                            }
                    }
                }, gi.prototype.setHoldBack = function() {
                    var k = this.manifest,
                        b = k.serverControl,
                        A = k.targetDuration,
                        P = k.partTargetDuration;
                    if (b) {
                        var M = "holdBack",
                            q = "partHoldBack",
                            $ = A && A * 3,
                            Te = P && P * 2;
                        A && !b.hasOwnProperty(M) && (b[M] = $), $ && b[M] < $ && (b[M] = $), P && !b.hasOwnProperty(q) && (b[q] = P * 3), P && b[q] < Te && (b[q] = Te)
                    }
                };
                var $i = function(k, b) {
                        var A = dn(b[0].replace("#EXT-X-", "")),
                            P;
                        ji(b[1]) ? (P = {}, P = Object.assign(ga(b[1]), P)) : P = ua(b[1]), k[A] = P
                    },
                    dn = function(k) {
                        return k.toLowerCase().replace(/-(\w)/g, function(b) {
                            return b[1].toUpperCase()
                        })
                    },
                    ua = function(k) {
                        if (k.toLowerCase() === "yes" || k.toLowerCase() === "no") return k.toLowerCase() === "yes";
                        var b = k.indexOf(":") !== -1 ? k : parseFloat(k);
                        return isNaN(b) ? k : b
                    },
                    da = function(k) {
                        var b = {},
                            A = k.split("=");
                        if (A.length > 1) {
                            var P = dn(A[0]);
                            b[P] = ua(A[1])
                        }
                        return b
                    },
                    ga = function(k) {
                        for (var b = k.split(","), A = {}, P = 0; b.length > P; P++) {
                            var M = b[P],
                                q = da(M);
                            A = Object.assign(q, A)
                        }
                        return A
                    },
                    ji = function(k) {
                        return k.indexOf("=") > -1
                    },
                    ys = function(k, b) {
                        return b === -1 ? [k] : [k.substring(0, b), k.substring(b + 1)]
                    },
                    Jt = function(k) {
                        var b = {};
                        if (k) {
                            var A = k.search(","),
                                P = k.slice(0, A),
                                M = k.slice(A + 1),
                                q = [P, M];
                            return q.forEach(function($, Te) {
                                for (var Le = $.replace(/['"]+/g, "").split("="), Re = 0; Re < Le.length; Re++) Le[Re] === "DATA-ID" && (b["DATA-ID"] = Le[1 - Re]), Le[Re] === "VALUE" && (b.VALUE = Le[1 - Re])
                            }), {
                                data: b
                            }
                        }
                    },
                    Dr = gi,
                    Ai = {
                        safeCall: Zt,
                        safeIncrement: $t,
                        getComputedStyle: _t,
                        secondsToMs: Qt,
                        assign: Object.assign,
                        headersStringToObject: Ze,
                        cdnHeadersToRequestId: sr,
                        extractHostnameAndDomain: qe,
                        extractHostname: gt,
                        manifestParser: Dr,
                        generateShortID: W,
                        generateUUID: Xt,
                        now: Er.now,
                        findMediaElement: br
                    },
                    $r = Ai,
                    _i = {
                        PLAYER_READY: "playerready",
                        VIEW_INIT: "viewinit",
                        VIDEO_CHANGE: "videochange",
                        PLAY: "play",
                        PAUSE: "pause",
                        PLAYING: "playing",
                        TIME_UPDATE: "timeupdate",
                        SEEKING: "seeking",
                        SEEKED: "seeked",
                        REBUFFER_START: "rebufferstart",
                        REBUFFER_END: "rebufferend",
                        ERROR: "error",
                        ENDED: "ended",
                        RENDITION_CHANGE: "renditionchange",
                        ORIENTATION_CHANGE: "orientationchange",
                        AD_REQUEST: "adrequest",
                        AD_RESPONSE: "adresponse",
                        AD_BREAK_START: "adbreakstart",
                        AD_PLAY: "adplay",
                        AD_PLAYING: "adplaying",
                        AD_PAUSE: "adpause",
                        AD_FIRST_QUARTILE: "adfirstquartile",
                        AD_MID_POINT: "admidpoint",
                        AD_THIRD_QUARTILE: "adthirdquartile",
                        AD_ENDED: "adended",
                        AD_BREAK_END: "adbreakend",
                        AD_ERROR: "aderror",
                        REQUEST_COMPLETED: "requestcompleted",
                        REQUEST_FAILED: "requestfailed",
                        REQUEST_CANCELLED: "requestcanceled",
                        HEARTBEAT: "hb",
                        DESTROY: "destroy"
                    },
                    ka = _i,
                    $a = "mux-embed",
                    wn = "5.9.0",
                    Eo = "2.1",
                    ci = {},
                    ja = function(k) {
                        var b = arguments;
                        typeof k == "string" ? ja.hasOwnProperty(k) ? st.default.setTimeout(function() {
                            b = Array.prototype.splice.call(b, 1), ja[k].apply(null, b)
                        }, 0) : Cr.warn("`" + k + "` is an unknown task") : typeof k == "function" ? st.default.setTimeout(function() {
                            k(ja)
                        }, 0) : Cr.warn("`" + k + "` is invalid.")
                    },
                    Wn = {
                        loaded: Er.now(),
                        NAME: $a,
                        VERSION: wn,
                        API_VERSION: Eo,
                        PLAYER_TRACKED: !1,
                        monitor: function(k, b) {
                            return nr(ja, k, b)
                        },
                        destroyMonitor: function(k) {
                            var b = Pe(br(k), 1),
                                A = b[0];
                            A && A.mux && typeof A.mux.destroy == "function" ? A.mux.destroy() : Cr.error("A video element monitor for `" + k + "` has not been initialized via `mux.monitor`.")
                        },
                        addHLSJS: function(k, b) {
                            var A = Zr(k);
                            ci[A] ? ci[A].addHLSJS(b) : Cr.error("A monitor for `" + A + "` has not been initialized.")
                        },
                        addDashJS: function(k, b) {
                            var A = Zr(k);
                            ci[A] ? ci[A].addDashJS(b) : Cr.error("A monitor for `" + A + "` has not been initialized.")
                        },
                        removeHLSJS: function(k) {
                            var b = Zr(k);
                            ci[b] ? ci[b].removeHLSJS() : Cr.error("A monitor for `" + b + "` has not been initialized.")
                        },
                        removeDashJS: function(k) {
                            var b = Zr(k);
                            ci[b] ? ci[b].removeDashJS() : Cr.error("A monitor for `" + b + "` has not been initialized.")
                        },
                        init: function(k, b) {
                            Gr() && b && b.respectDoNotTrack && Cr.info("The browser's Do Not Track flag is enabled - Mux beaconing is disabled.");
                            var A = Zr(k);
                            ci[A] = new z(ja, A, b)
                        },
                        emit: function(k, b, A) {
                            var P = Zr(k);
                            ci[P] ? (ci[P].emit(b, A), b === "destroy" && delete ci[P]) : Cr.error("A monitor for `" + P + "` has not been initialized.")
                        },
                        updateData: function(k, b) {
                            var A = Zr(k);
                            ci[A] ? ci[A].emit("hb", b) : Cr.error("A monitor for `" + A + "` has not been initialized.")
                        },
                        setEmitTranslator: function(k, b) {
                            var A = Zr(k);
                            ci[A] ? ci[A].emitTranslator = b : Cr.error("A monitor for `" + A + "` has not been initialized.")
                        },
                        setStateDataTranslator: function(k, b) {
                            var A = Zr(k);
                            ci[A] ? ci[A].stateDataTranslator = b : Cr.error("A monitor for `" + A + "` has not been initialized.")
                        },
                        setGetPlayheadTime: function(k, b) {
                            var A = Zr(k);
                            ci[A] ? ci[A].getPlayheadTime = b : Cr.error("A monitor for `" + A + "` has not been initialized.")
                        },
                        checkDoNotTrack: Gr,
                        log: Cr,
                        utils: $r,
                        events: ka,
                        WINDOW_HIDDEN: !1,
                        WINDOW_UNLOADING: !1
                    };
                Object.assign(ja, Wn), typeof st.default != "undefined" && typeof st.default.addEventListener == "function" && st.default.addEventListener("pagehide", function(k) {
                    k.persisted || (ja.WINDOW_UNLOADING = !0)
                }, !1);
                var Qn = ja;
                /*!
                 * JavaScript Cookie v2.1.3
                 * https://github.com/js-cookie/js-cookie
                 *
                 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
                 * Released under the MIT license
                 */
            },
            64624: (wt, Me, we) => {
                var je;
                /*! Player.js - v0.1.0 - 2017-10-24
                 * http://github.com/embedly/player.js
                 * Copyright (c) 2017 Embedly; Licensed BSD */
                (function(Ee, Je) {
                    var Y = {};
                    Y.DEBUG = !1, Y.VERSION = "0.0.11", Y.CONTEXT = "player.js", Y.POST_MESSAGE = !!Ee.postMessage, Y.origin = function(x) {
                        return x.substr(0, 2) === "//" && (x = Ee.location.protocol + x), x.split("/").slice(0, 3).join("/")
                    }, Y.addEvent = function(x, K, Q) {
                        x && (x.addEventListener ? x.addEventListener(K, Q, !1) : x.attachEvent ? x.attachEvent("on" + K, Q) : x["on" + K] = Q)
                    }, Y.log = function() {
                        Y.log.history = Y.log.history || [], Y.log.history.push(arguments), Ee.console && Y.DEBUG && Ee.console.log(Array.prototype.slice.call(arguments))
                    }, Y.isString = function(x) {
                        return Object.prototype.toString.call(x) === "[object String]"
                    }, Y.isObject = function(x) {
                        return Object.prototype.toString.call(x) === "[object Object]"
                    }, Y.isArray = function(x) {
                        return Object.prototype.toString.call(x) === "[object Array]"
                    }, Y.isNone = function(x) {
                        return x == null
                    }, Y.has = function(x, K) {
                        return Object.prototype.hasOwnProperty.call(x, K)
                    }, Y.indexOf = function(x, K) {
                        if (x == null) return -1;
                        var Q = 0,
                            he = x.length;
                        if (Array.prototype.IndexOf && x.indexOf === Array.prototype.IndexOf) return x.indexOf(K);
                        for (; Q < he; Q++)
                            if (x[Q] === K) return Q;
                        return -1
                    }, Y.assert = function(x, K) {
                        if (!x) throw K || "Player.js Assert Failed"
                    }, Y.Keeper = function() {
                        this.init()
                    }, Y.Keeper.prototype.init = function() {
                        this.data = {}
                    }, Y.Keeper.prototype.getUUID = function() {
                        return "listener-xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, function(x) {
                            var K = Math.random() * 16 | 0,
                                Q = x === "x" ? K : K & 3 | 8;
                            return Q.toString(16)
                        })
                    }, Y.Keeper.prototype.has = function(x, K) {
                        if (!this.data.hasOwnProperty(x)) return !1;
                        if (Y.isNone(K)) return !0;
                        for (var Q = this.data[x], he = 0; he < Q.length; he++)
                            if (Q[he].id === K) return !0;
                        return !1
                    }, Y.Keeper.prototype.add = function(x, K, Q, he, ot) {
                        var it = {
                            id: x,
                            event: K,
                            cb: Q,
                            ctx: he,
                            one: ot
                        };
                        this.has(K) ? this.data[K].push(it) : this.data[K] = [it]
                    }, Y.Keeper.prototype.execute = function(x, K, Q, he) {
                        if (!this.has(x, K)) return !1;
                        for (var ot = [], it = [], Rt = 0; Rt < this.data[x].length; Rt++) {
                            var Ft = this.data[x][Rt];
                            Y.isNone(K) || !Y.isNone(K) && Ft.id === K ? (it.push({
                                cb: Ft.cb,
                                ctx: Ft.ctx ? Ft.ctx : he,
                                data: Q
                            }), Ft.one === !1 && ot.push(Ft)) : ot.push(Ft)
                        }
                        ot.length === 0 ? delete this.data[x] : this.data[x] = ot;
                        for (var Dt = 0; Dt < it.length; Dt++) {
                            var dt = it[Dt];
                            dt.cb.call(dt.ctx, dt.data)
                        }
                    }, Y.Keeper.prototype.on = function(x, K, Q, he) {
                        this.add(x, K, Q, he, !1)
                    }, Y.Keeper.prototype.one = function(x, K, Q, he) {
                        this.add(x, K, Q, he, !0)
                    }, Y.Keeper.prototype.off = function(x, K) {
                        var Q = [];
                        if (!this.data.hasOwnProperty(x)) return Q;
                        for (var he = [], ot = 0; ot < this.data[x].length; ot++) {
                            var it = this.data[x][ot];
                            !Y.isNone(K) && it.cb !== K ? he.push(it) : Y.isNone(it.id) || Q.push(it.id)
                        }
                        return he.length === 0 ? delete this.data[x] : this.data[x] = he, Q
                    }, Y.Player = function(x, K) {
                        if (!(this instanceof Y.Player)) return new Y.Player(x, K);
                        this.init(x, K)
                    }, Y.EVENTS = {
                        READY: "ready",
                        PLAY: "play",
                        PAUSE: "pause",
                        ENDED: "ended",
                        TIMEUPDATE: "timeupdate",
                        PROGRESS: "progress",
                        ERROR: "error"
                    }, Y.EVENTS.all = function() {
                        var x = [];
                        for (var K in Y.EVENTS) Y.has(Y.EVENTS, K) && Y.isString(Y.EVENTS[K]) && x.push(Y.EVENTS[K]);
                        return x
                    }, Y.METHODS = {
                        PLAY: "play",
                        PAUSE: "pause",
                        GETPAUSED: "getPaused",
                        MUTE: "mute",
                        UNMUTE: "unmute",
                        GETMUTED: "getMuted",
                        SETVOLUME: "setVolume",
                        GETVOLUME: "getVolume",
                        GETDURATION: "getDuration",
                        SETCURRENTTIME: "setCurrentTime",
                        GETCURRENTTIME: "getCurrentTime",
                        SETLOOP: "setLoop",
                        GETLOOP: "getLoop",
                        REMOVEEVENTLISTENER: "removeEventListener",
                        ADDEVENTLISTENER: "addEventListener"
                    }, Y.METHODS.all = function() {
                        var x = [];
                        for (var K in Y.METHODS) Y.has(Y.METHODS, K) && Y.isString(Y.METHODS[K]) && x.push(Y.METHODS[K]);
                        return x
                    }, Y.READIED = [], Y.Player.prototype.init = function(x, K) {
                        var Q = this;
                        Y.isString(x) && (x = Je.getElementById(x)), this.elem = x, Y.assert(x.nodeName === "IFRAME", 'playerjs.Player constructor requires an Iframe, got "' + x.nodeName + '"'), Y.assert(x.src, "playerjs.Player constructor requires a Iframe with a 'src' attribute."), this.origin = Y.origin(x.src), this.keeper = new Y.Keeper, this.isReady = !1, this.queue = [], this.events = Y.EVENTS.all(), this.methods = Y.METHODS.all(), Y.POST_MESSAGE ? Y.addEvent(Ee, "message", function(he) {
                            Q.receive(he)
                        }) : Y.log("Post Message is not Available."), Y.indexOf(Y.READIED, x.src) > -1 ? Q.loaded = !0 : this.elem.onload = function() {
                            Q.loaded = !0
                        }
                    }, Y.Player.prototype.send = function(x, K, Q) {
                        if (x.context = Y.CONTEXT, x.version = Y.VERSION, K) {
                            var he = this.keeper.getUUID();
                            x.listener = he, this.keeper.one(he, x.method, K, Q)
                        }
                        return !this.isReady && x.value !== "ready" ? (Y.log("Player.queue", x), this.queue.push(x), !1) : (Y.log("Player.send", x, this.origin), this.loaded === !0 && this.elem.contentWindow.postMessage(JSON.stringify(x), this.origin), !0)
                    }, Y.Player.prototype.receive = function(x) {
                        if (Y.log("Player.receive", x), x.origin !== this.origin) return !1;
                        var K;
                        try {
                            K = JSON.parse(x.data)
                        } catch (Q) {
                            return !1
                        }
                        if (K.context !== Y.CONTEXT) return !1;
                        K.event === "ready" && K.value && K.value.src === this.elem.src && this.ready(K), this.keeper.has(K.event, K.listener) && this.keeper.execute(K.event, K.listener, K.value, this)
                    }, Y.Player.prototype.ready = function(x) {
                        if (this.isReady === !0) return !1;
                        x.value.events && (this.events = x.value.events), x.value.methods && (this.methods = x.value.methods), this.isReady = !0, this.loaded = !0;
                        for (var K = 0; K < this.queue.length; K++) {
                            var Q = this.queue[K];
                            Y.log("Player.dequeue", Q), x.event === "ready" && this.keeper.execute(Q.event, Q.listener, !0, this), this.send(Q)
                        }
                        this.queue = []
                    }, Y.Player.prototype.on = function(x, K, Q) {
                        var he = this.keeper.getUUID();
                        return x === "ready" ? this.keeper.one(he, x, K, Q) : this.keeper.on(he, x, K, Q), this.send({
                            method: "addEventListener",
                            value: x,
                            listener: he
                        }), !0
                    }, Y.Player.prototype.off = function(x, K) {
                        var Q = this.keeper.off(x, K);
                        if (Y.log("Player.off", Q), Q.length > 0)
                            for (var he in Q) return this.send({
                                method: "removeEventListener",
                                value: x,
                                listener: Q[he]
                            }), !0;
                        return !1
                    }, Y.Player.prototype.supports = function(x, K) {
                        Y.assert(Y.indexOf(["method", "event"], x) > -1, 'evtOrMethod needs to be either "event" or "method" got ' + x), K = Y.isArray(K) ? K : [K];
                        for (var Q = x === "event" ? this.events : this.methods, he = 0; he < K.length; he++)
                            if (Y.indexOf(Q, K[he]) === -1) return !1;
                        return !0
                    };

                    function Ct(x) {
                        return function() {
                            var K = {
                                    method: x
                                },
                                Q = Array.prototype.slice.call(arguments);
                            /^get/.test(x) ? (Y.assert(Q.length > 0, "Get methods require a callback."), Q.unshift(K)) : (/^set/.test(x) && (Y.assert(Q.length !== 0, "Set methods require a value."), K.value = Q[0]), Q = [K]), this.send.apply(this, Q)
                        }
                    }
                    for (var tt = 0, mt = Y.METHODS.all().length; tt < mt; tt++) {
                        var le = Y.METHODS.all()[tt];
                        Y.Player.prototype.hasOwnProperty(le) || (Y.Player.prototype[le] = Ct(le))
                    }
                    Y.addEvent(Ee, "message", function(x) {
                        var K;
                        try {
                            K = JSON.parse(x.data)
                        } catch (Q) {
                            return !1
                        }
                        if (K.context !== Y.CONTEXT) return !1;
                        K.event === "ready" && K.value && K.value.src && Y.READIED.push(K.value.src)
                    }), Y.Receiver = function(x, K) {
                        this.init(x, K)
                    }, Y.Receiver.prototype.init = function(x, K) {
                        var Q = this;
                        this.isReady = !1, this.origin = Y.origin(Je.referrer), this.methods = {}, this.supported = {
                            events: x || Y.EVENTS.all(),
                            methods: K || Y.METHODS.all()
                        }, this.eventListeners = {}, this.reject = !(Ee.self !== Ee.top && Y.POST_MESSAGE), this.reject || Y.addEvent(Ee, "message", function(he) {
                            Q.receive(he)
                        })
                    }, Y.Receiver.prototype.receive = function(x) {
                        if (x.origin !== this.origin) return !1;
                        var K = {};
                        if (Y.isObject(x.data)) K = x.data;
                        else try {
                            K = Ee.JSON.parse(x.data)
                        } catch (ot) {
                            Y.log("JSON Parse Error", ot)
                        }
                        if (Y.log("Receiver.receive", x, K), !K.method || K.context !== Y.CONTEXT) return !1;
                        if (Y.indexOf(Y.METHODS.all(), K.method) === -1) return this.emit("error", {
                            code: 2,
                            msg: 'Invalid Method "' + K.method + '"'
                        }), !1;
                        var Q = Y.isNone(K.listener) ? null : K.listener;
                        if (K.method === "addEventListener") this.eventListeners.hasOwnProperty(K.value) ? Y.indexOf(this.eventListeners[K.value], Q) === -1 && this.eventListeners[K.value].push(Q) : this.eventListeners[K.value] = [Q], K.value === "ready" && this.isReady && this.ready();
                        else if (K.method === "removeEventListener") {
                            if (this.eventListeners.hasOwnProperty(K.value)) {
                                var he = Y.indexOf(this.eventListeners[K.value], Q);
                                he > -1 && this.eventListeners[K.value].splice(he, 1), this.eventListeners[K.value].length === 0 && delete this.eventListeners[K.value]
                            }
                        } else this.get(K.method, K.value, Q)
                    }, Y.Receiver.prototype.get = function(x, K, Q) {
                        var he = this;
                        if (!this.methods.hasOwnProperty(x)) return this.emit("error", {
                            code: 3,
                            msg: 'Method Not Supported"' + x + '"'
                        }), !1;
                        var ot = this.methods[x];
                        if (x.substr(0, 3) === "get") {
                            var it = function(Rt) {
                                he.send(x, Rt, Q)
                            };
                            ot.call(this, it)
                        } else ot.call(this, K)
                    }, Y.Receiver.prototype.on = function(x, K) {
                        this.methods[x] = K
                    }, Y.Receiver.prototype.send = function(x, K, Q) {
                        if (Y.log("Receiver.send", x, K, Q), this.reject) return Y.log("Receiver.send.reject", x, K, Q), !1;
                        var he = {
                            context: Y.CONTEXT,
                            version: Y.VERSION,
                            event: x
                        };
                        Y.isNone(K) || (he.value = K), Y.isNone(Q) || (he.listener = Q);
                        var ot = JSON.stringify(he);
                        Ee.parent.postMessage(ot, this.origin === "" ? "*" : this.origin)
                    }, Y.Receiver.prototype.emit = function(x, K) {
                        if (!this.eventListeners.hasOwnProperty(x)) return !1;
                        Y.log("Instance.emit", x, K, this.eventListeners[x]);
                        for (var Q = 0; Q < this.eventListeners[x].length; Q++) {
                            var he = this.eventListeners[x][Q];
                            this.send(x, K, he)
                        }
                        return !0
                    }, Y.Receiver.prototype.ready = function() {
                        Y.log("Receiver.ready"), this.isReady = !0;
                        var x = {
                            src: Ee.location.toString(),
                            events: this.supported.events,
                            methods: this.supported.methods
                        };
                        this.emit("ready", x) || this.send("ready", x)
                    }, Y.HTML5Adapter = function(x) {
                        if (!(this instanceof Y.HTML5Adapter)) return new Y.HTML5Adapter(x);
                        this.init(x)
                    }, Y.HTML5Adapter.prototype.init = function(x) {
                        Y.assert(x, "playerjs.HTML5Adapter requires a video element");
                        var K = this.receiver = new Y.Receiver;
                        x.addEventListener("playing", function() {
                            K.emit("play")
                        }), x.addEventListener("pause", function() {
                            K.emit("pause")
                        }), x.addEventListener("ended", function() {
                            K.emit("ended")
                        }), x.addEventListener("timeupdate", function() {
                            K.emit("timeupdate", {
                                seconds: x.currentTime,
                                duration: x.duration
                            })
                        }), x.addEventListener("progress", function() {
                            K.emit("buffered", {
                                percent: x.buffered.length
                            })
                        }), K.on("play", function() {
                            x.play()
                        }), K.on("pause", function() {
                            x.pause()
                        }), K.on("getPaused", function(Q) {
                            Q(x.paused)
                        }), K.on("getCurrentTime", function(Q) {
                            Q(x.currentTime)
                        }), K.on("setCurrentTime", function(Q) {
                            x.currentTime = Q
                        }), K.on("getDuration", function(Q) {
                            Q(x.duration)
                        }), K.on("getVolume", function(Q) {
                            Q(x.volume * 100)
                        }), K.on("setVolume", function(Q) {
                            x.volume = Q / 100
                        }), K.on("mute", function() {
                            x.muted = !0
                        }), K.on("unmute", function() {
                            x.muted = !1
                        }), K.on("getMuted", function(Q) {
                            Q(x.muted)
                        }), K.on("getLoop", function(Q) {
                            Q(x.loop)
                        }), K.on("setLoop", function(Q) {
                            x.loop = Q
                        })
                    }, Y.HTML5Adapter.prototype.ready = function() {
                        this.receiver.ready()
                    }, Y.JWPlayerAdapter = function(x) {
                        if (!(this instanceof Y.JWPlayerAdapter)) return new Y.JWPlayerAdapter(x);
                        this.init(x)
                    }, Y.JWPlayerAdapter.prototype.init = function(x) {
                        Y.assert(x, "playerjs.JWPlayerAdapter requires a player object");
                        var K = this.receiver = new Y.Receiver;
                        this.looped = !1, x.on("pause", function() {
                            K.emit("pause")
                        }), x.on("play", function() {
                            K.emit("play")
                        }), x.on("time", function(he) {
                            var ot = he.position,
                                it = he.duration;
                            if (!ot || !it) return !1;
                            var Rt = {
                                seconds: ot,
                                duration: it
                            };
                            K.emit("timeupdate", Rt)
                        });
                        var Q = this;
                        x.on("complete", function() {
                            Q.looped === !0 ? x.seek(0) : K.emit("ended")
                        }), x.on("error", function() {
                            K.emit("error")
                        }), K.on("play", function() {
                            x.play(!0)
                        }), K.on("pause", function() {
                            x.pause(!0)
                        }), K.on("getPaused", function(he) {
                            he(x.getState().toLowerCase() !== "PLAYING".toLowerCase())
                        }), K.on("getCurrentTime", function(he) {
                            he(x.getPosition())
                        }), K.on("setCurrentTime", function(he) {
                            x.seek(he)
                        }), K.on("getDuration", function(he) {
                            he(x.getDuration())
                        }), K.on("getVolume", function(he) {
                            he(x.getVolume())
                        }), K.on("setVolume", function(he) {
                            x.setVolume(he)
                        }), K.on("mute", function() {
                            x.setMute(!0)
                        }), K.on("unmute", function() {
                            x.setMute(!1)
                        }), K.on("getMuted", function(he) {
                            he(x.getMute() === !0)
                        }), K.on("getLoop", function(he) {
                            he(this.looped)
                        }, this), K.on("setLoop", function(he) {
                            this.looped = he
                        }, this)
                    }, Y.JWPlayerAdapter.prototype.ready = function() {
                        this.receiver.ready()
                    }, Y.MockAdapter = function() {
                        if (!(this instanceof Y.MockAdapter)) return new Y.MockAdapter;
                        this.init()
                    }, Y.MockAdapter.prototype.init = function() {
                        var x = {
                                duration: 20,
                                currentTime: 0,
                                interval: null,
                                timeupdate: function() {},
                                volume: 100,
                                mute: !1,
                                playing: !1,
                                loop: !1,
                                play: function() {
                                    x.interval = setInterval(function() {
                                        x.currentTime += .25, x.timeupdate({
                                            seconds: x.currentTime,
                                            duration: x.duration
                                        })
                                    }, 250), x.playing = !0
                                },
                                pause: function() {
                                    clearInterval(x.interval), x.playing = !1
                                }
                            },
                            K = this.receiver = new Y.Receiver;
                        K.on("play", function() {
                            var Q = this;
                            x.play(), this.emit("play"), x.timeupdate = function(he) {
                                Q.emit("timeupdate", he)
                            }
                        }), K.on("pause", function() {
                            x.pause(), this.emit("pause")
                        }), K.on("getPaused", function(Q) {
                            Q(!x.playing)
                        }), K.on("getCurrentTime", function(Q) {
                            Q(x.currentTime)
                        }), K.on("setCurrentTime", function(Q) {
                            x.currentTime = Q
                        }), K.on("getDuration", function(Q) {
                            Q(x.duration)
                        }), K.on("getVolume", function(Q) {
                            Q(x.volume)
                        }), K.on("setVolume", function(Q) {
                            x.volume = Q
                        }), K.on("mute", function() {
                            x.mute = !0
                        }), K.on("unmute", function() {
                            x.mute = !1
                        }), K.on("getMuted", function(Q) {
                            Q(x.mute)
                        }), K.on("getLoop", function(Q) {
                            Q(x.loop)
                        }), K.on("setLoop", function(Q) {
                            x.loop = Q
                        })
                    }, Y.MockAdapter.prototype.ready = function() {
                        this.receiver.ready()
                    }, Y.VideoJSAdapter = function(x) {
                        if (!(this instanceof Y.VideoJSAdapter)) return new Y.VideoJSAdapter(x);
                        this.init(x)
                    }, Y.VideoJSAdapter.prototype.init = function(x) {
                        Y.assert(x, "playerjs.VideoJSReceiver requires a player object");
                        var K = this.receiver = new Y.Receiver;
                        x.on("pause", function() {
                            K.emit("pause")
                        }), x.on("play", function() {
                            K.emit("play")
                        }), x.on("timeupdate", function(Q) {
                            var he = x.currentTime(),
                                ot = x.duration();
                            if (!he || !ot) return !1;
                            var it = {
                                seconds: he,
                                duration: ot
                            };
                            K.emit("timeupdate", it)
                        }), x.on("ended", function() {
                            K.emit("ended")
                        }), x.on("error", function() {
                            K.emit("error")
                        }), K.on("play", function() {
                            x.play()
                        }), K.on("pause", function() {
                            x.pause()
                        }), K.on("getPaused", function(Q) {
                            Q(x.paused())
                        }), K.on("getCurrentTime", function(Q) {
                            Q(x.currentTime())
                        }), K.on("setCurrentTime", function(Q) {
                            x.currentTime(Q)
                        }), K.on("getDuration", function(Q) {
                            Q(x.duration())
                        }), K.on("getVolume", function(Q) {
                            Q(x.volume() * 100)
                        }), K.on("setVolume", function(Q) {
                            x.volume(Q / 100)
                        }), K.on("mute", function() {
                            x.volume(0)
                        }), K.on("unmute", function() {
                            x.volume(1)
                        }), K.on("getMuted", function(Q) {
                            Q(x.volume() === 0)
                        }), K.on("getLoop", function(Q) {
                            Q(x.loop())
                        }), K.on("setLoop", function(Q) {
                            x.loop(Q)
                        })
                    }, Y.VideoJSAdapter.prototype.ready = function() {
                        this.receiver.ready()
                    }, je = function() {
                        return Y
                    }.call(Me, we, Me, wt), je !== void 0 && (wt.exports = je)
                })(window, document)
            },
            71177: (wt, Me, we) => {
                "use strict";
                var je = we(89249);
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                }), Me.default = void 0;
                var Ee = je(we(66326)),
                    Je = je(we(29296)),
                    Y = je(we(64624)),
                    Ct = Me.default = function() {
                        function tt(mt, le) {
                            (0, Ee.default)(this, tt);
                            var x = le == null ? void 0 : le.id;
                            if (mt.nodeName !== "IFRAME" && x) {
                                var K = mt.querySelector("iframe");
                                K || (K = this.embedVideo(mt));
                                var Q = "".concat(x).concat(x.includes("?") ? "&" : "?", "embed_type=typeform&autoplay=false");
                                K.setAttribute("allow", "camera *; microphone *; autoplay *; encrypted-media *; fullscreen *; display-capture *;"), K.setAttribute("style", "border: none"), K.setAttribute("title", "Player"), K.setAttribute("src", Q), this.player = new Y.default.Player(K)
                            }
                        }
                        return (0, Je.default)(tt, [{
                            key: "embedVideo",
                            value: function(le) {
                                var x = document.createElement("iframe");
                                return le.appendChild(x), x
                            }
                        }, {
                            key: "pause",
                            value: function() {
                                this.player.pause()
                            }
                        }, {
                            key: "play",
                            value: function() {
                                this.player.play()
                            }
                        }])
                    }()
            },
            71184: (wt, Me, we) => {
                var je = we(85188);

                function Ee(Je, Y) {
                    if (Je == null) return {};
                    var Ct, tt, mt = je(Je, Y);
                    if (Object.getOwnPropertySymbols) {
                        var le = Object.getOwnPropertySymbols(Je);
                        for (tt = 0; tt < le.length; tt++) Ct = le[tt], Y.indexOf(Ct) === -1 && {}.propertyIsEnumerable.call(Je, Ct) && (mt[Ct] = Je[Ct])
                    }
                    return mt
                }
                wt.exports = Ee, wt.exports.__esModule = !0, wt.exports.default = wt.exports
            },
            74346: wt => {
                (function Me(we) {
                    (function(je, Ee) {
                        wt.exports = Ee()
                    })(this, function() {
                        "use strict";

                        function je(l, n) {
                            var a = Object.keys(l);
                            if (Object.getOwnPropertySymbols) {
                                var e = Object.getOwnPropertySymbols(l);
                                n && (e = e.filter(function(r) {
                                    return Object.getOwnPropertyDescriptor(l, r).enumerable
                                })), a.push.apply(a, e)
                            }
                            return a
                        }

                        function Ee(l) {
                            for (var n = 1; n < arguments.length; n++) {
                                var a = arguments[n] != null ? arguments[n] : {};
                                n % 2 ? je(Object(a), !0).forEach(function(e) {
                                    mt(l, e, a[e])
                                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(l, Object.getOwnPropertyDescriptors(a)) : je(Object(a)).forEach(function(e) {
                                    Object.defineProperty(l, e, Object.getOwnPropertyDescriptor(a, e))
                                })
                            }
                            return l
                        }

                        function Je(l, n) {
                            if (typeof l != "object" || !l) return l;
                            var a = l[Symbol.toPrimitive];
                            if (a !== void 0) {
                                var e = a.call(l, n || "default");
                                if (typeof e != "object") return e;
                                throw new TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return (n === "string" ? String : Number)(l)
                        }

                        function Y(l) {
                            var n = Je(l, "string");
                            return typeof n == "symbol" ? n : String(n)
                        }

                        function Ct(l, n) {
                            for (var a = 0; a < n.length; a++) {
                                var e = n[a];
                                e.enumerable = e.enumerable || !1, e.configurable = !0, "value" in e && (e.writable = !0), Object.defineProperty(l, Y(e.key), e)
                            }
                        }

                        function tt(l, n, a) {
                            return n && Ct(l.prototype, n), a && Ct(l, a), Object.defineProperty(l, "prototype", {
                                writable: !1
                            }), l
                        }

                        function mt(l, n, a) {
                            return n = Y(n), n in l ? Object.defineProperty(l, n, {
                                value: a,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : l[n] = a, l
                        }

                        function le() {
                            return le = Object.assign ? Object.assign.bind() : function(l) {
                                for (var n = 1; n < arguments.length; n++) {
                                    var a = arguments[n];
                                    for (var e in a) Object.prototype.hasOwnProperty.call(a, e) && (l[e] = a[e])
                                }
                                return l
                            }, le.apply(this, arguments)
                        }

                        function x(l, n) {
                            l.prototype = Object.create(n.prototype), l.prototype.constructor = l, Q(l, n)
                        }

                        function K(l) {
                            return K = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(a) {
                                return a.__proto__ || Object.getPrototypeOf(a)
                            }, K(l)
                        }

                        function Q(l, n) {
                            return Q = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, r) {
                                return e.__proto__ = r, e
                            }, Q(l, n)
                        }

                        function he() {
                            if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham) return !1;
                            if (typeof Proxy == "function") return !0;
                            try {
                                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                            } catch (l) {
                                return !1
                            }
                        }

                        function ot(l, n, a) {
                            return he() ? ot = Reflect.construct.bind() : ot = function(r, i, o) {
                                var u = [null];
                                u.push.apply(u, i);
                                var c = Function.bind.apply(r, u),
                                    h = new c;
                                return o && Q(h, o.prototype), h
                            }, ot.apply(null, arguments)
                        }

                        function it(l) {
                            try {
                                return Function.toString.call(l).indexOf("[native code]") !== -1
                            } catch (n) {
                                return typeof l == "function"
                            }
                        }

                        function Rt(l) {
                            var n = typeof Map == "function" ? new Map : void 0;
                            return Rt = function(e) {
                                if (e === null || !it(e)) return e;
                                if (typeof e != "function") throw new TypeError("Super expression must either be null or a function");
                                if (typeof n != "undefined") {
                                    if (n.has(e)) return n.get(e);
                                    n.set(e, r)
                                }

                                function r() {
                                    return ot(e, arguments, K(this).constructor)
                                }
                                return r.prototype = Object.create(e.prototype, {
                                    constructor: {
                                        value: r,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0
                                    }
                                }), Q(r, e)
                            }, Rt(l)
                        }

                        function Ft(l) {
                            if (l === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return l
                        }

                        function Dt(l, n) {
                            if (l) {
                                if (typeof l == "string") return dt(l, n);
                                var a = Object.prototype.toString.call(l).slice(8, -1);
                                if (a === "Object" && l.constructor && (a = l.constructor.name), a === "Map" || a === "Set") return Array.from(l);
                                if (a === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)) return dt(l, n)
                            }
                        }

                        function dt(l, n) {
                            (n == null || n > l.length) && (n = l.length);
                            for (var a = 0, e = new Array(n); a < n; a++) e[a] = l[a];
                            return e
                        }

                        function at(l, n) {
                            var a = typeof Symbol != "undefined" && l[Symbol.iterator] || l["@@iterator"];
                            if (a) return (a = a.call(l)).next.bind(a);
                            if (Array.isArray(l) || (a = Dt(l)) || n && l && typeof l.length == "number") {
                                a && (l = a);
                                var e = 0;
                                return function() {
                                    return e >= l.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: l[e++]
                                    }
                                }
                            }
                            throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
                        }

                        function bt(l) {
                            return l && l.__esModule && Object.prototype.hasOwnProperty.call(l, "default") ? l.default : l
                        }
                        var Wt = {
                            exports: {}
                        };
                        (function(l, n) {
                            (function(a) {
                                var e = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/,
                                    r = /^(?=([^\/?#]*))\1([^]*)$/,
                                    i = /(?:\/|^)\.(?=\/)/g,
                                    o = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g,
                                    u = {
                                        buildAbsoluteURL: function(c, h, f) {
                                            if (f = f || {}, c = c.trim(), h = h.trim(), !h) {
                                                if (!f.alwaysNormalize) return c;
                                                var m = u.parseURL(c);
                                                if (!m) throw new Error("Error trying to parse base URL.");
                                                return m.path = u.normalizePath(m.path), u.buildURLFromParts(m)
                                            }
                                            var p = u.parseURL(h);
                                            if (!p) throw new Error("Error trying to parse relative URL.");
                                            if (p.scheme) return f.alwaysNormalize ? (p.path = u.normalizePath(p.path), u.buildURLFromParts(p)) : h;
                                            var E = u.parseURL(c);
                                            if (!E) throw new Error("Error trying to parse base URL.");
                                            if (!E.netLoc && E.path && E.path[0] !== "/") {
                                                var S = r.exec(E.path);
                                                E.netLoc = S[1], E.path = S[2]
                                            }
                                            E.netLoc && !E.path && (E.path = "/");
                                            var L = {
                                                scheme: E.scheme,
                                                netLoc: p.netLoc,
                                                path: null,
                                                params: p.params,
                                                query: p.query,
                                                fragment: p.fragment
                                            };
                                            if (!p.netLoc && (L.netLoc = E.netLoc, p.path[0] !== "/"))
                                                if (!p.path) L.path = E.path, p.params || (L.params = E.params, p.query || (L.query = E.query));
                                                else {
                                                    var I = E.path,
                                                        O = I.substring(0, I.lastIndexOf("/") + 1) + p.path;
                                                    L.path = u.normalizePath(O)
                                                }
                                            return L.path === null && (L.path = f.alwaysNormalize ? u.normalizePath(p.path) : p.path), u.buildURLFromParts(L)
                                        },
                                        parseURL: function(c) {
                                            var h = e.exec(c);
                                            return h ? {
                                                scheme: h[1] || "",
                                                netLoc: h[2] || "",
                                                path: h[3] || "",
                                                params: h[4] || "",
                                                query: h[5] || "",
                                                fragment: h[6] || ""
                                            } : null
                                        },
                                        normalizePath: function(c) {
                                            for (c = c.split("").reverse().join("").replace(i, ""); c.length !== (c = c.replace(o, "")).length;);
                                            return c.split("").reverse().join("")
                                        },
                                        buildURLFromParts: function(c) {
                                            return c.scheme + c.netLoc + c.path + c.params + c.query + c.fragment
                                        }
                                    };
                                l.exports = u
                            })()
                        })(Wt);
                        var fe = Wt.exports,
                            Ge = Number.isFinite || function(l) {
                                return typeof l == "number" && isFinite(l)
                            },
                            B = Number.isSafeInteger || function(l) {
                                return typeof l == "number" && Math.abs(l) <= Be
                            },
                            Be = Number.MAX_SAFE_INTEGER || 9007199254740991,
                            _ = function(l) {
                                return l.MEDIA_ATTACHING = "hlsMediaAttaching", l.MEDIA_ATTACHED = "hlsMediaAttached", l.MEDIA_DETACHING = "hlsMediaDetaching", l.MEDIA_DETACHED = "hlsMediaDetached", l.BUFFER_RESET = "hlsBufferReset", l.BUFFER_CODECS = "hlsBufferCodecs", l.BUFFER_CREATED = "hlsBufferCreated", l.BUFFER_APPENDING = "hlsBufferAppending", l.BUFFER_APPENDED = "hlsBufferAppended", l.BUFFER_EOS = "hlsBufferEos", l.BUFFER_FLUSHING = "hlsBufferFlushing", l.BUFFER_FLUSHED = "hlsBufferFlushed", l.MANIFEST_LOADING = "hlsManifestLoading", l.MANIFEST_LOADED = "hlsManifestLoaded", l.MANIFEST_PARSED = "hlsManifestParsed", l.LEVEL_SWITCHING = "hlsLevelSwitching", l.LEVEL_SWITCHED = "hlsLevelSwitched", l.LEVEL_LOADING = "hlsLevelLoading", l.LEVEL_LOADED = "hlsLevelLoaded", l.LEVEL_UPDATED = "hlsLevelUpdated", l.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated", l.LEVELS_UPDATED = "hlsLevelsUpdated", l.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated", l.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching", l.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched", l.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading", l.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded", l.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated", l.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared", l.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch", l.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading", l.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded", l.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed", l.CUES_PARSED = "hlsCuesParsed", l.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound", l.INIT_PTS_FOUND = "hlsInitPtsFound", l.FRAG_LOADING = "hlsFragLoading", l.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted", l.FRAG_LOADED = "hlsFragLoaded", l.FRAG_DECRYPTED = "hlsFragDecrypted", l.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment", l.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata", l.FRAG_PARSING_METADATA = "hlsFragParsingMetadata", l.FRAG_PARSED = "hlsFragParsed", l.FRAG_BUFFERED = "hlsFragBuffered", l.FRAG_CHANGED = "hlsFragChanged", l.FPS_DROP = "hlsFpsDrop", l.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping", l.MAX_AUTO_LEVEL_UPDATED = "hlsMaxAutoLevelUpdated", l.ERROR = "hlsError", l.DESTROYING = "hlsDestroying", l.KEY_LOADING = "hlsKeyLoading", l.KEY_LOADED = "hlsKeyLoaded", l.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached", l.BACK_BUFFER_REACHED = "hlsBackBufferReached", l.STEERING_MANIFEST_LOADED = "hlsSteeringManifestLoaded", l
                            }({}),
                            Ve = function(l) {
                                return l.NETWORK_ERROR = "networkError", l.MEDIA_ERROR = "mediaError", l.KEY_SYSTEM_ERROR = "keySystemError", l.MUX_ERROR = "muxError", l.OTHER_ERROR = "otherError", l
                            }({}),
                            de = function(l) {
                                return l.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys", l.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess", l.KEY_SYSTEM_NO_SESSION = "keySystemNoSession", l.KEY_SYSTEM_NO_CONFIGURED_LICENSE = "keySystemNoConfiguredLicense", l.KEY_SYSTEM_LICENSE_REQUEST_FAILED = "keySystemLicenseRequestFailed", l.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED = "keySystemServerCertificateRequestFailed", l.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED = "keySystemServerCertificateUpdateFailed", l.KEY_SYSTEM_SESSION_UPDATE_FAILED = "keySystemSessionUpdateFailed", l.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED = "keySystemStatusOutputRestricted", l.KEY_SYSTEM_STATUS_INTERNAL_ERROR = "keySystemStatusInternalError", l.MANIFEST_LOAD_ERROR = "manifestLoadError", l.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut", l.MANIFEST_PARSING_ERROR = "manifestParsingError", l.MANIFEST_INCOMPATIBLE_CODECS_ERROR = "manifestIncompatibleCodecsError", l.LEVEL_EMPTY_ERROR = "levelEmptyError", l.LEVEL_LOAD_ERROR = "levelLoadError", l.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut", l.LEVEL_PARSING_ERROR = "levelParsingError", l.LEVEL_SWITCH_ERROR = "levelSwitchError", l.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError", l.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut", l.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError", l.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut", l.FRAG_LOAD_ERROR = "fragLoadError", l.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut", l.FRAG_DECRYPT_ERROR = "fragDecryptError", l.FRAG_PARSING_ERROR = "fragParsingError", l.FRAG_GAP = "fragGap", l.REMUX_ALLOC_ERROR = "remuxAllocError", l.KEY_LOAD_ERROR = "keyLoadError", l.KEY_LOAD_TIMEOUT = "keyLoadTimeOut", l.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError", l.BUFFER_INCOMPATIBLE_CODECS_ERROR = "bufferIncompatibleCodecsError", l.BUFFER_APPEND_ERROR = "bufferAppendError", l.BUFFER_APPENDING_ERROR = "bufferAppendingError", l.BUFFER_STALLED_ERROR = "bufferStalledError", l.BUFFER_FULL_ERROR = "bufferFullError", l.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole", l.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall", l.INTERNAL_EXCEPTION = "internalException", l.INTERNAL_ABORTED = "aborted", l.UNKNOWN = "unknown", l
                            }({}),
                            yt = function() {},
                            Ir = {
                                trace: yt,
                                debug: yt,
                                log: yt,
                                warn: yt,
                                info: yt,
                                error: yt
                            },
                            ar = Ir;

                        function nt(l) {
                            var n = self.console[l];
                            return n ? n.bind(self.console, "[" + l + "] >") : yt
                        }

                        function dr(l) {
                            for (var n = arguments.length, a = new Array(n > 1 ? n - 1 : 0), e = 1; e < n; e++) a[e - 1] = arguments[e];
                            a.forEach(function(r) {
                                ar[r] = l[r] ? l[r].bind(l) : nt(r)
                            })
                        }

                        function ai(l, n) {
                            if (typeof console == "object" && l === !0 || typeof l == "object") {
                                dr(l, "debug", "log", "info", "warn", "error");
                                try {
                                    ar.log('Debug logs enabled for "' + n + '" in hls.js version 1.5.20')
                                } catch (a) {
                                    ar = Ir
                                }
                            } else ar = Ir
                        }
                        var V = ar,
                            ce = /^(\d+)x(\d+)$/,
                            Pe = /(.+?)=(".*?"|.*?)(?:,|$)/g,
                            st = function() {
                                function l(a) {
                                    typeof a == "string" && (a = l.parseAttrList(a)), le(this, a)
                                }
                                var n = l.prototype;
                                return n.decimalInteger = function(e) {
                                    var r = parseInt(this[e], 10);
                                    return r > Number.MAX_SAFE_INTEGER ? 1 / 0 : r
                                }, n.hexadecimalInteger = function(e) {
                                    if (this[e]) {
                                        var r = (this[e] || "0x").slice(2);
                                        r = (r.length & 1 ? "0" : "") + r;
                                        for (var i = new Uint8Array(r.length / 2), o = 0; o < r.length / 2; o++) i[o] = parseInt(r.slice(o * 2, o * 2 + 2), 16);
                                        return i
                                    } else return null
                                }, n.hexadecimalIntegerAsNumber = function(e) {
                                    var r = parseInt(this[e], 16);
                                    return r > Number.MAX_SAFE_INTEGER ? 1 / 0 : r
                                }, n.decimalFloatingPoint = function(e) {
                                    return parseFloat(this[e])
                                }, n.optionalFloat = function(e, r) {
                                    var i = this[e];
                                    return i ? parseFloat(i) : r
                                }, n.enumeratedString = function(e) {
                                    return this[e]
                                }, n.bool = function(e) {
                                    return this[e] === "YES"
                                }, n.decimalResolution = function(e) {
                                    var r = ce.exec(this[e]);
                                    if (r !== null) return {
                                        width: parseInt(r[1], 10),
                                        height: parseInt(r[2], 10)
                                    }
                                }, l.parseAttrList = function(e) {
                                    var r, i = {},
                                        o = '"';
                                    for (Pe.lastIndex = 0;
                                        (r = Pe.exec(e)) !== null;) {
                                        var u = r[2];
                                        u.indexOf(o) === 0 && u.lastIndexOf(o) === u.length - 1 && (u = u.slice(1, -1));
                                        var c = r[1].trim();
                                        i[c] = u
                                    }
                                    return i
                                }, tt(l, [{
                                    key: "clientAttrs",
                                    get: function() {
                                        return Object.keys(this).filter(function(e) {
                                            return e.substring(0, 2) === "X-"
                                        })
                                    }
                                }]), l
                            }();

                        function ct(l) {
                            return l !== "ID" && l !== "CLASS" && l !== "START-DATE" && l !== "DURATION" && l !== "END-DATE" && l !== "END-ON-NEXT"
                        }

                        function Fe(l) {
                            return l === "SCTE35-OUT" || l === "SCTE35-IN"
                        }
                        var ht = function() {
                                function l(n, a) {
                                    if (this.attr = void 0, this._startDate = void 0, this._endDate = void 0, this._badValueForSameId = void 0, a) {
                                        var e = a.attr;
                                        for (var r in e)
                                            if (Object.prototype.hasOwnProperty.call(n, r) && n[r] !== e[r]) {
                                                V.warn('DATERANGE tag attribute: "' + r + '" does not match for tags with ID: "' + n.ID + '"'), this._badValueForSameId = r;
                                                break
                                            }
                                        n = le(new st({}), e, n)
                                    }
                                    if (this.attr = n, this._startDate = new Date(n["START-DATE"]), "END-DATE" in this.attr) {
                                        var i = new Date(this.attr["END-DATE"]);
                                        Ge(i.getTime()) && (this._endDate = i)
                                    }
                                }
                                return tt(l, [{
                                    key: "id",
                                    get: function() {
                                        return this.attr.ID
                                    }
                                }, {
                                    key: "class",
                                    get: function() {
                                        return this.attr.CLASS
                                    }
                                }, {
                                    key: "startDate",
                                    get: function() {
                                        return this._startDate
                                    }
                                }, {
                                    key: "endDate",
                                    get: function() {
                                        if (this._endDate) return this._endDate;
                                        var a = this.duration;
                                        return a !== null ? new Date(this._startDate.getTime() + a * 1e3) : null
                                    }
                                }, {
                                    key: "duration",
                                    get: function() {
                                        if ("DURATION" in this.attr) {
                                            var a = this.attr.decimalFloatingPoint("DURATION");
                                            if (Ge(a)) return a
                                        } else if (this._endDate) return (this._endDate.getTime() - this._startDate.getTime()) / 1e3;
                                        return null
                                    }
                                }, {
                                    key: "plannedDuration",
                                    get: function() {
                                        return "PLANNED-DURATION" in this.attr ? this.attr.decimalFloatingPoint("PLANNED-DURATION") : null
                                    }
                                }, {
                                    key: "endOnNext",
                                    get: function() {
                                        return this.attr.bool("END-ON-NEXT")
                                    }
                                }, {
                                    key: "isValid",
                                    get: function() {
                                        return !!this.id && !this._badValueForSameId && Ge(this.startDate.getTime()) && (this.duration === null || this.duration >= 0) && (!this.endOnNext || !!this.class)
                                    }
                                }]), l
                            }(),
                            Er = function() {
                                this.aborted = !1, this.loaded = 0, this.retry = 0, this.total = 0, this.chunkCount = 0, this.bwEstimate = 0, this.loading = {
                                    start: 0,
                                    first: 0,
                                    end: 0
                                }, this.parsing = {
                                    start: 0,
                                    end: 0
                                }, this.buffering = {
                                    start: 0,
                                    first: 0,
                                    end: 0
                                }
                            },
                            Xt = {
                                AUDIO: "audio",
                                VIDEO: "video",
                                AUDIOVIDEO: "audiovideo"
                            },
                            W = function() {
                                function l(a) {
                                    var e;
                                    this._byteRange = null, this._url = null, this.baseurl = void 0, this.relurl = void 0, this.elementaryStreams = (e = {}, e[Xt.AUDIO] = null, e[Xt.VIDEO] = null, e[Xt.AUDIOVIDEO] = null, e), this.baseurl = a
                                }
                                var n = l.prototype;
                                return n.setByteRange = function(e, r) {
                                    var i = e.split("@", 2),
                                        o;
                                    i.length === 1 ? o = (r == null ? void 0 : r.byteRangeEndOffset) || 0 : o = parseInt(i[1]), this._byteRange = [o, parseInt(i[0]) + o]
                                }, tt(l, [{
                                    key: "byteRange",
                                    get: function() {
                                        return this._byteRange ? this._byteRange : []
                                    }
                                }, {
                                    key: "byteRangeStartOffset",
                                    get: function() {
                                        return this.byteRange[0]
                                    }
                                }, {
                                    key: "byteRangeEndOffset",
                                    get: function() {
                                        return this.byteRange[1]
                                    }
                                }, {
                                    key: "url",
                                    get: function() {
                                        return !this._url && this.baseurl && this.relurl && (this._url = fe.buildAbsoluteURL(this.baseurl, this.relurl, {
                                            alwaysNormalize: !0
                                        })), this._url || ""
                                    },
                                    set: function(e) {
                                        this._url = e
                                    }
                                }]), l
                            }(),
                            Zr = function(l) {
                                x(n, l);

                                function n(e, r) {
                                    var i;
                                    return i = l.call(this, r) || this, i._decryptdata = null, i.rawProgramDateTime = null, i.programDateTime = null, i.tagList = [], i.duration = 0, i.sn = 0, i.levelkeys = void 0, i.type = void 0, i.loader = null, i.keyLoader = null, i.level = -1, i.cc = 0, i.startPTS = void 0, i.endPTS = void 0, i.startDTS = void 0, i.endDTS = void 0, i.start = 0, i.deltaPTS = void 0, i.maxStartPTS = void 0, i.minEndPTS = void 0, i.stats = new Er, i.data = void 0, i.bitrateTest = !1, i.title = null, i.initSegment = null, i.endList = void 0, i.gap = void 0, i.urlId = 0, i.type = e, i
                                }
                                var a = n.prototype;
                                return a.setKeyFormat = function(r) {
                                    if (this.levelkeys) {
                                        var i = this.levelkeys[r];
                                        i && !this._decryptdata && (this._decryptdata = i.getDecryptData(this.sn))
                                    }
                                }, a.abortRequests = function() {
                                    var r, i;
                                    (r = this.loader) == null || r.abort(), (i = this.keyLoader) == null || i.abort()
                                }, a.setElementaryStreamInfo = function(r, i, o, u, c, h) {
                                    h === void 0 && (h = !1);
                                    var f = this.elementaryStreams,
                                        m = f[r];
                                    if (!m) {
                                        f[r] = {
                                            startPTS: i,
                                            endPTS: o,
                                            startDTS: u,
                                            endDTS: c,
                                            partial: h
                                        };
                                        return
                                    }
                                    m.startPTS = Math.min(m.startPTS, i), m.endPTS = Math.max(m.endPTS, o), m.startDTS = Math.min(m.startDTS, u), m.endDTS = Math.max(m.endDTS, c)
                                }, a.clearElementaryStreamInfo = function() {
                                    var r = this.elementaryStreams;
                                    r[Xt.AUDIO] = null, r[Xt.VIDEO] = null, r[Xt.AUDIOVIDEO] = null
                                }, tt(n, [{
                                    key: "decryptdata",
                                    get: function() {
                                        var r = this.levelkeys;
                                        if (!r && !this._decryptdata) return null;
                                        if (!this._decryptdata && this.levelkeys && !this.levelkeys.NONE) {
                                            var i = this.levelkeys.identity;
                                            if (i) this._decryptdata = i.getDecryptData(this.sn);
                                            else {
                                                var o = Object.keys(this.levelkeys);
                                                if (o.length === 1) return this._decryptdata = this.levelkeys[o[0]].getDecryptData(this.sn)
                                            }
                                        }
                                        return this._decryptdata
                                    }
                                }, {
                                    key: "end",
                                    get: function() {
                                        return this.start + this.duration
                                    }
                                }, {
                                    key: "endProgramDateTime",
                                    get: function() {
                                        if (this.programDateTime === null || !Ge(this.programDateTime)) return null;
                                        var r = Ge(this.duration) ? this.duration : 0;
                                        return this.programDateTime + r * 1e3
                                    }
                                }, {
                                    key: "encrypted",
                                    get: function() {
                                        var r;
                                        if ((r = this._decryptdata) != null && r.encrypted) return !0;
                                        if (this.levelkeys) {
                                            var i = Object.keys(this.levelkeys),
                                                o = i.length;
                                            if (o > 1 || o === 1 && this.levelkeys[i[0]].encrypted) return !0
                                        }
                                        return !1
                                    }
                                }]), n
                            }(W),
                            br = function(l) {
                                x(n, l);

                                function n(a, e, r, i, o) {
                                    var u;
                                    u = l.call(this, r) || this, u.fragOffset = 0, u.duration = 0, u.gap = !1, u.independent = !1, u.relurl = void 0, u.fragment = void 0, u.index = void 0, u.stats = new Er, u.duration = a.decimalFloatingPoint("DURATION"), u.gap = a.bool("GAP"), u.independent = a.bool("INDEPENDENT"), u.relurl = a.enumeratedString("URI"), u.fragment = e, u.index = i;
                                    var c = a.enumeratedString("BYTERANGE");
                                    return c && u.setByteRange(c, o), o && (u.fragOffset = o.fragOffset + o.duration), u
                                }
                                return tt(n, [{
                                    key: "start",
                                    get: function() {
                                        return this.fragment.start + this.fragOffset
                                    }
                                }, {
                                    key: "end",
                                    get: function() {
                                        return this.start + this.duration
                                    }
                                }, {
                                    key: "loaded",
                                    get: function() {
                                        var e = this.elementaryStreams;
                                        return !!(e.audio || e.video || e.audiovideo)
                                    }
                                }]), n
                            }(W),
                            ni = 10,
                            Mi = function() {
                                function l(a) {
                                    this.PTSKnown = !1, this.alignedSliding = !1, this.averagetargetduration = void 0, this.endCC = 0, this.endSN = 0, this.fragments = void 0, this.fragmentHint = void 0, this.partList = null, this.dateRanges = void 0, this.live = !0, this.ageHeader = 0, this.advancedDateTime = void 0, this.updated = !0, this.advanced = !0, this.availabilityDelay = void 0, this.misses = 0, this.startCC = 0, this.startSN = 0, this.startTimeOffset = null, this.targetduration = 0, this.totalduration = 0, this.type = null, this.url = void 0, this.m3u8 = "", this.version = null, this.canBlockReload = !1, this.canSkipUntil = 0, this.canSkipDateRanges = !1, this.skippedSegments = 0, this.recentlyRemovedDateranges = void 0, this.partHoldBack = 0, this.holdBack = 0, this.partTarget = 0, this.preloadHint = void 0, this.renditionReports = void 0, this.tuneInGoal = 0, this.deltaUpdateFailed = void 0, this.driftStartTime = 0, this.driftEndTime = 0, this.driftStart = 0, this.driftEnd = 0, this.encryptedFragments = void 0, this.playlistParsingError = null, this.variableList = null, this.hasVariableRefs = !1, this.fragments = [], this.encryptedFragments = [], this.dateRanges = {}, this.url = a
                                }
                                var n = l.prototype;
                                return n.reloaded = function(e) {
                                    if (!e) {
                                        this.advanced = !0, this.updated = !0;
                                        return
                                    }
                                    var r = this.lastPartSn - e.lastPartSn,
                                        i = this.lastPartIndex - e.lastPartIndex;
                                    this.updated = this.endSN !== e.endSN || !!i || !!r || !this.live, this.advanced = this.endSN > e.endSN || r > 0 || r === 0 && i > 0, this.updated || this.advanced ? this.misses = Math.floor(e.misses * .6) : this.misses = e.misses + 1, this.availabilityDelay = e.availabilityDelay
                                }, tt(l, [{
                                    key: "hasProgramDateTime",
                                    get: function() {
                                        return this.fragments.length ? Ge(this.fragments[this.fragments.length - 1].programDateTime) : !1
                                    }
                                }, {
                                    key: "levelTargetDuration",
                                    get: function() {
                                        return this.averagetargetduration || this.targetduration || ni
                                    }
                                }, {
                                    key: "drift",
                                    get: function() {
                                        var e = this.driftEndTime - this.driftStartTime;
                                        if (e > 0) {
                                            var r = this.driftEnd - this.driftStart;
                                            return r * 1e3 / e
                                        }
                                        return 1
                                    }
                                }, {
                                    key: "edge",
                                    get: function() {
                                        return this.partEnd || this.fragmentEnd
                                    }
                                }, {
                                    key: "partEnd",
                                    get: function() {
                                        var e;
                                        return (e = this.partList) != null && e.length ? this.partList[this.partList.length - 1].end : this.fragmentEnd
                                    }
                                }, {
                                    key: "fragmentEnd",
                                    get: function() {
                                        var e;
                                        return (e = this.fragments) != null && e.length ? this.fragments[this.fragments.length - 1].end : 0
                                    }
                                }, {
                                    key: "age",
                                    get: function() {
                                        return this.advancedDateTime ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3 : 0
                                    }
                                }, {
                                    key: "lastPartIndex",
                                    get: function() {
                                        var e;
                                        return (e = this.partList) != null && e.length ? this.partList[this.partList.length - 1].index : -1
                                    }
                                }, {
                                    key: "lastPartSn",
                                    get: function() {
                                        var e;
                                        return (e = this.partList) != null && e.length ? this.partList[this.partList.length - 1].fragment.sn : this.endSN
                                    }
                                }]), l
                            }();

                        function si(l) {
                            return Uint8Array.from(atob(l), function(n) {
                                return n.charCodeAt(0)
                            })
                        }

                        function ti(l) {
                            var n = Cr(l).subarray(0, 16),
                                a = new Uint8Array(16);
                            return a.set(n, 16 - n.length), a
                        }

                        function oa(l) {
                            var n = function(e, r, i) {
                                var o = e[r];
                                e[r] = e[i], e[i] = o
                            };
                            n(l, 0, 3), n(l, 1, 2), n(l, 4, 5), n(l, 6, 7)
                        }

                        function Wr(l) {
                            var n = l.split(":"),
                                a = null;
                            if (n[0] === "data" && n.length === 2) {
                                var e = n[1].split(";"),
                                    r = e[e.length - 1].split(",");
                                if (r.length === 2) {
                                    var i = r[0] === "base64",
                                        o = r[1];
                                    i ? (e.splice(-1, 1), a = si(o)) : a = ti(o)
                                }
                            }
                            return a
                        }

                        function Cr(l) {
                            return Uint8Array.from(unescape(encodeURIComponent(l)), function(n) {
                                return n.charCodeAt(0)
                            })
                        }
                        var La = typeof self != "undefined" ? self : void 0,
                            Gr = {
                                CLEARKEY: "org.w3.clearkey",
                                FAIRPLAY: "com.apple.fps",
                                PLAYREADY: "com.microsoft.playready",
                                WIDEVINE: "com.widevine.alpha"
                            },
                            Kt = {
                                CLEARKEY: "org.w3.clearkey",
                                FAIRPLAY: "com.apple.streamingkeydelivery",
                                PLAYREADY: "com.microsoft.playready",
                                WIDEVINE: "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed"
                            };

                        function ri(l) {
                            switch (l) {
                                case Kt.FAIRPLAY:
                                    return Gr.FAIRPLAY;
                                case Kt.PLAYREADY:
                                    return Gr.PLAYREADY;
                                case Kt.WIDEVINE:
                                    return Gr.WIDEVINE;
                                case Kt.CLEARKEY:
                                    return Gr.CLEARKEY
                            }
                        }
                        var ki = {
                            CENC: "1077efecc0b24d02ace33c1e52e2fb4b",
                            CLEARKEY: "e2719d58a985b3c9781ab030af78d30e",
                            FAIRPLAY: "94ce86fb07ff4f43adb893d2fa968ca2",
                            PLAYREADY: "9a04f07998404286ab92e65be0885f95",
                            WIDEVINE: "edef8ba979d64acea3c827dcd51d21ed"
                        };

                        function aa(l) {
                            if (l === ki.WIDEVINE) return Gr.WIDEVINE;
                            if (l === ki.PLAYREADY) return Gr.PLAYREADY;
                            if (l === ki.CENC || l === ki.CLEARKEY) return Gr.CLEARKEY
                        }

                        function Tt(l) {
                            switch (l) {
                                case Gr.FAIRPLAY:
                                    return Kt.FAIRPLAY;
                                case Gr.PLAYREADY:
                                    return Kt.PLAYREADY;
                                case Gr.WIDEVINE:
                                    return Kt.WIDEVINE;
                                case Gr.CLEARKEY:
                                    return Kt.CLEARKEY
                            }
                        }

                        function ie(l) {
                            var n = l.drmSystems,
                                a = l.widevineLicenseUrl,
                                e = n ? [Gr.FAIRPLAY, Gr.WIDEVINE, Gr.PLAYREADY, Gr.CLEARKEY].filter(function(r) {
                                    return !!n[r]
                                }) : [];
                            return !e[Gr.WIDEVINE] && a && e.push(Gr.WIDEVINE), e
                        }
                        var j = function(l) {
                            return La != null && (l = La.navigator) != null && l.requestMediaKeySystemAccess ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator) : null
                        }();

                        function Z(l, n, a, e) {
                            var r;
                            switch (l) {
                                case Gr.FAIRPLAY:
                                    r = ["cenc", "sinf"];
                                    break;
                                case Gr.WIDEVINE:
                                case Gr.PLAYREADY:
                                    r = ["cenc"];
                                    break;
                                case Gr.CLEARKEY:
                                    r = ["cenc", "keyids"];
                                    break;
                                default:
                                    throw new Error("Unknown key-system: " + l)
                            }
                            return ne(r, n, a, e)
                        }

                        function ne(l, n, a, e) {
                            var r = {
                                initDataTypes: l,
                                persistentState: e.persistentState || "optional",
                                distinctiveIdentifier: e.distinctiveIdentifier || "optional",
                                sessionTypes: e.sessionTypes || [e.sessionType || "temporary"],
                                audioCapabilities: n.map(function(i) {
                                    return {
                                        contentType: 'audio/mp4; codecs="' + i + '"',
                                        robustness: e.audioRobustness || "",
                                        encryptionScheme: e.audioEncryptionScheme || null
                                    }
                                }),
                                videoCapabilities: a.map(function(i) {
                                    return {
                                        contentType: 'video/mp4; codecs="' + i + '"',
                                        robustness: e.videoRobustness || "",
                                        encryptionScheme: e.videoEncryptionScheme || null
                                    }
                                })
                            };
                            return [r]
                        }

                        function pe(l) {
                            var n = new Uint16Array(l.buffer, l.byteOffset, l.byteLength / 2),
                                a = String.fromCharCode.apply(null, Array.from(n)),
                                e = a.substring(a.indexOf("<"), a.length),
                                r = new DOMParser,
                                i = r.parseFromString(e, "text/xml"),
                                o = i.getElementsByTagName("KID")[0];
                            if (o) {
                                var u = o.childNodes[0] ? o.childNodes[0].nodeValue : o.getAttribute("VALUE");
                                if (u) {
                                    var c = si(u).subarray(0, 16);
                                    return oa(c), c
                                }
                            }
                            return null
                        }

                        function De(l, n, a) {
                            return Uint8Array.prototype.slice ? l.slice(n, a) : new Uint8Array(Array.prototype.slice.call(l, n, a))
                        }
                        var ze = function(n, a) {
                                return a + 10 <= n.length && n[a] === 73 && n[a + 1] === 68 && n[a + 2] === 51 && n[a + 3] < 255 && n[a + 4] < 255 && n[a + 6] < 128 && n[a + 7] < 128 && n[a + 8] < 128 && n[a + 9] < 128
                            },
                            ft = function(n, a) {
                                return a + 10 <= n.length && n[a] === 51 && n[a + 1] === 68 && n[a + 2] === 73 && n[a + 3] < 255 && n[a + 4] < 255 && n[a + 6] < 128 && n[a + 7] < 128 && n[a + 8] < 128 && n[a + 9] < 128
                            },
                            gt = function(n, a) {
                                for (var e = a, r = 0; ze(n, a);) {
                                    r += 10;
                                    var i = qe(n, a + 6);
                                    r += i, ft(n, a + 10) && (r += 10), a += r
                                }
                                if (r > 0) return n.subarray(e, e + r)
                            },
                            qe = function(n, a) {
                                var e = 0;
                                return e = (n[a] & 127) << 21, e |= (n[a + 1] & 127) << 14, e |= (n[a + 2] & 127) << 7, e |= n[a + 3] & 127, e
                            },
                            wr = function(n, a) {
                                return ze(n, a) && qe(n, a + 6) + 10 <= n.length - a
                            },
                            kr = function(n) {
                                for (var a = hr(n), e = 0; e < a.length; e++) {
                                    var r = a[e];
                                    if (Ar(r)) return Ht(r)
                                }
                            },
                            Ar = function(n) {
                                return n && n.key === "PRIV" && n.info === "com.apple.streaming.transportStreamTimestamp"
                            },
                            $t = function(n) {
                                var a = String.fromCharCode(n[0], n[1], n[2], n[3]),
                                    e = qe(n, 4),
                                    r = 10;
                                return {
                                    type: a,
                                    size: e,
                                    data: n.subarray(r, r + e)
                                }
                            },
                            hr = function(n) {
                                for (var a = 0, e = []; ze(n, a);) {
                                    var r = qe(n, a + 6);
                                    a += 10;
                                    for (var i = a + r; a + 8 < i;) {
                                        var o = $t(n.subarray(a)),
                                            u = Gi(o);
                                        u && e.push(u), a += o.size + 10
                                    }
                                    ft(n, a) && (a += 10)
                                }
                                return e
                            },
                            Gi = function(n) {
                                return n.type === "PRIV" ? vt(n) : n.type[0] === "W" ? Mt(n) : oi(n)
                            },
                            vt = function(n) {
                                if (!(n.size < 2)) {
                                    var a = Ze(n.data, !0),
                                        e = new Uint8Array(n.data.subarray(a.length + 1));
                                    return {
                                        key: n.type,
                                        info: a,
                                        data: e.buffer
                                    }
                                }
                            },
                            oi = function(n) {
                                if (!(n.size < 2)) {
                                    if (n.type === "TXXX") {
                                        var a = 1,
                                            e = Ze(n.data.subarray(a), !0);
                                        a += e.length + 1;
                                        var r = Ze(n.data.subarray(a));
                                        return {
                                            key: n.type,
                                            info: e,
                                            data: r
                                        }
                                    }
                                    var i = Ze(n.data.subarray(1));
                                    return {
                                        key: n.type,
                                        data: i
                                    }
                                }
                            },
                            Mt = function(n) {
                                if (n.type === "WXXX") {
                                    if (n.size < 2) return;
                                    var a = 1,
                                        e = Ze(n.data.subarray(a), !0);
                                    a += e.length + 1;
                                    var r = Ze(n.data.subarray(a));
                                    return {
                                        key: n.type,
                                        info: e,
                                        data: r
                                    }
                                }
                                var i = Ze(n.data);
                                return {
                                    key: n.type,
                                    data: i
                                }
                            },
                            Ht = function(n) {
                                if (n.data.byteLength === 8) {
                                    var a = new Uint8Array(n.data),
                                        e = a[3] & 1,
                                        r = (a[4] << 23) + (a[5] << 15) + (a[6] << 7) + a[7];
                                    return r /= 45, e && (r += 4772185884e-2), Math.round(r)
                                }
                            },
                            Ze = function(n, a) {
                                a === void 0 && (a = !1);
                                var e = mr();
                                if (e) {
                                    var r = e.decode(n);
                                    if (a) {
                                        var i = r.indexOf("\0");
                                        return i !== -1 ? r.substring(0, i) : r
                                    }
                                    return r.replace(/\0/g, "")
                                }
                                for (var o = n.length, u, c, h, f = "", m = 0; m < o;) {
                                    if (u = n[m++], u === 0 && a) return f;
                                    if (u === 0 || u === 3) continue;
                                    switch (u >> 4) {
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                            f += String.fromCharCode(u);
                                            break;
                                        case 12:
                                        case 13:
                                            c = n[m++], f += String.fromCharCode((u & 31) << 6 | c & 63);
                                            break;
                                        case 14:
                                            c = n[m++], h = n[m++], f += String.fromCharCode((u & 15) << 12 | (c & 63) << 6 | (h & 63) << 0);
                                            break
                                    }
                                }
                                return f
                            },
                            sr;

                        function mr() {
                            if (!navigator.userAgent.includes("PlayStation 4")) return !sr && typeof self.TextDecoder != "undefined" && (sr = new self.TextDecoder("utf-8")), sr
                        }
                        var Lr = {
                                hexDump: function(n) {
                                    for (var a = "", e = 0; e < n.length; e++) {
                                        var r = n[e].toString(16);
                                        r.length < 2 && (r = "0" + r), a += r
                                    }
                                    return a
                                }
                            },
                            Yt = Math.pow(2, 32) - 1,
                            oe = [].push,
                            Ut = {
                                video: 1,
                                audio: 2,
                                id3: 3,
                                text: 4
                            };

                        function yi(l) {
                            return String.fromCharCode.apply(null, l)
                        }

                        function Ke(l, n) {
                            var a = l[n] << 8 | l[n + 1];
                            return a < 0 ? 65536 + a : a
                        }

                        function ge(l, n) {
                            var a = vr(l, n);
                            return a < 0 ? 4294967296 + a : a
                        }

                        function Et(l, n) {
                            var a = ge(l, n);
                            return a *= Math.pow(2, 32), a += ge(l, n + 4), a
                        }

                        function vr(l, n) {
                            return l[n] << 24 | l[n + 1] << 16 | l[n + 2] << 8 | l[n + 3]
                        }

                        function tr(l, n, a) {
                            l[n] = a >> 24, l[n + 1] = a >> 16 & 255, l[n + 2] = a >> 8 & 255, l[n + 3] = a & 255
                        }

                        function Tr(l) {
                            for (var n = l.byteLength, a = 0; a < n;) {
                                var e = ge(l, a);
                                if (e > 8 && l[a + 4] === 109 && l[a + 5] === 111 && l[a + 6] === 111 && l[a + 7] === 102) return !0;
                                a = e > 1 ? a + e : n
                            }
                            return !1
                        }

                        function Vt(l, n) {
                            var a = [];
                            if (!n.length) return a;
                            for (var e = l.byteLength, r = 0; r < e;) {
                                var i = ge(l, r),
                                    o = yi(l.subarray(r + 4, r + 8)),
                                    u = i > 1 ? r + i : e;
                                if (o === n[0])
                                    if (n.length === 1) a.push(l.subarray(r + 8, u));
                                    else {
                                        var c = Vt(l.subarray(r + 8, u), n.slice(1));
                                        c.length && oe.apply(a, c)
                                    }
                                r = u
                            }
                            return a
                        }

                        function Si(l) {
                            var n = [],
                                a = l[0],
                                e = 8,
                                r = ge(l, e);
                            e += 4;
                            var i = 0,
                                o = 0;
                            a === 0 ? (i = ge(l, e), o = ge(l, e + 4), e += 8) : (i = Et(l, e), o = Et(l, e + 8), e += 16), e += 2;
                            var u = l.length + o,
                                c = Ke(l, e);
                            e += 2;
                            for (var h = 0; h < c; h++) {
                                var f = e,
                                    m = ge(l, f);
                                f += 4;
                                var p = m & 2147483647,
                                    E = (m & 2147483648) >>> 31;
                                if (E === 1) return V.warn("SIDX has hierarchical references (not supported)"), null;
                                var S = ge(l, f);
                                f += 4, n.push({
                                    referenceSize: p,
                                    subsegmentDuration: S,
                                    info: {
                                        duration: S / r,
                                        start: u,
                                        end: u + p - 1
                                    }
                                }), u += p, f += 4, e = f
                            }
                            return {
                                earliestPresentationTime: i,
                                timescale: r,
                                version: a,
                                referencesCount: c,
                                references: n
                            }
                        }

                        function Qi(l) {
                            for (var n = [], a = Vt(l, ["moov", "trak"]), e = 0; e < a.length; e++) {
                                var r = a[e],
                                    i = Vt(r, ["tkhd"])[0];
                                if (i) {
                                    var o = i[0],
                                        u = ge(i, o === 0 ? 12 : 20),
                                        c = Vt(r, ["mdia", "mdhd"])[0];
                                    if (c) {
                                        o = c[0];
                                        var h = ge(c, o === 0 ? 12 : 20),
                                            f = Vt(r, ["mdia", "hdlr"])[0];
                                        if (f) {
                                            var m = yi(f.subarray(8, 12)),
                                                p = {
                                                    soun: Xt.AUDIO,
                                                    vide: Xt.VIDEO
                                                }[m];
                                            if (p) {
                                                var E = Vt(r, ["mdia", "minf", "stbl", "stsd"])[0],
                                                    S = Ma(E);
                                                n[u] = {
                                                    timescale: h,
                                                    type: p
                                                }, n[p] = Ee({
                                                    timescale: h,
                                                    id: u
                                                }, S)
                                            }
                                        }
                                    }
                                }
                            }
                            var L = Vt(l, ["moov", "mvex", "trex"]);
                            return L.forEach(function(I) {
                                var O = ge(I, 4),
                                    U = n[O];
                                U && (U.default = {
                                    duration: ge(I, 12),
                                    flags: ge(I, 20)
                                })
                            }), n
                        }

                        function Ma(l) {
                            var n = l.subarray(8),
                                a = n.subarray(86),
                                e = yi(n.subarray(4, 8)),
                                r = e,
                                i = e === "enca" || e === "encv";
                            if (i) {
                                var o = Vt(n, [e])[0],
                                    u = o.subarray(e === "enca" ? 28 : 78),
                                    c = Vt(u, ["sinf"]);
                                c.forEach(function(Wi) {
                                    var An = Vt(Wi, ["schm"])[0];
                                    if (An) {
                                        var Aa = yi(An.subarray(4, 8));
                                        if (Aa === "cbcs" || Aa === "cenc") {
                                            var $s = Vt(Wi, ["frma"])[0];
                                            $s && (r = yi($s))
                                        }
                                    }
                                })
                            }
                            switch (r) {
                                case "avc1":
                                case "avc2":
                                case "avc3":
                                case "avc4":
                                    {
                                        var h = Vt(a, ["avcC"])[0];r += "." + Ri(h[1]) + Ri(h[2]) + Ri(h[3]);
                                        break
                                    }
                                case "mp4a":
                                    {
                                        var f = Vt(n, [e])[0],
                                            m = Vt(f.subarray(28), ["esds"])[0];
                                        if (m && m.length > 12) {
                                            var p = 4;
                                            if (m[p++] !== 3) break;
                                            p = Ti(m, p), p += 2;
                                            var E = m[p++];
                                            if (E & 128 && (p += 2), E & 64 && (p += m[p++]), m[p++] !== 4) break;
                                            p = Ti(m, p);
                                            var S = m[p++];
                                            if (S === 64) r += "." + Ri(S);
                                            else break;
                                            if (p += 12, m[p++] !== 5) break;
                                            p = Ti(m, p);
                                            var L = m[p++],
                                                I = (L & 248) >> 3;
                                            I === 31 && (I += 1 + ((L & 7) << 3) + ((m[p] & 224) >> 5)), r += "." + I
                                        }
                                        break
                                    }
                                case "hvc1":
                                case "hev1":
                                    {
                                        var O = Vt(a, ["hvcC"])[0],
                                            U = O[1],
                                            G = ["", "A", "B", "C"][U >> 6],
                                            ee = U & 31,
                                            te = ge(O, 2),
                                            _e = (U & 32) >> 5 ? "H" : "L",
                                            me = O[12],
                                            ae = O.subarray(6, 12);r += "." + G + ee,
                                        r += "." + te.toString(16).toUpperCase(),
                                        r += "." + _e + me;
                                        for (var Se = "", ve = ae.length; ve--;) {
                                            var Ne = ae[ve];
                                            if (Ne || Se) {
                                                var Ie = Ne.toString(16).toUpperCase();
                                                Se = "." + Ie + Se
                                            }
                                        }
                                        r += Se;
                                        break
                                    }
                                case "dvh1":
                                case "dvhe":
                                    {
                                        var kt = Vt(a, ["dvcC"])[0],
                                            zt = kt[2] >> 1 & 127,
                                            lr = kt[2] << 5 & 32 | kt[3] >> 3 & 31;r += "." + Lt(zt) + "." + Lt(lr);
                                        break
                                    }
                                case "vp09":
                                    {
                                        var Fr = Vt(a, ["vpcC"])[0],
                                            Br = Fr[4],
                                            hi = Fr[5],
                                            ei = Fr[6] >> 4 & 15;r += "." + Lt(Br) + "." + Lt(hi) + "." + Lt(ei);
                                        break
                                    }
                                case "av01":
                                    {
                                        var Hr = Vt(a, ["av1C"])[0],
                                            Zi = Hr[1] >>> 5,
                                            ir = Hr[1] & 31,
                                            Ii = Hr[2] >>> 7 ? "H" : "M",
                                            Fi = (Hr[2] & 64) >> 6,
                                            wa = (Hr[2] & 32) >> 5,
                                            Ci = Zi === 2 && Fi ? wa ? 12 : 10 : Fi ? 10 : 8,
                                            Bi = (Hr[2] & 16) >> 4,
                                            on = (Hr[2] & 8) >> 3,
                                            Na = (Hr[2] & 4) >> 2,
                                            pi = Hr[2] & 3,
                                            Ra = 1,
                                            Ua = 1,
                                            Hi = 1,
                                            Ta = 0;r += "." + Zi + "." + Lt(ir) + Ii + "." + Lt(Ci) + "." + Bi + "." + on + Na + pi + "." + Lt(Ra) + "." + Lt(Ua) + "." + Lt(Hi) + "." + Ta;
                                        break
                                    }
                            }
                            return {
                                codec: r,
                                encrypted: i
                            }
                        }

                        function Ti(l, n) {
                            for (var a = n + 5; l[n++] & 128 && n < a;);
                            return n
                        }

                        function Ri(l) {
                            return ("0" + l.toString(16).toUpperCase()).slice(-2)
                        }

                        function Lt(l) {
                            return (l < 10 ? "0" : "") + l
                        }

                        function _n(l, n) {
                            if (!l || !n) return l;
                            var a = n.keyId;
                            if (a && n.isCommonEncryption) {
                                var e = Vt(l, ["moov", "trak"]);
                                e.forEach(function(r) {
                                    var i = Vt(r, ["mdia", "minf", "stbl", "stsd"])[0],
                                        o = i.subarray(8),
                                        u = Vt(o, ["enca"]),
                                        c = u.length > 0;
                                    c || (u = Vt(o, ["encv"])), u.forEach(function(h) {
                                        var f = c ? h.subarray(28) : h.subarray(78),
                                            m = Vt(f, ["sinf"]);
                                        m.forEach(function(p) {
                                            var E = Qa(p);
                                            if (E) {
                                                var S = E.subarray(8, 24);
                                                S.some(function(L) {
                                                    return L !== 0
                                                }) || (V.log("[eme] Patching keyId in 'enc" + (c ? "a" : "v") + ">sinf>>tenc' box: " + Lr.hexDump(S) + " -> " + Lr.hexDump(a)), E.set(a, 8))
                                            }
                                        })
                                    })
                                })
                            }
                            return l
                        }

                        function Qa(l) {
                            var n = Vt(l, ["schm"])[0];
                            if (n) {
                                var a = yi(n.subarray(4, 8));
                                if (a === "cbcs" || a === "cenc") return Vt(l, ["schi", "tenc"])[0]
                            }
                            return null
                        }

                        function Hn(l, n) {
                            return Vt(n, ["moof", "traf"]).reduce(function(a, e) {
                                var r = Vt(e, ["tfdt"])[0],
                                    i = r[0],
                                    o = Vt(e, ["tfhd"]).reduce(function(u, c) {
                                        var h = ge(c, 4),
                                            f = l[h];
                                        if (f) {
                                            var m = ge(r, 4);
                                            if (i === 1) {
                                                if (m === Yt) return V.warn("[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time"), u;
                                                m *= Yt + 1, m += ge(r, 8)
                                            }
                                            var p = f.timescale || 9e4,
                                                E = m / p;
                                            if (Ge(E) && (u === null || E < u)) return E
                                        }
                                        return u
                                    }, null);
                                return o !== null && Ge(o) && (a === null || o < a) ? o : a
                            }, null)
                        }

                        function Pi(l, n) {
                            for (var a = 0, e = 0, r = 0, i = Vt(l, ["moof", "traf"]), o = 0; o < i.length; o++) {
                                var u = i[o],
                                    c = Vt(u, ["tfhd"])[0],
                                    h = ge(c, 4),
                                    f = n[h];
                                if (f) {
                                    var m = f.default,
                                        p = ge(c, 0) | (m == null ? void 0 : m.flags),
                                        E = m == null ? void 0 : m.duration;
                                    p & 8 && (p & 2 ? E = ge(c, 12) : E = ge(c, 8));
                                    for (var S = f.timescale || 9e4, L = Vt(u, ["trun"]), I = 0; I < L.length; I++) {
                                        if (a = ln(L[I]), !a && E) {
                                            var O = ge(L[I], 4);
                                            a = E * O
                                        }
                                        f.type === Xt.VIDEO ? e += a / S : f.type === Xt.AUDIO && (r += a / S)
                                    }
                                }
                            }
                            if (e === 0 && r === 0) {
                                for (var U = 1 / 0, G = 0, ee = 0, te = Vt(l, ["sidx"]), _e = 0; _e < te.length; _e++) {
                                    var me = Si(te[_e]);
                                    if (me != null && me.references) {
                                        U = Math.min(U, me.earliestPresentationTime / me.timescale);
                                        var ae = me.references.reduce(function(Se, ve) {
                                            return Se + ve.info.duration || 0
                                        }, 0);
                                        G = Math.max(G, ae + me.earliestPresentationTime / me.timescale), ee = G - U
                                    }
                                }
                                if (ee && Ge(ee)) return ee
                            }
                            return e || r
                        }

                        function ln(l) {
                            var n = ge(l, 0),
                                a = 8;
                            n & 1 && (a += 4), n & 4 && (a += 4);
                            for (var e = 0, r = ge(l, 4), i = 0; i < r; i++) {
                                if (n & 256) {
                                    var o = ge(l, a);
                                    e += o, a += 4
                                }
                                n & 512 && (a += 4), n & 1024 && (a += 4), n & 2048 && (a += 4)
                            }
                            return e
                        }

                        function Ja(l, n, a) {
                            Vt(n, ["moof", "traf"]).forEach(function(e) {
                                Vt(e, ["tfhd"]).forEach(function(r) {
                                    var i = ge(r, 4),
                                        o = l[i];
                                    if (o) {
                                        var u = o.timescale || 9e4;
                                        Vt(e, ["tfdt"]).forEach(function(c) {
                                            var h = c[0],
                                                f = a * u;
                                            if (f) {
                                                var m = ge(c, 4);
                                                if (h === 0) m -= f, m = Math.max(m, 0), tr(c, 4, m);
                                                else {
                                                    m *= Math.pow(2, 32), m += ge(c, 8), m -= f, m = Math.max(m, 0);
                                                    var p = Math.floor(m / (Yt + 1)),
                                                        E = Math.floor(m % (Yt + 1));
                                                    tr(c, 4, p), tr(c, 8, E)
                                                }
                                            }
                                        })
                                    }
                                })
                            })
                        }

                        function Qr(l) {
                            var n = {
                                    valid: null,
                                    remainder: null
                                },
                                a = Vt(l, ["moof"]);
                            if (a.length < 2) return n.remainder = l, n;
                            var e = a[a.length - 1];
                            return n.valid = De(l, 0, e.byteOffset - 8), n.remainder = De(l, e.byteOffset - 8), n
                        }

                        function Nr(l, n) {
                            var a = new Uint8Array(l.length + n.length);
                            return a.set(l), a.set(n, l.length), a
                        }

                        function xr(l, n) {
                            var a = [],
                                e = n.samples,
                                r = n.timescale,
                                i = n.id,
                                o = !1,
                                u = Vt(e, ["moof"]);
                            return u.map(function(c) {
                                var h = c.byteOffset - 8,
                                    f = Vt(c, ["traf"]);
                                f.map(function(m) {
                                    var p = Vt(m, ["tfdt"]).map(function(E) {
                                        var S = E[0],
                                            L = ge(E, 4);
                                        return S === 1 && (L *= Math.pow(2, 32), L += ge(E, 8)), L / r
                                    })[0];
                                    return p !== void 0 && (l = p), Vt(m, ["tfhd"]).map(function(E) {
                                        var S = ge(E, 4),
                                            L = ge(E, 0) & 16777215,
                                            I = (L & 1) !== 0,
                                            O = (L & 2) !== 0,
                                            U = (L & 8) !== 0,
                                            G = 0,
                                            ee = (L & 16) !== 0,
                                            te = 0,
                                            _e = (L & 32) !== 0,
                                            me = 8;
                                        S === i && (I && (me += 8), O && (me += 4), U && (G = ge(E, me), me += 4), ee && (te = ge(E, me), me += 4), _e && (me += 4), n.type === "video" && (o = Vr(n.codec)), Vt(m, ["trun"]).map(function(ae) {
                                            var Se = ae[0],
                                                ve = ge(ae, 0) & 16777215,
                                                Ne = (ve & 1) !== 0,
                                                Ie = 0,
                                                kt = (ve & 4) !== 0,
                                                zt = (ve & 256) !== 0,
                                                lr = 0,
                                                Fr = (ve & 512) !== 0,
                                                Br = 0,
                                                hi = (ve & 1024) !== 0,
                                                ei = (ve & 2048) !== 0,
                                                Hr = 0,
                                                Zi = ge(ae, 4),
                                                ir = 8;
                                            Ne && (Ie = ge(ae, ir), ir += 4), kt && (ir += 4);
                                            for (var Ii = Ie + h, Fi = 0; Fi < Zi; Fi++) {
                                                if (zt ? (lr = ge(ae, ir), ir += 4) : lr = G, Fr ? (Br = ge(ae, ir), ir += 4) : Br = te, hi && (ir += 4), ei && (Se === 0 ? Hr = ge(ae, ir) : Hr = vr(ae, ir), ir += 4), n.type === Xt.VIDEO)
                                                    for (var wa = 0; wa < Br;) {
                                                        var Ci = ge(e, Ii);
                                                        if (Ii += 4, li(o, e[Ii])) {
                                                            var Bi = e.subarray(Ii, Ii + Ci);
                                                            mi(Bi, o ? 2 : 1, l + Hr / r, a)
                                                        }
                                                        Ii += Ci, wa += Ci + 4
                                                    }
                                                l += lr / r
                                            }
                                        }))
                                    })
                                })
                            }), a
                        }

                        function Vr(l) {
                            if (!l) return !1;
                            var n = l.indexOf("."),
                                a = n < 0 ? l : l.substring(0, n);
                            return a === "hvc1" || a === "hev1" || a === "dvh1" || a === "dvhe"
                        }

                        function li(l, n) {
                            if (l) {
                                var a = n >> 1 & 63;
                                return a === 39 || a === 40
                            } else {
                                var e = n & 31;
                                return e === 6
                            }
                        }

                        function mi(l, n, a, e) {
                            var r = Vn(l),
                                i = 0;
                            i += n;
                            for (var o = 0, u = 0, c = 0; i < r.length;) {
                                o = 0;
                                do {
                                    if (i >= r.length) break;
                                    c = r[i++], o += c
                                } while (c === 255);
                                u = 0;
                                do {
                                    if (i >= r.length) break;
                                    c = r[i++], u += c
                                } while (c === 255);
                                var h = r.length - i,
                                    f = i;
                                if (u < h) i += u;
                                else if (u > h) {
                                    V.error("Malformed SEI payload. " + u + " is too small, only " + h + " bytes left to parse.");
                                    break
                                }
                                if (o === 4) {
                                    var m = r[f++];
                                    if (m === 181) {
                                        var p = Ke(r, f);
                                        if (f += 2, p === 49) {
                                            var E = ge(r, f);
                                            if (f += 4, E === 1195456820) {
                                                var S = r[f++];
                                                if (S === 3) {
                                                    var L = r[f++],
                                                        I = 31 & L,
                                                        O = 64 & L,
                                                        U = O ? 2 + I * 3 : 0,
                                                        G = new Uint8Array(U);
                                                    if (O) {
                                                        G[0] = L;
                                                        for (var ee = 1; ee < U; ee++) G[ee] = r[f++]
                                                    }
                                                    e.push({
                                                        type: S,
                                                        payloadType: o,
                                                        pts: a,
                                                        bytes: G
                                                    })
                                                }
                                            }
                                        }
                                    }
                                } else if (o === 5 && u > 16) {
                                    for (var te = [], _e = 0; _e < 16; _e++) {
                                        var me = r[f++].toString(16);
                                        te.push(me.length == 1 ? "0" + me : me), (_e === 3 || _e === 5 || _e === 7 || _e === 9) && te.push("-")
                                    }
                                    for (var ae = u - 16, Se = new Uint8Array(ae), ve = 0; ve < ae; ve++) Se[ve] = r[f++];
                                    e.push({
                                        payloadType: o,
                                        pts: a,
                                        uuid: te.join(""),
                                        userData: Ze(Se),
                                        userDataBytes: Se
                                    })
                                }
                            }
                        }

                        function Vn(l) {
                            for (var n = l.byteLength, a = [], e = 1; e < n - 2;) l[e] === 0 && l[e + 1] === 0 && l[e + 2] === 3 ? (a.push(e + 2), e += 2) : e++;
                            if (a.length === 0) return l;
                            var r = n - a.length,
                                i = new Uint8Array(r),
                                o = 0;
                            for (e = 0; e < r; o++, e++) o === a[0] && (o++, a.shift()), i[e] = l[o];
                            return i
                        }

                        function vi(l) {
                            var n = l[0],
                                a = "",
                                e = "",
                                r = 0,
                                i = 0,
                                o = 0,
                                u = 0,
                                c = 0,
                                h = 0;
                            if (n === 0) {
                                for (; yi(l.subarray(h, h + 1)) !== "\0";) a += yi(l.subarray(h, h + 1)), h += 1;
                                for (a += yi(l.subarray(h, h + 1)), h += 1; yi(l.subarray(h, h + 1)) !== "\0";) e += yi(l.subarray(h, h + 1)), h += 1;
                                e += yi(l.subarray(h, h + 1)), h += 1, r = ge(l, 12), i = ge(l, 16), u = ge(l, 20), c = ge(l, 24), h = 28
                            } else if (n === 1) {
                                h += 4, r = ge(l, h), h += 4;
                                var f = ge(l, h);
                                h += 4;
                                var m = ge(l, h);
                                for (h += 4, o = Math.pow(2, 32) * f + m, B(o) || (o = Number.MAX_SAFE_INTEGER, V.warn("Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box")), u = ge(l, h), h += 4, c = ge(l, h), h += 4; yi(l.subarray(h, h + 1)) !== "\0";) a += yi(l.subarray(h, h + 1)), h += 1;
                                for (a += yi(l.subarray(h, h + 1)), h += 1; yi(l.subarray(h, h + 1)) !== "\0";) e += yi(l.subarray(h, h + 1)), h += 1;
                                e += yi(l.subarray(h, h + 1)), h += 1
                            }
                            var p = l.subarray(h, l.byteLength);
                            return {
                                schemeIdUri: a,
                                value: e,
                                timeScale: r,
                                presentationTime: o,
                                presentationTimeDelta: i,
                                eventDuration: u,
                                id: c,
                                payload: p
                            }
                        }

                        function la(l) {
                            for (var n = arguments.length, a = new Array(n > 1 ? n - 1 : 0), e = 1; e < n; e++) a[e - 1] = arguments[e];
                            for (var r = a.length, i = 8, o = r; o--;) i += a[o].byteLength;
                            var u = new Uint8Array(i);
                            for (u[0] = i >> 24 & 255, u[1] = i >> 16 & 255, u[2] = i >> 8 & 255, u[3] = i & 255, u.set(l, 4), o = 0, i = 8; o < r; o++) u.set(a[o], i), i += a[o].byteLength;
                            return u
                        }

                        function Ia(l, n, a) {
                            if (l.byteLength !== 16) throw new RangeError("Invalid system id");
                            var e, r;
                            if (n) {
                                e = 1, r = new Uint8Array(n.length * 16);
                                for (var i = 0; i < n.length; i++) {
                                    var o = n[i];
                                    if (o.byteLength !== 16) throw new RangeError("Invalid key");
                                    r.set(o, i * 16)
                                }
                            } else e = 0, r = new Uint8Array;
                            var u;
                            e > 0 ? (u = new Uint8Array(4), n.length > 0 && new DataView(u.buffer).setUint32(0, n.length, !1)) : u = new Uint8Array;
                            var c = new Uint8Array(4);
                            return a && a.byteLength > 0 && new DataView(c.buffer).setUint32(0, a.byteLength, !1), la([112, 115, 115, 104], new Uint8Array([e, 0, 0, 0]), l, u, r, c, a || new Uint8Array)
                        }

                        function Oi(l) {
                            var n = [];
                            if (l instanceof ArrayBuffer)
                                for (var a = l.byteLength, e = 0; e + 32 < a;) {
                                    var r = new DataView(l, e),
                                        i = Ki(r);
                                    n.push(i), e += i.size
                                }
                            return n
                        }

                        function Ki(l) {
                            var n = l.getUint32(0),
                                a = l.byteOffset,
                                e = l.byteLength;
                            if (e < n) return {
                                offset: a,
                                size: e
                            };
                            var r = l.getUint32(4);
                            if (r !== 1886614376) return {
                                offset: a,
                                size: n
                            };
                            var i = l.getUint32(8) >>> 24;
                            if (i !== 0 && i !== 1) return {
                                offset: a,
                                size: n
                            };
                            var o = l.buffer,
                                u = Lr.hexDump(new Uint8Array(o, a + 12, 16)),
                                c = l.getUint32(28),
                                h = null,
                                f = null;
                            if (i === 0) {
                                if (n - 32 < c || c < 22) return {
                                    offset: a,
                                    size: n
                                };
                                f = new Uint8Array(o, a + 32, c)
                            } else if (i === 1) {
                                if (!c || e < a + 32 + c * 16 + 16) return {
                                    offset: a,
                                    size: n
                                };
                                h = [];
                                for (var m = 0; m < c; m++) h.push(new Uint8Array(o, a + 32 + m * 16, 16))
                            }
                            return {
                                version: i,
                                systemId: u,
                                kids: h,
                                data: f,
                                offset: a,
                                size: n
                            }
                        }
                        var un = {},
                            Ha = function() {
                                l.clearKeyUriToKeyIdMap = function() {
                                    un = {}
                                };

                                function l(a, e, r, i, o) {
                                    i === void 0 && (i = [1]), o === void 0 && (o = null), this.uri = void 0, this.method = void 0, this.keyFormat = void 0, this.keyFormatVersions = void 0, this.encrypted = void 0, this.isCommonEncryption = void 0, this.iv = null, this.key = null, this.keyId = null, this.pssh = null, this.method = a, this.uri = e, this.keyFormat = r, this.keyFormatVersions = i, this.iv = o, this.encrypted = a ? a !== "NONE" : !1, this.isCommonEncryption = this.encrypted && a !== "AES-128"
                                }
                                var n = l.prototype;
                                return n.isSupported = function() {
                                    if (this.method) {
                                        if (this.method === "AES-128" || this.method === "NONE") return !0;
                                        if (this.keyFormat === "identity") return this.method === "SAMPLE-AES";
                                        switch (this.keyFormat) {
                                            case Kt.FAIRPLAY:
                                            case Kt.WIDEVINE:
                                            case Kt.PLAYREADY:
                                            case Kt.CLEARKEY:
                                                return ["ISO-23001-7", "SAMPLE-AES", "SAMPLE-AES-CENC", "SAMPLE-AES-CTR"].indexOf(this.method) !== -1
                                        }
                                    }
                                    return !1
                                }, n.getDecryptData = function(e) {
                                    if (!this.encrypted || !this.uri) return null;
                                    if (this.method === "AES-128" && this.uri && !this.iv) {
                                        typeof e != "number" && (this.method === "AES-128" && !this.iv && V.warn('missing IV for initialization segment with method="' + this.method + '" - compliance issue'), e = 0);
                                        var r = Sn(e),
                                            i = new l(this.method, this.uri, "identity", this.keyFormatVersions, r);
                                        return i
                                    }
                                    var o = Wr(this.uri);
                                    if (o) switch (this.keyFormat) {
                                        case Kt.WIDEVINE:
                                            this.pssh = o, o.length >= 22 && (this.keyId = o.subarray(o.length - 22, o.length - 6));
                                            break;
                                        case Kt.PLAYREADY:
                                            {
                                                var u = new Uint8Array([154, 4, 240, 121, 152, 64, 66, 134, 171, 146, 230, 91, 224, 136, 95, 149]);this.pssh = Ia(u, null, o),
                                                this.keyId = pe(o);
                                                break
                                            }
                                        default:
                                            {
                                                var c = o.subarray(0, 16);
                                                if (c.length !== 16) {
                                                    var h = new Uint8Array(16);
                                                    h.set(c, 16 - c.length), c = h
                                                }
                                                this.keyId = c;
                                                break
                                            }
                                    }
                                    if (!this.keyId || this.keyId.byteLength !== 16) {
                                        var f = un[this.uri];
                                        if (!f) {
                                            var m = Object.keys(un).length % Number.MAX_SAFE_INTEGER;
                                            f = new Uint8Array(16);
                                            var p = new DataView(f.buffer, 12, 4);
                                            p.setUint32(0, m), un[this.uri] = f
                                        }
                                        this.keyId = f
                                    }
                                    return this
                                }, l
                            }();

                        function Sn(l) {
                            for (var n = new Uint8Array(16), a = 12; a < 16; a++) n[a] = l >> 8 * (15 - a) & 255;
                            return n
                        }
                        var Yi = /\{\$([a-zA-Z0-9-_]+)\}/g;

                        function xi(l) {
                            return Yi.test(l)
                        }

                        function Li(l, n, a) {
                            if (l.variableList !== null || l.hasVariableRefs)
                                for (var e = a.length; e--;) {
                                    var r = a[e],
                                        i = n[r];
                                    i && (n[r] = _a(l, i))
                                }
                        }

                        function _a(l, n) {
                            if (l.variableList !== null || l.hasVariableRefs) {
                                var a = l.variableList;
                                return n.replace(Yi, function(e) {
                                    var r = e.substring(2, e.length - 1),
                                        i = a == null ? void 0 : a[r];
                                    return i === void 0 ? (l.playlistParsingError || (l.playlistParsingError = new Error('Missing preceding EXT-X-DEFINE tag for Variable Reference: "' + r + '"')), e) : i
                                })
                            }
                            return n
                        }

                        function gn(l, n, a) {
                            var e = l.variableList;
                            e || (l.variableList = e = {});
                            var r, i;
                            if ("QUERYPARAM" in n) {
                                r = n.QUERYPARAM;
                                try {
                                    var o = new self.URL(a).searchParams;
                                    if (o.has(r)) i = o.get(r);
                                    else throw new Error('"' + r + '" does not match any query parameter in URI: "' + a + '"')
                                } catch (u) {
                                    l.playlistParsingError || (l.playlistParsingError = new Error("EXT-X-DEFINE QUERYPARAM: " + u.message))
                                }
                            } else r = n.NAME, i = n.VALUE;
                            r in e ? l.playlistParsingError || (l.playlistParsingError = new Error('EXT-X-DEFINE duplicate Variable Name declarations: "' + r + '"')) : e[r] = i || ""
                        }

                        function Ji(l, n, a) {
                            var e = n.IMPORT;
                            if (a && e in a) {
                                var r = l.variableList;
                                r || (l.variableList = r = {}), r[e] = a[e]
                            } else l.playlistParsingError || (l.playlistParsingError = new Error('EXT-X-DEFINE IMPORT attribute not found in Multivariant Playlist: "' + e + '"'))
                        }

                        function Ni(l) {
                            if (l === void 0 && (l = !0), typeof self != "undefined") {
                                var n = (l || !self.MediaSource) && self.ManagedMediaSource;
                                return n || self.MediaSource || self.WebKitMediaSource
                            }
                        }

                        function ea(l) {
                            return typeof self != "undefined" && l === self.ManagedMediaSource
                        }
                        var ma = {
                            audio: {
                                a3ds: 1,
                                "ac-3": .95,
                                "ac-4": 1,
                                alac: .9,
                                alaw: 1,
                                dra1: 1,
                                "dts+": 1,
                                "dts-": 1,
                                dtsc: 1,
                                dtse: 1,
                                dtsh: 1,
                                "ec-3": .9,
                                enca: 1,
                                fLaC: .9,
                                flac: .9,
                                FLAC: .9,
                                g719: 1,
                                g726: 1,
                                m4ae: 1,
                                mha1: 1,
                                mha2: 1,
                                mhm1: 1,
                                mhm2: 1,
                                mlpa: 1,
                                mp4a: 1,
                                "raw ": 1,
                                Opus: 1,
                                opus: 1,
                                samr: 1,
                                sawb: 1,
                                sawp: 1,
                                sevc: 1,
                                sqcp: 1,
                                ssmv: 1,
                                twos: 1,
                                ulaw: 1
                            },
                            video: {
                                avc1: 1,
                                avc2: 1,
                                avc3: 1,
                                avc4: 1,
                                avcp: 1,
                                av01: .8,
                                drac: 1,
                                dva1: 1,
                                dvav: 1,
                                dvh1: .7,
                                dvhe: .7,
                                encv: 1,
                                hev1: .75,
                                hvc1: .75,
                                mjp2: 1,
                                mp4v: 1,
                                mvc1: 1,
                                mvc2: 1,
                                mvc3: 1,
                                mvc4: 1,
                                resv: 1,
                                rv60: 1,
                                s263: 1,
                                svc1: 1,
                                svc2: 1,
                                "vc-1": 1,
                                vp08: 1,
                                vp09: .9
                            },
                            text: {
                                stpp: 1,
                                wvtt: 1
                            }
                        };

                        function Sa(l, n) {
                            var a = ma[n];
                            return !!a && !!a[l.slice(0, 4)]
                        }

                        function Ca(l, n, a) {
                            return a === void 0 && (a = !0), !l.split(",").some(function(e) {
                                return !en(e, n, a)
                            })
                        }

                        function en(l, n, a) {
                            var e;
                            a === void 0 && (a = !0);
                            var r = Ni(a);
                            return (e = r == null ? void 0 : r.isTypeSupported(Pr(l, n))) != null ? e : !1
                        }

                        function Pr(l, n) {
                            return n + '/mp4;codecs="' + l + '"'
                        }

                        function qr(l) {
                            if (l) {
                                var n = l.substring(0, 4);
                                return ma.video[n]
                            }
                            return 2
                        }

                        function va(l) {
                            return l.split(",").reduce(function(n, a) {
                                var e = ma.video[a];
                                return e ? (e * 2 + n) / (n ? 3 : 2) : (ma.audio[a] + n) / (n ? 2 : 1)
                            }, 0)
                        }
                        var Kr = {};

                        function ta(l, n) {
                            if (n === void 0 && (n = !0), Kr[l]) return Kr[l];
                            for (var a = {
                                    flac: ["flac", "fLaC", "FLAC"],
                                    opus: ["opus", "Opus"]
                                }[l], e = 0; e < a.length; e++)
                                if (en(a[e], "audio", n)) return Kr[l] = a[e], a[e];
                            return l
                        }
                        var ra = /flac|opus/i;

                        function Vi(l, n) {
                            return n === void 0 && (n = !0), l.replace(ra, function(a) {
                                return ta(a.toLowerCase(), n)
                            })
                        }

                        function Da(l, n) {
                            return l && l !== "mp4a" ? l : n && n.split(",")[0]
                        }

                        function tn(l) {
                            for (var n = l.split(","), a = 0; a < n.length; a++) {
                                var e = n[a].split(".");
                                if (e.length > 2) {
                                    var r = e.shift() + ".";
                                    r += parseInt(e.shift()).toString(16), r += ("000" + parseInt(e.shift()).toString(16)).slice(-4), n[a] = r
                                }
                            }
                            return n.join(",")
                        }
                        var ia = /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g,
                            Pa = /#EXT-X-MEDIA:(.*)/g,
                            or = /^#EXT(?:INF|-X-TARGETDURATION):/m,
                            qa = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /(?!#) *(\S[^\r\n]*)/.source, /#EXT-X-BYTERANGE:*(.+)/.source, /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /#.*/.source].join("|"), "g"),
                            En = new RegExp([/#(EXTM3U)/.source, /#EXT-X-(DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/.source, /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/.source, /#EXT-X-(DISCONTINUITY|ENDLIST|GAP|INDEPENDENT-SEGMENTS)/.source, /(#)([^:]*):(.*)/.source, /(#)(.*)(?:.*)\r?\n?/.source].join("|")),
                            pa = function() {
                                function l() {}
                                return l.findGroup = function(a, e) {
                                    for (var r = 0; r < a.length; r++) {
                                        var i = a[r];
                                        if (i.id === e) return i
                                    }
                                }, l.resolve = function(a, e) {
                                    return fe.buildAbsoluteURL(e, a, {
                                        alwaysNormalize: !0
                                    })
                                }, l.isMediaPlaylist = function(a) {
                                    return or.test(a)
                                }, l.parseMasterPlaylist = function(a, e) {
                                    var r = xi(a),
                                        i = {
                                            contentSteering: null,
                                            levels: [],
                                            playlistParsingError: null,
                                            sessionData: null,
                                            sessionKeys: null,
                                            startTimeOffset: null,
                                            variableList: null,
                                            hasVariableRefs: r
                                        },
                                        o = [];
                                    ia.lastIndex = 0;
                                    for (var u;
                                        (u = ia.exec(a)) != null;)
                                        if (u[1]) {
                                            var c, h = new st(u[1]);
                                            Li(i, h, ["CODECS", "SUPPLEMENTAL-CODECS", "ALLOWED-CPC", "PATHWAY-ID", "STABLE-VARIANT-ID", "AUDIO", "VIDEO", "SUBTITLES", "CLOSED-CAPTIONS", "NAME"]);
                                            var f = _a(i, u[2]),
                                                m = {
                                                    attrs: h,
                                                    bitrate: h.decimalInteger("BANDWIDTH") || h.decimalInteger("AVERAGE-BANDWIDTH"),
                                                    name: h.NAME,
                                                    url: l.resolve(f, e)
                                                },
                                                p = h.decimalResolution("RESOLUTION");
                                            p && (m.width = p.width, m.height = p.height), Zn(h.CODECS, m), (c = m.unknownCodecs) != null && c.length || o.push(m), i.levels.push(m)
                                        } else if (u[3]) {
                                        var E = u[3],
                                            S = u[4];
                                        switch (E) {
                                            case "SESSION-DATA":
                                                {
                                                    var L = new st(S);Li(i, L, ["DATA-ID", "LANGUAGE", "VALUE", "URI"]);
                                                    var I = L["DATA-ID"];I && (i.sessionData === null && (i.sessionData = {}), i.sessionData[I] = L);
                                                    break
                                                }
                                            case "SESSION-KEY":
                                                {
                                                    var O = Va(S, e, i);O.encrypted && O.isSupported() ? (i.sessionKeys === null && (i.sessionKeys = []), i.sessionKeys.push(O)) : V.warn('[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "' + S + '"');
                                                    break
                                                }
                                            case "DEFINE":
                                                {
                                                    {
                                                        var U = new st(S);
                                                        Li(i, U, ["NAME", "VALUE", "QUERYPARAM"]), gn(i, U, e)
                                                    }
                                                    break
                                                }
                                            case "CONTENT-STEERING":
                                                {
                                                    var G = new st(S);Li(i, G, ["SERVER-URI", "PATHWAY-ID"]),
                                                    i.contentSteering = {
                                                        uri: l.resolve(G["SERVER-URI"], e),
                                                        pathwayId: G["PATHWAY-ID"] || "."
                                                    };
                                                    break
                                                }
                                            case "START":
                                                {
                                                    i.startTimeOffset = kn(S);
                                                    break
                                                }
                                        }
                                    }
                                    var ee = o.length > 0 && o.length < i.levels.length;
                                    return i.levels = ee ? o : i.levels, i.levels.length === 0 && (i.playlistParsingError = new Error("no levels found in manifest")), i
                                }, l.parseMasterPlaylistMedia = function(a, e, r) {
                                    var i, o = {},
                                        u = r.levels,
                                        c = {
                                            AUDIO: u.map(function(te) {
                                                return {
                                                    id: te.attrs.AUDIO,
                                                    audioCodec: te.audioCodec
                                                }
                                            }),
                                            SUBTITLES: u.map(function(te) {
                                                return {
                                                    id: te.attrs.SUBTITLES,
                                                    textCodec: te.textCodec
                                                }
                                            }),
                                            "CLOSED-CAPTIONS": []
                                        },
                                        h = 0;
                                    for (Pa.lastIndex = 0;
                                        (i = Pa.exec(a)) !== null;) {
                                        var f = new st(i[1]),
                                            m = f.TYPE;
                                        if (m) {
                                            var p = c[m],
                                                E = o[m] || [];
                                            o[m] = E, Li(r, f, ["URI", "GROUP-ID", "LANGUAGE", "ASSOC-LANGUAGE", "STABLE-RENDITION-ID", "NAME", "INSTREAM-ID", "CHARACTERISTICS", "CHANNELS"]);
                                            var S = f.LANGUAGE,
                                                L = f["ASSOC-LANGUAGE"],
                                                I = f.CHANNELS,
                                                O = f.CHARACTERISTICS,
                                                U = f["INSTREAM-ID"],
                                                G = {
                                                    attrs: f,
                                                    bitrate: 0,
                                                    id: h++,
                                                    groupId: f["GROUP-ID"] || "",
                                                    name: f.NAME || S || "",
                                                    type: m,
                                                    default: f.bool("DEFAULT"),
                                                    autoselect: f.bool("AUTOSELECT"),
                                                    forced: f.bool("FORCED"),
                                                    lang: S,
                                                    url: f.URI ? l.resolve(f.URI, e) : ""
                                                };
                                            if (L && (G.assocLang = L), I && (G.channels = I), O && (G.characteristics = O), U && (G.instreamId = U), p != null && p.length) {
                                                var ee = l.findGroup(p, G.groupId) || p[0];
                                                lt(G, ee, "audioCodec"), lt(G, ee, "textCodec")
                                            }
                                            E.push(G)
                                        }
                                    }
                                    return o
                                }, l.parseLevelPlaylist = function(a, e, r, i, o, u) {
                                    var c = new Mi(e),
                                        h = c.fragments,
                                        f = null,
                                        m = 0,
                                        p = 0,
                                        E = 0,
                                        S = 0,
                                        L = null,
                                        I = new Zr(i, e),
                                        O, U, G, ee = -1,
                                        te = !1,
                                        _e = null;
                                    for (qa.lastIndex = 0, c.m3u8 = a, c.hasVariableRefs = xi(a);
                                        (O = qa.exec(a)) !== null;) {
                                        te && (te = !1, I = new Zr(i, e), I.start = E, I.sn = m, I.cc = S, I.level = r, f && (I.initSegment = f, I.rawProgramDateTime = f.rawProgramDateTime, f.rawProgramDateTime = null, _e && (I.setByteRange(_e), _e = null)));
                                        var me = O[1];
                                        if (me) {
                                            I.duration = parseFloat(me);
                                            var ae = (" " + O[2]).slice(1);
                                            I.title = ae || null, I.tagList.push(ae ? ["INF", me, ae] : ["INF", me])
                                        } else if (O[3]) {
                                            if (Ge(I.duration)) {
                                                I.start = E, G && D(I, G, c), I.sn = m, I.level = r, I.cc = S, h.push(I);
                                                var Se = (" " + O[3]).slice(1);
                                                I.relurl = _a(c, Se), rn(I, L), L = I, E += I.duration, m++, p = 0, te = !0
                                            }
                                        } else if (O[4]) {
                                            var ve = (" " + O[4]).slice(1);
                                            L ? I.setByteRange(ve, L) : I.setByteRange(ve)
                                        } else if (O[5]) I.rawProgramDateTime = (" " + O[5]).slice(1), I.tagList.push(["PROGRAM-DATE-TIME", I.rawProgramDateTime]), ee === -1 && (ee = h.length);
                                        else {
                                            if (O = O[0].match(En), !O) {
                                                V.warn("No matches on slow regex match for level playlist!");
                                                continue
                                            }
                                            for (U = 1; U < O.length && typeof O[U] == "undefined"; U++);
                                            var Ne = (" " + O[U]).slice(1),
                                                Ie = (" " + O[U + 1]).slice(1),
                                                kt = O[U + 2] ? (" " + O[U + 2]).slice(1) : "";
                                            switch (Ne) {
                                                case "PLAYLIST-TYPE":
                                                    c.type = Ie.toUpperCase();
                                                    break;
                                                case "MEDIA-SEQUENCE":
                                                    m = c.startSN = parseInt(Ie);
                                                    break;
                                                case "SKIP":
                                                    {
                                                        var zt = new st(Ie);Li(c, zt, ["RECENTLY-REMOVED-DATERANGES"]);
                                                        var lr = zt.decimalInteger("SKIPPED-SEGMENTS");
                                                        if (Ge(lr)) {
                                                            c.skippedSegments = lr;
                                                            for (var Fr = lr; Fr--;) h.unshift(null);
                                                            m += lr
                                                        }
                                                        var Br = zt.enumeratedString("RECENTLY-REMOVED-DATERANGES");Br && (c.recentlyRemovedDateranges = Br.split("	"));
                                                        break
                                                    }
                                                case "TARGETDURATION":
                                                    c.targetduration = Math.max(parseInt(Ie), 1);
                                                    break;
                                                case "VERSION":
                                                    c.version = parseInt(Ie);
                                                    break;
                                                case "INDEPENDENT-SEGMENTS":
                                                case "EXTM3U":
                                                    break;
                                                case "ENDLIST":
                                                    c.live = !1;
                                                    break;
                                                case "#":
                                                    (Ie || kt) && I.tagList.push(kt ? [Ie, kt] : [Ie]);
                                                    break;
                                                case "DISCONTINUITY":
                                                    S++, I.tagList.push(["DIS"]);
                                                    break;
                                                case "GAP":
                                                    I.gap = !0, I.tagList.push([Ne]);
                                                    break;
                                                case "BITRATE":
                                                    I.tagList.push([Ne, Ie]);
                                                    break;
                                                case "DATERANGE":
                                                    {
                                                        var hi = new st(Ie);Li(c, hi, ["ID", "CLASS", "START-DATE", "END-DATE", "SCTE35-CMD", "SCTE35-OUT", "SCTE35-IN"]),
                                                        Li(c, hi, hi.clientAttrs);
                                                        var ei = new ht(hi, c.dateRanges[hi.ID]);ei.isValid || c.skippedSegments ? c.dateRanges[ei.id] = ei : V.warn('Ignoring invalid DATERANGE tag: "' + Ie + '"'),
                                                        I.tagList.push(["EXT-X-DATERANGE", Ie]);
                                                        break
                                                    }
                                                case "DEFINE":
                                                    {
                                                        {
                                                            var Hr = new st(Ie);
                                                            Li(c, Hr, ["NAME", "VALUE", "IMPORT", "QUERYPARAM"]), "IMPORT" in Hr ? Ji(c, Hr, u) : gn(c, Hr, e)
                                                        }
                                                        break
                                                    }
                                                case "DISCONTINUITY-SEQUENCE":
                                                    S = parseInt(Ie);
                                                    break;
                                                case "KEY":
                                                    {
                                                        var Zi = Va(Ie, e, c);
                                                        if (Zi.isSupported()) {
                                                            if (Zi.method === "NONE") {
                                                                G = void 0;
                                                                break
                                                            }
                                                            G || (G = {}), G[Zi.keyFormat] && (G = le({}, G)), G[Zi.keyFormat] = Zi
                                                        } else V.warn('[Keys] Ignoring invalid EXT-X-KEY tag: "' + Ie + '"');
                                                        break
                                                    }
                                                case "START":
                                                    c.startTimeOffset = kn(Ie);
                                                    break;
                                                case "MAP":
                                                    {
                                                        var ir = new st(Ie);
                                                        if (Li(c, ir, ["BYTERANGE", "URI"]), I.duration) {
                                                            var Ii = new Zr(i, e);
                                                            di(Ii, ir, r, G), f = Ii, I.initSegment = f, f.rawProgramDateTime && !I.rawProgramDateTime && (I.rawProgramDateTime = f.rawProgramDateTime)
                                                        } else {
                                                            var Fi = I.byteRangeEndOffset;
                                                            if (Fi) {
                                                                var wa = I.byteRangeStartOffset;
                                                                _e = Fi - wa + "@" + wa
                                                            } else _e = null;
                                                            di(I, ir, r, G), f = I, te = !0
                                                        }
                                                        break
                                                    }
                                                case "SERVER-CONTROL":
                                                    {
                                                        var Ci = new st(Ie);c.canBlockReload = Ci.bool("CAN-BLOCK-RELOAD"),
                                                        c.canSkipUntil = Ci.optionalFloat("CAN-SKIP-UNTIL", 0),
                                                        c.canSkipDateRanges = c.canSkipUntil > 0 && Ci.bool("CAN-SKIP-DATERANGES"),
                                                        c.partHoldBack = Ci.optionalFloat("PART-HOLD-BACK", 0),
                                                        c.holdBack = Ci.optionalFloat("HOLD-BACK", 0);
                                                        break
                                                    }
                                                case "PART-INF":
                                                    {
                                                        var Bi = new st(Ie);c.partTarget = Bi.decimalFloatingPoint("PART-TARGET");
                                                        break
                                                    }
                                                case "PART":
                                                    {
                                                        var on = c.partList;on || (on = c.partList = []);
                                                        var Na = p > 0 ? on[on.length - 1] : void 0,
                                                            pi = p++,
                                                            Ra = new st(Ie);Li(c, Ra, ["BYTERANGE", "URI"]);
                                                        var Ua = new br(Ra, I, e, pi, Na);on.push(Ua),
                                                        I.duration += Ua.duration;
                                                        break
                                                    }
                                                case "PRELOAD-HINT":
                                                    {
                                                        var Hi = new st(Ie);Li(c, Hi, ["URI"]),
                                                        c.preloadHint = Hi;
                                                        break
                                                    }
                                                case "RENDITION-REPORT":
                                                    {
                                                        var Ta = new st(Ie);Li(c, Ta, ["URI"]),
                                                        c.renditionReports = c.renditionReports || [],
                                                        c.renditionReports.push(Ta);
                                                        break
                                                    }
                                                default:
                                                    V.warn("line parsed but not handled: " + O);
                                                    break
                                            }
                                        }
                                    }
                                    L && !L.relurl ? (h.pop(), E -= L.duration, c.partList && (c.fragmentHint = L)) : c.partList && (rn(I, L), I.cc = S, c.fragmentHint = I, G && D(I, G, c));
                                    var Wi = h.length,
                                        An = h[0],
                                        Aa = h[Wi - 1];
                                    if (E += c.skippedSegments * c.targetduration, E > 0 && Wi && Aa) {
                                        c.averagetargetduration = E / Wi;
                                        var $s = Aa.sn;
                                        c.endSN = $s !== "initSegment" ? $s : 0, c.live || (Aa.endList = !0), An && (c.startCC = An.cc)
                                    } else c.endSN = 0, c.startCC = 0;
                                    return c.fragmentHint && (E += c.fragmentHint.duration), c.totalduration = E, c.endCC = S, ee > 0 && Oa(h, ee), c
                                }, l
                            }();

                        function Va(l, n, a) {
                            var e, r, i = new st(l);
                            Li(a, i, ["KEYFORMAT", "KEYFORMATVERSIONS", "URI", "IV", "URI"]);
                            var o = (e = i.METHOD) != null ? e : "",
                                u = i.URI,
                                c = i.hexadecimalInteger("IV"),
                                h = i.KEYFORMATVERSIONS,
                                f = (r = i.KEYFORMAT) != null ? r : "identity";
                            u && i.IV && !c && V.error("Invalid IV: " + i.IV);
                            var m = u ? pa.resolve(u, n) : "",
                                p = (h || "1").split("/").map(Number).filter(Number.isFinite);
                            return new Ha(o, m, f, p, c)
                        }

                        function kn(l) {
                            var n = new st(l),
                                a = n.decimalFloatingPoint("TIME-OFFSET");
                            return Ge(a) ? a : null
                        }

                        function Zn(l, n) {
                            var a = (l || "").split(/[ ,]+/).filter(function(e) {
                                return e
                            });
                            ["video", "audio", "text"].forEach(function(e) {
                                var r = a.filter(function(i) {
                                    return Sa(i, e)
                                });
                                r.length && (n[e + "Codec"] = r.join(","), a = a.filter(function(i) {
                                    return r.indexOf(i) === -1
                                }))
                            }), n.unknownCodecs = a
                        }

                        function lt(l, n, a) {
                            var e = n[a];
                            e && (l[a] = e)
                        }

                        function Oa(l, n) {
                            for (var a = l[n], e = n; e--;) {
                                var r = l[e];
                                if (!r) return;
                                r.programDateTime = a.programDateTime - r.duration * 1e3, a = r
                            }
                        }

                        function rn(l, n) {
                            l.rawProgramDateTime ? l.programDateTime = Date.parse(l.rawProgramDateTime) : n != null && n.programDateTime && (l.programDateTime = n.endProgramDateTime), Ge(l.programDateTime) || (l.programDateTime = null, l.rawProgramDateTime = null)
                        }

                        function di(l, n, a, e) {
                            l.relurl = n.URI, n.BYTERANGE && l.setByteRange(n.BYTERANGE), l.level = a, l.sn = "initSegment", e && (l.levelkeys = e), l.initSegment = null
                        }

                        function D(l, n, a) {
                            l.levelkeys = n;
                            var e = a.encryptedFragments;
                            (!e.length || e[e.length - 1].levelkeys !== n) && Object.keys(n).some(function(r) {
                                return n[r].isCommonEncryption
                            }) && e.push(l)
                        }
                        var C = {
                                MANIFEST: "manifest",
                                LEVEL: "level",
                                AUDIO_TRACK: "audioTrack",
                                SUBTITLE_TRACK: "subtitleTrack"
                            },
                            H = {
                                MAIN: "main",
                                AUDIO: "audio",
                                SUBTITLE: "subtitle"
                            };

                        function re(l) {
                            var n = l.type;
                            switch (n) {
                                case C.AUDIO_TRACK:
                                    return H.AUDIO;
                                case C.SUBTITLE_TRACK:
                                    return H.SUBTITLE;
                                default:
                                    return H.MAIN
                            }
                        }

                        function se(l, n) {
                            var a = l.url;
                            return (a === void 0 || a.indexOf("data:") === 0) && (a = n.url), a
                        }
                        var Ce = function() {
                            function l(a) {
                                this.hls = void 0, this.loaders = Object.create(null), this.variableList = null, this.hls = a, this.registerListeners()
                            }
                            var n = l.prototype;
                            return n.startLoad = function(e) {}, n.stopLoad = function() {
                                this.destroyInternalLoaders()
                            }, n.registerListeners = function() {
                                var e = this.hls;
                                e.on(_.MANIFEST_LOADING, this.onManifestLoading, this), e.on(_.LEVEL_LOADING, this.onLevelLoading, this), e.on(_.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this), e.on(_.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
                            }, n.unregisterListeners = function() {
                                var e = this.hls;
                                e.off(_.MANIFEST_LOADING, this.onManifestLoading, this), e.off(_.LEVEL_LOADING, this.onLevelLoading, this), e.off(_.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this), e.off(_.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
                            }, n.createInternalLoader = function(e) {
                                var r = this.hls.config,
                                    i = r.pLoader,
                                    o = r.loader,
                                    u = i || o,
                                    c = new u(r);
                                return this.loaders[e.type] = c, c
                            }, n.getInternalLoader = function(e) {
                                return this.loaders[e.type]
                            }, n.resetInternalLoader = function(e) {
                                this.loaders[e] && delete this.loaders[e]
                            }, n.destroyInternalLoaders = function() {
                                for (var e in this.loaders) {
                                    var r = this.loaders[e];
                                    r && r.destroy(), this.resetInternalLoader(e)
                                }
                            }, n.destroy = function() {
                                this.variableList = null, this.unregisterListeners(), this.destroyInternalLoaders()
                            }, n.onManifestLoading = function(e, r) {
                                var i = r.url;
                                this.variableList = null, this.load({
                                    id: null,
                                    level: 0,
                                    responseType: "text",
                                    type: C.MANIFEST,
                                    url: i,
                                    deliveryDirectives: null
                                })
                            }, n.onLevelLoading = function(e, r) {
                                var i = r.id,
                                    o = r.level,
                                    u = r.pathwayId,
                                    c = r.url,
                                    h = r.deliveryDirectives;
                                this.load({
                                    id: i,
                                    level: o,
                                    pathwayId: u,
                                    responseType: "text",
                                    type: C.LEVEL,
                                    url: c,
                                    deliveryDirectives: h
                                })
                            }, n.onAudioTrackLoading = function(e, r) {
                                var i = r.id,
                                    o = r.groupId,
                                    u = r.url,
                                    c = r.deliveryDirectives;
                                this.load({
                                    id: i,
                                    groupId: o,
                                    level: null,
                                    responseType: "text",
                                    type: C.AUDIO_TRACK,
                                    url: u,
                                    deliveryDirectives: c
                                })
                            }, n.onSubtitleTrackLoading = function(e, r) {
                                var i = r.id,
                                    o = r.groupId,
                                    u = r.url,
                                    c = r.deliveryDirectives;
                                this.load({
                                    id: i,
                                    groupId: o,
                                    level: null,
                                    responseType: "text",
                                    type: C.SUBTITLE_TRACK,
                                    url: u,
                                    deliveryDirectives: c
                                })
                            }, n.load = function(e) {
                                var r, i = this,
                                    o = this.hls.config,
                                    u = this.getInternalLoader(e);
                                if (u) {
                                    var c = u.context;
                                    if (c && c.url === e.url && c.level === e.level) {
                                        V.trace("[playlist-loader]: playlist request ongoing");
                                        return
                                    }
                                    V.log("[playlist-loader]: aborting previous loader for type: " + e.type), u.abort()
                                }
                                var h;
                                if (e.type === C.MANIFEST ? h = o.manifestLoadPolicy.default : h = le({}, o.playlistLoadPolicy.default, {
                                        timeoutRetry: null,
                                        errorRetry: null
                                    }), u = this.createInternalLoader(e), Ge((r = e.deliveryDirectives) == null ? void 0 : r.part)) {
                                    var f;
                                    if (e.type === C.LEVEL && e.level !== null ? f = this.hls.levels[e.level].details : e.type === C.AUDIO_TRACK && e.id !== null ? f = this.hls.audioTracks[e.id].details : e.type === C.SUBTITLE_TRACK && e.id !== null && (f = this.hls.subtitleTracks[e.id].details), f) {
                                        var m = f.partTarget,
                                            p = f.targetduration;
                                        if (m && p) {
                                            var E = Math.max(m * 3, p * .8) * 1e3;
                                            h = le({}, h, {
                                                maxTimeToFirstByteMs: Math.min(E, h.maxTimeToFirstByteMs),
                                                maxLoadTimeMs: Math.min(E, h.maxTimeToFirstByteMs)
                                            })
                                        }
                                    }
                                }
                                var S = h.errorRetry || h.timeoutRetry || {},
                                    L = {
                                        loadPolicy: h,
                                        timeout: h.maxLoadTimeMs,
                                        maxRetry: S.maxNumRetry || 0,
                                        retryDelay: S.retryDelayMs || 0,
                                        maxRetryDelay: S.maxRetryDelayMs || 0
                                    },
                                    I = {
                                        onSuccess: function(U, G, ee, te) {
                                            var _e = i.getInternalLoader(ee);
                                            i.resetInternalLoader(ee.type);
                                            var me = U.data;
                                            if (me.indexOf("#EXTM3U") !== 0) {
                                                i.handleManifestParsingError(U, ee, new Error("no EXTM3U delimiter"), te || null, G);
                                                return
                                            }
                                            G.parsing.start = performance.now(), pa.isMediaPlaylist(me) ? i.handleTrackOrLevelPlaylist(U, G, ee, te || null, _e) : i.handleMasterPlaylist(U, G, ee, te)
                                        },
                                        onError: function(U, G, ee, te) {
                                            i.handleNetworkError(G, ee, !1, U, te)
                                        },
                                        onTimeout: function(U, G, ee) {
                                            i.handleNetworkError(G, ee, !0, void 0, U)
                                        }
                                    };
                                u.load(e, L, I)
                            }, n.handleMasterPlaylist = function(e, r, i, o) {
                                var u = this.hls,
                                    c = e.data,
                                    h = se(e, i),
                                    f = pa.parseMasterPlaylist(c, h);
                                if (f.playlistParsingError) {
                                    this.handleManifestParsingError(e, i, f.playlistParsingError, o, r);
                                    return
                                }
                                var m = f.contentSteering,
                                    p = f.levels,
                                    E = f.sessionData,
                                    S = f.sessionKeys,
                                    L = f.startTimeOffset,
                                    I = f.variableList;
                                this.variableList = I;
                                var O = pa.parseMasterPlaylistMedia(c, h, f),
                                    U = O.AUDIO,
                                    G = U === void 0 ? [] : U,
                                    ee = O.SUBTITLES,
                                    te = O["CLOSED-CAPTIONS"];
                                if (G.length) {
                                    var _e = G.some(function(me) {
                                        return !me.url
                                    });
                                    !_e && p[0].audioCodec && !p[0].attrs.AUDIO && (V.log("[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"), G.unshift({
                                        type: "main",
                                        name: "main",
                                        groupId: "main",
                                        default: !1,
                                        autoselect: !1,
                                        forced: !1,
                                        id: -1,
                                        attrs: new st({}),
                                        bitrate: 0,
                                        url: ""
                                    }))
                                }
                                u.trigger(_.MANIFEST_LOADED, {
                                    levels: p,
                                    audioTracks: G,
                                    subtitles: ee,
                                    captions: te,
                                    contentSteering: m,
                                    url: h,
                                    stats: r,
                                    networkDetails: o,
                                    sessionData: E,
                                    sessionKeys: S,
                                    startTimeOffset: L,
                                    variableList: I
                                })
                            }, n.handleTrackOrLevelPlaylist = function(e, r, i, o, u) {
                                var c = this.hls,
                                    h = i.id,
                                    f = i.level,
                                    m = i.type,
                                    p = se(e, i),
                                    E = 0,
                                    S = Ge(f) ? f : Ge(h) ? h : 0,
                                    L = re(i),
                                    I = pa.parseLevelPlaylist(e.data, p, S, L, E, this.variableList);
                                if (m === C.MANIFEST) {
                                    var O = {
                                        attrs: new st({}),
                                        bitrate: 0,
                                        details: I,
                                        name: "",
                                        url: p
                                    };
                                    c.trigger(_.MANIFEST_LOADED, {
                                        levels: [O],
                                        audioTracks: [],
                                        url: p,
                                        stats: r,
                                        networkDetails: o,
                                        sessionData: null,
                                        sessionKeys: null,
                                        contentSteering: null,
                                        startTimeOffset: null,
                                        variableList: null
                                    })
                                }
                                r.parsing.end = performance.now(), i.levelDetails = I, this.handlePlaylistLoaded(I, e, r, i, o, u)
                            }, n.handleManifestParsingError = function(e, r, i, o, u) {
                                this.hls.trigger(_.ERROR, {
                                    type: Ve.NETWORK_ERROR,
                                    details: de.MANIFEST_PARSING_ERROR,
                                    fatal: r.type === C.MANIFEST,
                                    url: e.url,
                                    err: i,
                                    error: i,
                                    reason: i.message,
                                    response: e,
                                    context: r,
                                    networkDetails: o,
                                    stats: u
                                })
                            }, n.handleNetworkError = function(e, r, i, o, u) {
                                i === void 0 && (i = !1);
                                var c = "A network " + (i ? "timeout" : "error" + (o ? " (status " + o.code + ")" : "")) + " occurred while loading " + e.type;
                                e.type === C.LEVEL ? c += ": " + e.level + " id: " + e.id : (e.type === C.AUDIO_TRACK || e.type === C.SUBTITLE_TRACK) && (c += " id: " + e.id + ' group-id: "' + e.groupId + '"');
                                var h = new Error(c);
                                V.warn("[playlist-loader]: " + c);
                                var f = de.UNKNOWN,
                                    m = !1,
                                    p = this.getInternalLoader(e);
                                switch (e.type) {
                                    case C.MANIFEST:
                                        f = i ? de.MANIFEST_LOAD_TIMEOUT : de.MANIFEST_LOAD_ERROR, m = !0;
                                        break;
                                    case C.LEVEL:
                                        f = i ? de.LEVEL_LOAD_TIMEOUT : de.LEVEL_LOAD_ERROR, m = !1;
                                        break;
                                    case C.AUDIO_TRACK:
                                        f = i ? de.AUDIO_TRACK_LOAD_TIMEOUT : de.AUDIO_TRACK_LOAD_ERROR, m = !1;
                                        break;
                                    case C.SUBTITLE_TRACK:
                                        f = i ? de.SUBTITLE_TRACK_LOAD_TIMEOUT : de.SUBTITLE_LOAD_ERROR, m = !1;
                                        break
                                }
                                p && this.resetInternalLoader(e.type);
                                var E = {
                                    type: Ve.NETWORK_ERROR,
                                    details: f,
                                    fatal: m,
                                    url: e.url,
                                    loader: p,
                                    context: e,
                                    error: h,
                                    networkDetails: r,
                                    stats: u
                                };
                                if (o) {
                                    var S = (r == null ? void 0 : r.url) || e.url;
                                    E.response = Ee({
                                        url: S,
                                        data: void 0
                                    }, o)
                                }
                                this.hls.trigger(_.ERROR, E)
                            }, n.handlePlaylistLoaded = function(e, r, i, o, u, c) {
                                var h = this.hls,
                                    f = o.type,
                                    m = o.level,
                                    p = o.id,
                                    E = o.groupId,
                                    S = o.deliveryDirectives,
                                    L = se(r, o),
                                    I = re(o),
                                    O = typeof o.level == "number" && I === H.MAIN ? m : void 0;
                                if (!e.fragments.length) {
                                    var U = new Error("No Segments found in Playlist");
                                    h.trigger(_.ERROR, {
                                        type: Ve.NETWORK_ERROR,
                                        details: de.LEVEL_EMPTY_ERROR,
                                        fatal: !1,
                                        url: L,
                                        error: U,
                                        reason: U.message,
                                        response: r,
                                        context: o,
                                        level: O,
                                        parent: I,
                                        networkDetails: u,
                                        stats: i
                                    });
                                    return
                                }
                                e.targetduration || (e.playlistParsingError = new Error("Missing Target Duration"));
                                var G = e.playlistParsingError;
                                if (G) {
                                    h.trigger(_.ERROR, {
                                        type: Ve.NETWORK_ERROR,
                                        details: de.LEVEL_PARSING_ERROR,
                                        fatal: !1,
                                        url: L,
                                        error: G,
                                        reason: G.message,
                                        response: r,
                                        context: o,
                                        level: O,
                                        parent: I,
                                        networkDetails: u,
                                        stats: i
                                    });
                                    return
                                }
                                switch (e.live && c && (c.getCacheAge && (e.ageHeader = c.getCacheAge() || 0), (!c.getCacheAge || isNaN(e.ageHeader)) && (e.ageHeader = 0)), f) {
                                    case C.MANIFEST:
                                    case C.LEVEL:
                                        h.trigger(_.LEVEL_LOADED, {
                                            details: e,
                                            level: O || 0,
                                            id: p || 0,
                                            stats: i,
                                            networkDetails: u,
                                            deliveryDirectives: S
                                        });
                                        break;
                                    case C.AUDIO_TRACK:
                                        h.trigger(_.AUDIO_TRACK_LOADED, {
                                            details: e,
                                            id: p || 0,
                                            groupId: E || "",
                                            stats: i,
                                            networkDetails: u,
                                            deliveryDirectives: S
                                        });
                                        break;
                                    case C.SUBTITLE_TRACK:
                                        h.trigger(_.SUBTITLE_TRACK_LOADED, {
                                            details: e,
                                            id: p || 0,
                                            groupId: E || "",
                                            stats: i,
                                            networkDetails: u,
                                            deliveryDirectives: S
                                        });
                                        break
                                }
                            }, l
                        }();

                        function He(l, n) {
                            var a;
                            try {
                                a = new Event("addtrack")
                            } catch (e) {
                                a = document.createEvent("Event"), a.initEvent("addtrack", !1, !1)
                            }
                            a.track = l, n.dispatchEvent(a)
                        }

                        function Qe(l, n) {
                            var a = l.mode;
                            if (a === "disabled" && (l.mode = "hidden"), l.cues && !l.cues.getCueById(n.id)) try {
                                if (l.addCue(n), !l.cues.getCueById(n.id)) throw new Error("addCue is failed for: " + n)
                            } catch (r) {
                                V.debug("[texttrack-utils]: " + r);
                                try {
                                    var e = new self.TextTrackCue(n.startTime, n.endTime, n.text);
                                    e.id = n.id, l.addCue(e)
                                } catch (i) {
                                    V.debug("[texttrack-utils]: Legacy TextTrackCue fallback failed: " + i)
                                }
                            }
                            a === "disabled" && (l.mode = a)
                        }

                        function ke(l) {
                            var n = l.mode;
                            if (n === "disabled" && (l.mode = "hidden"), l.cues)
                                for (var a = l.cues.length; a--;) l.removeCue(l.cues[a]);
                            n === "disabled" && (l.mode = n)
                        }

                        function We(l, n, a, e) {
                            var r = l.mode;
                            if (r === "disabled" && (l.mode = "hidden"), l.cues && l.cues.length > 0)
                                for (var i = Ot(l.cues, n, a), o = 0; o < i.length; o++)(!e || e(i[o])) && l.removeCue(i[o]);
                            r === "disabled" && (l.mode = r)
                        }

                        function Xe(l, n) {
                            if (n < l[0].startTime) return 0;
                            var a = l.length - 1;
                            if (n > l[a].endTime) return -1;
                            for (var e = 0, r = a; e <= r;) {
                                var i = Math.floor((r + e) / 2);
                                if (n < l[i].startTime) r = i - 1;
                                else if (n > l[i].startTime && e < a) e = i + 1;
                                else return i
                            }
                            return l[e].startTime - n < n - l[r].startTime ? e : r
                        }

                        function Ot(l, n, a) {
                            var e = [],
                                r = Xe(l, n);
                            if (r > -1)
                                for (var i = r, o = l.length; i < o; i++) {
                                    var u = l[i];
                                    if (u.startTime >= n && u.endTime <= a) e.push(u);
                                    else if (u.startTime > a) return e
                                }
                            return e
                        }

                        function qt(l) {
                            for (var n = [], a = 0; a < l.length; a++) {
                                var e = l[a];
                                (e.kind === "subtitles" || e.kind === "captions") && e.label && n.push(l[a])
                            }
                            return n
                        }
                        var fr = {
                                audioId3: "org.id3",
                                dateRange: "com.apple.quicktime.HLS",
                                emsg: "https://aomedia.org/emsg/ID3"
                            },
                            rr = .25;

                        function y() {
                            if (typeof self != "undefined") return self.VTTCue || self.TextTrackCue
                        }

                        function F(l, n, a, e, r) {
                            var i = new l(n, a, "");
                            try {
                                i.value = e, r && (i.type = r)
                            } catch (o) {
                                i = new l(n, a, JSON.stringify(r ? Ee({
                                    type: r
                                }, e) : e))
                            }
                            return i
                        }
                        var z = function() {
                            var l = y();
                            try {
                                l && new l(0, Number.POSITIVE_INFINITY, "")
                            } catch (n) {
                                return Number.MAX_VALUE
                            }
                            return Number.POSITIVE_INFINITY
                        }();

                        function be(l, n) {
                            return l.getTime() / 1e3 - n
                        }

                        function pt(l) {
                            return Uint8Array.from(l.replace(/^0x/, "").replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, "").split(" ")).buffer
                        }
                        var Gt = function() {
                                function l(a) {
                                    this.hls = void 0, this.id3Track = null, this.media = null, this.dateRangeCuesAppended = {}, this.hls = a, this._registerListeners()
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this._unregisterListeners(), this.id3Track = null, this.media = null, this.dateRangeCuesAppended = {}, this.hls = null
                                }, n._registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), e.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), e.on(_.MANIFEST_LOADING, this.onManifestLoading, this), e.on(_.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this), e.on(_.BUFFER_FLUSHING, this.onBufferFlushing, this), e.on(_.LEVEL_UPDATED, this.onLevelUpdated, this)
                                }, n._unregisterListeners = function() {
                                    var e = this.hls;
                                    e.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), e.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), e.off(_.MANIFEST_LOADING, this.onManifestLoading, this), e.off(_.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this), e.off(_.BUFFER_FLUSHING, this.onBufferFlushing, this), e.off(_.LEVEL_UPDATED, this.onLevelUpdated, this)
                                }, n.onMediaAttached = function(e, r) {
                                    this.media = r.media
                                }, n.onMediaDetaching = function() {
                                    this.id3Track && (ke(this.id3Track), this.id3Track = null, this.media = null, this.dateRangeCuesAppended = {})
                                }, n.onManifestLoading = function() {
                                    this.dateRangeCuesAppended = {}
                                }, n.createTrack = function(e) {
                                    var r = this.getID3Track(e.textTracks);
                                    return r.mode = "hidden", r
                                }, n.getID3Track = function(e) {
                                    if (this.media) {
                                        for (var r = 0; r < e.length; r++) {
                                            var i = e[r];
                                            if (i.kind === "metadata" && i.label === "id3") return He(i, this.media), i
                                        }
                                        return this.media.addTextTrack("metadata", "id3")
                                    }
                                }, n.onFragParsingMetadata = function(e, r) {
                                    if (this.media) {
                                        var i = this.hls.config,
                                            o = i.enableEmsgMetadataCues,
                                            u = i.enableID3MetadataCues;
                                        if (!(!o && !u)) {
                                            var c = r.samples;
                                            this.id3Track || (this.id3Track = this.createTrack(this.media));
                                            var h = y();
                                            if (h)
                                                for (var f = 0; f < c.length; f++) {
                                                    var m = c[f].type;
                                                    if (!(m === fr.emsg && !o || !u)) {
                                                        var p = hr(c[f].data);
                                                        if (p) {
                                                            var E = c[f].pts,
                                                                S = E + c[f].duration;
                                                            S > z && (S = z);
                                                            var L = S - E;
                                                            L <= 0 && (S = E + rr);
                                                            for (var I = 0; I < p.length; I++) {
                                                                var O = p[I];
                                                                if (!Ar(O)) {
                                                                    this.updateId3CueEnds(E, m);
                                                                    var U = F(h, E, S, O, m);
                                                                    U && this.id3Track.addCue(U)
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                        }
                                    }
                                }, n.updateId3CueEnds = function(e, r) {
                                    var i, o = (i = this.id3Track) == null ? void 0 : i.cues;
                                    if (o)
                                        for (var u = o.length; u--;) {
                                            var c = o[u];
                                            c.type === r && c.startTime < e && c.endTime === z && (c.endTime = e)
                                        }
                                }, n.onBufferFlushing = function(e, r) {
                                    var i = r.startOffset,
                                        o = r.endOffset,
                                        u = r.type,
                                        c = this.id3Track,
                                        h = this.hls;
                                    if (h) {
                                        var f = h.config,
                                            m = f.enableEmsgMetadataCues,
                                            p = f.enableID3MetadataCues;
                                        if (c && (m || p)) {
                                            var E;
                                            u === "audio" ? E = function(L) {
                                                return L.type === fr.audioId3 && p
                                            } : u === "video" ? E = function(L) {
                                                return L.type === fr.emsg && m
                                            } : E = function(L) {
                                                return L.type === fr.audioId3 && p || L.type === fr.emsg && m
                                            }, We(c, i, o, E)
                                        }
                                    }
                                }, n.onLevelUpdated = function(e, r) {
                                    var i = this,
                                        o = r.details;
                                    if (!(!this.media || !o.hasProgramDateTime || !this.hls.config.enableDateRangeMetadataCues)) {
                                        var u = this.dateRangeCuesAppended,
                                            c = this.id3Track,
                                            h = o.dateRanges,
                                            f = Object.keys(h);
                                        if (c)
                                            for (var m = Object.keys(u).filter(function(G) {
                                                    return !f.includes(G)
                                                }), p = function() {
                                                    var ee = m[E];
                                                    Object.keys(u[ee].cues).forEach(function(te) {
                                                        c.removeCue(u[ee].cues[te])
                                                    }), delete u[ee]
                                                }, E = m.length; E--;) p();
                                        var S = o.fragments[o.fragments.length - 1];
                                        if (!(f.length === 0 || !Ge(S == null ? void 0 : S.programDateTime))) {
                                            this.id3Track || (this.id3Track = this.createTrack(this.media));
                                            for (var L = S.programDateTime / 1e3 - S.start, I = y(), O = function() {
                                                    var ee = f[U],
                                                        te = h[ee],
                                                        _e = be(te.startDate, L),
                                                        me = u[ee],
                                                        ae = (me == null ? void 0 : me.cues) || {},
                                                        Se = (me == null ? void 0 : me.durationKnown) || !1,
                                                        ve = z,
                                                        Ne = te.endDate;
                                                    if (Ne) ve = be(Ne, L), Se = !0;
                                                    else if (te.endOnNext && !Se) {
                                                        var Ie = f.reduce(function(ei, Hr) {
                                                            if (Hr !== te.id) {
                                                                var Zi = h[Hr];
                                                                if (Zi.class === te.class && Zi.startDate > te.startDate && (!ei || te.startDate < ei.startDate)) return Zi
                                                            }
                                                            return ei
                                                        }, null);
                                                        Ie && (ve = be(Ie.startDate, L), Se = !0)
                                                    }
                                                    for (var kt = Object.keys(te.attr), zt = 0; zt < kt.length; zt++) {
                                                        var lr = kt[zt];
                                                        if (ct(lr)) {
                                                            var Fr = ae[lr];
                                                            if (Fr) Se && !me.durationKnown && (Fr.endTime = ve);
                                                            else if (I) {
                                                                var Br = te.attr[lr];
                                                                Fe(lr) && (Br = pt(Br));
                                                                var hi = F(I, _e, ve, {
                                                                    key: lr,
                                                                    data: Br
                                                                }, fr.dateRange);
                                                                hi && (hi.id = ee, i.id3Track.addCue(hi), ae[lr] = hi)
                                                            }
                                                        }
                                                    }
                                                    u[ee] = {
                                                        cues: ae,
                                                        dateRange: te,
                                                        durationKnown: Se
                                                    }
                                                }, U = 0; U < f.length; U++) O()
                                        }
                                    }
                                }, l
                            }(),
                            pr = function() {
                                function l(a) {
                                    var e = this;
                                    this.hls = void 0, this.config = void 0, this.media = null, this.levelDetails = null, this.currentTime = 0, this.stallCount = 0, this._latency = null, this.timeupdateHandler = function() {
                                        return e.timeupdate()
                                    }, this.hls = a, this.config = a.config, this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.unregisterListeners(), this.onMediaDetaching(), this.levelDetails = null, this.hls = this.timeupdateHandler = null
                                }, n.registerListeners = function() {
                                    this.hls.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), this.hls.on(_.MANIFEST_LOADING, this.onManifestLoading, this), this.hls.on(_.LEVEL_UPDATED, this.onLevelUpdated, this), this.hls.on(_.ERROR, this.onError, this)
                                }, n.unregisterListeners = function() {
                                    this.hls.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), this.hls.off(_.MANIFEST_LOADING, this.onManifestLoading, this), this.hls.off(_.LEVEL_UPDATED, this.onLevelUpdated, this), this.hls.off(_.ERROR, this.onError, this)
                                }, n.onMediaAttached = function(e, r) {
                                    this.media = r.media, this.media.addEventListener("timeupdate", this.timeupdateHandler)
                                }, n.onMediaDetaching = function() {
                                    this.media && (this.media.removeEventListener("timeupdate", this.timeupdateHandler), this.media = null)
                                }, n.onManifestLoading = function() {
                                    this.levelDetails = null, this._latency = null, this.stallCount = 0
                                }, n.onLevelUpdated = function(e, r) {
                                    var i = r.details;
                                    this.levelDetails = i, i.advanced && this.timeupdate(), !i.live && this.media && this.media.removeEventListener("timeupdate", this.timeupdateHandler)
                                }, n.onError = function(e, r) {
                                    var i;
                                    r.details === de.BUFFER_STALLED_ERROR && (this.stallCount++, (i = this.levelDetails) != null && i.live && V.warn("[playback-rate-controller]: Stall detected, adjusting target latency"))
                                }, n.timeupdate = function() {
                                    var e = this.media,
                                        r = this.levelDetails;
                                    if (!(!e || !r)) {
                                        this.currentTime = e.currentTime;
                                        var i = this.computeLatency();
                                        if (i !== null) {
                                            this._latency = i;
                                            var o = this.config,
                                                u = o.lowLatencyMode,
                                                c = o.maxLiveSyncPlaybackRate;
                                            if (!(!u || c === 1 || !r.live)) {
                                                var h = this.targetLatency;
                                                if (h !== null) {
                                                    var f = i - h,
                                                        m = Math.min(this.maxLatency, h + r.targetduration),
                                                        p = f < m;
                                                    if (p && f > .05 && this.forwardBufferLength > 1) {
                                                        var E = Math.min(2, Math.max(1, c)),
                                                            S = Math.round(2 / (1 + Math.exp(-.75 * f - this.edgeStalled)) * 20) / 20;
                                                        e.playbackRate = Math.min(E, Math.max(1, S))
                                                    } else e.playbackRate !== 1 && e.playbackRate !== 0 && (e.playbackRate = 1)
                                                }
                                            }
                                        }
                                    }
                                }, n.estimateLiveEdge = function() {
                                    var e = this.levelDetails;
                                    return e === null ? null : e.edge + e.age
                                }, n.computeLatency = function() {
                                    var e = this.estimateLiveEdge();
                                    return e === null ? null : e - this.currentTime
                                }, tt(l, [{
                                    key: "latency",
                                    get: function() {
                                        return this._latency || 0
                                    }
                                }, {
                                    key: "maxLatency",
                                    get: function() {
                                        var e = this.config,
                                            r = this.levelDetails;
                                        return e.liveMaxLatencyDuration !== void 0 ? e.liveMaxLatencyDuration : r ? e.liveMaxLatencyDurationCount * r.targetduration : 0
                                    }
                                }, {
                                    key: "targetLatency",
                                    get: function() {
                                        var e = this.levelDetails;
                                        if (e === null) return null;
                                        var r = e.holdBack,
                                            i = e.partHoldBack,
                                            o = e.targetduration,
                                            u = this.config,
                                            c = u.liveSyncDuration,
                                            h = u.liveSyncDurationCount,
                                            f = u.lowLatencyMode,
                                            m = this.hls.userConfig,
                                            p = f && i || r;
                                        (m.liveSyncDuration || m.liveSyncDurationCount || p === 0) && (p = c !== void 0 ? c : h * o);
                                        var E = o,
                                            S = 1;
                                        return p + Math.min(this.stallCount * S, E)
                                    }
                                }, {
                                    key: "liveSyncPosition",
                                    get: function() {
                                        var e = this.estimateLiveEdge(),
                                            r = this.targetLatency,
                                            i = this.levelDetails;
                                        if (e === null || r === null || i === null) return null;
                                        var o = i.edge,
                                            u = e - r - this.edgeStalled,
                                            c = o - i.totalduration,
                                            h = o - (this.config.lowLatencyMode && i.partTarget || i.targetduration);
                                        return Math.min(Math.max(c, u), h)
                                    }
                                }, {
                                    key: "drift",
                                    get: function() {
                                        var e = this.levelDetails;
                                        return e === null ? 1 : e.drift
                                    }
                                }, {
                                    key: "edgeStalled",
                                    get: function() {
                                        var e = this.levelDetails;
                                        if (e === null) return 0;
                                        var r = (this.config.lowLatencyMode && e.partTarget || e.targetduration) * 3;
                                        return Math.max(e.age - r, 0)
                                    }
                                }, {
                                    key: "forwardBufferLength",
                                    get: function() {
                                        var e = this.media,
                                            r = this.levelDetails;
                                        if (!e || !r) return 0;
                                        var i = e.buffered.length;
                                        return (i ? e.buffered.end(i - 1) : r.edge) - this.currentTime
                                    }
                                }]), l
                            }(),
                            nr = ["NONE", "TYPE-0", "TYPE-1", null];

                        function Zt(l) {
                            return nr.indexOf(l) > -1
                        }
                        var wi = ["SDR", "PQ", "HLG"];

                        function qi(l) {
                            return !!l && wi.indexOf(l) > -1
                        }
                        var _t = {
                            No: "",
                            Yes: "YES",
                            v2: "v2"
                        };

                        function Qt(l) {
                            var n = l.canSkipUntil,
                                a = l.canSkipDateRanges,
                                e = l.age,
                                r = e < n / 2;
                            return n && r ? a ? _t.v2 : _t.Yes : _t.No
                        }
                        var yr = function() {
                                function l(a, e, r) {
                                    this.msn = void 0, this.part = void 0, this.skip = void 0, this.msn = a, this.part = e, this.skip = r
                                }
                                var n = l.prototype;
                                return n.addDirectives = function(e) {
                                    var r = new self.URL(e);
                                    return this.msn !== void 0 && r.searchParams.set("_HLS_msn", this.msn.toString()), this.part !== void 0 && r.searchParams.set("_HLS_part", this.part.toString()), this.skip && r.searchParams.set("_HLS_skip", this.skip), r.href
                                }, l
                            }(),
                            gi = function() {
                                function l(a) {
                                    this._attrs = void 0, this.audioCodec = void 0, this.bitrate = void 0, this.codecSet = void 0, this.url = void 0, this.frameRate = void 0, this.height = void 0, this.id = void 0, this.name = void 0, this.videoCodec = void 0, this.width = void 0, this.details = void 0, this.fragmentError = 0, this.loadError = 0, this.loaded = void 0, this.realBitrate = 0, this.supportedPromise = void 0, this.supportedResult = void 0, this._avgBitrate = 0, this._audioGroups = void 0, this._subtitleGroups = void 0, this._urlId = 0, this.url = [a.url], this._attrs = [a.attrs], this.bitrate = a.bitrate, a.details && (this.details = a.details), this.id = a.id || 0, this.name = a.name, this.width = a.width || 0, this.height = a.height || 0, this.frameRate = a.attrs.optionalFloat("FRAME-RATE", 0), this._avgBitrate = a.attrs.decimalInteger("AVERAGE-BANDWIDTH"), this.audioCodec = a.audioCodec, this.videoCodec = a.videoCodec, this.codecSet = [a.videoCodec, a.audioCodec].filter(function(e) {
                                        return !!e
                                    }).map(function(e) {
                                        return e.substring(0, 4)
                                    }).join(","), this.addGroupId("audio", a.attrs.AUDIO), this.addGroupId("text", a.attrs.SUBTITLES)
                                }
                                var n = l.prototype;
                                return n.hasAudioGroup = function(e) {
                                    return $i(this._audioGroups, e)
                                }, n.hasSubtitleGroup = function(e) {
                                    return $i(this._subtitleGroups, e)
                                }, n.addGroupId = function(e, r) {
                                    if (r) {
                                        if (e === "audio") {
                                            var i = this._audioGroups;
                                            i || (i = this._audioGroups = []), i.indexOf(r) === -1 && i.push(r)
                                        } else if (e === "text") {
                                            var o = this._subtitleGroups;
                                            o || (o = this._subtitleGroups = []), o.indexOf(r) === -1 && o.push(r)
                                        }
                                    }
                                }, n.addFallback = function() {}, tt(l, [{
                                    key: "maxBitrate",
                                    get: function() {
                                        return Math.max(this.realBitrate, this.bitrate)
                                    }
                                }, {
                                    key: "averageBitrate",
                                    get: function() {
                                        return this._avgBitrate || this.realBitrate || this.bitrate
                                    }
                                }, {
                                    key: "attrs",
                                    get: function() {
                                        return this._attrs[0]
                                    }
                                }, {
                                    key: "codecs",
                                    get: function() {
                                        return this.attrs.CODECS || ""
                                    }
                                }, {
                                    key: "pathwayId",
                                    get: function() {
                                        return this.attrs["PATHWAY-ID"] || "."
                                    }
                                }, {
                                    key: "videoRange",
                                    get: function() {
                                        return this.attrs["VIDEO-RANGE"] || "SDR"
                                    }
                                }, {
                                    key: "score",
                                    get: function() {
                                        return this.attrs.optionalFloat("SCORE", 0)
                                    }
                                }, {
                                    key: "uri",
                                    get: function() {
                                        return this.url[0] || ""
                                    }
                                }, {
                                    key: "audioGroups",
                                    get: function() {
                                        return this._audioGroups
                                    }
                                }, {
                                    key: "subtitleGroups",
                                    get: function() {
                                        return this._subtitleGroups
                                    }
                                }, {
                                    key: "urlId",
                                    get: function() {
                                        return 0
                                    },
                                    set: function(e) {}
                                }, {
                                    key: "audioGroupIds",
                                    get: function() {
                                        return this.audioGroups ? [this.audioGroupId] : void 0
                                    }
                                }, {
                                    key: "textGroupIds",
                                    get: function() {
                                        return this.subtitleGroups ? [this.textGroupId] : void 0
                                    }
                                }, {
                                    key: "audioGroupId",
                                    get: function() {
                                        var e;
                                        return (e = this.audioGroups) == null ? void 0 : e[0]
                                    }
                                }, {
                                    key: "textGroupId",
                                    get: function() {
                                        var e;
                                        return (e = this.subtitleGroups) == null ? void 0 : e[0]
                                    }
                                }]), l
                            }();

                        function $i(l, n) {
                            return !n || !l ? !1 : l.indexOf(n) !== -1
                        }

                        function dn(l, n) {
                            var a = n.startPTS;
                            if (Ge(a)) {
                                var e = 0,
                                    r;
                                n.sn > l.sn ? (e = a - l.start, r = l) : (e = l.start - a, r = n), r.duration !== e && (r.duration = e)
                            } else if (n.sn > l.sn) {
                                var i = l.cc === n.cc;
                                i && l.minEndPTS ? n.start = l.start + (l.minEndPTS - l.start) : n.start = l.start + l.duration
                            } else n.start = Math.max(l.start - n.duration, 0)
                        }

                        function ua(l, n, a, e, r, i) {
                            var o = e - a;
                            o <= 0 && (V.warn("Fragment should have a positive duration", n), e = a + n.duration, i = r + n.duration);
                            var u = a,
                                c = e,
                                h = n.startPTS,
                                f = n.endPTS;
                            if (Ge(h)) {
                                var m = Math.abs(h - a);
                                Ge(n.deltaPTS) ? n.deltaPTS = Math.max(m, n.deltaPTS) : n.deltaPTS = m, u = Math.max(a, h), a = Math.min(a, h), r = Math.min(r, n.startDTS), c = Math.min(e, f), e = Math.max(e, f), i = Math.max(i, n.endDTS)
                            }
                            var p = a - n.start;
                            n.start !== 0 && (n.start = a), n.duration = e - n.start, n.startPTS = a, n.maxStartPTS = u, n.startDTS = r, n.endPTS = e, n.minEndPTS = c, n.endDTS = i;
                            var E = n.sn;
                            if (!l || E < l.startSN || E > l.endSN) return 0;
                            var S, L = E - l.startSN,
                                I = l.fragments;
                            for (I[L] = n, S = L; S > 0; S--) dn(I[S], I[S - 1]);
                            for (S = L; S < I.length - 1; S++) dn(I[S], I[S + 1]);
                            return l.fragmentHint && dn(I[I.length - 1], l.fragmentHint), l.PTSKnown = l.alignedSliding = !0, p
                        }

                        function da(l, n) {
                            for (var a = null, e = l.fragments, r = e.length - 1; r >= 0; r--) {
                                var i = e[r].initSegment;
                                if (i) {
                                    a = i;
                                    break
                                }
                            }
                            l.fragmentHint && delete l.fragmentHint.endPTS;
                            var o;
                            ys(l, n, function(p, E, S, L) {
                                if (n.skippedSegments && E.cc !== p.cc)
                                    for (var I = p.cc - E.cc, O = S; O < L.length; O++) L[O].cc += I;
                                Ge(p.startPTS) && Ge(p.endPTS) && (E.start = E.startPTS = p.startPTS, E.startDTS = p.startDTS, E.maxStartPTS = p.maxStartPTS, E.endPTS = p.endPTS, E.endDTS = p.endDTS, E.minEndPTS = p.minEndPTS, E.duration = p.endPTS - p.startPTS, E.duration && (o = E), n.PTSKnown = n.alignedSliding = !0), E.elementaryStreams = p.elementaryStreams, E.loader = p.loader, E.stats = p.stats, p.initSegment && (E.initSegment = p.initSegment, a = p.initSegment)
                            });
                            var u = n.fragments;
                            if (a) {
                                var c = n.fragmentHint ? u.concat(n.fragmentHint) : u;
                                c.forEach(function(p) {
                                    var E;
                                    p && (!p.initSegment || p.initSegment.relurl === ((E = a) == null ? void 0 : E.relurl)) && (p.initSegment = a)
                                })
                            }
                            if (n.skippedSegments) {
                                if (n.deltaUpdateFailed = u.some(function(p) {
                                        return !p
                                    }), n.deltaUpdateFailed) {
                                    V.warn("[level-helper] Previous playlist missing segments skipped in delta playlist");
                                    for (var h = n.skippedSegments; h--;) u.shift();
                                    n.startSN = u[0].sn
                                } else n.canSkipDateRanges && (n.dateRanges = ga(l.dateRanges, n.dateRanges, n.recentlyRemovedDateranges));
                                n.startCC = n.fragments[0].cc, n.endCC = u[u.length - 1].cc
                            }
                            ji(l.partList, n.partList, function(p, E) {
                                E.elementaryStreams = p.elementaryStreams, E.stats = p.stats
                            }), o ? ua(n, o, o.startPTS, o.endPTS, o.startDTS, o.endDTS) : Jt(l, n), u.length && (n.totalduration = n.edge - u[0].start), n.driftStartTime = l.driftStartTime, n.driftStart = l.driftStart;
                            var f = n.advancedDateTime;
                            if (n.advanced && f) {
                                var m = n.edge;
                                n.driftStart || (n.driftStartTime = f, n.driftStart = m), n.driftEndTime = f, n.driftEnd = m
                            } else n.driftEndTime = l.driftEndTime, n.driftEnd = l.driftEnd, n.advancedDateTime = l.advancedDateTime
                        }

                        function ga(l, n, a) {
                            var e = le({}, l);
                            return a && a.forEach(function(r) {
                                delete e[r]
                            }), Object.keys(n).forEach(function(r) {
                                var i = new ht(n[r].attr, e[r]);
                                i.isValid ? e[r] = i : V.warn('Ignoring invalid Playlist Delta Update DATERANGE tag: "' + JSON.stringify(n[r].attr) + '"')
                            }), e
                        }

                        function ji(l, n, a) {
                            if (l && n)
                                for (var e = 0, r = 0, i = l.length; r <= i; r++) {
                                    var o = l[r],
                                        u = n[r + e];
                                    o && u && o.index === u.index && o.fragment.sn === u.fragment.sn ? a(o, u) : e--
                                }
                        }

                        function ys(l, n, a) {
                            for (var e = n.skippedSegments, r = Math.max(l.startSN, n.startSN) - n.startSN, i = (l.fragmentHint ? 1 : 0) + (e ? n.endSN : Math.min(l.endSN, n.endSN)) - n.startSN, o = n.startSN - l.startSN, u = n.fragmentHint ? n.fragments.concat(n.fragmentHint) : n.fragments, c = l.fragmentHint ? l.fragments.concat(l.fragmentHint) : l.fragments, h = r; h <= i; h++) {
                                var f = c[o + h],
                                    m = u[h];
                                e && !m && h < e && (m = n.fragments[h] = f), f && m && a(f, m, h, u)
                            }
                        }

                        function Jt(l, n) {
                            var a = n.startSN + n.skippedSegments - l.startSN,
                                e = l.fragments;
                            a < 0 || a >= e.length || Dr(n, e[a].start)
                        }

                        function Dr(l, n) {
                            if (n) {
                                for (var a = l.fragments, e = l.skippedSegments; e < a.length; e++) a[e].start += n;
                                l.fragmentHint && (l.fragmentHint.start += n)
                            }
                        }

                        function Ai(l, n) {
                            n === void 0 && (n = 1 / 0);
                            var a = 1e3 * l.targetduration;
                            if (l.updated) {
                                var e = l.fragments,
                                    r = 4;
                                if (e.length && a * r > n) {
                                    var i = e[e.length - 1].duration * 1e3;
                                    i < a && (a = i)
                                }
                            } else a /= 2;
                            return Math.round(a)
                        }

                        function $r(l, n, a) {
                            if (!(l != null && l.details)) return null;
                            var e = l.details,
                                r = e.fragments[n - e.startSN];
                            return r || (r = e.fragmentHint, r && r.sn === n) ? r : n < e.startSN && a && a.sn === n ? a : null
                        }

                        function _i(l, n, a) {
                            var e;
                            return l != null && l.details ? ka((e = l.details) == null ? void 0 : e.partList, n, a) : null
                        }

                        function ka(l, n, a) {
                            if (l)
                                for (var e = l.length; e--;) {
                                    var r = l[e];
                                    if (r.index === a && r.fragment.sn === n) return r
                                }
                            return null
                        }

                        function $a(l) {
                            l.forEach(function(n, a) {
                                var e = n.details;
                                e != null && e.fragments && e.fragments.forEach(function(r) {
                                    r.level = a
                                })
                            })
                        }

                        function wn(l) {
                            switch (l.details) {
                                case de.FRAG_LOAD_TIMEOUT:
                                case de.KEY_LOAD_TIMEOUT:
                                case de.LEVEL_LOAD_TIMEOUT:
                                case de.MANIFEST_LOAD_TIMEOUT:
                                    return !0
                            }
                            return !1
                        }

                        function Eo(l, n) {
                            var a = wn(n);
                            return l.default[(a ? "timeout" : "error") + "Retry"]
                        }

                        function ci(l, n) {
                            var a = l.backoff === "linear" ? 1 : Math.pow(2, n);
                            return Math.min(a * l.retryDelayMs, l.maxRetryDelayMs)
                        }

                        function ja(l) {
                            return Ee(Ee({}, l), {
                                errorRetry: null,
                                timeoutRetry: null
                            })
                        }

                        function Wn(l, n, a, e) {
                            if (!l) return !1;
                            var r = e == null ? void 0 : e.code,
                                i = n < l.maxNumRetry && (Qn(r) || !!a);
                            return l.shouldRetry ? l.shouldRetry(l, n, a, e, i) : i
                        }

                        function Qn(l) {
                            return l === 0 && navigator.onLine === !1 || !!l && (l < 400 || l > 499)
                        }
                        var k = {
                            search: function(n, a) {
                                for (var e = 0, r = n.length - 1, i = null, o = null; e <= r;) {
                                    i = (e + r) / 2 | 0, o = n[i];
                                    var u = a(o);
                                    if (u > 0) e = i + 1;
                                    else if (u < 0) r = i - 1;
                                    else return o
                                }
                                return null
                            }
                        };

                        function b(l, n, a) {
                            if (n === null || !Array.isArray(l) || !l.length || !Ge(n)) return null;
                            var e = l[0].programDateTime;
                            if (n < (e || 0)) return null;
                            var r = l[l.length - 1].endProgramDateTime;
                            if (n >= (r || 0)) return null;
                            a = a || 0;
                            for (var i = 0; i < l.length; ++i) {
                                var o = l[i];
                                if (q(n, a, o)) return o
                            }
                            return null
                        }

                        function A(l, n, a, e, r) {
                            a === void 0 && (a = 0), e === void 0 && (e = 0), r === void 0 && (r = .005);
                            var i = null;
                            if (l) {
                                i = n[l.sn - n[0].sn + 1] || null;
                                var o = l.endDTS - a;
                                o > 0 && o < 15e-7 && (a += 15e-7)
                            } else a === 0 && n[0].start === 0 && (i = n[0]);
                            if (i && ((!l || l.level === i.level) && M(a, e, i) === 0 || P(i, l, Math.min(r, e)))) return i;
                            var u = k.search(n, M.bind(null, a, e));
                            return u && (u !== l || !i) ? u : i
                        }

                        function P(l, n, a) {
                            if (n && n.start === 0 && n.level < l.level && (n.endPTS || 0) > 0) {
                                var e = n.tagList.reduce(function(r, i) {
                                    return i[0] === "INF" && (r += parseFloat(i[1])), r
                                }, a);
                                return l.start <= e
                            }
                            return !1
                        }

                        function M(l, n, a) {
                            if (l === void 0 && (l = 0), n === void 0 && (n = 0), a.start <= l && a.start + a.duration > l) return 0;
                            var e = Math.min(n, a.duration + (a.deltaPTS ? a.deltaPTS : 0));
                            return a.start + a.duration - e <= l ? 1 : a.start - e > l && a.start ? -1 : 0
                        }

                        function q(l, n, a) {
                            var e = Math.min(n, a.duration + (a.deltaPTS ? a.deltaPTS : 0)) * 1e3,
                                r = a.endProgramDateTime || 0;
                            return r - e > l
                        }

                        function $(l, n) {
                            return k.search(l, function(a) {
                                return a.cc < n ? 1 : a.cc > n ? -1 : 0
                            })
                        }
                        var Te = {
                                DoNothing: 0,
                                SendEndCallback: 1,
                                SendAlternateToPenaltyBox: 2,
                                RemoveAlternatePermanently: 3,
                                InsertDiscontinuity: 4,
                                RetryRequest: 5
                            },
                            Le = {
                                None: 0,
                                MoveAllAlternatesMatchingHost: 1,
                                MoveAllAlternatesMatchingHDCP: 2,
                                SwitchToSDR: 4
                            },
                            Re = function() {
                                function l(a) {
                                    this.hls = void 0, this.playlistError = 0, this.penalizedRenditions = {}, this.log = void 0, this.warn = void 0, this.error = void 0, this.hls = a, this.log = V.log.bind(V, "[info]:"), this.warn = V.warn.bind(V, "[warning]:"), this.error = V.error.bind(V, "[error]:"), this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.ERROR, this.onError, this), e.on(_.MANIFEST_LOADING, this.onManifestLoading, this), e.on(_.LEVEL_UPDATED, this.onLevelUpdated, this)
                                }, n.unregisterListeners = function() {
                                    var e = this.hls;
                                    e && (e.off(_.ERROR, this.onError, this), e.off(_.ERROR, this.onErrorOut, this), e.off(_.MANIFEST_LOADING, this.onManifestLoading, this), e.off(_.LEVEL_UPDATED, this.onLevelUpdated, this))
                                }, n.destroy = function() {
                                    this.unregisterListeners(), this.hls = null, this.penalizedRenditions = {}
                                }, n.startLoad = function(e) {}, n.stopLoad = function() {
                                    this.playlistError = 0
                                }, n.getVariantLevelIndex = function(e) {
                                    return (e == null ? void 0 : e.type) === H.MAIN ? e.level : this.hls.loadLevel
                                }, n.onManifestLoading = function() {
                                    this.playlistError = 0, this.penalizedRenditions = {}
                                }, n.onLevelUpdated = function() {
                                    this.playlistError = 0
                                }, n.onError = function(e, r) {
                                    var i, o;
                                    if (!r.fatal) {
                                        var u = this.hls,
                                            c = r.context;
                                        switch (r.details) {
                                            case de.FRAG_LOAD_ERROR:
                                            case de.FRAG_LOAD_TIMEOUT:
                                            case de.KEY_LOAD_ERROR:
                                            case de.KEY_LOAD_TIMEOUT:
                                                r.errorAction = this.getFragRetryOrSwitchAction(r);
                                                return;
                                            case de.FRAG_PARSING_ERROR:
                                                if ((i = r.frag) != null && i.gap) {
                                                    r.errorAction = {
                                                        action: Te.DoNothing,
                                                        flags: Le.None
                                                    };
                                                    return
                                                }
                                            case de.FRAG_GAP:
                                            case de.FRAG_DECRYPT_ERROR:
                                                {
                                                    r.errorAction = this.getFragRetryOrSwitchAction(r),
                                                    r.errorAction.action = Te.SendAlternateToPenaltyBox;
                                                    return
                                                }
                                            case de.LEVEL_EMPTY_ERROR:
                                            case de.LEVEL_PARSING_ERROR:
                                                {
                                                    var h, f, m = r.parent === H.MAIN ? r.level : u.loadLevel;r.details === de.LEVEL_EMPTY_ERROR && ((h = r.context) != null && (f = h.levelDetails) != null && f.live) ? r.errorAction = this.getPlaylistRetryOrSwitchAction(r, m) : (r.levelRetry = !1, r.errorAction = this.getLevelSwitchAction(r, m))
                                                }
                                                return;
                                            case de.LEVEL_LOAD_ERROR:
                                            case de.LEVEL_LOAD_TIMEOUT:
                                                typeof(c == null ? void 0 : c.level) == "number" && (r.errorAction = this.getPlaylistRetryOrSwitchAction(r, c.level));
                                                return;
                                            case de.AUDIO_TRACK_LOAD_ERROR:
                                            case de.AUDIO_TRACK_LOAD_TIMEOUT:
                                            case de.SUBTITLE_LOAD_ERROR:
                                            case de.SUBTITLE_TRACK_LOAD_TIMEOUT:
                                                if (c) {
                                                    var p = u.levels[u.loadLevel];
                                                    if (p && (c.type === C.AUDIO_TRACK && p.hasAudioGroup(c.groupId) || c.type === C.SUBTITLE_TRACK && p.hasSubtitleGroup(c.groupId))) {
                                                        r.errorAction = this.getPlaylistRetryOrSwitchAction(r, u.loadLevel), r.errorAction.action = Te.SendAlternateToPenaltyBox, r.errorAction.flags = Le.MoveAllAlternatesMatchingHost;
                                                        return
                                                    }
                                                }
                                                return;
                                            case de.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                                                {
                                                    var E = u.levels[u.loadLevel],
                                                        S = E == null ? void 0 : E.attrs["HDCP-LEVEL"];S ? r.errorAction = {
                                                        action: Te.SendAlternateToPenaltyBox,
                                                        flags: Le.MoveAllAlternatesMatchingHDCP,
                                                        hdcpLevel: S
                                                    } : this.keySystemError(r)
                                                }
                                                return;
                                            case de.BUFFER_ADD_CODEC_ERROR:
                                            case de.REMUX_ALLOC_ERROR:
                                            case de.BUFFER_APPEND_ERROR:
                                                r.errorAction = this.getLevelSwitchAction(r, (o = r.level) != null ? o : u.loadLevel);
                                                return;
                                            case de.INTERNAL_EXCEPTION:
                                            case de.BUFFER_APPENDING_ERROR:
                                            case de.BUFFER_FULL_ERROR:
                                            case de.LEVEL_SWITCH_ERROR:
                                            case de.BUFFER_STALLED_ERROR:
                                            case de.BUFFER_SEEK_OVER_HOLE:
                                            case de.BUFFER_NUDGE_ON_STALL:
                                                r.errorAction = {
                                                    action: Te.DoNothing,
                                                    flags: Le.None
                                                };
                                                return
                                        }
                                        r.type === Ve.KEY_SYSTEM_ERROR && this.keySystemError(r)
                                    }
                                }, n.keySystemError = function(e) {
                                    var r = this.getVariantLevelIndex(e.frag);
                                    e.levelRetry = !1, e.errorAction = this.getLevelSwitchAction(e, r)
                                }, n.getPlaylistRetryOrSwitchAction = function(e, r) {
                                    var i = this.hls,
                                        o = Eo(i.config.playlistLoadPolicy, e),
                                        u = this.playlistError++,
                                        c = Wn(o, u, wn(e), e.response);
                                    if (c) return {
                                        action: Te.RetryRequest,
                                        flags: Le.None,
                                        retryConfig: o,
                                        retryCount: u
                                    };
                                    var h = this.getLevelSwitchAction(e, r);
                                    return o && (h.retryConfig = o, h.retryCount = u), h
                                }, n.getFragRetryOrSwitchAction = function(e) {
                                    var r = this.hls,
                                        i = this.getVariantLevelIndex(e.frag),
                                        o = r.levels[i],
                                        u = r.config,
                                        c = u.fragLoadPolicy,
                                        h = u.keyLoadPolicy,
                                        f = Eo(e.details.startsWith("key") ? h : c, e),
                                        m = r.levels.reduce(function(S, L) {
                                            return S + L.fragmentError
                                        }, 0);
                                    if (o) {
                                        e.details !== de.FRAG_GAP && o.fragmentError++;
                                        var p = Wn(f, m, wn(e), e.response);
                                        if (p) return {
                                            action: Te.RetryRequest,
                                            flags: Le.None,
                                            retryConfig: f,
                                            retryCount: m
                                        }
                                    }
                                    var E = this.getLevelSwitchAction(e, i);
                                    return f && (E.retryConfig = f, E.retryCount = m), E
                                }, n.getLevelSwitchAction = function(e, r) {
                                    var i = this.hls;
                                    r == null && (r = i.loadLevel);
                                    var o = this.hls.levels[r];
                                    if (o) {
                                        var u, c, h = e.details;
                                        o.loadError++, h === de.BUFFER_APPEND_ERROR && o.fragmentError++;
                                        var f = -1,
                                            m = i.levels,
                                            p = i.loadLevel,
                                            E = i.minAutoLevel,
                                            S = i.maxAutoLevel;
                                        i.autoLevelEnabled || (i.loadLevel = -1);
                                        for (var L = (u = e.frag) == null ? void 0 : u.type, I = L === H.AUDIO && h === de.FRAG_PARSING_ERROR || e.sourceBufferName === "audio" && (h === de.BUFFER_ADD_CODEC_ERROR || h === de.BUFFER_APPEND_ERROR), O = I && m.some(function(ve) {
                                                var Ne = ve.audioCodec;
                                                return o.audioCodec !== Ne
                                            }), U = e.sourceBufferName === "video" && (h === de.BUFFER_ADD_CODEC_ERROR || h === de.BUFFER_APPEND_ERROR), G = U && m.some(function(ve) {
                                                var Ne = ve.codecSet,
                                                    Ie = ve.audioCodec;
                                                return o.codecSet !== Ne && o.audioCodec === Ie
                                            }), ee = (c = e.context) != null ? c : {}, te = ee.type, _e = ee.groupId, me = function() {
                                                var Ne = (Se + p) % m.length;
                                                if (Ne !== p && Ne >= E && Ne <= S && m[Ne].loadError === 0) {
                                                    var Ie, kt, zt = m[Ne];
                                                    if (h === de.FRAG_GAP && L === H.MAIN && e.frag) {
                                                        var lr = m[Ne].details;
                                                        if (lr) {
                                                            var Fr = A(e.frag, lr.fragments, e.frag.start);
                                                            if (Fr != null && Fr.gap) return 0
                                                        }
                                                    } else {
                                                        if (te === C.AUDIO_TRACK && zt.hasAudioGroup(_e) || te === C.SUBTITLE_TRACK && zt.hasSubtitleGroup(_e)) return 0;
                                                        if (L === H.AUDIO && (Ie = o.audioGroups) != null && Ie.some(function(Br) {
                                                                return zt.hasAudioGroup(Br)
                                                            }) || L === H.SUBTITLE && (kt = o.subtitleGroups) != null && kt.some(function(Br) {
                                                                return zt.hasSubtitleGroup(Br)
                                                            }) || O && o.audioCodec === zt.audioCodec || !O && o.audioCodec !== zt.audioCodec || G && o.codecSet === zt.codecSet) return 0
                                                    }
                                                    return f = Ne, 1
                                                }
                                            }, ae, Se = m.length; Se-- && (ae = me(), !(ae !== 0 && ae === 1)););
                                        if (f > -1 && i.loadLevel !== f) return e.levelRetry = !0, this.playlistError = 0, {
                                            action: Te.SendAlternateToPenaltyBox,
                                            flags: Le.None,
                                            nextAutoLevel: f
                                        }
                                    }
                                    return {
                                        action: Te.SendAlternateToPenaltyBox,
                                        flags: Le.MoveAllAlternatesMatchingHost
                                    }
                                }, n.onErrorOut = function(e, r) {
                                    var i;
                                    switch ((i = r.errorAction) == null ? void 0 : i.action) {
                                        case Te.DoNothing:
                                            break;
                                        case Te.SendAlternateToPenaltyBox:
                                            this.sendAlternateToPenaltyBox(r), !r.errorAction.resolved && r.details !== de.FRAG_GAP ? r.fatal = !0 : /MediaSource readyState: ended/.test(r.error.message) && (this.warn('MediaSource ended after "' + r.sourceBufferName + '" sourceBuffer append error. Attempting to recover from media error.'), this.hls.recoverMediaError());
                                            break
                                    }
                                    if (r.fatal) {
                                        this.hls.stopLoad();
                                        return
                                    }
                                }, n.sendAlternateToPenaltyBox = function(e) {
                                    var r = this.hls,
                                        i = e.errorAction;
                                    if (i) {
                                        var o = i.flags,
                                            u = i.hdcpLevel,
                                            c = i.nextAutoLevel;
                                        switch (o) {
                                            case Le.None:
                                                this.switchLevel(e, c);
                                                break;
                                            case Le.MoveAllAlternatesMatchingHDCP:
                                                u && (r.maxHdcpLevel = nr[nr.indexOf(u) - 1], i.resolved = !0), this.warn('Restricting playback to HDCP-LEVEL of "' + r.maxHdcpLevel + '" or lower');
                                                break
                                        }
                                        i.resolved || this.switchLevel(e, c)
                                    }
                                }, n.switchLevel = function(e, r) {
                                    r !== void 0 && e.errorAction && (this.warn("switching to level " + r + " after " + e.details), this.hls.nextAutoLevel = r, e.errorAction.resolved = !0, this.hls.nextLoadLevel = this.hls.nextAutoLevel)
                                }, l
                            }(),
                            It = function() {
                                function l(a, e) {
                                    this.hls = void 0, this.timer = -1, this.requestScheduled = -1, this.canLoad = !1, this.log = void 0, this.warn = void 0, this.log = V.log.bind(V, e + ":"), this.warn = V.warn.bind(V, e + ":"), this.hls = a
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.clearTimer(), this.hls = this.log = this.warn = null
                                }, n.clearTimer = function() {
                                    this.timer !== -1 && (self.clearTimeout(this.timer), this.timer = -1)
                                }, n.startLoad = function() {
                                    this.canLoad = !0, this.requestScheduled = -1, this.loadPlaylist()
                                }, n.stopLoad = function() {
                                    this.canLoad = !1, this.clearTimer()
                                }, n.switchParams = function(e, r, i) {
                                    var o = r == null ? void 0 : r.renditionReports;
                                    if (o) {
                                        for (var u = -1, c = 0; c < o.length; c++) {
                                            var h = o[c],
                                                f = void 0;
                                            try {
                                                f = new self.URL(h.URI, r.url).href
                                            } catch (I) {
                                                V.warn("Could not construct new URL for Rendition Report: " + I), f = h.URI || ""
                                            }
                                            if (f === e) {
                                                u = c;
                                                break
                                            } else f === e.substring(0, f.length) && (u = c)
                                        }
                                        if (u !== -1) {
                                            var m = o[u],
                                                p = parseInt(m["LAST-MSN"]) || (r == null ? void 0 : r.lastPartSn),
                                                E = parseInt(m["LAST-PART"]) || (r == null ? void 0 : r.lastPartIndex);
                                            if (this.hls.config.lowLatencyMode) {
                                                var S = Math.min(r.age - r.partTarget, r.targetduration);
                                                E >= 0 && S > r.partTarget && (E += 1)
                                            }
                                            var L = i && Qt(i);
                                            return new yr(p, E >= 0 ? E : void 0, L)
                                        }
                                    }
                                }, n.loadPlaylist = function(e) {
                                    this.requestScheduled === -1 && (this.requestScheduled = self.performance.now())
                                }, n.shouldLoadPlaylist = function(e) {
                                    return this.canLoad && !!e && !!e.url && (!e.details || e.details.live)
                                }, n.shouldReloadPlaylist = function(e) {
                                    return this.timer === -1 && this.requestScheduled === -1 && this.shouldLoadPlaylist(e)
                                }, n.playlistLoaded = function(e, r, i) {
                                    var o = this,
                                        u = r.details,
                                        c = r.stats,
                                        h = self.performance.now(),
                                        f = c.loading.first ? Math.max(0, h - c.loading.first) : 0;
                                    if (u.advancedDateTime = Date.now() - f, u.live || i != null && i.live) {
                                        if (u.reloaded(i), i && this.log("live playlist " + e + " " + (u.advanced ? "REFRESHED " + u.lastPartSn + "-" + u.lastPartIndex : u.updated ? "UPDATED" : "MISSED")), i && u.fragments.length > 0 && da(i, u), !this.canLoad || !u.live) return;
                                        var m, p = void 0,
                                            E = void 0;
                                        if (u.canBlockReload && u.endSN && u.advanced) {
                                            var S = this.hls.config.lowLatencyMode,
                                                L = u.lastPartSn,
                                                I = u.endSN,
                                                O = u.lastPartIndex,
                                                U = O !== -1,
                                                G = L === I,
                                                ee = S ? 0 : O;
                                            U ? (p = G ? I + 1 : L, E = G ? ee : O + 1) : p = I + 1;
                                            var te = u.age,
                                                _e = te + u.ageHeader,
                                                me = Math.min(_e - u.partTarget, u.targetduration * 1.5);
                                            if (me > 0) {
                                                if (i && me > i.tuneInGoal) this.warn("CDN Tune-in goal increased from: " + i.tuneInGoal + " to: " + me + " with playlist age: " + u.age), me = 0;
                                                else {
                                                    var ae = Math.floor(me / u.targetduration);
                                                    if (p += ae, E !== void 0) {
                                                        var Se = Math.round(me % u.targetduration / u.partTarget);
                                                        E += Se
                                                    }
                                                    this.log("CDN Tune-in age: " + u.ageHeader + "s last advanced " + te.toFixed(2) + "s goal: " + me + " skip sn " + ae + " to part " + E)
                                                }
                                                u.tuneInGoal = me
                                            }
                                            if (m = this.getDeliveryDirectives(u, r.deliveryDirectives, p, E), S || !G) {
                                                this.loadPlaylist(m);
                                                return
                                            }
                                        } else(u.canBlockReload || u.canSkipUntil) && (m = this.getDeliveryDirectives(u, r.deliveryDirectives, p, E));
                                        var ve = this.hls.mainForwardBufferInfo,
                                            Ne = ve ? ve.end - ve.len : 0,
                                            Ie = (u.edge - Ne) * 1e3,
                                            kt = Ai(u, Ie);
                                        u.updated && h > this.requestScheduled + kt && (this.requestScheduled = c.loading.start), p !== void 0 && u.canBlockReload ? this.requestScheduled = c.loading.first + kt - (u.partTarget * 1e3 || 1e3) : this.requestScheduled === -1 || this.requestScheduled + kt < h ? this.requestScheduled = h : this.requestScheduled - h <= 0 && (this.requestScheduled += kt);
                                        var zt = this.requestScheduled - h;
                                        zt = Math.max(0, zt), this.log("reload live playlist " + e + " in " + Math.round(zt) + " ms"), this.timer = self.setTimeout(function() {
                                            return o.loadPlaylist(m)
                                        }, zt)
                                    } else this.clearTimer()
                                }, n.getDeliveryDirectives = function(e, r, i, o) {
                                    var u = Qt(e);
                                    return r != null && r.skip && e.deltaUpdateFailed && (i = r.msn, o = r.part, u = _t.No), new yr(i, o, u)
                                }, n.checkRetry = function(e) {
                                    var r = this,
                                        i = e.details,
                                        o = wn(e),
                                        u = e.errorAction,
                                        c = u || {},
                                        h = c.action,
                                        f = c.retryCount,
                                        m = f === void 0 ? 0 : f,
                                        p = c.retryConfig,
                                        E = !!u && !!p && (h === Te.RetryRequest || !u.resolved && h === Te.SendAlternateToPenaltyBox);
                                    if (E) {
                                        var S;
                                        if (this.requestScheduled = -1, m >= p.maxNumRetry) return !1;
                                        if (o && (S = e.context) != null && S.deliveryDirectives) this.warn("Retrying playlist loading " + (m + 1) + "/" + p.maxNumRetry + ' after "' + i + '" without delivery-directives'), this.loadPlaylist();
                                        else {
                                            var L = ci(p, m);
                                            this.timer = self.setTimeout(function() {
                                                return r.loadPlaylist()
                                            }, L), this.warn("Retrying playlist loading " + (m + 1) + "/" + p.maxNumRetry + ' after "' + i + '" in ' + L + "ms")
                                        }
                                        e.levelRetry = !0, u.resolved = !0
                                    }
                                    return E
                                }, l
                            }(),
                            xt = function() {
                                function l(a, e, r) {
                                    e === void 0 && (e = 0), r === void 0 && (r = 0), this.halfLife = void 0, this.alpha_ = void 0, this.estimate_ = void 0, this.totalWeight_ = void 0, this.halfLife = a, this.alpha_ = a ? Math.exp(Math.log(.5) / a) : 0, this.estimate_ = e, this.totalWeight_ = r
                                }
                                var n = l.prototype;
                                return n.sample = function(e, r) {
                                    var i = Math.pow(this.alpha_, e);
                                    this.estimate_ = r * (1 - i) + i * this.estimate_, this.totalWeight_ += e
                                }, n.getTotalWeight = function() {
                                    return this.totalWeight_
                                }, n.getEstimate = function() {
                                    if (this.alpha_) {
                                        var e = 1 - Math.pow(this.alpha_, this.totalWeight_);
                                        if (e) return this.estimate_ / e
                                    }
                                    return this.estimate_
                                }, l
                            }(),
                            xe = function() {
                                function l(a, e, r, i) {
                                    i === void 0 && (i = 100), this.defaultEstimate_ = void 0, this.minWeight_ = void 0, this.minDelayMs_ = void 0, this.slow_ = void 0, this.fast_ = void 0, this.defaultTTFB_ = void 0, this.ttfb_ = void 0, this.defaultEstimate_ = r, this.minWeight_ = .001, this.minDelayMs_ = 50, this.slow_ = new xt(a), this.fast_ = new xt(e), this.defaultTTFB_ = i, this.ttfb_ = new xt(a)
                                }
                                var n = l.prototype;
                                return n.update = function(e, r) {
                                    var i = this.slow_,
                                        o = this.fast_,
                                        u = this.ttfb_;
                                    i.halfLife !== e && (this.slow_ = new xt(e, i.getEstimate(), i.getTotalWeight())), o.halfLife !== r && (this.fast_ = new xt(r, o.getEstimate(), o.getTotalWeight())), u.halfLife !== e && (this.ttfb_ = new xt(e, u.getEstimate(), u.getTotalWeight()))
                                }, n.sample = function(e, r) {
                                    e = Math.max(e, this.minDelayMs_);
                                    var i = 8 * r,
                                        o = e / 1e3,
                                        u = i / o;
                                    this.fast_.sample(o, u), this.slow_.sample(o, u)
                                }, n.sampleTTFB = function(e) {
                                    var r = e / 1e3,
                                        i = Math.sqrt(2) * Math.exp(-Math.pow(r, 2) / 2);
                                    this.ttfb_.sample(i, Math.max(e, 5))
                                }, n.canEstimate = function() {
                                    return this.fast_.getTotalWeight() >= this.minWeight_
                                }, n.getEstimate = function() {
                                    return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                                }, n.getEstimateTTFB = function() {
                                    return this.ttfb_.getTotalWeight() >= this.minWeight_ ? this.ttfb_.getEstimate() : this.defaultTTFB_
                                }, n.destroy = function() {}, l
                            }(),
                            Ae = {
                                supported: !0,
                                configurations: [],
                                decodingInfoResults: [{
                                    supported: !0,
                                    powerEfficient: !0,
                                    smooth: !0
                                }]
                            },
                            Ue = {};

                        function Bt(l, n, a, e, r, i) {
                            var o = l.audioCodec ? l.audioGroups : null,
                                u = i == null ? void 0 : i.audioCodec,
                                c = i == null ? void 0 : i.channels,
                                h = c ? parseInt(c) : u ? 1 / 0 : 2,
                                f = null;
                            if (o != null && o.length) try {
                                o.length === 1 && o[0] ? f = n.groups[o[0]].channels : f = o.reduce(function(m, p) {
                                    if (p) {
                                        var E = n.groups[p];
                                        if (!E) throw new Error("Audio track group " + p + " not found");
                                        Object.keys(E.channels).forEach(function(S) {
                                            m[S] = (m[S] || 0) + E.channels[S]
                                        })
                                    }
                                    return m
                                }, {
                                    2: 0
                                })
                            } catch (m) {
                                return !0
                            }
                            return l.videoCodec !== void 0 && (l.width > 1920 && l.height > 1088 || l.height > 1920 && l.width > 1088 || l.frameRate > Math.max(e, 30) || l.videoRange !== "SDR" && l.videoRange !== a || l.bitrate > Math.max(r, 8e6)) || !!f && Ge(h) && Object.keys(f).some(function(m) {
                                return parseInt(m) > h
                            })
                        }

                        function cr(l, n, a) {
                            var e = l.videoCodec,
                                r = l.audioCodec;
                            if (!e || !r || !a) return Promise.resolve(Ae);
                            var i = {
                                    width: l.width,
                                    height: l.height,
                                    bitrate: Math.ceil(Math.max(l.bitrate * .9, l.averageBitrate)),
                                    framerate: l.frameRate || 30
                                },
                                o = l.videoRange;
                            o !== "SDR" && (i.transferFunction = o.toLowerCase());
                            var u = e.split(",").map(function(c) {
                                return {
                                    type: "media-source",
                                    video: Ee(Ee({}, i), {}, {
                                        contentType: Pr(c, "video")
                                    })
                                }
                            });
                            return r && l.audioGroups && l.audioGroups.forEach(function(c) {
                                var h;
                                c && ((h = n.groups[c]) == null || h.tracks.forEach(function(f) {
                                    if (f.groupId === c) {
                                        var m = f.channels || "",
                                            p = parseFloat(m);
                                        Ge(p) && p > 2 && u.push.apply(u, r.split(",").map(function(E) {
                                            return {
                                                type: "media-source",
                                                audio: {
                                                    contentType: Pr(E, "audio"),
                                                    channels: "" + p
                                                }
                                            }
                                        }))
                                    }
                                }))
                            }), Promise.all(u.map(function(c) {
                                var h = Ur(c);
                                return Ue[h] || (Ue[h] = a.decodingInfo(c))
                            })).then(function(c) {
                                return {
                                    supported: !c.some(function(h) {
                                        return !h.supported
                                    }),
                                    configurations: u,
                                    decodingInfoResults: c
                                }
                            }).catch(function(c) {
                                return {
                                    supported: !1,
                                    configurations: u,
                                    decodingInfoResults: [],
                                    error: c
                                }
                            })
                        }

                        function Ur(l) {
                            var n = l.audio,
                                a = l.video,
                                e = a || n;
                            if (e) {
                                var r = e.contentType.split('"')[1];
                                if (a) return "r" + a.height + "x" + a.width + "f" + Math.ceil(a.framerate) + (a.transferFunction || "sd") + "_" + r + "_" + Math.ceil(a.bitrate / 1e5);
                                if (n) return "c" + n.channels + (n.spatialRendering ? "s" : "n") + "_" + r
                            }
                            return ""
                        }

                        function Pt() {
                            if (typeof matchMedia == "function") {
                                var l = matchMedia("(dynamic-range: high)"),
                                    n = matchMedia("bad query");
                                if (l.media !== n.media) return l.matches === !0
                            }
                            return !1
                        }

                        function St(l, n) {
                            var a = !1,
                                e = [];
                            return l && (a = l !== "SDR", e = [l]), n && (e = n.allowedVideoRanges || wi.slice(0), a = n.preferHDR !== void 0 ? n.preferHDR : Pt(), a ? e = e.filter(function(r) {
                                return r !== "SDR"
                            }) : e = ["SDR"]), {
                                preferHDR: a,
                                allowedVideoRanges: e
                            }
                        }

                        function ut(l, n, a, e, r) {
                            for (var i = Object.keys(l), o = e == null ? void 0 : e.channels, u = e == null ? void 0 : e.audioCodec, c = o && parseInt(o) === 2, h = !0, f = !1, m = 1 / 0, p = 1 / 0, E = 1 / 0, S = 0, L = [], I = St(n, r), O = I.preferHDR, U = I.allowedVideoRanges, G = function() {
                                    var Se = l[i[ee]];
                                    h = Se.channels[2] > 0, m = Math.min(m, Se.minHeight), p = Math.min(p, Se.minFramerate), E = Math.min(E, Se.minBitrate);
                                    var ve = U.filter(function(Ne) {
                                        return Se.videoRanges[Ne] > 0
                                    });
                                    ve.length > 0 && (f = !0, L = ve)
                                }, ee = i.length; ee--;) G();
                            m = Ge(m) ? m : 0, p = Ge(p) ? p : 0;
                            var te = Math.max(1080, m),
                                _e = Math.max(30, p);
                            E = Ge(E) ? E : a, a = Math.max(E, a), f || (n = void 0, L = []);
                            var me = i.reduce(function(ae, Se) {
                                var ve = l[Se];
                                if (Se === ae) return ae;
                                if (ve.minBitrate > a) return Oe(Se, "min bitrate of " + ve.minBitrate + " > current estimate of " + a), ae;
                                if (!ve.hasDefaultAudio) return Oe(Se, "no renditions with default or auto-select sound found"), ae;
                                if (u && Se.indexOf(u.substring(0, 4)) % 5 !== 0) return Oe(Se, 'audio codec preference "' + u + '" not found'), ae;
                                if (o && !c) {
                                    if (!ve.channels[o]) return Oe(Se, "no renditions with " + o + " channel sound found (channels options: " + Object.keys(ve.channels) + ")"), ae
                                } else if ((!u || c) && h && ve.channels[2] === 0) return Oe(Se, "no renditions with stereo sound found"), ae;
                                return ve.minHeight > te ? (Oe(Se, "min resolution of " + ve.minHeight + " > maximum of " + te), ae) : ve.minFramerate > _e ? (Oe(Se, "min framerate of " + ve.minFramerate + " > maximum of " + _e), ae) : L.some(function(Ne) {
                                    return ve.videoRanges[Ne] > 0
                                }) ? ve.maxScore < S ? (Oe(Se, "max score of " + ve.maxScore + " < selected max of " + S), ae) : ae && (va(Se) >= va(ae) || ve.fragmentError > l[ae].fragmentError) ? ae : (S = ve.maxScore, Se) : (Oe(Se, "no variants with VIDEO-RANGE of " + JSON.stringify(L) + " found"), ae)
                            }, void 0);
                            return {
                                codecSet: me,
                                videoRanges: L,
                                preferHDR: O,
                                minFramerate: p,
                                minBitrate: E
                            }
                        }

                        function Oe(l, n) {
                            V.log('[abr] start candidates with "' + l + '" ignored because ' + n)
                        }

                        function Mr(l) {
                            return l.reduce(function(n, a) {
                                var e = n.groups[a.groupId];
                                e || (e = n.groups[a.groupId] = {
                                    tracks: [],
                                    channels: {
                                        2: 0
                                    },
                                    hasDefault: !1,
                                    hasAutoSelect: !1
                                }), e.tracks.push(a);
                                var r = a.channels || "2";
                                return e.channels[r] = (e.channels[r] || 0) + 1, e.hasDefault = e.hasDefault || a.default, e.hasAutoSelect = e.hasAutoSelect || a.autoselect, e.hasDefault && (n.hasDefaultAudio = !0), e.hasAutoSelect && (n.hasAutoSelectAudio = !0), n
                            }, {
                                hasDefaultAudio: !1,
                                hasAutoSelectAudio: !1,
                                groups: {}
                            })
                        }

                        function Yr(l, n, a, e) {
                            return l.slice(a, e + 1).reduce(function(r, i) {
                                if (!i.codecSet) return r;
                                var o = i.audioGroups,
                                    u = r[i.codecSet];
                                u || (r[i.codecSet] = u = {
                                    minBitrate: 1 / 0,
                                    minHeight: 1 / 0,
                                    minFramerate: 1 / 0,
                                    maxScore: 0,
                                    videoRanges: {
                                        SDR: 0
                                    },
                                    channels: {
                                        2: 0
                                    },
                                    hasDefaultAudio: !o,
                                    fragmentError: 0
                                }), u.minBitrate = Math.min(u.minBitrate, i.bitrate);
                                var c = Math.min(i.height, i.width);
                                return u.minHeight = Math.min(u.minHeight, c), u.minFramerate = Math.min(u.minFramerate, i.frameRate), u.maxScore = Math.max(u.maxScore, i.score), u.fragmentError += i.fragmentError, u.videoRanges[i.videoRange] = (u.videoRanges[i.videoRange] || 0) + 1, o && o.forEach(function(h) {
                                    if (h) {
                                        var f = n.groups[h];
                                        f && (u.hasDefaultAudio = u.hasDefaultAudio || n.hasDefaultAudio ? f.hasDefault : f.hasAutoSelect || !n.hasDefaultAudio && !n.hasAutoSelectAudio, Object.keys(f.channels).forEach(function(m) {
                                            u.channels[m] = (u.channels[m] || 0) + f.channels[m]
                                        }))
                                    }
                                }), r
                            }, {})
                        }

                        function jr(l, n, a) {
                            if ("attrs" in l) {
                                var e = n.indexOf(l);
                                if (e !== -1) return e
                            }
                            for (var r = 0; r < n.length; r++) {
                                var i = n[r];
                                if (Jr(l, i, a)) return r
                            }
                            return -1
                        }

                        function Jr(l, n, a) {
                            var e = l.groupId,
                                r = l.name,
                                i = l.lang,
                                o = l.assocLang,
                                u = l.default,
                                c = l.forced;
                            return (e === void 0 || n.groupId === e) && (r === void 0 || n.name === r) && (i === void 0 || n.lang === i) && (i === void 0 || n.assocLang === o) && (u === void 0 || n.default === u) && (c === void 0 || n.forced === c) && (!("characteristics" in l) || ca(l.characteristics || "", n.characteristics)) && (a === void 0 || a(l, n))
                        }

                        function ca(l, n) {
                            n === void 0 && (n = "");
                            var a = l.split(","),
                                e = n.split(",");
                            return a.length === e.length && !a.some(function(r) {
                                return e.indexOf(r) === -1
                            })
                        }

                        function ii(l, n) {
                            var a = l.audioCodec,
                                e = l.channels;
                            return (a === void 0 || (n.audioCodec || "").substring(0, 4) === a.substring(0, 4)) && (e === void 0 || e === (n.channels || "2"))
                        }

                        function zr(l, n, a, e, r) {
                            var i = n[e],
                                o = n.reduce(function(p, E, S) {
                                    var L = E.uri,
                                        I = p[L] || (p[L] = []);
                                    return I.push(S), p
                                }, {}),
                                u = o[i.uri];
                            u.length > 1 && (e = Math.max.apply(Math, u));
                            var c = i.videoRange,
                                h = i.frameRate,
                                f = i.codecSet.substring(0, 4),
                                m = yn(n, e, function(p) {
                                    if (p.videoRange !== c || p.frameRate !== h || p.codecSet.substring(0, 4) !== f) return !1;
                                    var E = p.audioGroups,
                                        S = a.filter(function(L) {
                                            return !E || E.indexOf(L.groupId) !== -1
                                        });
                                    return jr(l, S, r) > -1
                                });
                            return m > -1 ? m : yn(n, e, function(p) {
                                var E = p.audioGroups,
                                    S = a.filter(function(L) {
                                        return !E || E.indexOf(L.groupId) !== -1
                                    });
                                return jr(l, S, r) > -1
                            })
                        }

                        function yn(l, n, a) {
                            for (var e = n; e > -1; e--)
                                if (a(l[e])) return e;
                            for (var r = n + 1; r < l.length; r++)
                                if (a(l[r])) return r;
                            return -1
                        }
                        var bs = function() {
                                function l(a) {
                                    var e = this;
                                    this.hls = void 0, this.lastLevelLoadSec = 0, this.lastLoadedFragLevel = -1, this.firstSelection = -1, this._nextAutoLevel = -1, this.nextAutoLevelKey = "", this.audioTracksByGroup = null, this.codecTiers = null, this.timer = -1, this.fragCurrent = null, this.partCurrent = null, this.bitrateTestDelay = 0, this.bwEstimator = void 0, this._abandonRulesCheck = function() {
                                        var r = e.fragCurrent,
                                            i = e.partCurrent,
                                            o = e.hls,
                                            u = o.autoLevelEnabled,
                                            c = o.media;
                                        if (!(!r || !c)) {
                                            var h = performance.now(),
                                                f = i ? i.stats : r.stats,
                                                m = i ? i.duration : r.duration,
                                                p = h - f.loading.start,
                                                E = o.minAutoLevel;
                                            if (f.aborted || f.loaded && f.loaded === f.total || r.level <= E) {
                                                e.clearTimer(), e._nextAutoLevel = -1;
                                                return
                                            }
                                            if (!(!u || c.paused || !c.playbackRate || !c.readyState)) {
                                                var S = o.mainForwardBufferInfo;
                                                if (S !== null) {
                                                    var L = e.bwEstimator.getEstimateTTFB(),
                                                        I = Math.abs(c.playbackRate);
                                                    if (!(p <= Math.max(L, 1e3 * (m / (I * 2))))) {
                                                        var O = S.len / I,
                                                            U = f.loading.first ? f.loading.first - f.loading.start : -1,
                                                            G = f.loaded && U > -1,
                                                            ee = e.getBwEstimate(),
                                                            te = o.levels,
                                                            _e = te[r.level],
                                                            me = f.total || Math.max(f.loaded, Math.round(m * _e.averageBitrate / 8)),
                                                            ae = G ? p - U : p;
                                                        ae < 1 && G && (ae = Math.min(p, f.loaded * 8 / ee));
                                                        var Se = G ? f.loaded * 1e3 / ae : 0,
                                                            ve = Se ? (me - f.loaded) / Se : me * 8 / ee + L / 1e3;
                                                        if (!(ve <= O)) {
                                                            var Ne = Se ? Se * 8 : ee,
                                                                Ie = Number.POSITIVE_INFINITY,
                                                                kt;
                                                            for (kt = r.level - 1; kt > E; kt--) {
                                                                var zt = te[kt].maxBitrate;
                                                                if (Ie = e.getTimeToLoadFrag(L / 1e3, Ne, m * zt, !te[kt].details), Ie < O) break
                                                            }
                                                            if (!(Ie >= ve) && !(Ie > m * 10)) {
                                                                o.nextLoadLevel = o.nextAutoLevel = kt, G ? e.bwEstimator.sample(p - Math.min(L, U), f.loaded) : e.bwEstimator.sampleTTFB(p);
                                                                var lr = te[kt].maxBitrate;
                                                                e.getBwEstimate() * e.hls.config.abrBandWidthUpFactor > lr && e.resetEstimator(lr), e.clearTimer(), V.warn("[abr] Fragment " + r.sn + (i ? " part " + i.index : "") + " of level " + r.level + ` is loading too slowly;
      Time to underbuffer: ` + O.toFixed(3) + ` s
      Estimated load time for current fragment: ` + ve.toFixed(3) + ` s
      Estimated load time for down switch fragment: ` + Ie.toFixed(3) + ` s
      TTFB estimate: ` + (U | 0) + ` ms
      Current BW estimate: ` + (Ge(ee) ? ee | 0 : "Unknown") + ` bps
      New BW estimate: ` + (e.getBwEstimate() | 0) + ` bps
      Switching to level ` + kt + " @ " + (lr | 0) + " bps"), o.trigger(_.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                                    frag: r,
                                                                    part: i,
                                                                    stats: f
                                                                })
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }, this.hls = a, this.bwEstimator = this.initEstimator(), this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.resetEstimator = function(e) {
                                    e && (V.log("setting initial bwe to " + e), this.hls.config.abrEwmaDefaultEstimate = e), this.firstSelection = -1, this.bwEstimator = this.initEstimator()
                                }, n.initEstimator = function() {
                                    var e = this.hls.config;
                                    return new xe(e.abrEwmaSlowVoD, e.abrEwmaFastVoD, e.abrEwmaDefaultEstimate)
                                }, n.registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.MANIFEST_LOADING, this.onManifestLoading, this), e.on(_.FRAG_LOADING, this.onFragLoading, this), e.on(_.FRAG_LOADED, this.onFragLoaded, this), e.on(_.FRAG_BUFFERED, this.onFragBuffered, this), e.on(_.LEVEL_SWITCHING, this.onLevelSwitching, this), e.on(_.LEVEL_LOADED, this.onLevelLoaded, this), e.on(_.LEVELS_UPDATED, this.onLevelsUpdated, this), e.on(_.MAX_AUTO_LEVEL_UPDATED, this.onMaxAutoLevelUpdated, this), e.on(_.ERROR, this.onError, this)
                                }, n.unregisterListeners = function() {
                                    var e = this.hls;
                                    e && (e.off(_.MANIFEST_LOADING, this.onManifestLoading, this), e.off(_.FRAG_LOADING, this.onFragLoading, this), e.off(_.FRAG_LOADED, this.onFragLoaded, this), e.off(_.FRAG_BUFFERED, this.onFragBuffered, this), e.off(_.LEVEL_SWITCHING, this.onLevelSwitching, this), e.off(_.LEVEL_LOADED, this.onLevelLoaded, this), e.off(_.LEVELS_UPDATED, this.onLevelsUpdated, this), e.off(_.MAX_AUTO_LEVEL_UPDATED, this.onMaxAutoLevelUpdated, this), e.off(_.ERROR, this.onError, this))
                                }, n.destroy = function() {
                                    this.unregisterListeners(), this.clearTimer(), this.hls = this._abandonRulesCheck = null, this.fragCurrent = this.partCurrent = null
                                }, n.onManifestLoading = function(e, r) {
                                    this.lastLoadedFragLevel = -1, this.firstSelection = -1, this.lastLevelLoadSec = 0, this.fragCurrent = this.partCurrent = null, this.onLevelsUpdated(), this.clearTimer()
                                }, n.onLevelsUpdated = function() {
                                    this.lastLoadedFragLevel > -1 && this.fragCurrent && (this.lastLoadedFragLevel = this.fragCurrent.level), this._nextAutoLevel = -1, this.onMaxAutoLevelUpdated(), this.codecTiers = null, this.audioTracksByGroup = null
                                }, n.onMaxAutoLevelUpdated = function() {
                                    this.firstSelection = -1, this.nextAutoLevelKey = ""
                                }, n.onFragLoading = function(e, r) {
                                    var i = r.frag;
                                    if (!this.ignoreFragment(i)) {
                                        if (!i.bitrateTest) {
                                            var o;
                                            this.fragCurrent = i, this.partCurrent = (o = r.part) != null ? o : null
                                        }
                                        this.clearTimer(), this.timer = self.setInterval(this._abandonRulesCheck, 100)
                                    }
                                }, n.onLevelSwitching = function(e, r) {
                                    this.clearTimer()
                                }, n.onError = function(e, r) {
                                    if (!r.fatal) switch (r.details) {
                                        case de.BUFFER_ADD_CODEC_ERROR:
                                        case de.BUFFER_APPEND_ERROR:
                                            this.lastLoadedFragLevel = -1, this.firstSelection = -1;
                                            break;
                                        case de.FRAG_LOAD_TIMEOUT:
                                            {
                                                var i = r.frag,
                                                    o = this.fragCurrent,
                                                    u = this.partCurrent;
                                                if (i && o && i.sn === o.sn && i.level === o.level) {
                                                    var c = performance.now(),
                                                        h = u ? u.stats : i.stats,
                                                        f = c - h.loading.start,
                                                        m = h.loading.first ? h.loading.first - h.loading.start : -1,
                                                        p = h.loaded && m > -1;
                                                    if (p) {
                                                        var E = this.bwEstimator.getEstimateTTFB();
                                                        this.bwEstimator.sample(f - Math.min(E, m), h.loaded)
                                                    } else this.bwEstimator.sampleTTFB(f)
                                                }
                                                break
                                            }
                                    }
                                }, n.getTimeToLoadFrag = function(e, r, i, o) {
                                    var u = e + i / r,
                                        c = o ? this.lastLevelLoadSec : 0;
                                    return u + c
                                }, n.onLevelLoaded = function(e, r) {
                                    var i = this.hls.config,
                                        o = r.stats.loading,
                                        u = o.end - o.start;
                                    Ge(u) && (this.lastLevelLoadSec = u / 1e3), r.details.live ? this.bwEstimator.update(i.abrEwmaSlowLive, i.abrEwmaFastLive) : this.bwEstimator.update(i.abrEwmaSlowVoD, i.abrEwmaFastVoD)
                                }, n.onFragLoaded = function(e, r) {
                                    var i = r.frag,
                                        o = r.part,
                                        u = o ? o.stats : i.stats;
                                    if (i.type === H.MAIN && this.bwEstimator.sampleTTFB(u.loading.first - u.loading.start), !this.ignoreFragment(i)) {
                                        if (this.clearTimer(), i.level === this._nextAutoLevel && (this._nextAutoLevel = -1), this.firstSelection = -1, this.hls.config.abrMaxWithRealBitrate) {
                                            var c = o ? o.duration : i.duration,
                                                h = this.hls.levels[i.level],
                                                f = (h.loaded ? h.loaded.bytes : 0) + u.loaded,
                                                m = (h.loaded ? h.loaded.duration : 0) + c;
                                            h.loaded = {
                                                bytes: f,
                                                duration: m
                                            }, h.realBitrate = Math.round(8 * f / m)
                                        }
                                        if (i.bitrateTest) {
                                            var p = {
                                                stats: u,
                                                frag: i,
                                                part: o,
                                                id: i.type
                                            };
                                            this.onFragBuffered(_.FRAG_BUFFERED, p), i.bitrateTest = !1
                                        } else this.lastLoadedFragLevel = i.level
                                    }
                                }, n.onFragBuffered = function(e, r) {
                                    var i = r.frag,
                                        o = r.part,
                                        u = o != null && o.stats.loaded ? o.stats : i.stats;
                                    if (!u.aborted && !this.ignoreFragment(i)) {
                                        var c = u.parsing.end - u.loading.start - Math.min(u.loading.first - u.loading.start, this.bwEstimator.getEstimateTTFB());
                                        this.bwEstimator.sample(c, u.loaded), u.bwEstimate = this.getBwEstimate(), i.bitrateTest ? this.bitrateTestDelay = c / 1e3 : this.bitrateTestDelay = 0
                                    }
                                }, n.ignoreFragment = function(e) {
                                    return e.type !== H.MAIN || e.sn === "initSegment"
                                }, n.clearTimer = function() {
                                    this.timer > -1 && (self.clearInterval(this.timer), this.timer = -1)
                                }, n.getAutoLevelKey = function() {
                                    return this.getBwEstimate() + "_" + this.getStarvationDelay().toFixed(2)
                                }, n.getNextABRAutoLevel = function() {
                                    var e = this.fragCurrent,
                                        r = this.partCurrent,
                                        i = this.hls,
                                        o = i.maxAutoLevel,
                                        u = i.config,
                                        c = i.minAutoLevel,
                                        h = r ? r.duration : e ? e.duration : 0,
                                        f = this.getBwEstimate(),
                                        m = this.getStarvationDelay(),
                                        p = u.abrBandWidthFactor,
                                        E = u.abrBandWidthUpFactor;
                                    if (m) {
                                        var S = this.findBestLevel(f, c, o, m, 0, p, E);
                                        if (S >= 0) return S
                                    }
                                    var L = h ? Math.min(h, u.maxStarvationDelay) : u.maxStarvationDelay;
                                    if (!m) {
                                        var I = this.bitrateTestDelay;
                                        if (I) {
                                            var O = h ? Math.min(h, u.maxLoadingDelay) : u.maxLoadingDelay;
                                            L = O - I, V.info("[abr] bitrate test took " + Math.round(1e3 * I) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * L) + " ms"), p = E = 1
                                        }
                                    }
                                    var U = this.findBestLevel(f, c, o, m, L, p, E);
                                    if (V.info("[abr] " + (m ? "rebuffering expected" : "buffer is empty") + ", optimal quality level " + U), U > -1) return U;
                                    var G = i.levels[c],
                                        ee = i.levels[i.loadLevel];
                                    return (G == null ? void 0 : G.bitrate) < (ee == null ? void 0 : ee.bitrate) ? c : i.loadLevel
                                }, n.getStarvationDelay = function() {
                                    var e = this.hls,
                                        r = e.media;
                                    if (!r) return 1 / 0;
                                    var i = r && r.playbackRate !== 0 ? Math.abs(r.playbackRate) : 1,
                                        o = e.mainForwardBufferInfo;
                                    return (o ? o.len : 0) / i
                                }, n.getBwEstimate = function() {
                                    return this.bwEstimator.canEstimate() ? this.bwEstimator.getEstimate() : this.hls.config.abrEwmaDefaultEstimate
                                }, n.findBestLevel = function(e, r, i, o, u, c, h) {
                                    var f, m = this,
                                        p = o + u,
                                        E = this.lastLoadedFragLevel,
                                        S = E === -1 ? this.hls.firstLevel : E,
                                        L = this.fragCurrent,
                                        I = this.partCurrent,
                                        O = this.hls,
                                        U = O.levels,
                                        G = O.allAudioTracks,
                                        ee = O.loadLevel,
                                        te = O.config;
                                    if (U.length === 1) return 0;
                                    var _e = U[S],
                                        me = !!(_e != null && (f = _e.details) != null && f.live),
                                        ae = ee === -1 || E === -1,
                                        Se, ve = "SDR",
                                        Ne = (_e == null ? void 0 : _e.frameRate) || 0,
                                        Ie = te.audioPreference,
                                        kt = te.videoPreference,
                                        zt = this.audioTracksByGroup || (this.audioTracksByGroup = Mr(G));
                                    if (ae) {
                                        if (this.firstSelection !== -1) return this.firstSelection;
                                        var lr = this.codecTiers || (this.codecTiers = Yr(U, zt, r, i)),
                                            Fr = ut(lr, ve, e, Ie, kt),
                                            Br = Fr.codecSet,
                                            hi = Fr.videoRanges,
                                            ei = Fr.minFramerate,
                                            Hr = Fr.minBitrate,
                                            Zi = Fr.preferHDR;
                                        Se = Br, ve = Zi ? hi[hi.length - 1] : hi[0], Ne = ei, e = Math.max(e, Hr), V.log("[abr] picked start tier " + JSON.stringify(Fr))
                                    } else Se = _e == null ? void 0 : _e.codecSet, ve = _e == null ? void 0 : _e.videoRange;
                                    for (var ir = I ? I.duration : L ? L.duration : 0, Ii = this.bwEstimator.getEstimateTTFB() / 1e3, Fi = [], wa = function() {
                                            var Na, pi = U[Bi],
                                                Ra = Bi > S;
                                            if (!pi) return 0;
                                            if (te.useMediaCapabilities && !pi.supportedResult && !pi.supportedPromise) {
                                                var Ua = navigator.mediaCapabilities;
                                                typeof(Ua == null ? void 0 : Ua.decodingInfo) == "function" && Bt(pi, zt, ve, Ne, e, Ie) ? (pi.supportedPromise = cr(pi, zt, Ua), pi.supportedPromise.then(function(vs) {
                                                    if (m.hls) {
                                                        pi.supportedResult = vs;
                                                        var xo = m.hls.levels,
                                                            ps = xo.indexOf(pi);
                                                        vs.error ? V.warn('[abr] MediaCapabilities decodingInfo error: "' + vs.error + '" for level ' + ps + " " + JSON.stringify(vs)) : vs.supported || (V.warn("[abr] Unsupported MediaCapabilities decodingInfo result for level " + ps + " " + JSON.stringify(vs)), ps > -1 && xo.length > 1 && (V.log("[abr] Removing unsupported level " + ps), m.hls.removeLevel(ps)))
                                                    }
                                                })) : pi.supportedResult = Ae
                                            }
                                            if (Se && pi.codecSet !== Se || ve && pi.videoRange !== ve || Ra && Ne > pi.frameRate || !Ra && Ne > 0 && Ne < pi.frameRate || pi.supportedResult && !((Na = pi.supportedResult.decodingInfoResults) != null && Na[0].smooth)) return Fi.push(Bi), 0;
                                            var Hi = pi.details,
                                                Ta = (I ? Hi == null ? void 0 : Hi.partTarget : Hi == null ? void 0 : Hi.averagetargetduration) || ir,
                                                Wi;
                                            Ra ? Wi = h * e : Wi = c * e;
                                            var An = ir && o >= ir * 2 && u === 0 ? U[Bi].averageBitrate : U[Bi].maxBitrate,
                                                Aa = m.getTimeToLoadFrag(Ii, Wi, An * Ta, Hi === void 0),
                                                $s = Wi >= An && (Bi === E || pi.loadError === 0 && pi.fragmentError === 0) && (Aa <= Ii || !Ge(Aa) || me && !m.bitrateTestDelay || Aa < p);
                                            if ($s) {
                                                var Yl = m.forcedAutoLevel;
                                                return Bi !== ee && (Yl === -1 || Yl !== ee) && (Fi.length && V.trace("[abr] Skipped level(s) " + Fi.join(",") + " of " + i + ' max with CODECS and VIDEO-RANGE:"' + U[Fi[0]].codecs + '" ' + U[Fi[0]].videoRange + '; not compatible with "' + _e.codecs + '" ' + ve), V.info("[abr] switch candidate:" + S + "->" + Bi + " adjustedbw(" + Math.round(Wi) + ")-bitrate=" + Math.round(Wi - An) + " ttfb:" + Ii.toFixed(1) + " avgDuration:" + Ta.toFixed(1) + " maxFetchDuration:" + p.toFixed(1) + " fetchDuration:" + Aa.toFixed(1) + " firstSelection:" + ae + " codecSet:" + Se + " videoRange:" + ve + " hls.loadLevel:" + ee)), ae && (m.firstSelection = Bi), {
                                                    v: Bi
                                                }
                                            }
                                        }, Ci, Bi = i; Bi >= r; Bi--)
                                        if (Ci = wa(), Ci !== 0 && Ci) return Ci.v;
                                    return -1
                                }, tt(l, [{
                                    key: "firstAutoLevel",
                                    get: function() {
                                        var e = this.hls,
                                            r = e.maxAutoLevel,
                                            i = e.minAutoLevel,
                                            o = this.getBwEstimate(),
                                            u = this.hls.config.maxStarvationDelay,
                                            c = this.findBestLevel(o, i, r, 0, u, 1, 1);
                                        if (c > -1) return c;
                                        var h = this.hls.firstLevel,
                                            f = Math.min(Math.max(h, i), r);
                                        return V.warn("[abr] Could not find best starting auto level. Defaulting to first in playlist " + h + " clamped to " + f), f
                                    }
                                }, {
                                    key: "forcedAutoLevel",
                                    get: function() {
                                        return this.nextAutoLevelKey ? -1 : this._nextAutoLevel
                                    }
                                }, {
                                    key: "nextAutoLevel",
                                    get: function() {
                                        var e = this.forcedAutoLevel,
                                            r = this.bwEstimator,
                                            i = r.canEstimate(),
                                            o = this.lastLoadedFragLevel > -1;
                                        if (e !== -1 && (!i || !o || this.nextAutoLevelKey === this.getAutoLevelKey())) return e;
                                        var u = i && o ? this.getNextABRAutoLevel() : this.firstAutoLevel;
                                        if (e !== -1) {
                                            var c = this.hls.levels;
                                            if (c.length > Math.max(e, u) && c[e].loadError <= c[u].loadError) return e
                                        }
                                        return this._nextAutoLevel = u, this.nextAutoLevelKey = this.getAutoLevelKey(), u
                                    },
                                    set: function(e) {
                                        var r = this.hls,
                                            i = r.maxAutoLevel,
                                            o = r.minAutoLevel,
                                            u = Math.min(Math.max(e, o), i);
                                        this._nextAutoLevel !== u && (this.nextAutoLevelKey = "", this._nextAutoLevel = u)
                                    }
                                }]), l
                            }(),
                            Ls = function() {
                                function l() {
                                    this._boundTick = void 0, this._tickTimer = null, this._tickInterval = null, this._tickCallCount = 0, this._boundTick = this.tick.bind(this)
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.onHandlerDestroying(), this.onHandlerDestroyed()
                                }, n.onHandlerDestroying = function() {
                                    this.clearNextTick(), this.clearInterval()
                                }, n.onHandlerDestroyed = function() {}, n.hasInterval = function() {
                                    return !!this._tickInterval
                                }, n.hasNextTick = function() {
                                    return !!this._tickTimer
                                }, n.setInterval = function(e) {
                                    return this._tickInterval ? !1 : (this._tickCallCount = 0, this._tickInterval = self.setInterval(this._boundTick, e), !0)
                                }, n.clearInterval = function() {
                                    return this._tickInterval ? (self.clearInterval(this._tickInterval), this._tickInterval = null, !0) : !1
                                }, n.clearNextTick = function() {
                                    return this._tickTimer ? (self.clearTimeout(this._tickTimer), this._tickTimer = null, !0) : !1
                                }, n.tick = function() {
                                    this._tickCallCount++, this._tickCallCount === 1 && (this.doTick(), this._tickCallCount > 1 && this.tickImmediate(), this._tickCallCount = 0)
                                }, n.tickImmediate = function() {
                                    this.clearNextTick(), this._tickTimer = self.setTimeout(this._boundTick, 0)
                                }, n.doTick = function() {}, l
                            }(),
                            ui = {
                                NOT_LOADED: "NOT_LOADED",
                                APPENDING: "APPENDING",
                                PARTIAL: "PARTIAL",
                                OK: "OK"
                            },
                            Ea = function() {
                                function l(a) {
                                    this.activePartLists = Object.create(null), this.endListFragments = Object.create(null), this.fragments = Object.create(null), this.timeRanges = Object.create(null), this.bufferPadding = .2, this.hls = void 0, this.hasGaps = !1, this.hls = a, this._registerListeners()
                                }
                                var n = l.prototype;
                                return n._registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.BUFFER_APPENDED, this.onBufferAppended, this), e.on(_.FRAG_BUFFERED, this.onFragBuffered, this), e.on(_.FRAG_LOADED, this.onFragLoaded, this)
                                }, n._unregisterListeners = function() {
                                    var e = this.hls;
                                    e.off(_.BUFFER_APPENDED, this.onBufferAppended, this), e.off(_.FRAG_BUFFERED, this.onFragBuffered, this), e.off(_.FRAG_LOADED, this.onFragLoaded, this)
                                }, n.destroy = function() {
                                    this._unregisterListeners(), this.fragments = this.activePartLists = this.endListFragments = this.timeRanges = null
                                }, n.getAppendedFrag = function(e, r) {
                                    var i = this.activePartLists[r];
                                    if (i)
                                        for (var o = i.length; o--;) {
                                            var u = i[o];
                                            if (!u) break;
                                            var c = u.end;
                                            if (u.start <= e && c !== null && e <= c) return u
                                        }
                                    return this.getBufferedFrag(e, r)
                                }, n.getBufferedFrag = function(e, r) {
                                    for (var i = this.fragments, o = Object.keys(i), u = o.length; u--;) {
                                        var c = i[o[u]];
                                        if ((c == null ? void 0 : c.body.type) === r && c.buffered) {
                                            var h = c.body;
                                            if (h.start <= e && e <= h.end) return h
                                        }
                                    }
                                    return null
                                }, n.detectEvictedFragments = function(e, r, i, o) {
                                    var u = this;
                                    this.timeRanges && (this.timeRanges[e] = r);
                                    var c = (o == null ? void 0 : o.fragment.sn) || -1;
                                    Object.keys(this.fragments).forEach(function(h) {
                                        var f = u.fragments[h];
                                        if (f && !(c >= f.body.sn)) {
                                            if (!f.buffered && !f.loaded) {
                                                f.body.type === i && u.removeFragment(f.body);
                                                return
                                            }
                                            var m = f.range[e];
                                            m && m.time.some(function(p) {
                                                var E = !u.isTimeBuffered(p.startPTS, p.endPTS, r);
                                                return E && u.removeFragment(f.body), E
                                            })
                                        }
                                    })
                                }, n.detectPartialFragments = function(e) {
                                    var r = this,
                                        i = this.timeRanges,
                                        o = e.frag,
                                        u = e.part;
                                    if (!(!i || o.sn === "initSegment")) {
                                        var c = Gn(o),
                                            h = this.fragments[c];
                                        if (!(!h || h.buffered && o.gap)) {
                                            var f = !o.relurl;
                                            if (Object.keys(i).forEach(function(p) {
                                                    var E = o.elementaryStreams[p];
                                                    if (E) {
                                                        var S = i[p],
                                                            L = f || E.partial === !0;
                                                        h.range[p] = r.getBufferedTimes(o, u, L, S)
                                                    }
                                                }), h.loaded = null, Object.keys(h.range).length) {
                                                h.buffered = !0;
                                                var m = h.body.endList = o.endList || h.body.endList;
                                                m && (this.endListFragments[h.body.type] = h), Jn(h) || this.removeParts(o.sn - 1, o.type)
                                            } else this.removeFragment(h.body)
                                        }
                                    }
                                }, n.removeParts = function(e, r) {
                                    var i = this.activePartLists[r];
                                    i && (this.activePartLists[r] = i.filter(function(o) {
                                        return o.fragment.sn >= e
                                    }))
                                }, n.fragBuffered = function(e, r) {
                                    var i = Gn(e),
                                        o = this.fragments[i];
                                    !o && r && (o = this.fragments[i] = {
                                        body: e,
                                        appendedPTS: null,
                                        loaded: null,
                                        buffered: !1,
                                        range: Object.create(null)
                                    }, e.gap && (this.hasGaps = !0)), o && (o.loaded = null, o.buffered = !0)
                                }, n.getBufferedTimes = function(e, r, i, o) {
                                    for (var u = {
                                            time: [],
                                            partial: i
                                        }, c = e.start, h = e.end, f = e.minEndPTS || h, m = e.maxStartPTS || c, p = 0; p < o.length; p++) {
                                        var E = o.start(p) - this.bufferPadding,
                                            S = o.end(p) + this.bufferPadding;
                                        if (m >= E && f <= S) {
                                            u.time.push({
                                                startPTS: Math.max(c, o.start(p)),
                                                endPTS: Math.min(h, o.end(p))
                                            });
                                            break
                                        } else if (c < S && h > E) {
                                            var L = Math.max(c, o.start(p)),
                                                I = Math.min(h, o.end(p));
                                            I > L && (u.partial = !0, u.time.push({
                                                startPTS: L,
                                                endPTS: I
                                            }))
                                        } else if (h <= E) break
                                    }
                                    return u
                                }, n.getPartialFragment = function(e) {
                                    var r = null,
                                        i, o, u, c = 0,
                                        h = this.bufferPadding,
                                        f = this.fragments;
                                    return Object.keys(f).forEach(function(m) {
                                        var p = f[m];
                                        p && Jn(p) && (o = p.body.start - h, u = p.body.end + h, e >= o && e <= u && (i = Math.min(e - o, u - e), c <= i && (r = p.body, c = i)))
                                    }), r
                                }, n.isEndListAppended = function(e) {
                                    var r = this.endListFragments[e];
                                    return r !== void 0 && (r.buffered || Jn(r))
                                }, n.getState = function(e) {
                                    var r = Gn(e),
                                        i = this.fragments[r];
                                    return i ? i.buffered ? Jn(i) ? ui.PARTIAL : ui.OK : ui.APPENDING : ui.NOT_LOADED
                                }, n.isTimeBuffered = function(e, r, i) {
                                    for (var o, u, c = 0; c < i.length; c++) {
                                        if (o = i.start(c) - this.bufferPadding, u = i.end(c) + this.bufferPadding, e >= o && r <= u) return !0;
                                        if (r <= o) return !1
                                    }
                                    return !1
                                }, n.onFragLoaded = function(e, r) {
                                    var i = r.frag,
                                        o = r.part;
                                    if (!(i.sn === "initSegment" || i.bitrateTest)) {
                                        var u = o ? null : r,
                                            c = Gn(i);
                                        this.fragments[c] = {
                                            body: i,
                                            appendedPTS: null,
                                            loaded: u,
                                            buffered: !1,
                                            range: Object.create(null)
                                        }
                                    }
                                }, n.onBufferAppended = function(e, r) {
                                    var i = this,
                                        o = r.frag,
                                        u = r.part,
                                        c = r.timeRanges;
                                    if (o.sn !== "initSegment") {
                                        var h = o.type;
                                        if (u) {
                                            var f = this.activePartLists[h];
                                            f || (this.activePartLists[h] = f = []), f.push(u)
                                        }
                                        this.timeRanges = c, Object.keys(c).forEach(function(m) {
                                            var p = c[m];
                                            i.detectEvictedFragments(m, p, h, u)
                                        })
                                    }
                                }, n.onFragBuffered = function(e, r) {
                                    this.detectPartialFragments(r)
                                }, n.hasFragment = function(e) {
                                    var r = Gn(e);
                                    return !!this.fragments[r]
                                }, n.hasParts = function(e) {
                                    var r;
                                    return !!((r = this.activePartLists[e]) != null && r.length)
                                }, n.removeFragmentsInRange = function(e, r, i, o, u) {
                                    var c = this;
                                    o && !this.hasGaps || Object.keys(this.fragments).forEach(function(h) {
                                        var f = c.fragments[h];
                                        if (f) {
                                            var m = f.body;
                                            m.type !== i || o && !m.gap || m.start < r && m.end > e && (f.buffered || u) && c.removeFragment(m)
                                        }
                                    })
                                }, n.removeFragment = function(e) {
                                    var r = Gn(e);
                                    e.stats.loaded = 0, e.clearElementaryStreamInfo();
                                    var i = this.activePartLists[e.type];
                                    if (i) {
                                        var o = e.sn;
                                        this.activePartLists[e.type] = i.filter(function(u) {
                                            return u.fragment.sn !== o
                                        })
                                    }
                                    delete this.fragments[r], e.endList && delete this.endListFragments[e.type]
                                }, n.removeAllFragments = function() {
                                    this.fragments = Object.create(null), this.endListFragments = Object.create(null), this.activePartLists = Object.create(null), this.hasGaps = !1
                                }, l
                            }();

                        function Jn(l) {
                            var n, a, e;
                            return l.buffered && (l.body.gap || ((n = l.range.video) == null ? void 0 : n.partial) || ((a = l.range.audio) == null ? void 0 : a.partial) || ((e = l.range.audiovideo) == null ? void 0 : e.partial))
                        }

                        function Gn(l) {
                            return l.type + "_" + l.level + "_" + l.sn
                        }
                        var es = {
                                length: 0,
                                start: function() {
                                    return 0
                                },
                                end: function() {
                                    return 0
                                }
                            },
                            Or = function() {
                                function l() {}
                                return l.isBuffered = function(a, e) {
                                    try {
                                        if (a) {
                                            for (var r = l.getBuffered(a), i = 0; i < r.length; i++)
                                                if (e >= r.start(i) && e <= r.end(i)) return !0
                                        }
                                    } catch (o) {}
                                    return !1
                                }, l.bufferInfo = function(a, e, r) {
                                    try {
                                        if (a) {
                                            var i = l.getBuffered(a),
                                                o = [],
                                                u;
                                            for (u = 0; u < i.length; u++) o.push({
                                                start: i.start(u),
                                                end: i.end(u)
                                            });
                                            return this.bufferedInfo(o, e, r)
                                        }
                                    } catch (c) {}
                                    return {
                                        len: 0,
                                        start: e,
                                        end: e,
                                        nextStart: void 0
                                    }
                                }, l.bufferedInfo = function(a, e, r) {
                                    e = Math.max(0, e), a.sort(function(I, O) {
                                        var U = I.start - O.start;
                                        return U || O.end - I.end
                                    });
                                    var i = [];
                                    if (r)
                                        for (var o = 0; o < a.length; o++) {
                                            var u = i.length;
                                            if (u) {
                                                var c = i[u - 1].end;
                                                a[o].start - c < r ? a[o].end > c && (i[u - 1].end = a[o].end) : i.push(a[o])
                                            } else i.push(a[o])
                                        } else i = a;
                                    for (var h = 0, f, m = e, p = e, E = 0; E < i.length; E++) {
                                        var S = i[E].start,
                                            L = i[E].end;
                                        if (e + r >= S && e < L) m = S, p = L, h = p - e;
                                        else if (e + r < S) {
                                            f = S;
                                            break
                                        }
                                    }
                                    return {
                                        len: h,
                                        start: m || 0,
                                        end: p || 0,
                                        nextStart: f
                                    }
                                }, l.getBuffered = function(a) {
                                    try {
                                        return a.buffered
                                    } catch (e) {
                                        return V.log("failed to get media.buffered", e), es
                                    }
                                }, l
                            }(),
                            ha = function(n, a, e, r, i, o) {
                                r === void 0 && (r = 0), i === void 0 && (i = -1), o === void 0 && (o = !1), this.level = void 0, this.sn = void 0, this.part = void 0, this.id = void 0, this.size = void 0, this.partial = void 0, this.transmuxing = Pn(), this.buffering = {
                                    audio: Pn(),
                                    video: Pn(),
                                    audiovideo: Pn()
                                }, this.level = n, this.sn = a, this.id = e, this.size = r, this.part = i, this.partial = o
                            };

                        function Pn() {
                            return {
                                start: 0,
                                executeStart: 0,
                                executeEnd: 0,
                                end: 0
                            }
                        }

                        function ts(l, n) {
                            for (var a = 0, e = l.length; a < e; a++) {
                                var r;
                                if (((r = l[a]) == null ? void 0 : r.cc) === n) return l[a]
                            }
                            return null
                        }

                        function za(l, n, a) {
                            return !!(n && (a.endCC > a.startCC || l && l.cc < a.startCC))
                        }

                        function On(l, n) {
                            var a = l.fragments,
                                e = n.fragments;
                            if (!e.length || !a.length) {
                                V.log("No fragments to align");
                                return
                            }
                            var r = ts(a, e[0].cc);
                            if (!r || r && !r.startPTS) {
                                V.log("No frag in previous level to align on");
                                return
                            }
                            return r
                        }

                        function Rn(l, n) {
                            if (l) {
                                var a = l.start + n;
                                l.start = l.startPTS = a, l.endPTS = a + l.duration
                            }
                        }

                        function rs(l, n) {
                            for (var a = n.fragments, e = 0, r = a.length; e < r; e++) Rn(a[e], l);
                            n.fragmentHint && Rn(n.fragmentHint, l), n.alignedSliding = !0
                        }

                        function Is(l, n, a) {
                            n && (yo(l, a, n), !a.alignedSliding && n && bo(a, n), !a.alignedSliding && n && !a.skippedSegments && Jt(n, a))
                        }

                        function yo(l, n, a) {
                            if (za(l, a, n)) {
                                var e = On(a, n);
                                e && Ge(e.start) && (V.log("Adjusting PTS using last level due to CC increase within current level " + n.url), rs(e.start, n))
                            }
                        }

                        function bo(l, n) {
                            if (!(!l.hasProgramDateTime || !n.hasProgramDateTime)) {
                                var a = l.fragments,
                                    e = n.fragments;
                                if (!(!a.length || !e.length)) {
                                    var r, i, o = Math.min(n.endCC, l.endCC);
                                    n.startCC < o && l.startCC < o && (r = ts(e, o), i = ts(a, o)), (!r || !i) && (r = e[Math.floor(e.length / 2)], i = ts(a, r.cc) || a[Math.floor(a.length / 2)]);
                                    var u = r.programDateTime,
                                        c = i.programDateTime;
                                    if (!(!u || !c)) {
                                        var h = (c - u) / 1e3 - (i.start - r.start);
                                        rs(h, l)
                                    }
                                }
                            }
                        }
                        var is = Math.pow(2, 17),
                            El = function() {
                                function l(a) {
                                    this.config = void 0, this.loader = null, this.partLoadTimeout = -1, this.config = a
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.loader && (this.loader.destroy(), this.loader = null)
                                }, n.abort = function() {
                                    this.loader && this.loader.abort()
                                }, n.load = function(e, r) {
                                    var i = this,
                                        o = e.url;
                                    if (!o) return Promise.reject(new Kn({
                                        type: Ve.NETWORK_ERROR,
                                        details: de.FRAG_LOAD_ERROR,
                                        fatal: !1,
                                        frag: e,
                                        error: new Error("Fragment does not have a " + (o ? "part list" : "url")),
                                        networkDetails: null
                                    }));
                                    this.abort();
                                    var u = this.config,
                                        c = u.fLoader,
                                        h = u.loader;
                                    return new Promise(function(f, m) {
                                        if (i.loader && i.loader.destroy(), e.gap)
                                            if (e.tagList.some(function(I) {
                                                    return I[0] === "GAP"
                                                })) {
                                                m(yl(e));
                                                return
                                            } else e.gap = !1;
                                        var p = i.loader = e.loader = c ? new c(u) : new h(u),
                                            E = cn(e),
                                            S = ja(u.fragLoadPolicy.default),
                                            L = {
                                                loadPolicy: S,
                                                timeout: S.maxLoadTimeMs,
                                                maxRetry: 0,
                                                retryDelay: 0,
                                                maxRetryDelay: 0,
                                                highWaterMark: e.sn === "initSegment" ? 1 / 0 : is
                                            };
                                        e.stats = p.stats, p.load(E, L, {
                                            onSuccess: function(O, U, G, ee) {
                                                i.resetLoader(e, p);
                                                var te = O.data;
                                                G.resetIV && e.decryptdata && (e.decryptdata.iv = new Uint8Array(te.slice(0, 16)), te = te.slice(16)), f({
                                                    frag: e,
                                                    part: null,
                                                    payload: te,
                                                    networkDetails: ee
                                                })
                                            },
                                            onError: function(O, U, G, ee) {
                                                i.resetLoader(e, p), m(new Kn({
                                                    type: Ve.NETWORK_ERROR,
                                                    details: de.FRAG_LOAD_ERROR,
                                                    fatal: !1,
                                                    frag: e,
                                                    response: Ee({
                                                        url: o,
                                                        data: void 0
                                                    }, O),
                                                    error: new Error("HTTP Error " + O.code + " " + O.text),
                                                    networkDetails: G,
                                                    stats: ee
                                                }))
                                            },
                                            onAbort: function(O, U, G) {
                                                i.resetLoader(e, p), m(new Kn({
                                                    type: Ve.NETWORK_ERROR,
                                                    details: de.INTERNAL_ABORTED,
                                                    fatal: !1,
                                                    frag: e,
                                                    error: new Error("Aborted"),
                                                    networkDetails: G,
                                                    stats: O
                                                }))
                                            },
                                            onTimeout: function(O, U, G) {
                                                i.resetLoader(e, p), m(new Kn({
                                                    type: Ve.NETWORK_ERROR,
                                                    details: de.FRAG_LOAD_TIMEOUT,
                                                    fatal: !1,
                                                    frag: e,
                                                    error: new Error("Timeout after " + L.timeout + "ms"),
                                                    networkDetails: G,
                                                    stats: O
                                                }))
                                            },
                                            onProgress: function(O, U, G, ee) {
                                                r && r({
                                                    frag: e,
                                                    part: null,
                                                    payload: G,
                                                    networkDetails: ee
                                                })
                                            }
                                        })
                                    })
                                }, n.loadPart = function(e, r, i) {
                                    var o = this;
                                    this.abort();
                                    var u = this.config,
                                        c = u.fLoader,
                                        h = u.loader;
                                    return new Promise(function(f, m) {
                                        if (o.loader && o.loader.destroy(), e.gap || r.gap) {
                                            m(yl(e, r));
                                            return
                                        }
                                        var p = o.loader = e.loader = c ? new c(u) : new h(u),
                                            E = cn(e, r),
                                            S = ja(u.fragLoadPolicy.default),
                                            L = {
                                                loadPolicy: S,
                                                timeout: S.maxLoadTimeMs,
                                                maxRetry: 0,
                                                retryDelay: 0,
                                                maxRetryDelay: 0,
                                                highWaterMark: is
                                            };
                                        r.stats = p.stats, p.load(E, L, {
                                            onSuccess: function(O, U, G, ee) {
                                                o.resetLoader(e, p), o.updateStatsFromPart(e, r);
                                                var te = {
                                                    frag: e,
                                                    part: r,
                                                    payload: O.data,
                                                    networkDetails: ee
                                                };
                                                i(te), f(te)
                                            },
                                            onError: function(O, U, G, ee) {
                                                o.resetLoader(e, p), m(new Kn({
                                                    type: Ve.NETWORK_ERROR,
                                                    details: de.FRAG_LOAD_ERROR,
                                                    fatal: !1,
                                                    frag: e,
                                                    part: r,
                                                    response: Ee({
                                                        url: E.url,
                                                        data: void 0
                                                    }, O),
                                                    error: new Error("HTTP Error " + O.code + " " + O.text),
                                                    networkDetails: G,
                                                    stats: ee
                                                }))
                                            },
                                            onAbort: function(O, U, G) {
                                                e.stats.aborted = r.stats.aborted, o.resetLoader(e, p), m(new Kn({
                                                    type: Ve.NETWORK_ERROR,
                                                    details: de.INTERNAL_ABORTED,
                                                    fatal: !1,
                                                    frag: e,
                                                    part: r,
                                                    error: new Error("Aborted"),
                                                    networkDetails: G,
                                                    stats: O
                                                }))
                                            },
                                            onTimeout: function(O, U, G) {
                                                o.resetLoader(e, p), m(new Kn({
                                                    type: Ve.NETWORK_ERROR,
                                                    details: de.FRAG_LOAD_TIMEOUT,
                                                    fatal: !1,
                                                    frag: e,
                                                    part: r,
                                                    error: new Error("Timeout after " + L.timeout + "ms"),
                                                    networkDetails: G,
                                                    stats: O
                                                }))
                                            }
                                        })
                                    })
                                }, n.updateStatsFromPart = function(e, r) {
                                    var i = e.stats,
                                        o = r.stats,
                                        u = o.total;
                                    if (i.loaded += o.loaded, u) {
                                        var c = Math.round(e.duration / r.duration),
                                            h = Math.min(Math.round(i.loaded / u), c),
                                            f = c - h,
                                            m = f * Math.round(i.loaded / h);
                                        i.total = i.loaded + m
                                    } else i.total = Math.max(i.loaded, i.total);
                                    var p = i.loading,
                                        E = o.loading;
                                    p.start ? p.first += E.first - E.start : (p.start = E.start, p.first = E.first), p.end = E.end
                                }, n.resetLoader = function(e, r) {
                                    e.loader = null, this.loader === r && (self.clearTimeout(this.partLoadTimeout), this.loader = null), r.destroy()
                                }, l
                            }();

                        function cn(l, n) {
                            n === void 0 && (n = null);
                            var a = n || l,
                                e = {
                                    frag: l,
                                    part: n,
                                    responseType: "arraybuffer",
                                    url: a.url,
                                    headers: {},
                                    rangeStart: 0,
                                    rangeEnd: 0
                                },
                                r = a.byteRangeStartOffset,
                                i = a.byteRangeEndOffset;
                            if (Ge(r) && Ge(i)) {
                                var o, u = r,
                                    c = i;
                                if (l.sn === "initSegment" && ((o = l.decryptdata) == null ? void 0 : o.method) === "AES-128") {
                                    var h = i - r;
                                    h % 16 && (c = i + (16 - h % 16)), r !== 0 && (e.resetIV = !0, u = r - 16)
                                }
                                e.rangeStart = u, e.rangeEnd = c
                            }
                            return e
                        }

                        function yl(l, n) {
                            var a = new Error("GAP " + (l.gap ? "tag" : "attribute") + " found"),
                                e = {
                                    type: Ve.MEDIA_ERROR,
                                    details: de.FRAG_GAP,
                                    fatal: !1,
                                    frag: l,
                                    error: a,
                                    networkDetails: null
                                };
                            return n && (e.part = n), (n || l).stats.aborted = !0, new Kn(e)
                        }
                        var Kn = function(l) {
                                x(n, l);

                                function n(a) {
                                    var e;
                                    return e = l.call(this, a.error.message) || this, e.data = void 0, e.data = a, e
                                }
                                return n
                            }(Rt(Error)),
                            Jl = function() {
                                function l(a, e) {
                                    this.subtle = void 0, this.aesIV = void 0, this.subtle = a, this.aesIV = e
                                }
                                var n = l.prototype;
                                return n.decrypt = function(e, r) {
                                    return this.subtle.decrypt({
                                        name: "AES-CBC",
                                        iv: this.aesIV
                                    }, r, e)
                                }, l
                            }(),
                            Go = function() {
                                function l(a, e) {
                                    this.subtle = void 0, this.key = void 0, this.subtle = a, this.key = e
                                }
                                var n = l.prototype;
                                return n.expandKey = function() {
                                    return this.subtle.importKey("raw", this.key, {
                                        name: "AES-CBC"
                                    }, !1, ["encrypt", "decrypt"])
                                }, l
                            }();

                        function eu(l) {
                            var n = l.byteLength,
                                a = n && new DataView(l.buffer).getUint8(n - 1);
                            return a ? De(l, 0, n - a) : l
                        }
                        var Gu = function() {
                                function l() {
                                    this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.ksRows = 0, this.keySize = 0, this.keySchedule = void 0, this.invKeySchedule = void 0, this.initTable()
                                }
                                var n = l.prototype;
                                return n.uint8ArrayToUint32Array_ = function(e) {
                                    for (var r = new DataView(e), i = new Uint32Array(4), o = 0; o < 4; o++) i[o] = r.getUint32(o * 4);
                                    return i
                                }, n.initTable = function() {
                                    var e = this.sBox,
                                        r = this.invSBox,
                                        i = this.subMix,
                                        o = i[0],
                                        u = i[1],
                                        c = i[2],
                                        h = i[3],
                                        f = this.invSubMix,
                                        m = f[0],
                                        p = f[1],
                                        E = f[2],
                                        S = f[3],
                                        L = new Uint32Array(256),
                                        I = 0,
                                        O = 0,
                                        U = 0;
                                    for (U = 0; U < 256; U++) U < 128 ? L[U] = U << 1 : L[U] = U << 1 ^ 283;
                                    for (U = 0; U < 256; U++) {
                                        var G = O ^ O << 1 ^ O << 2 ^ O << 3 ^ O << 4;
                                        G = G >>> 8 ^ G & 255 ^ 99, e[I] = G, r[G] = I;
                                        var ee = L[I],
                                            te = L[ee],
                                            _e = L[te],
                                            me = L[G] * 257 ^ G * 16843008;
                                        o[I] = me << 24 | me >>> 8, u[I] = me << 16 | me >>> 16, c[I] = me << 8 | me >>> 24, h[I] = me, me = _e * 16843009 ^ te * 65537 ^ ee * 257 ^ I * 16843008, m[G] = me << 24 | me >>> 8, p[G] = me << 16 | me >>> 16, E[G] = me << 8 | me >>> 24, S[G] = me, I ? (I = ee ^ L[L[L[_e ^ ee]]], O ^= L[L[O]]) : I = O = 1
                                    }
                                }, n.expandKey = function(e) {
                                    for (var r = this.uint8ArrayToUint32Array_(e), i = !0, o = 0; o < r.length && i;) i = r[o] === this.key[o], o++;
                                    if (!i) {
                                        this.key = r;
                                        var u = this.keySize = r.length;
                                        if (u !== 4 && u !== 6 && u !== 8) throw new Error("Invalid aes key size=" + u);
                                        var c = this.ksRows = (u + 6 + 1) * 4,
                                            h, f, m = this.keySchedule = new Uint32Array(c),
                                            p = this.invKeySchedule = new Uint32Array(c),
                                            E = this.sBox,
                                            S = this.rcon,
                                            L = this.invSubMix,
                                            I = L[0],
                                            O = L[1],
                                            U = L[2],
                                            G = L[3],
                                            ee, te;
                                        for (h = 0; h < c; h++) {
                                            if (h < u) {
                                                ee = m[h] = r[h];
                                                continue
                                            }
                                            te = ee, h % u === 0 ? (te = te << 8 | te >>> 24, te = E[te >>> 24] << 24 | E[te >>> 16 & 255] << 16 | E[te >>> 8 & 255] << 8 | E[te & 255], te ^= S[h / u | 0] << 24) : u > 6 && h % u === 4 && (te = E[te >>> 24] << 24 | E[te >>> 16 & 255] << 16 | E[te >>> 8 & 255] << 8 | E[te & 255]), m[h] = ee = (m[h - u] ^ te) >>> 0
                                        }
                                        for (f = 0; f < c; f++) h = c - f, f & 3 ? te = m[h] : te = m[h - 4], f < 4 || h <= 4 ? p[f] = te : p[f] = I[E[te >>> 24]] ^ O[E[te >>> 16 & 255]] ^ U[E[te >>> 8 & 255]] ^ G[E[te & 255]], p[f] = p[f] >>> 0
                                    }
                                }, n.networkToHostOrderSwap = function(e) {
                                    return e << 24 | (e & 65280) << 8 | (e & 16711680) >> 8 | e >>> 24
                                }, n.decrypt = function(e, r, i) {
                                    for (var o = this.keySize + 6, u = this.invKeySchedule, c = this.invSBox, h = this.invSubMix, f = h[0], m = h[1], p = h[2], E = h[3], S = this.uint8ArrayToUint32Array_(i), L = S[0], I = S[1], O = S[2], U = S[3], G = new Int32Array(e), ee = new Int32Array(G.length), te, _e, me, ae, Se, ve, Ne, Ie, kt, zt, lr, Fr, Br, hi, ei = this.networkToHostOrderSwap; r < G.length;) {
                                        for (kt = ei(G[r]), zt = ei(G[r + 1]), lr = ei(G[r + 2]), Fr = ei(G[r + 3]), Se = kt ^ u[0], ve = Fr ^ u[1], Ne = lr ^ u[2], Ie = zt ^ u[3], Br = 4, hi = 1; hi < o; hi++) te = f[Se >>> 24] ^ m[ve >> 16 & 255] ^ p[Ne >> 8 & 255] ^ E[Ie & 255] ^ u[Br], _e = f[ve >>> 24] ^ m[Ne >> 16 & 255] ^ p[Ie >> 8 & 255] ^ E[Se & 255] ^ u[Br + 1], me = f[Ne >>> 24] ^ m[Ie >> 16 & 255] ^ p[Se >> 8 & 255] ^ E[ve & 255] ^ u[Br + 2], ae = f[Ie >>> 24] ^ m[Se >> 16 & 255] ^ p[ve >> 8 & 255] ^ E[Ne & 255] ^ u[Br + 3], Se = te, ve = _e, Ne = me, Ie = ae, Br = Br + 4;
                                        te = c[Se >>> 24] << 24 ^ c[ve >> 16 & 255] << 16 ^ c[Ne >> 8 & 255] << 8 ^ c[Ie & 255] ^ u[Br], _e = c[ve >>> 24] << 24 ^ c[Ne >> 16 & 255] << 16 ^ c[Ie >> 8 & 255] << 8 ^ c[Se & 255] ^ u[Br + 1], me = c[Ne >>> 24] << 24 ^ c[Ie >> 16 & 255] << 16 ^ c[Se >> 8 & 255] << 8 ^ c[ve & 255] ^ u[Br + 2], ae = c[Ie >>> 24] << 24 ^ c[Se >> 16 & 255] << 16 ^ c[ve >> 8 & 255] << 8 ^ c[Ne & 255] ^ u[Br + 3], ee[r] = ei(te ^ L), ee[r + 1] = ei(ae ^ I), ee[r + 2] = ei(me ^ O), ee[r + 3] = ei(_e ^ U), L = kt, I = zt, O = lr, U = Fr, r = r + 4
                                    }
                                    return ee.buffer
                                }, l
                            }(),
                            bl = 16,
                            Ko = function() {
                                function l(a, e) {
                                    var r = e === void 0 ? {} : e,
                                        i = r.removePKCS7Padding,
                                        o = i === void 0 ? !0 : i;
                                    if (this.logEnabled = !0, this.removePKCS7Padding = void 0, this.subtle = null, this.softwareDecrypter = null, this.key = null, this.fastAesKey = null, this.remainderData = null, this.currentIV = null, this.currentResult = null, this.useSoftware = void 0, this.useSoftware = a.enableSoftwareAES, this.removePKCS7Padding = o, o) try {
                                        var u = self.crypto;
                                        u && (this.subtle = u.subtle || u.webkitSubtle)
                                    } catch (c) {}
                                    this.useSoftware = !this.subtle
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.subtle = null, this.softwareDecrypter = null, this.key = null, this.fastAesKey = null, this.remainderData = null, this.currentIV = null, this.currentResult = null
                                }, n.isSync = function() {
                                    return this.useSoftware
                                }, n.flush = function() {
                                    var e = this.currentResult,
                                        r = this.remainderData;
                                    if (!e || r) return this.reset(), null;
                                    var i = new Uint8Array(e);
                                    return this.reset(), this.removePKCS7Padding ? eu(i) : i
                                }, n.reset = function() {
                                    this.currentResult = null, this.currentIV = null, this.remainderData = null, this.softwareDecrypter && (this.softwareDecrypter = null)
                                }, n.decrypt = function(e, r, i) {
                                    var o = this;
                                    return this.useSoftware ? new Promise(function(u, c) {
                                        o.softwareDecrypt(new Uint8Array(e), r, i);
                                        var h = o.flush();
                                        h ? u(h.buffer) : c(new Error("[softwareDecrypt] Failed to decrypt data"))
                                    }) : this.webCryptoDecrypt(new Uint8Array(e), r, i)
                                }, n.softwareDecrypt = function(e, r, i) {
                                    var o = this.currentIV,
                                        u = this.currentResult,
                                        c = this.remainderData;
                                    this.logOnce("JS AES decrypt"), c && (e = Nr(c, e), this.remainderData = null);
                                    var h = this.getValidChunk(e);
                                    if (!h.length) return null;
                                    o && (i = o);
                                    var f = this.softwareDecrypter;
                                    f || (f = this.softwareDecrypter = new Gu), f.expandKey(r);
                                    var m = u;
                                    return this.currentResult = f.decrypt(h.buffer, 0, i), this.currentIV = De(h, -16).buffer, m || null
                                }, n.webCryptoDecrypt = function(e, r, i) {
                                    var o = this;
                                    if (this.key !== r || !this.fastAesKey) {
                                        if (!this.subtle) return Promise.resolve(this.onWebCryptoError(e, r, i));
                                        this.key = r, this.fastAesKey = new Go(this.subtle, r)
                                    }
                                    return this.fastAesKey.expandKey().then(function(u) {
                                        if (!o.subtle) return Promise.reject(new Error("web crypto not initialized"));
                                        o.logOnce("WebCrypto AES decrypt");
                                        var c = new Jl(o.subtle, new Uint8Array(i));
                                        return c.decrypt(e.buffer, u)
                                    }).catch(function(u) {
                                        return V.warn("[decrypter]: WebCrypto Error, disable WebCrypto API, " + u.name + ": " + u.message), o.onWebCryptoError(e, r, i)
                                    })
                                }, n.onWebCryptoError = function(e, r, i) {
                                    this.useSoftware = !0, this.logEnabled = !0, this.softwareDecrypt(e, r, i);
                                    var o = this.flush();
                                    if (o) return o.buffer;
                                    throw new Error("WebCrypto and softwareDecrypt: failed to decrypt data")
                                }, n.getValidChunk = function(e) {
                                    var r = e,
                                        i = e.length - e.length % bl;
                                    return i !== e.length && (r = De(e, 0, i), this.remainderData = De(e, i)), r
                                }, n.logOnce = function(e) {
                                    this.logEnabled && (V.log("[decrypter]: " + e), this.logEnabled = !1)
                                }, l
                            }(),
                            Tl = {
                                toString: function(n) {
                                    for (var a = "", e = n.length, r = 0; r < e; r++) a += "[" + n.start(r).toFixed(3) + "-" + n.end(r).toFixed(3) + "]";
                                    return a
                                }
                            },
                            rt = {
                                STOPPED: "STOPPED",
                                IDLE: "IDLE",
                                KEY_LOADING: "KEY_LOADING",
                                FRAG_LOADING: "FRAG_LOADING",
                                FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                                WAITING_TRACK: "WAITING_TRACK",
                                PARSING: "PARSING",
                                PARSED: "PARSED",
                                ENDED: "ENDED",
                                ERROR: "ERROR",
                                WAITING_INIT_PTS: "WAITING_INIT_PTS",
                                WAITING_LEVEL: "WAITING_LEVEL"
                            },
                            To = function(l) {
                                x(n, l);

                                function n(e, r, i, o, u) {
                                    var c;
                                    return c = l.call(this) || this, c.hls = void 0, c.fragPrevious = null, c.fragCurrent = null, c.fragmentTracker = void 0, c.transmuxer = null, c._state = rt.STOPPED, c.playlistType = void 0, c.media = null, c.mediaBuffer = null, c.config = void 0, c.bitrateTest = !1, c.lastCurrentTime = 0, c.nextLoadPosition = 0, c.startPosition = 0, c.startTimeOffset = null, c.loadedmetadata = !1, c.retryDate = 0, c.levels = null, c.fragmentLoader = void 0, c.keyLoader = void 0, c.levelLastLoaded = null, c.startFragRequested = !1, c.decrypter = void 0, c.initPTS = [], c.buffering = !0, c.onvseeking = null, c.onvended = null, c.logPrefix = "", c.log = void 0, c.warn = void 0, c.playlistType = u, c.logPrefix = o, c.log = V.log.bind(V, o + ":"), c.warn = V.warn.bind(V, o + ":"), c.hls = e, c.fragmentLoader = new El(e.config), c.keyLoader = i, c.fragmentTracker = r, c.config = e.config, c.decrypter = new Ko(e.config), e.on(_.MANIFEST_LOADED, c.onManifestLoaded, Ft(c)), c
                                }
                                var a = n.prototype;
                                return a.doTick = function() {
                                    this.onTickEnd()
                                }, a.onTickEnd = function() {}, a.startLoad = function(r) {}, a.stopLoad = function() {
                                    this.fragmentLoader.abort(), this.keyLoader.abort(this.playlistType);
                                    var r = this.fragCurrent;
                                    r != null && r.loader && (r.abortRequests(), this.fragmentTracker.removeFragment(r)), this.resetTransmuxer(), this.fragCurrent = null, this.fragPrevious = null, this.clearInterval(), this.clearNextTick(), this.state = rt.STOPPED
                                }, a.pauseBuffering = function() {
                                    this.buffering = !1
                                }, a.resumeBuffering = function() {
                                    this.buffering = !0
                                }, a._streamEnded = function(r, i) {
                                    if (i.live || r.nextStart || !r.end || !this.media) return !1;
                                    var o = i.partList;
                                    if (o != null && o.length) {
                                        var u = o[o.length - 1],
                                            c = Or.isBuffered(this.media, u.start + u.duration / 2);
                                        return c
                                    }
                                    var h = i.fragments[i.fragments.length - 1].type;
                                    return this.fragmentTracker.isEndListAppended(h)
                                }, a.getLevelDetails = function() {
                                    if (this.levels && this.levelLastLoaded !== null) {
                                        var r;
                                        return (r = this.levelLastLoaded) == null ? void 0 : r.details
                                    }
                                }, a.onMediaAttached = function(r, i) {
                                    var o = this.media = this.mediaBuffer = i.media;
                                    this.onvseeking = this.onMediaSeeking.bind(this), this.onvended = this.onMediaEnded.bind(this), o.addEventListener("seeking", this.onvseeking), o.addEventListener("ended", this.onvended);
                                    var u = this.config;
                                    this.levels && u.autoStartLoad && this.state === rt.STOPPED && this.startLoad(u.startPosition)
                                }, a.onMediaDetaching = function() {
                                    var r = this.media;
                                    r != null && r.ended && (this.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0), r && this.onvseeking && this.onvended && (r.removeEventListener("seeking", this.onvseeking), r.removeEventListener("ended", this.onvended), this.onvseeking = this.onvended = null), this.keyLoader && this.keyLoader.detach(), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.fragmentTracker.removeAllFragments(), this.stopLoad()
                                }, a.onMediaSeeking = function() {
                                    var r = this.config,
                                        i = this.fragCurrent,
                                        o = this.media,
                                        u = this.mediaBuffer,
                                        c = this.state,
                                        h = o ? o.currentTime : 0,
                                        f = Or.bufferInfo(u || o, h, r.maxBufferHole);
                                    if (this.log("media seeking to " + (Ge(h) ? h.toFixed(3) : h) + ", state: " + c), this.state === rt.ENDED) this.resetLoadingState();
                                    else if (i) {
                                        var m = r.maxFragLookUpTolerance,
                                            p = i.start - m,
                                            E = i.start + i.duration + m;
                                        if (!f.len || E < f.start || p > f.end) {
                                            var S = h > E;
                                            (h < p || S) && (S && i.loader && (this.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), i.abortRequests(), this.resetLoadingState()), this.fragPrevious = null)
                                        }
                                    }
                                    o && (this.fragmentTracker.removeFragmentsInRange(h, 1 / 0, this.playlistType, !0), this.lastCurrentTime = h), !this.loadedmetadata && !f.len && (this.nextLoadPosition = this.startPosition = h), this.tickImmediate()
                                }, a.onMediaEnded = function() {
                                    this.startPosition = this.lastCurrentTime = 0
                                }, a.onManifestLoaded = function(r, i) {
                                    this.startTimeOffset = i.startTimeOffset, this.initPTS = []
                                }, a.onHandlerDestroying = function() {
                                    this.hls.off(_.MANIFEST_LOADED, this.onManifestLoaded, this), this.stopLoad(), l.prototype.onHandlerDestroying.call(this), this.hls = null
                                }, a.onHandlerDestroyed = function() {
                                    this.state = rt.STOPPED, this.fragmentLoader && this.fragmentLoader.destroy(), this.keyLoader && this.keyLoader.destroy(), this.decrypter && this.decrypter.destroy(), this.hls = this.log = this.warn = this.decrypter = this.keyLoader = this.fragmentLoader = this.fragmentTracker = null, l.prototype.onHandlerDestroyed.call(this)
                                }, a.loadFragment = function(r, i, o) {
                                    this._loadFragForPlayback(r, i, o)
                                }, a._loadFragForPlayback = function(r, i, o) {
                                    var u = this,
                                        c = function(f) {
                                            if (u.fragContextChanged(r)) {
                                                u.warn("Fragment " + r.sn + (f.part ? " p: " + f.part.index : "") + " of level " + r.level + " was dropped during download."), u.fragmentTracker.removeFragment(r);
                                                return
                                            }
                                            r.stats.chunkCount++, u._handleFragmentLoadProgress(f)
                                        };
                                    this._doFragLoad(r, i, o, c).then(function(h) {
                                        if (h) {
                                            var f = u.state;
                                            if (u.fragContextChanged(r)) {
                                                (f === rt.FRAG_LOADING || !u.fragCurrent && f === rt.PARSING) && (u.fragmentTracker.removeFragment(r), u.state = rt.IDLE);
                                                return
                                            }
                                            "payload" in h && (u.log("Loaded fragment " + r.sn + " of level " + r.level), u.hls.trigger(_.FRAG_LOADED, h)), u._handleFragmentLoadComplete(h)
                                        }
                                    }).catch(function(h) {
                                        u.state === rt.STOPPED || u.state === rt.ERROR || (u.warn("Frag error: " + ((h == null ? void 0 : h.message) || h)), u.resetFragmentLoading(r))
                                    })
                                }, a.clearTrackerIfNeeded = function(r) {
                                    var i, o = this.fragmentTracker,
                                        u = o.getState(r);
                                    if (u === ui.APPENDING) {
                                        var c = r.type,
                                            h = this.getFwdBufferInfo(this.mediaBuffer, c),
                                            f = Math.max(r.duration, h ? h.len : this.config.maxBufferLength),
                                            m = this.backtrackFragment,
                                            p = m ? r.sn - m.sn : 0;
                                        (p === 1 || this.reduceMaxBufferLength(f, r.duration)) && o.removeFragment(r)
                                    } else((i = this.mediaBuffer) == null ? void 0 : i.buffered.length) === 0 ? o.removeAllFragments() : o.hasParts(r.type) && (o.detectPartialFragments({
                                        frag: r,
                                        part: null,
                                        stats: r.stats,
                                        id: r.type
                                    }), o.getState(r) === ui.PARTIAL && o.removeFragment(r))
                                }, a.checkLiveUpdate = function(r) {
                                    if (r.updated && !r.live) {
                                        var i = r.fragments[r.fragments.length - 1];
                                        this.fragmentTracker.detectPartialFragments({
                                            frag: i,
                                            part: null,
                                            stats: i.stats,
                                            id: i.type
                                        })
                                    }
                                    r.fragments[0] || (r.deltaUpdateFailed = !0)
                                }, a.flushMainBuffer = function(r, i, o) {
                                    if (o === void 0 && (o = null), !!(r - i)) {
                                        var u = {
                                            startOffset: r,
                                            endOffset: i,
                                            type: o
                                        };
                                        this.hls.trigger(_.BUFFER_FLUSHING, u)
                                    }
                                }, a._loadInitSegment = function(r, i) {
                                    var o = this;
                                    this._doFragLoad(r, i).then(function(u) {
                                        if (!u || o.fragContextChanged(r) || !o.levels) throw new Error("init load aborted");
                                        return u
                                    }).then(function(u) {
                                        var c = o.hls,
                                            h = u.payload,
                                            f = r.decryptdata;
                                        if (h && h.byteLength > 0 && f != null && f.key && f.iv && f.method === "AES-128") {
                                            var m = self.performance.now();
                                            return o.decrypter.decrypt(new Uint8Array(h), f.key.buffer, f.iv.buffer).catch(function(p) {
                                                throw c.trigger(_.ERROR, {
                                                    type: Ve.MEDIA_ERROR,
                                                    details: de.FRAG_DECRYPT_ERROR,
                                                    fatal: !1,
                                                    error: p,
                                                    reason: p.message,
                                                    frag: r
                                                }), p
                                            }).then(function(p) {
                                                var E = self.performance.now();
                                                return c.trigger(_.FRAG_DECRYPTED, {
                                                    frag: r,
                                                    payload: p,
                                                    stats: {
                                                        tstart: m,
                                                        tdecrypt: E
                                                    }
                                                }), u.payload = p, o.completeInitSegmentLoad(u)
                                            })
                                        }
                                        return o.completeInitSegmentLoad(u)
                                    }).catch(function(u) {
                                        o.state === rt.STOPPED || o.state === rt.ERROR || (o.warn(u), o.resetFragmentLoading(r))
                                    })
                                }, a.completeInitSegmentLoad = function(r) {
                                    var i = this.levels;
                                    if (!i) throw new Error("init load aborted, missing levels");
                                    var o = r.frag.stats;
                                    this.state = rt.IDLE, r.frag.data = new Uint8Array(r.payload), o.parsing.start = o.buffering.start = self.performance.now(), o.parsing.end = o.buffering.end = self.performance.now(), this.tick()
                                }, a.fragContextChanged = function(r) {
                                    var i = this.fragCurrent;
                                    return !r || !i || r.sn !== i.sn || r.level !== i.level
                                }, a.fragBufferedComplete = function(r, i) {
                                    var o, u, c, h, f = this.mediaBuffer ? this.mediaBuffer : this.media;
                                    if (this.log("Buffered " + r.type + " sn: " + r.sn + (i ? " part: " + i.index : "") + " of " + (this.playlistType === H.MAIN ? "level" : "track") + " " + r.level + " (frag:[" + ((o = r.startPTS) != null ? o : NaN).toFixed(3) + "-" + ((u = r.endPTS) != null ? u : NaN).toFixed(3) + "] > buffer:" + (f ? Tl.toString(Or.getBuffered(f)) : "(detached)") + ")"), r.sn !== "initSegment") {
                                        var m;
                                        if (r.type !== H.SUBTITLE) {
                                            var p = r.elementaryStreams;
                                            if (!Object.keys(p).some(function(S) {
                                                    return !!p[S]
                                                })) {
                                                this.state = rt.IDLE;
                                                return
                                            }
                                        }
                                        var E = (m = this.levels) == null ? void 0 : m[r.level];
                                        E != null && E.fragmentError && (this.log("Resetting level fragment error count of " + E.fragmentError + " on frag buffered"), E.fragmentError = 0)
                                    }
                                    this.state = rt.IDLE, f && (!this.loadedmetadata && r.type == H.MAIN && f.buffered.length && ((c = this.fragCurrent) == null ? void 0 : c.sn) === ((h = this.fragPrevious) == null ? void 0 : h.sn) && (this.loadedmetadata = !0, this.seekToStartPos()), this.tick())
                                }, a.seekToStartPos = function() {}, a._handleFragmentLoadComplete = function(r) {
                                    var i = this.transmuxer;
                                    if (i) {
                                        var o = r.frag,
                                            u = r.part,
                                            c = r.partsLoaded,
                                            h = !c || c.length === 0 || c.some(function(m) {
                                                return !m
                                            }),
                                            f = new ha(o.level, o.sn, o.stats.chunkCount + 1, 0, u ? u.index : -1, !h);
                                        i.flush(f)
                                    }
                                }, a._handleFragmentLoadProgress = function(r) {}, a._doFragLoad = function(r, i, o, u) {
                                    var c, h = this;
                                    o === void 0 && (o = null);
                                    var f = i == null ? void 0 : i.details;
                                    if (!this.levels || !f) throw new Error("frag load aborted, missing level" + (f ? "" : " detail") + "s");
                                    var m = null;
                                    if (r.encrypted && !((c = r.decryptdata) != null && c.key) ? (this.log("Loading key for " + r.sn + " of [" + f.startSN + "-" + f.endSN + "], " + (this.logPrefix === "[stream-controller]" ? "level" : "track") + " " + r.level), this.state = rt.KEY_LOADING, this.fragCurrent = r, m = this.keyLoader.load(r).then(function(U) {
                                            if (!h.fragContextChanged(U.frag)) return h.hls.trigger(_.KEY_LOADED, U), h.state === rt.KEY_LOADING && (h.state = rt.IDLE), U
                                        }), this.hls.trigger(_.KEY_LOADING, {
                                            frag: r
                                        }), this.fragCurrent === null && (m = Promise.reject(new Error("frag load aborted, context changed in KEY_LOADING")))) : !r.encrypted && f.encryptedFragments.length && this.keyLoader.loadClear(r, f.encryptedFragments), o = Math.max(r.start, o || 0), this.config.lowLatencyMode && r.sn !== "initSegment") {
                                        var p = f.partList;
                                        if (p && u) {
                                            o > r.end && f.fragmentHint && (r = f.fragmentHint);
                                            var E = this.getNextPart(p, r, o);
                                            if (E > -1) {
                                                var S = p[E];
                                                this.log("Loading part sn: " + r.sn + " p: " + S.index + " cc: " + r.cc + " of playlist [" + f.startSN + "-" + f.endSN + "] parts [0-" + E + "-" + (p.length - 1) + "] " + (this.logPrefix === "[stream-controller]" ? "level" : "track") + ": " + r.level + ", target: " + parseFloat(o.toFixed(3))), this.nextLoadPosition = S.start + S.duration, this.state = rt.FRAG_LOADING;
                                                var L;
                                                return m ? L = m.then(function(U) {
                                                    return !U || h.fragContextChanged(U.frag) ? null : h.doFragPartsLoad(r, S, i, u)
                                                }).catch(function(U) {
                                                    return h.handleFragLoadError(U)
                                                }) : L = this.doFragPartsLoad(r, S, i, u).catch(function(U) {
                                                    return h.handleFragLoadError(U)
                                                }), this.hls.trigger(_.FRAG_LOADING, {
                                                    frag: r,
                                                    part: S,
                                                    targetBufferTime: o
                                                }), this.fragCurrent === null ? Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING parts")) : L
                                            } else if (!r.url || this.loadedEndOfParts(p, o)) return Promise.resolve(null)
                                        }
                                    }
                                    this.log("Loading fragment " + r.sn + " cc: " + r.cc + " " + (f ? "of [" + f.startSN + "-" + f.endSN + "] " : "") + (this.logPrefix === "[stream-controller]" ? "level" : "track") + ": " + r.level + ", target: " + parseFloat(o.toFixed(3))), Ge(r.sn) && !this.bitrateTest && (this.nextLoadPosition = r.start + r.duration), this.state = rt.FRAG_LOADING;
                                    var I = this.config.progressive,
                                        O;
                                    return I && m ? O = m.then(function(U) {
                                        return !U || h.fragContextChanged(U == null ? void 0 : U.frag) ? null : h.fragmentLoader.load(r, u)
                                    }).catch(function(U) {
                                        return h.handleFragLoadError(U)
                                    }) : O = Promise.all([this.fragmentLoader.load(r, I ? u : void 0), m]).then(function(U) {
                                        var G = U[0];
                                        return !I && G && u && u(G), G
                                    }).catch(function(U) {
                                        return h.handleFragLoadError(U)
                                    }), this.hls.trigger(_.FRAG_LOADING, {
                                        frag: r,
                                        targetBufferTime: o
                                    }), this.fragCurrent === null ? Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING")) : O
                                }, a.doFragPartsLoad = function(r, i, o, u) {
                                    var c = this;
                                    return new Promise(function(h, f) {
                                        var m, p = [],
                                            E = (m = o.details) == null ? void 0 : m.partList,
                                            S = function L(I) {
                                                c.fragmentLoader.loadPart(r, I, u).then(function(O) {
                                                    p[I.index] = O;
                                                    var U = O.part;
                                                    c.hls.trigger(_.FRAG_LOADED, O);
                                                    var G = _i(o, r.sn, I.index + 1) || ka(E, r.sn, I.index + 1);
                                                    if (G) L(G);
                                                    else return h({
                                                        frag: r,
                                                        part: U,
                                                        partsLoaded: p
                                                    })
                                                }).catch(f)
                                            };
                                        S(i)
                                    })
                                }, a.handleFragLoadError = function(r) {
                                    if ("data" in r) {
                                        var i = r.data;
                                        r.data && i.details === de.INTERNAL_ABORTED ? this.handleFragLoadAborted(i.frag, i.part) : this.hls.trigger(_.ERROR, i)
                                    } else this.hls.trigger(_.ERROR, {
                                        type: Ve.OTHER_ERROR,
                                        details: de.INTERNAL_EXCEPTION,
                                        err: r,
                                        error: r,
                                        fatal: !0
                                    });
                                    return null
                                }, a._handleTransmuxerFlush = function(r) {
                                    var i = this.getCurrentContext(r);
                                    if (!i || this.state !== rt.PARSING) {
                                        !this.fragCurrent && this.state !== rt.STOPPED && this.state !== rt.ERROR && (this.state = rt.IDLE);
                                        return
                                    }
                                    var o = i.frag,
                                        u = i.part,
                                        c = i.level,
                                        h = self.performance.now();
                                    o.stats.parsing.end = h, u && (u.stats.parsing.end = h), this.updateLevelTiming(o, u, c, r.partial)
                                }, a.getCurrentContext = function(r) {
                                    var i = this.levels,
                                        o = this.fragCurrent,
                                        u = r.level,
                                        c = r.sn,
                                        h = r.part;
                                    if (!(i != null && i[u])) return this.warn("Levels object was unset while buffering fragment " + c + " of level " + u + ". The current chunk will not be buffered."), null;
                                    var f = i[u],
                                        m = h > -1 ? _i(f, c, h) : null,
                                        p = m ? m.fragment : $r(f, c, o);
                                    return p ? (o && o !== p && (p.stats = o.stats), {
                                        frag: p,
                                        part: m,
                                        level: f
                                    }) : null
                                }, a.bufferFragmentData = function(r, i, o, u, c) {
                                    var h;
                                    if (!(!r || this.state !== rt.PARSING)) {
                                        var f = r.data1,
                                            m = r.data2,
                                            p = f;
                                        if (f && m && (p = Nr(f, m)), !!((h = p) != null && h.length)) {
                                            var E = {
                                                type: r.type,
                                                frag: i,
                                                part: o,
                                                chunkMeta: u,
                                                parent: i.type,
                                                data: p
                                            };
                                            if (this.hls.trigger(_.BUFFER_APPENDING, E), r.dropped && r.independent && !o) {
                                                if (c) return;
                                                this.flushBufferGap(i)
                                            }
                                        }
                                    }
                                }, a.flushBufferGap = function(r) {
                                    var i = this.media;
                                    if (i) {
                                        if (!Or.isBuffered(i, i.currentTime)) {
                                            this.flushMainBuffer(0, r.start);
                                            return
                                        }
                                        var o = i.currentTime,
                                            u = Or.bufferInfo(i, o, 0),
                                            c = r.duration,
                                            h = Math.min(this.config.maxFragLookUpTolerance * 2, c * .25),
                                            f = Math.max(Math.min(r.start - h, u.end - h), o + h);
                                        r.start - f > h && this.flushMainBuffer(f, r.start)
                                    }
                                }, a.getFwdBufferInfo = function(r, i) {
                                    var o = this.getLoadPosition();
                                    return Ge(o) ? this.getFwdBufferInfoAtPos(r, o, i) : null
                                }, a.getFwdBufferInfoAtPos = function(r, i, o) {
                                    var u = this.config.maxBufferHole,
                                        c = Or.bufferInfo(r, i, u);
                                    if (c.len === 0 && c.nextStart !== void 0) {
                                        var h = this.fragmentTracker.getBufferedFrag(i, o);
                                        if (h && c.nextStart < h.end) return Or.bufferInfo(r, i, Math.max(c.nextStart, u))
                                    }
                                    return c
                                }, a.getMaxBufferLength = function(r) {
                                    var i = this.config,
                                        o;
                                    return r ? o = Math.max(8 * i.maxBufferSize / r, i.maxBufferLength) : o = i.maxBufferLength, Math.min(o, i.maxMaxBufferLength)
                                }, a.reduceMaxBufferLength = function(r, i) {
                                    var o = this.config,
                                        u = Math.max(Math.min(r - i, o.maxBufferLength), i),
                                        c = Math.max(r - i * 3, o.maxMaxBufferLength / 2, u);
                                    return c >= u ? (o.maxMaxBufferLength = c, this.warn("Reduce max buffer length to " + c + "s"), !0) : !1
                                }, a.getAppendedFrag = function(r, i) {
                                    var o = this.fragmentTracker.getAppendedFrag(r, H.MAIN);
                                    return o && "fragment" in o ? o.fragment : o
                                }, a.getNextFragment = function(r, i) {
                                    var o = i.fragments,
                                        u = o.length;
                                    if (!u) return null;
                                    var c = this.config,
                                        h = o[0].start,
                                        f;
                                    if (i.live) {
                                        var m = c.initialLiveManifestSize;
                                        if (u < m) return this.warn("Not enough fragments to start playback (have: " + u + ", need: " + m + ")"), null;
                                        (!i.PTSKnown && !this.startFragRequested && this.startPosition === -1 || r < h) && (f = this.getInitialLiveFragment(i, o), this.startPosition = this.nextLoadPosition = f ? this.hls.liveSyncPosition || f.start : r)
                                    } else r <= h && (f = o[0]);
                                    if (!f) {
                                        var p = c.lowLatencyMode ? i.partEnd : i.fragmentEnd;
                                        f = this.getFragmentAtPosition(r, p, i)
                                    }
                                    return this.mapToInitFragWhenRequired(f)
                                }, a.isLoopLoading = function(r, i) {
                                    var o = this.fragmentTracker.getState(r);
                                    return (o === ui.OK || o === ui.PARTIAL && !!r.gap) && this.nextLoadPosition > i
                                }, a.getNextFragmentLoopLoading = function(r, i, o, u, c) {
                                    var h = r.gap,
                                        f = this.getNextFragment(this.nextLoadPosition, i);
                                    if (f === null) return f;
                                    if (r = f, h && r && !r.gap && o.nextStart) {
                                        var m = this.getFwdBufferInfoAtPos(this.mediaBuffer ? this.mediaBuffer : this.media, o.nextStart, u);
                                        if (m !== null && o.len + m.len >= c) return this.log('buffer full after gaps in "' + u + '" playlist starting at sn: ' + r.sn), null
                                    }
                                    return r
                                }, a.mapToInitFragWhenRequired = function(r) {
                                    return r != null && r.initSegment && !(r != null && r.initSegment.data) && !this.bitrateTest ? r.initSegment : r
                                }, a.getNextPart = function(r, i, o) {
                                    for (var u = -1, c = !1, h = !0, f = 0, m = r.length; f < m; f++) {
                                        var p = r[f];
                                        if (h = h && !p.independent, u > -1 && o < p.start) break;
                                        var E = p.loaded;
                                        E ? u = -1 : (c || p.independent || h) && p.fragment === i && (u = f), c = E
                                    }
                                    return u
                                }, a.loadedEndOfParts = function(r, i) {
                                    var o = r[r.length - 1];
                                    return o && i > o.start && o.loaded
                                }, a.getInitialLiveFragment = function(r, i) {
                                    var o = this.fragPrevious,
                                        u = null;
                                    if (o) {
                                        if (r.hasProgramDateTime && (this.log("Live playlist, switching playlist, load frag with same PDT: " + o.programDateTime), u = b(i, o.endProgramDateTime, this.config.maxFragLookUpTolerance)), !u) {
                                            var c = o.sn + 1;
                                            if (c >= r.startSN && c <= r.endSN) {
                                                var h = i[c - r.startSN];
                                                o.cc === h.cc && (u = h, this.log("Live playlist, switching playlist, load frag with next SN: " + u.sn))
                                            }
                                            u || (u = $(i, o.cc), u && this.log("Live playlist, switching playlist, load frag with same CC: " + u.sn))
                                        }
                                    } else {
                                        var f = this.hls.liveSyncPosition;
                                        f !== null && (u = this.getFragmentAtPosition(f, this.bitrateTest ? r.fragmentEnd : r.edge, r))
                                    }
                                    return u
                                }, a.getFragmentAtPosition = function(r, i, o) {
                                    var u = this.config,
                                        c = this.fragPrevious,
                                        h = o.fragments,
                                        f = o.endSN,
                                        m = o.fragmentHint,
                                        p = u.maxFragLookUpTolerance,
                                        E = o.partList,
                                        S = !!(u.lowLatencyMode && E != null && E.length && m);
                                    S && m && !this.bitrateTest && (h = h.concat(m), f = m.sn);
                                    var L;
                                    if (r < i) {
                                        var I = r > i - p ? 0 : p;
                                        L = A(c, h, r, I)
                                    } else L = h[h.length - 1];
                                    if (L) {
                                        var O = L.sn - o.startSN,
                                            U = this.fragmentTracker.getState(L);
                                        if ((U === ui.OK || U === ui.PARTIAL && L.gap) && (c = L), c && L.sn === c.sn && (!S || E[0].fragment.sn > L.sn)) {
                                            var G = c && L.level === c.level;
                                            if (G) {
                                                var ee = h[O + 1];
                                                L.sn < f && this.fragmentTracker.getState(ee) !== ui.OK ? L = ee : L = null
                                            }
                                        }
                                    }
                                    return L
                                }, a.synchronizeToLiveEdge = function(r) {
                                    var i = this.config,
                                        o = this.media;
                                    if (o) {
                                        var u = this.hls.liveSyncPosition,
                                            c = o.currentTime,
                                            h = r.fragments[0].start,
                                            f = r.edge,
                                            m = c >= h - i.maxFragLookUpTolerance && c <= f;
                                        if (u !== null && o.duration > u && (c < u || !m)) {
                                            var p = i.liveMaxLatencyDuration !== void 0 ? i.liveMaxLatencyDuration : i.liveMaxLatencyDurationCount * r.targetduration;
                                            (!m && o.readyState < 4 || c < f - p) && (this.loadedmetadata || (this.nextLoadPosition = u), o.readyState && (this.warn("Playback: " + c.toFixed(3) + " is located too far from the end of live sliding playlist: " + f + ", reset currentTime to : " + u.toFixed(3)), o.currentTime = u))
                                        }
                                    }
                                }, a.alignPlaylists = function(r, i, o) {
                                    var u = r.fragments.length;
                                    if (!u) return this.warn("No fragments in live playlist"), 0;
                                    var c = r.fragments[0].start,
                                        h = !i,
                                        f = r.alignedSliding && Ge(c);
                                    if (h || !f && !c) {
                                        var m = this.fragPrevious;
                                        Is(m, o, r);
                                        var p = r.fragments[0].start;
                                        return this.log("Live playlist sliding: " + p.toFixed(2) + " start-sn: " + (i ? i.startSN : "na") + "->" + r.startSN + " prev-sn: " + (m ? m.sn : "na") + " fragments: " + u), p
                                    }
                                    return c
                                }, a.waitForCdnTuneIn = function(r) {
                                    var i = 3;
                                    return r.live && r.canBlockReload && r.partTarget && r.tuneInGoal > Math.max(r.partHoldBack, r.partTarget * i)
                                }, a.setStartPosition = function(r, i) {
                                    var o = this.startPosition;
                                    if (o < i && (o = -1), o === -1 || this.lastCurrentTime === -1) {
                                        var u = this.startTimeOffset !== null,
                                            c = u ? this.startTimeOffset : r.startTimeOffset;
                                        c !== null && Ge(c) ? (o = i + c, c < 0 && (o += r.totalduration), o = Math.min(Math.max(i, o), i + r.totalduration), this.log("Start time offset " + c + " found in " + (u ? "multivariant" : "media") + " playlist, adjust startPosition to " + o), this.startPosition = o) : r.live ? o = this.hls.liveSyncPosition || i : this.startPosition = o = 0, this.lastCurrentTime = o
                                    }
                                    this.nextLoadPosition = o
                                }, a.getLoadPosition = function() {
                                    var r = this.media,
                                        i = 0;
                                    return this.loadedmetadata && r ? i = r.currentTime : this.nextLoadPosition && (i = this.nextLoadPosition), i
                                }, a.handleFragLoadAborted = function(r, i) {
                                    this.transmuxer && r.sn !== "initSegment" && r.stats.aborted && (this.warn("Fragment " + r.sn + (i ? " part " + i.index : "") + " of level " + r.level + " was aborted"), this.resetFragmentLoading(r))
                                }, a.resetFragmentLoading = function(r) {
                                    (!this.fragCurrent || !this.fragContextChanged(r) && this.state !== rt.FRAG_LOADING_WAITING_RETRY) && (this.state = rt.IDLE)
                                }, a.onFragmentOrKeyLoadError = function(r, i) {
                                    if (i.chunkMeta && !i.frag) {
                                        var o = this.getCurrentContext(i.chunkMeta);
                                        o && (i.frag = o.frag)
                                    }
                                    var u = i.frag;
                                    if (!(!u || u.type !== r || !this.levels)) {
                                        if (this.fragContextChanged(u)) {
                                            var c;
                                            this.warn("Frag load error must match current frag to retry " + u.url + " > " + ((c = this.fragCurrent) == null ? void 0 : c.url));
                                            return
                                        }
                                        var h = i.details === de.FRAG_GAP;
                                        h && this.fragmentTracker.fragBuffered(u, !0);
                                        var f = i.errorAction,
                                            m = f || {},
                                            p = m.action,
                                            E = m.retryCount,
                                            S = E === void 0 ? 0 : E,
                                            L = m.retryConfig;
                                        if (f && p === Te.RetryRequest && L) {
                                            this.resetStartWhenNotLoaded(this.levelLastLoaded);
                                            var I = ci(L, S);
                                            this.warn("Fragment " + u.sn + " of " + r + " " + u.level + " errored with " + i.details + ", retrying loading " + (S + 1) + "/" + L.maxNumRetry + " in " + I + "ms"), f.resolved = !0, this.retryDate = self.performance.now() + I, this.state = rt.FRAG_LOADING_WAITING_RETRY
                                        } else if (L && f)
                                            if (this.resetFragmentErrors(r), S < L.maxNumRetry) !h && p !== Te.RemoveAlternatePermanently && (f.resolved = !0);
                                            else {
                                                V.warn(i.details + " reached or exceeded max retry (" + S + ")");
                                                return
                                            }
                                        else(f == null ? void 0 : f.action) === Te.SendAlternateToPenaltyBox ? this.state = rt.WAITING_LEVEL : this.state = rt.ERROR;
                                        this.tickImmediate()
                                    }
                                }, a.reduceLengthAndFlushBuffer = function(r) {
                                    if (this.state === rt.PARSING || this.state === rt.PARSED) {
                                        var i = r.frag,
                                            o = r.parent,
                                            u = this.getFwdBufferInfo(this.mediaBuffer, o),
                                            c = u && u.len > .5;
                                        c && this.reduceMaxBufferLength(u.len, (i == null ? void 0 : i.duration) || 10);
                                        var h = !c;
                                        return h && this.warn("Buffer full error while media.currentTime is not buffered, flush " + o + " buffer"), i && (this.fragmentTracker.removeFragment(i), this.nextLoadPosition = i.start), this.resetLoadingState(), h
                                    }
                                    return !1
                                }, a.resetFragmentErrors = function(r) {
                                    r === H.AUDIO && (this.fragCurrent = null), this.loadedmetadata || (this.startFragRequested = !1), this.state !== rt.STOPPED && (this.state = rt.IDLE)
                                }, a.afterBufferFlushed = function(r, i, o) {
                                    if (r) {
                                        var u = Or.getBuffered(r);
                                        this.fragmentTracker.detectEvictedFragments(i, u, o), this.state === rt.ENDED && this.resetLoadingState()
                                    }
                                }, a.resetLoadingState = function() {
                                    this.log("Reset loading state"), this.fragCurrent = null, this.fragPrevious = null, this.state = rt.IDLE
                                }, a.resetStartWhenNotLoaded = function(r) {
                                    if (!this.loadedmetadata) {
                                        this.startFragRequested = !1;
                                        var i = r ? r.details : null;
                                        i != null && i.live ? (this.startPosition = -1, this.setStartPosition(i, 0), this.resetLoadingState()) : this.nextLoadPosition = this.startPosition
                                    }
                                }, a.resetWhenMissingContext = function(r) {
                                    this.warn("The loading context changed while buffering fragment " + r.sn + " of level " + r.level + ". This chunk will not be buffered."), this.removeUnbufferedFrags(), this.resetStartWhenNotLoaded(this.levelLastLoaded), this.resetLoadingState()
                                }, a.removeUnbufferedFrags = function(r) {
                                    r === void 0 && (r = 0), this.fragmentTracker.removeFragmentsInRange(r, 1 / 0, this.playlistType, !1, !0)
                                }, a.updateLevelTiming = function(r, i, o, u) {
                                    var c = this,
                                        h, f = o.details;
                                    if (!f) {
                                        this.warn("level.details undefined");
                                        return
                                    }
                                    var m = Object.keys(r.elementaryStreams).reduce(function(E, S) {
                                        var L = r.elementaryStreams[S];
                                        if (L) {
                                            var I = L.endPTS - L.startPTS;
                                            if (I <= 0) return c.warn("Could not parse fragment " + r.sn + " " + S + " duration reliably (" + I + ")"), E || !1;
                                            var O = u ? 0 : ua(f, r, L.startPTS, L.endPTS, L.startDTS, L.endDTS);
                                            return c.hls.trigger(_.LEVEL_PTS_UPDATED, {
                                                details: f,
                                                level: o,
                                                drift: O,
                                                type: S,
                                                frag: r,
                                                start: L.startPTS,
                                                end: L.endPTS
                                            }), !0
                                        }
                                        return E
                                    }, !1);
                                    if (!m && ((h = this.transmuxer) == null ? void 0 : h.error) === null) {
                                        var p = new Error("Found no media in fragment " + r.sn + " of level " + r.level + " resetting transmuxer to fallback to playlist timing");
                                        if (o.fragmentError === 0 && (o.fragmentError++, r.gap = !0, this.fragmentTracker.removeFragment(r), this.fragmentTracker.fragBuffered(r, !0)), this.warn(p.message), this.hls.trigger(_.ERROR, {
                                                type: Ve.MEDIA_ERROR,
                                                details: de.FRAG_PARSING_ERROR,
                                                fatal: !1,
                                                error: p,
                                                frag: r,
                                                reason: "Found no media in msn " + r.sn + ' of level "' + o.url + '"'
                                            }), !this.hls) return;
                                        this.resetTransmuxer()
                                    }
                                    this.state = rt.PARSED, this.hls.trigger(_.FRAG_PARSED, {
                                        frag: r,
                                        part: i
                                    })
                                }, a.resetTransmuxer = function() {
                                    this.transmuxer && (this.transmuxer.destroy(), this.transmuxer = null)
                                }, a.recoverWorkerError = function(r) {
                                    r.event === "demuxerWorker" && (this.fragmentTracker.removeAllFragments(), this.resetTransmuxer(), this.resetStartWhenNotLoaded(this.levelLastLoaded), this.resetLoadingState())
                                }, tt(n, [{
                                    key: "state",
                                    get: function() {
                                        return this._state
                                    },
                                    set: function(r) {
                                        var i = this._state;
                                        i !== r && (this._state = r, this.log(i + "->" + r))
                                    }
                                }]), n
                            }(Ls),
                            zs = function() {
                                function l() {
                                    this.chunks = [], this.dataLength = 0
                                }
                                var n = l.prototype;
                                return n.push = function(e) {
                                    this.chunks.push(e), this.dataLength += e.length
                                }, n.flush = function() {
                                    var e = this.chunks,
                                        r = this.dataLength,
                                        i;
                                    if (e.length) e.length === 1 ? i = e[0] : i = Yo(e, r);
                                    else return new Uint8Array(0);
                                    return this.reset(), i
                                }, n.reset = function() {
                                    this.chunks.length = 0, this.dataLength = 0
                                }, l
                            }();

                        function Yo(l, n) {
                            for (var a = new Uint8Array(n), e = 0, r = 0; r < l.length; r++) {
                                var i = l[r];
                                a.set(i, e), e += i.length
                            }
                            return a
                        }

                        function xn(l, n) {
                            return l === void 0 && (l = ""), n === void 0 && (n = 9e4), {
                                type: l,
                                id: -1,
                                pid: -1,
                                inputTimeScale: n,
                                sequenceNumber: -1,
                                samples: [],
                                dropped: 0
                            }
                        }
                        var Xs = function() {
                                function l() {
                                    this._audioTrack = void 0, this._id3Track = void 0, this.frameIndex = 0, this.cachedData = null, this.basePTS = null, this.initPTS = null, this.lastPTS = null
                                }
                                var n = l.prototype;
                                return n.resetInitSegment = function(e, r, i, o) {
                                    this._id3Track = {
                                        type: "id3",
                                        id: 3,
                                        pid: -1,
                                        inputTimeScale: 9e4,
                                        sequenceNumber: 0,
                                        samples: [],
                                        dropped: 0
                                    }
                                }, n.resetTimeStamp = function(e) {
                                    this.initPTS = e, this.resetContiguity()
                                }, n.resetContiguity = function() {
                                    this.basePTS = null, this.lastPTS = null, this.frameIndex = 0
                                }, n.canParse = function(e, r) {
                                    return !1
                                }, n.appendFrame = function(e, r, i) {}, n.demux = function(e, r) {
                                    this.cachedData && (e = Nr(this.cachedData, e), this.cachedData = null);
                                    var i = gt(e, 0),
                                        o = i ? i.length : 0,
                                        u, c = this._audioTrack,
                                        h = this._id3Track,
                                        f = i ? kr(i) : void 0,
                                        m = e.length;
                                    for ((this.basePTS === null || this.frameIndex === 0 && Ge(f)) && (this.basePTS = qo(f, r, this.initPTS), this.lastPTS = this.basePTS), this.lastPTS === null && (this.lastPTS = this.basePTS), i && i.length > 0 && h.samples.push({
                                            pts: this.lastPTS,
                                            dts: this.lastPTS,
                                            data: i,
                                            type: fr.audioId3,
                                            duration: Number.POSITIVE_INFINITY
                                        }); o < m;) {
                                        if (this.canParse(e, o)) {
                                            var p = this.appendFrame(c, e, o);
                                            p ? (this.frameIndex++, this.lastPTS = p.sample.pts, o += p.length, u = o) : o = m
                                        } else wr(e, o) ? (i = gt(e, o), h.samples.push({
                                            pts: this.lastPTS,
                                            dts: this.lastPTS,
                                            data: i,
                                            type: fr.audioId3,
                                            duration: Number.POSITIVE_INFINITY
                                        }), o += i.length, u = o) : o++;
                                        if (o === m && u !== m) {
                                            var E = De(e, u);
                                            this.cachedData ? this.cachedData = Nr(this.cachedData, E) : this.cachedData = E
                                        }
                                    }
                                    return {
                                        audioTrack: c,
                                        videoTrack: xn(),
                                        id3Track: h,
                                        textTrack: xn()
                                    }
                                }, n.demuxSampleAes = function(e, r, i) {
                                    return Promise.reject(new Error("[" + this + "] This demuxer does not support Sample-AES decryption"))
                                }, n.flush = function(e) {
                                    var r = this.cachedData;
                                    return r && (this.cachedData = null, this.demux(r, 0)), {
                                        audioTrack: this._audioTrack,
                                        videoTrack: xn(),
                                        id3Track: this._id3Track,
                                        textTrack: xn()
                                    }
                                }, n.destroy = function() {}, l
                            }(),
                            qo = function(n, a, e) {
                                if (Ge(n)) return n * 90;
                                var r = e ? e.baseTime * 9e4 / e.timescale : 0;
                                return a * 9e4 + r
                            };

                        function Ku(l, n, a, e) {
                            var r, i, o, u, c = navigator.userAgent.toLowerCase(),
                                h = e,
                                f = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                            r = ((n[a + 2] & 192) >>> 6) + 1;
                            var m = (n[a + 2] & 60) >>> 2;
                            if (m > f.length - 1) {
                                var p = new Error("invalid ADTS sampling index:" + m);
                                l.emit(_.ERROR, _.ERROR, {
                                    type: Ve.MEDIA_ERROR,
                                    details: de.FRAG_PARSING_ERROR,
                                    fatal: !0,
                                    error: p,
                                    reason: p.message
                                });
                                return
                            }
                            return o = (n[a + 2] & 1) << 2, o |= (n[a + 3] & 192) >>> 6, V.log("manifest codec:" + e + ", ADTS type:" + r + ", samplingIndex:" + m), /firefox/i.test(c) ? m >= 6 ? (r = 5, u = new Array(4), i = m - 3) : (r = 2, u = new Array(2), i = m) : c.indexOf("android") !== -1 ? (r = 2, u = new Array(2), i = m) : (r = 5, u = new Array(4), e && (e.indexOf("mp4a.40.29") !== -1 || e.indexOf("mp4a.40.5") !== -1) || !e && m >= 6 ? i = m - 3 : ((e && e.indexOf("mp4a.40.2") !== -1 && (m >= 6 && o === 1 || /vivaldi/i.test(c)) || !e && o === 1) && (r = 2, u = new Array(2)), i = m)), u[0] = r << 3, u[0] |= (m & 14) >> 1, u[1] |= (m & 1) << 7, u[1] |= o << 3, r === 5 && (u[1] |= (i & 14) >> 1, u[2] = (i & 1) << 7, u[2] |= 8, u[3] = 0), {
                                config: u,
                                samplerate: f[m],
                                channelCount: o,
                                codec: "mp4a.40." + r,
                                manifestCodec: h
                            }
                        }

                        function $o(l, n) {
                            return l[n] === 255 && (l[n + 1] & 246) === 240
                        }

                        function Al(l, n) {
                            return l[n + 1] & 1 ? 7 : 9
                        }

                        function Zs(l, n) {
                            return (l[n + 3] & 3) << 11 | l[n + 4] << 3 | (l[n + 5] & 224) >>> 5
                        }

                        function Ts(l, n) {
                            return n + 5 < l.length
                        }

                        function Ln(l, n) {
                            return n + 1 < l.length && $o(l, n)
                        }

                        function _l(l, n) {
                            return Ts(l, n) && $o(l, n) && Zs(l, n) <= l.length - n
                        }

                        function Cs(l, n) {
                            if (Ln(l, n)) {
                                var a = Al(l, n);
                                if (n + a >= l.length) return !1;
                                var e = Zs(l, n);
                                if (e <= a) return !1;
                                var r = n + e;
                                return r === l.length || Ln(l, r)
                            }
                            return !1
                        }

                        function Ds(l, n, a, e, r) {
                            if (!l.samplerate) {
                                var i = Ku(n, a, e, r);
                                if (!i) return;
                                l.config = i.config, l.samplerate = i.samplerate, l.channelCount = i.channelCount, l.codec = i.codec, l.manifestCodec = i.manifestCodec, V.log("parsed codec:" + l.codec + ", rate:" + i.samplerate + ", channels:" + i.channelCount)
                            }
                        }

                        function Qs(l) {
                            return 1024 * 9e4 / l
                        }

                        function Ms(l, n) {
                            var a = Al(l, n);
                            if (n + a <= l.length) {
                                var e = Zs(l, n) - a;
                                if (e > 0) return {
                                    headerLength: a,
                                    frameLength: e
                                }
                            }
                        }

                        function Js(l, n, a, e, r) {
                            var i = Qs(l.samplerate),
                                o = e + r * i,
                                u = Ms(n, a),
                                c;
                            if (u) {
                                var h = u.frameLength,
                                    f = u.headerLength,
                                    m = f + h,
                                    p = Math.max(0, a + m - n.length);
                                p ? (c = new Uint8Array(m - f), c.set(n.subarray(a + f, n.length), 0)) : c = n.subarray(a + f, a + m);
                                var E = {
                                    unit: c,
                                    pts: o
                                };
                                return p || l.samples.push(E), {
                                    sample: E,
                                    length: m,
                                    missing: p
                                }
                            }
                            var S = n.length - a;
                            c = new Uint8Array(S), c.set(n.subarray(a, n.length), 0);
                            var L = {
                                unit: c,
                                pts: o
                            };
                            return {
                                sample: L,
                                length: S,
                                missing: -1
                            }
                        }
                        var Ps = null,
                            Sl = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                            kl = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                            jo = [
                                [0, 72, 144, 12],
                                [0, 0, 0, 0],
                                [0, 72, 144, 12],
                                [0, 144, 144, 12]
                            ],
                            wl = [0, 1, 1, 4];

                        function ya(l, n, a, e, r) {
                            if (!(a + 24 > n.length)) {
                                var i = Os(n, a);
                                if (i && a + i.frameLength <= n.length) {
                                    var o = i.samplesPerFrame * 9e4 / i.sampleRate,
                                        u = e + r * o,
                                        c = {
                                            unit: n.subarray(a, a + i.frameLength),
                                            pts: u,
                                            dts: u
                                        };
                                    return l.config = [], l.channelCount = i.channelCount, l.samplerate = i.sampleRate, l.samples.push(c), {
                                        sample: c,
                                        length: i.frameLength,
                                        missing: 0
                                    }
                                }
                            }
                        }

                        function Os(l, n) {
                            var a = l[n + 1] >> 3 & 3,
                                e = l[n + 1] >> 1 & 3,
                                r = l[n + 2] >> 4 & 15,
                                i = l[n + 2] >> 2 & 3;
                            if (a !== 1 && r !== 0 && r !== 15 && i !== 3) {
                                var o = l[n + 2] >> 1 & 1,
                                    u = l[n + 3] >> 6,
                                    c = a === 3 ? 3 - e : e === 3 ? 3 : 4,
                                    h = Sl[c * 14 + r - 1] * 1e3,
                                    f = a === 3 ? 0 : a === 2 ? 1 : 2,
                                    m = kl[f * 3 + i],
                                    p = u === 3 ? 1 : 2,
                                    E = jo[a][e],
                                    S = wl[e],
                                    L = E * 8 * S,
                                    I = Math.floor(E * h / m + o) * S;
                                if (Ps === null) {
                                    var O = navigator.userAgent || "",
                                        U = O.match(/Chrome\/(\d+)/i);
                                    Ps = U ? parseInt(U[1]) : 0
                                }
                                var G = !!Ps && Ps <= 87;
                                return G && e === 2 && h >= 224e3 && u === 0 && (l[n + 3] = l[n + 3] | 128), {
                                    sampleRate: m,
                                    channelCount: p,
                                    frameLength: I,
                                    samplesPerFrame: L
                                }
                            }
                        }

                        function As(l, n) {
                            return l[n] === 255 && (l[n + 1] & 224) === 224 && (l[n + 1] & 6) !== 0
                        }

                        function _s(l, n) {
                            return n + 1 < l.length && As(l, n)
                        }

                        function Ss(l, n) {
                            var a = 4;
                            return As(l, n) && a <= l.length - n
                        }

                        function eo(l, n) {
                            if (n + 1 < l.length && As(l, n)) {
                                var a = 4,
                                    e = Os(l, n),
                                    r = a;
                                e != null && e.frameLength && (r = e.frameLength);
                                var i = n + r;
                                return i === l.length || _s(l, i)
                            }
                            return !1
                        }
                        var xs = function(l) {
                                x(n, l);

                                function n(e, r) {
                                    var i;
                                    return i = l.call(this) || this, i.observer = void 0, i.config = void 0, i.observer = e, i.config = r, i
                                }
                                var a = n.prototype;
                                return a.resetInitSegment = function(r, i, o, u) {
                                    l.prototype.resetInitSegment.call(this, r, i, o, u), this._audioTrack = {
                                        container: "audio/adts",
                                        type: "audio",
                                        id: 2,
                                        pid: -1,
                                        sequenceNumber: 0,
                                        segmentCodec: "aac",
                                        samples: [],
                                        manifestCodec: i,
                                        duration: u,
                                        inputTimeScale: 9e4,
                                        dropped: 0
                                    }
                                }, n.probe = function(r) {
                                    if (!r) return !1;
                                    var i = gt(r, 0),
                                        o = (i == null ? void 0 : i.length) || 0;
                                    if (eo(r, o)) return !1;
                                    for (var u = r.length; o < u; o++)
                                        if (Cs(r, o)) return V.log("ADTS sync word found !"), !0;
                                    return !1
                                }, a.canParse = function(r, i) {
                                    return _l(r, i)
                                }, a.appendFrame = function(r, i, o) {
                                    Ds(r, this.observer, i, o, r.manifestCodec);
                                    var u = Js(r, i, o, this.basePTS, this.frameIndex);
                                    if (u && u.missing === 0) return u
                                }, n
                            }(Xs),
                            as = /\/emsg[-/]ID3/i,
                            In = function() {
                                function l(a, e) {
                                    this.remainderData = null, this.timeOffset = 0, this.config = void 0, this.videoTrack = void 0, this.audioTrack = void 0, this.id3Track = void 0, this.txtTrack = void 0, this.config = e
                                }
                                var n = l.prototype;
                                return n.resetTimeStamp = function() {}, n.resetInitSegment = function(e, r, i, o) {
                                    var u = this.videoTrack = xn("video", 1),
                                        c = this.audioTrack = xn("audio", 1),
                                        h = this.txtTrack = xn("text", 1);
                                    if (this.id3Track = xn("id3", 1), this.timeOffset = 0, !!(e != null && e.byteLength)) {
                                        var f = Qi(e);
                                        if (f.video) {
                                            var m = f.video,
                                                p = m.id,
                                                E = m.timescale,
                                                S = m.codec;
                                            u.id = p, u.timescale = h.timescale = E, u.codec = S
                                        }
                                        if (f.audio) {
                                            var L = f.audio,
                                                I = L.id,
                                                O = L.timescale,
                                                U = L.codec;
                                            c.id = I, c.timescale = O, c.codec = U
                                        }
                                        h.id = Ut.text, u.sampleDuration = 0, u.duration = c.duration = o
                                    }
                                }, n.resetContiguity = function() {
                                    this.remainderData = null
                                }, l.probe = function(e) {
                                    return Tr(e)
                                }, n.demux = function(e, r) {
                                    this.timeOffset = r;
                                    var i = e,
                                        o = this.videoTrack,
                                        u = this.txtTrack;
                                    if (this.config.progressive) {
                                        this.remainderData && (i = Nr(this.remainderData, e));
                                        var c = Qr(i);
                                        this.remainderData = c.remainder, o.samples = c.valid || new Uint8Array
                                    } else o.samples = i;
                                    var h = this.extractID3Track(o, r);
                                    return u.samples = xr(r, o), {
                                        videoTrack: o,
                                        audioTrack: this.audioTrack,
                                        id3Track: h,
                                        textTrack: this.txtTrack
                                    }
                                }, n.flush = function() {
                                    var e = this.timeOffset,
                                        r = this.videoTrack,
                                        i = this.txtTrack;
                                    r.samples = this.remainderData || new Uint8Array, this.remainderData = null;
                                    var o = this.extractID3Track(r, this.timeOffset);
                                    return i.samples = xr(e, r), {
                                        videoTrack: r,
                                        audioTrack: xn(),
                                        id3Track: o,
                                        textTrack: xn()
                                    }
                                }, n.extractID3Track = function(e, r) {
                                    var i = this.id3Track;
                                    if (e.samples.length) {
                                        var o = Vt(e.samples, ["emsg"]);
                                        o && o.forEach(function(u) {
                                            var c = vi(u);
                                            if (as.test(c.schemeIdUri)) {
                                                var h = Ge(c.presentationTime) ? c.presentationTime / c.timeScale : r + c.presentationTimeDelta / c.timeScale,
                                                    f = c.eventDuration === 4294967295 ? Number.POSITIVE_INFINITY : c.eventDuration / c.timeScale;
                                                f <= .001 && (f = Number.POSITIVE_INFINITY);
                                                var m = c.payload;
                                                i.samples.push({
                                                    data: m,
                                                    len: m.byteLength,
                                                    dts: h,
                                                    pts: h,
                                                    type: fr.emsg,
                                                    duration: f
                                                })
                                            }
                                        })
                                    }
                                    return i
                                }, n.demuxSampleAes = function(e, r, i) {
                                    return Promise.reject(new Error("The MP4 demuxer does not support SAMPLE-AES decryption"))
                                }, n.destroy = function() {}, l
                            }(),
                            Ns = function(n, a) {
                                var e = 0,
                                    r = 5;
                                a += r;
                                for (var i = new Uint32Array(1), o = new Uint32Array(1), u = new Uint8Array(1); r > 0;) {
                                    u[0] = n[a];
                                    var c = Math.min(r, 8),
                                        h = 8 - c;
                                    o[0] = 4278190080 >>> 24 + h << h, i[0] = (u[0] & o[0]) >> h, e = e ? e << c | i[0] : i[0], a += 1, r -= c
                                }
                                return e
                            },
                            Rl = function(l) {
                                x(n, l);

                                function n(e) {
                                    var r;
                                    return r = l.call(this) || this, r.observer = void 0, r.observer = e, r
                                }
                                var a = n.prototype;
                                return a.resetInitSegment = function(r, i, o, u) {
                                    l.prototype.resetInitSegment.call(this, r, i, o, u), this._audioTrack = {
                                        container: "audio/ac-3",
                                        type: "audio",
                                        id: 2,
                                        pid: -1,
                                        sequenceNumber: 0,
                                        segmentCodec: "ac3",
                                        samples: [],
                                        manifestCodec: i,
                                        duration: u,
                                        inputTimeScale: 9e4,
                                        dropped: 0
                                    }
                                }, a.canParse = function(r, i) {
                                    return i + 64 < r.length
                                }, a.appendFrame = function(r, i, o) {
                                    var u = Ui(r, i, o, this.basePTS, this.frameIndex);
                                    if (u !== -1) {
                                        var c = r.samples[r.samples.length - 1];
                                        return {
                                            sample: c,
                                            length: u,
                                            missing: 0
                                        }
                                    }
                                }, n.probe = function(r) {
                                    if (!r) return !1;
                                    var i = gt(r, 0);
                                    if (!i) return !1;
                                    var o = i.length;
                                    return r[o] === 11 && r[o + 1] === 119 && kr(i) !== void 0 && Ns(r, o) < 16
                                }, n
                            }(Xs);

                        function Ui(l, n, a, e, r) {
                            if (a + 8 > n.length || n[a] !== 11 || n[a + 1] !== 119) return -1;
                            var i = n[a + 4] >> 6;
                            if (i >= 3) return -1;
                            var o = [48e3, 44100, 32e3],
                                u = o[i],
                                c = n[a + 4] & 63,
                                h = [64, 69, 96, 64, 70, 96, 80, 87, 120, 80, 88, 120, 96, 104, 144, 96, 105, 144, 112, 121, 168, 112, 122, 168, 128, 139, 192, 128, 140, 192, 160, 174, 240, 160, 175, 240, 192, 208, 288, 192, 209, 288, 224, 243, 336, 224, 244, 336, 256, 278, 384, 256, 279, 384, 320, 348, 480, 320, 349, 480, 384, 417, 576, 384, 418, 576, 448, 487, 672, 448, 488, 672, 512, 557, 768, 512, 558, 768, 640, 696, 960, 640, 697, 960, 768, 835, 1152, 768, 836, 1152, 896, 975, 1344, 896, 976, 1344, 1024, 1114, 1536, 1024, 1115, 1536, 1152, 1253, 1728, 1152, 1254, 1728, 1280, 1393, 1920, 1280, 1394, 1920],
                                f = h[c * 3 + i] * 2;
                            if (a + f > n.length) return -1;
                            var m = n[a + 6] >> 5,
                                p = 0;
                            m === 2 ? p += 2 : (m & 1 && m !== 1 && (p += 2), m & 4 && (p += 2));
                            var E = (n[a + 6] << 8 | n[a + 7]) >> 12 - p & 1,
                                S = [2, 1, 2, 3, 3, 4, 4, 5],
                                L = S[m] + E,
                                I = n[a + 5] >> 3,
                                O = n[a + 5] & 7,
                                U = new Uint8Array([i << 6 | I << 1 | O >> 2, (O & 3) << 6 | m << 3 | E << 2 | c >> 4, c << 4 & 224]),
                                G = 1536 / u * 9e4,
                                ee = e + r * G,
                                te = n.subarray(a, a + f);
                            return l.config = U, l.channelCount = L, l.samplerate = u, l.samples.push({
                                unit: te,
                                pts: ee
                            }), f
                        }
                        var Wa = function() {
                                function l() {
                                    this.VideoSample = null
                                }
                                var n = l.prototype;
                                return n.createVideoSample = function(e, r, i, o) {
                                    return {
                                        key: e,
                                        frame: !1,
                                        pts: r,
                                        dts: i,
                                        units: [],
                                        debug: o,
                                        length: 0
                                    }
                                }, n.getLastNalUnit = function(e) {
                                    var r, i = this.VideoSample,
                                        o;
                                    if ((!i || i.units.length === 0) && (i = e[e.length - 1]), (r = i) != null && r.units) {
                                        var u = i.units;
                                        o = u[u.length - 1]
                                    }
                                    return o
                                }, n.pushAccessUnit = function(e, r) {
                                    if (e.units.length && e.frame) {
                                        if (e.pts === void 0) {
                                            var i = r.samples,
                                                o = i.length;
                                            if (o) {
                                                var u = i[o - 1];
                                                e.pts = u.pts, e.dts = u.dts
                                            } else {
                                                r.dropped++;
                                                return
                                            }
                                        }
                                        r.samples.push(e)
                                    }
                                    e.debug.length && V.log(e.pts + "/" + e.dts + ":" + e.debug)
                                }, l
                            }(),
                            hn = function() {
                                function l(a) {
                                    this.data = void 0, this.bytesAvailable = void 0, this.word = void 0, this.bitsAvailable = void 0, this.data = a, this.bytesAvailable = a.byteLength, this.word = 0, this.bitsAvailable = 0
                                }
                                var n = l.prototype;
                                return n.loadWord = function() {
                                    var e = this.data,
                                        r = this.bytesAvailable,
                                        i = e.byteLength - r,
                                        o = new Uint8Array(4),
                                        u = Math.min(4, r);
                                    if (u === 0) throw new Error("no bytes available");
                                    o.set(e.subarray(i, i + u)), this.word = new DataView(o.buffer).getUint32(0), this.bitsAvailable = u * 8, this.bytesAvailable -= u
                                }, n.skipBits = function(e) {
                                    var r;
                                    e = Math.min(e, this.bytesAvailable * 8 + this.bitsAvailable), this.bitsAvailable > e ? (this.word <<= e, this.bitsAvailable -= e) : (e -= this.bitsAvailable, r = e >> 3, e -= r << 3, this.bytesAvailable -= r, this.loadWord(), this.word <<= e, this.bitsAvailable -= e)
                                }, n.readBits = function(e) {
                                    var r = Math.min(this.bitsAvailable, e),
                                        i = this.word >>> 32 - r;
                                    if (e > 32 && V.error("Cannot read more than 32 bits at a time"), this.bitsAvailable -= r, this.bitsAvailable > 0) this.word <<= r;
                                    else if (this.bytesAvailable > 0) this.loadWord();
                                    else throw new Error("no bits available");
                                    return r = e - r, r > 0 && this.bitsAvailable ? i << r | this.readBits(r) : i
                                }, n.skipLZ = function() {
                                    var e;
                                    for (e = 0; e < this.bitsAvailable; ++e)
                                        if ((this.word & 2147483648 >>> e) !== 0) return this.word <<= e, this.bitsAvailable -= e, e;
                                    return this.loadWord(), e + this.skipLZ()
                                }, n.skipUEG = function() {
                                    this.skipBits(1 + this.skipLZ())
                                }, n.skipEG = function() {
                                    this.skipBits(1 + this.skipLZ())
                                }, n.readUEG = function() {
                                    var e = this.skipLZ();
                                    return this.readBits(e + 1) - 1
                                }, n.readEG = function() {
                                    var e = this.readUEG();
                                    return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                                }, n.readBoolean = function() {
                                    return this.readBits(1) === 1
                                }, n.readUByte = function() {
                                    return this.readBits(8)
                                }, n.readUShort = function() {
                                    return this.readBits(16)
                                }, n.readUInt = function() {
                                    return this.readBits(32)
                                }, n.skipScalingList = function(e) {
                                    for (var r = 8, i = 8, o, u = 0; u < e; u++) i !== 0 && (o = this.readEG(), i = (r + o + 256) % 256), r = i === 0 ? r : i
                                }, n.readSPS = function() {
                                    var e = 0,
                                        r = 0,
                                        i = 0,
                                        o = 0,
                                        u, c, h, f = this.readUByte.bind(this),
                                        m = this.readBits.bind(this),
                                        p = this.readUEG.bind(this),
                                        E = this.readBoolean.bind(this),
                                        S = this.skipBits.bind(this),
                                        L = this.skipEG.bind(this),
                                        I = this.skipUEG.bind(this),
                                        O = this.skipScalingList.bind(this);
                                    f();
                                    var U = f();
                                    if (m(5), S(3), f(), I(), U === 100 || U === 110 || U === 122 || U === 244 || U === 44 || U === 83 || U === 86 || U === 118 || U === 128) {
                                        var G = p();
                                        if (G === 3 && S(1), I(), I(), S(1), E())
                                            for (c = G !== 3 ? 8 : 12, h = 0; h < c; h++) E() && (h < 6 ? O(16) : O(64))
                                    }
                                    I();
                                    var ee = p();
                                    if (ee === 0) p();
                                    else if (ee === 1)
                                        for (S(1), L(), L(), u = p(), h = 0; h < u; h++) L();
                                    I(), S(1);
                                    var te = p(),
                                        _e = p(),
                                        me = m(1);
                                    me === 0 && S(1), S(1), E() && (e = p(), r = p(), i = p(), o = p());
                                    var ae = [1, 1];
                                    if (E() && E()) {
                                        var Se = f();
                                        switch (Se) {
                                            case 1:
                                                ae = [1, 1];
                                                break;
                                            case 2:
                                                ae = [12, 11];
                                                break;
                                            case 3:
                                                ae = [10, 11];
                                                break;
                                            case 4:
                                                ae = [16, 11];
                                                break;
                                            case 5:
                                                ae = [40, 33];
                                                break;
                                            case 6:
                                                ae = [24, 11];
                                                break;
                                            case 7:
                                                ae = [20, 11];
                                                break;
                                            case 8:
                                                ae = [32, 11];
                                                break;
                                            case 9:
                                                ae = [80, 33];
                                                break;
                                            case 10:
                                                ae = [18, 11];
                                                break;
                                            case 11:
                                                ae = [15, 11];
                                                break;
                                            case 12:
                                                ae = [64, 33];
                                                break;
                                            case 13:
                                                ae = [160, 99];
                                                break;
                                            case 14:
                                                ae = [4, 3];
                                                break;
                                            case 15:
                                                ae = [3, 2];
                                                break;
                                            case 16:
                                                ae = [2, 1];
                                                break;
                                            case 255:
                                                {
                                                    ae = [f() << 8 | f(), f() << 8 | f()];
                                                    break
                                                }
                                        }
                                    }
                                    return {
                                        width: Math.ceil((te + 1) * 16 - e * 2 - r * 2),
                                        height: (2 - me) * (_e + 1) * 16 - (me ? 2 : 4) * (i + o),
                                        pixelRatio: ae
                                    }
                                }, n.readSliceType = function() {
                                    return this.readUByte(), this.readUEG(), this.readUEG()
                                }, l
                            }(),
                            bn = function(l) {
                                x(n, l);

                                function n() {
                                    return l.apply(this, arguments) || this
                                }
                                var a = n.prototype;
                                return a.parseAVCPES = function(r, i, o, u, c) {
                                    var h = this,
                                        f = this.parseAVCNALu(r, o.data),
                                        m = this.VideoSample,
                                        p, E = !1;
                                    o.data = null, m && f.length && !r.audFound && (this.pushAccessUnit(m, r), m = this.VideoSample = this.createVideoSample(!1, o.pts, o.dts, "")), f.forEach(function(S) {
                                        var L;
                                        switch (S.type) {
                                            case 1:
                                                {
                                                    var I = !1;p = !0;
                                                    var O = S.data;
                                                    if (E && O.length > 4) {
                                                        var U = new hn(O).readSliceType();
                                                        (U === 2 || U === 4 || U === 7 || U === 9) && (I = !0)
                                                    }
                                                    if (I) {
                                                        var G;
                                                        (G = m) != null && G.frame && !m.key && (h.pushAccessUnit(m, r), m = h.VideoSample = null)
                                                    }
                                                    m || (m = h.VideoSample = h.createVideoSample(!0, o.pts, o.dts, "")),
                                                    m.frame = !0,
                                                    m.key = I;
                                                    break
                                                }
                                            case 5:
                                                p = !0, (L = m) != null && L.frame && !m.key && (h.pushAccessUnit(m, r), m = h.VideoSample = null), m || (m = h.VideoSample = h.createVideoSample(!0, o.pts, o.dts, "")), m.key = !0, m.frame = !0;
                                                break;
                                            case 6:
                                                {
                                                    p = !0,
                                                    mi(S.data, 1, o.pts, i.samples);
                                                    break
                                                }
                                            case 7:
                                                {
                                                    var ee, te;p = !0,
                                                    E = !0;
                                                    var _e = S.data,
                                                        me = new hn(_e),
                                                        ae = me.readSPS();
                                                    if (!r.sps || r.width !== ae.width || r.height !== ae.height || ((ee = r.pixelRatio) == null ? void 0 : ee[0]) !== ae.pixelRatio[0] || ((te = r.pixelRatio) == null ? void 0 : te[1]) !== ae.pixelRatio[1]) {
                                                        r.width = ae.width, r.height = ae.height, r.pixelRatio = ae.pixelRatio, r.sps = [_e], r.duration = c;
                                                        for (var Se = _e.subarray(1, 4), ve = "avc1.", Ne = 0; Ne < 3; Ne++) {
                                                            var Ie = Se[Ne].toString(16);
                                                            Ie.length < 2 && (Ie = "0" + Ie), ve += Ie
                                                        }
                                                        r.codec = ve
                                                    }
                                                    break
                                                }
                                            case 8:
                                                p = !0, r.pps = [S.data];
                                                break;
                                            case 9:
                                                p = !0, r.audFound = !0, m && h.pushAccessUnit(m, r), m = h.VideoSample = h.createVideoSample(!1, o.pts, o.dts, "");
                                                break;
                                            case 12:
                                                p = !0;
                                                break;
                                            default:
                                                p = !1, m && (m.debug += "unknown NAL " + S.type + " ");
                                                break
                                        }
                                        if (m && p) {
                                            var kt = m.units;
                                            kt.push(S)
                                        }
                                    }), u && m && (this.pushAccessUnit(m, r), this.VideoSample = null)
                                }, a.parseAVCNALu = function(r, i) {
                                    var o = i.byteLength,
                                        u = r.naluState || 0,
                                        c = u,
                                        h = [],
                                        f = 0,
                                        m, p, E, S = -1,
                                        L = 0;
                                    for (u === -1 && (S = 0, L = i[0] & 31, u = 0, f = 1); f < o;) {
                                        if (m = i[f++], !u) {
                                            u = m ? 0 : 1;
                                            continue
                                        }
                                        if (u === 1) {
                                            u = m ? 0 : 2;
                                            continue
                                        }
                                        if (!m) u = 3;
                                        else if (m === 1) {
                                            if (p = f - u - 1, S >= 0) {
                                                var I = {
                                                    data: i.subarray(S, p),
                                                    type: L
                                                };
                                                h.push(I)
                                            } else {
                                                var O = this.getLastNalUnit(r.samples);
                                                O && (c && f <= 4 - c && O.state && (O.data = O.data.subarray(0, O.data.byteLength - c)), p > 0 && (O.data = Nr(O.data, i.subarray(0, p)), O.state = 0))
                                            }
                                            f < o ? (E = i[f] & 31, S = f, L = E, u = 0) : u = -1
                                        } else u = 0
                                    }
                                    if (S >= 0 && u >= 0) {
                                        var U = {
                                            data: i.subarray(S, o),
                                            type: L,
                                            state: u
                                        };
                                        h.push(U)
                                    }
                                    if (h.length === 0) {
                                        var G = this.getLastNalUnit(r.samples);
                                        G && (G.data = Nr(G.data, i))
                                    }
                                    return r.naluState = u, h
                                }, n
                            }(Wa),
                            Nn = function() {
                                function l(a, e, r) {
                                    this.keyData = void 0, this.decrypter = void 0, this.keyData = r, this.decrypter = new Ko(e, {
                                        removePKCS7Padding: !1
                                    })
                                }
                                var n = l.prototype;
                                return n.decryptBuffer = function(e) {
                                    return this.decrypter.decrypt(e, this.keyData.key.buffer, this.keyData.iv.buffer)
                                }, n.decryptAacSample = function(e, r, i) {
                                    var o = this,
                                        u = e[r].unit;
                                    if (!(u.length <= 16)) {
                                        var c = u.subarray(16, u.length - u.length % 16),
                                            h = c.buffer.slice(c.byteOffset, c.byteOffset + c.length);
                                        this.decryptBuffer(h).then(function(f) {
                                            var m = new Uint8Array(f);
                                            u.set(m, 16), o.decrypter.isSync() || o.decryptAacSamples(e, r + 1, i)
                                        })
                                    }
                                }, n.decryptAacSamples = function(e, r, i) {
                                    for (;; r++) {
                                        if (r >= e.length) {
                                            i();
                                            return
                                        }
                                        if (!(e[r].unit.length < 32) && (this.decryptAacSample(e, r, i), !this.decrypter.isSync())) return
                                    }
                                }, n.getAvcEncryptedData = function(e) {
                                    for (var r = Math.floor((e.length - 48) / 160) * 16 + 16, i = new Int8Array(r), o = 0, u = 32; u < e.length - 16; u += 160, o += 16) i.set(e.subarray(u, u + 16), o);
                                    return i
                                }, n.getAvcDecryptedUnit = function(e, r) {
                                    for (var i = new Uint8Array(r), o = 0, u = 32; u < e.length - 16; u += 160, o += 16) e.set(i.subarray(o, o + 16), u);
                                    return e
                                }, n.decryptAvcSample = function(e, r, i, o, u) {
                                    var c = this,
                                        h = Vn(u.data),
                                        f = this.getAvcEncryptedData(h);
                                    this.decryptBuffer(f.buffer).then(function(m) {
                                        u.data = c.getAvcDecryptedUnit(h, m), c.decrypter.isSync() || c.decryptAvcSamples(e, r, i + 1, o)
                                    })
                                }, n.decryptAvcSamples = function(e, r, i, o) {
                                    if (e instanceof Uint8Array) throw new Error("Cannot decrypt samples of type Uint8Array");
                                    for (;; r++, i = 0) {
                                        if (r >= e.length) {
                                            o();
                                            return
                                        }
                                        for (var u = e[r].units; !(i >= u.length); i++) {
                                            var c = u[i];
                                            if (!(c.data.length <= 48 || c.type !== 1 && c.type !== 5) && (this.decryptAvcSample(e, r, i, o, c), !this.decrypter.isSync())) return
                                        }
                                    }
                                }, l
                            }(),
                            zi = 188,
                            Ao = function() {
                                function l(a, e, r) {
                                    this.observer = void 0, this.config = void 0, this.typeSupported = void 0, this.sampleAes = null, this.pmtParsed = !1, this.audioCodec = void 0, this.videoCodec = void 0, this._duration = 0, this._pmtId = -1, this._videoTrack = void 0, this._audioTrack = void 0, this._id3Track = void 0, this._txtTrack = void 0, this.aacOverFlow = null, this.remainderData = null, this.videoParser = void 0, this.observer = a, this.config = e, this.typeSupported = r, this.videoParser = new bn
                                }
                                l.probe = function(e) {
                                    var r = l.syncOffset(e);
                                    return r > 0 && V.warn("MPEG2-TS detected but first sync word found @ offset " + r), r !== -1
                                }, l.syncOffset = function(e) {
                                    for (var r = e.length, i = Math.min(zi * 5, r - zi) + 1, o = 0; o < i;) {
                                        for (var u = !1, c = -1, h = 0, f = o; f < r; f += zi)
                                            if (e[f] === 71 && (r - f === zi || e[f + zi] === 71)) {
                                                if (h++, c === -1 && (c = f, c !== 0 && (i = Math.min(c + zi * 99, e.length - zi) + 1)), u || (u = to(e, f) === 0), u && h > 1 && (c === 0 && h > 2 || f + zi > i)) return c
                                            } else {
                                                if (h) return -1;
                                                break
                                            }
                                        o++
                                    }
                                    return -1
                                }, l.createTrack = function(e, r) {
                                    return {
                                        container: e === "video" || e === "audio" ? "video/mp2t" : void 0,
                                        type: e,
                                        id: Ut[e],
                                        pid: -1,
                                        inputTimeScale: 9e4,
                                        sequenceNumber: 0,
                                        samples: [],
                                        dropped: 0,
                                        duration: e === "audio" ? r : void 0
                                    }
                                };
                                var n = l.prototype;
                                return n.resetInitSegment = function(e, r, i, o) {
                                    this.pmtParsed = !1, this._pmtId = -1, this._videoTrack = l.createTrack("video"), this._audioTrack = l.createTrack("audio", o), this._id3Track = l.createTrack("id3"), this._txtTrack = l.createTrack("text"), this._audioTrack.segmentCodec = "aac", this.aacOverFlow = null, this.remainderData = null, this.audioCodec = r, this.videoCodec = i, this._duration = o
                                }, n.resetTimeStamp = function() {}, n.resetContiguity = function() {
                                    var e = this._audioTrack,
                                        r = this._videoTrack,
                                        i = this._id3Track;
                                    e && (e.pesData = null), r && (r.pesData = null), i && (i.pesData = null), this.aacOverFlow = null, this.remainderData = null
                                }, n.demux = function(e, r, i, o) {
                                    i === void 0 && (i = !1), o === void 0 && (o = !1), i || (this.sampleAes = null);
                                    var u, c = this._videoTrack,
                                        h = this._audioTrack,
                                        f = this._id3Track,
                                        m = this._txtTrack,
                                        p = c.pid,
                                        E = c.pesData,
                                        S = h.pid,
                                        L = f.pid,
                                        I = h.pesData,
                                        O = f.pesData,
                                        U = null,
                                        G = this.pmtParsed,
                                        ee = this._pmtId,
                                        te = e.length;
                                    if (this.remainderData && (e = Nr(this.remainderData, e), te = e.length, this.remainderData = null), te < zi && !o) return this.remainderData = e, {
                                        audioTrack: h,
                                        videoTrack: c,
                                        id3Track: f,
                                        textTrack: m
                                    };
                                    var _e = Math.max(0, l.syncOffset(e));
                                    te -= (te - _e) % zi, te < e.byteLength && !o && (this.remainderData = new Uint8Array(e.buffer, te, e.buffer.byteLength - te));
                                    for (var me = 0, ae = _e; ae < te; ae += zi)
                                        if (e[ae] === 71) {
                                            var Se = !!(e[ae + 1] & 64),
                                                ve = to(e, ae),
                                                Ne = (e[ae + 3] & 48) >> 4,
                                                Ie = void 0;
                                            if (Ne > 1) {
                                                if (Ie = ae + 5 + e[ae + 4], Ie === ae + zi) continue
                                            } else Ie = ae + 4;
                                            switch (ve) {
                                                case p:
                                                    Se && (E && (u = fn(E)) && this.videoParser.parseAVCPES(c, m, u, !1, this._duration), E = {
                                                        data: [],
                                                        size: 0
                                                    }), E && (E.data.push(e.subarray(Ie, ae + zi)), E.size += ae + zi - Ie);
                                                    break;
                                                case S:
                                                    if (Se) {
                                                        if (I && (u = fn(I))) switch (h.segmentCodec) {
                                                            case "aac":
                                                                this.parseAACPES(h, u);
                                                                break;
                                                            case "mp3":
                                                                this.parseMPEGPES(h, u);
                                                                break;
                                                            case "ac3":
                                                                this.parseAC3PES(h, u);
                                                                break
                                                        }
                                                        I = {
                                                            data: [],
                                                            size: 0
                                                        }
                                                    }
                                                    I && (I.data.push(e.subarray(Ie, ae + zi)), I.size += ae + zi - Ie);
                                                    break;
                                                case L:
                                                    Se && (O && (u = fn(O)) && this.parseID3PES(f, u), O = {
                                                        data: [],
                                                        size: 0
                                                    }), O && (O.data.push(e.subarray(Ie, ae + zi)), O.size += ae + zi - Ie);
                                                    break;
                                                case 0:
                                                    Se && (Ie += e[Ie] + 1), ee = this._pmtId = Cn(e, Ie);
                                                    break;
                                                case ee:
                                                    {
                                                        Se && (Ie += e[Ie] + 1);
                                                        var kt = Us(e, Ie, this.typeSupported, i, this.observer);p = kt.videoPid,
                                                        p > 0 && (c.pid = p, c.segmentCodec = kt.segmentVideoCodec),
                                                        S = kt.audioPid,
                                                        S > 0 && (h.pid = S, h.segmentCodec = kt.segmentAudioCodec),
                                                        L = kt.id3Pid,
                                                        L > 0 && (f.pid = L),
                                                        U !== null && !G && (V.warn("MPEG-TS PMT found at " + ae + " after unknown PID '" + U + "'. Backtracking to sync byte @" + _e + " to parse all TS packets."), U = null, ae = _e - 188),
                                                        G = this.pmtParsed = !0;
                                                        break
                                                    }
                                                case 17:
                                                case 8191:
                                                    break;
                                                default:
                                                    U = ve;
                                                    break
                                            }
                                        } else me++;
                                    me > 0 && ns(this.observer, new Error("Found " + me + " TS packet/s that do not start with 0x47")), c.pesData = E, h.pesData = I, f.pesData = O;
                                    var zt = {
                                        audioTrack: h,
                                        videoTrack: c,
                                        id3Track: f,
                                        textTrack: m
                                    };
                                    return o && this.extractRemainingSamples(zt), zt
                                }, n.flush = function() {
                                    var e = this.remainderData;
                                    this.remainderData = null;
                                    var r;
                                    return e ? r = this.demux(e, -1, !1, !0) : r = {
                                        videoTrack: this._videoTrack,
                                        audioTrack: this._audioTrack,
                                        id3Track: this._id3Track,
                                        textTrack: this._txtTrack
                                    }, this.extractRemainingSamples(r), this.sampleAes ? this.decrypt(r, this.sampleAes) : r
                                }, n.extractRemainingSamples = function(e) {
                                    var r = e.audioTrack,
                                        i = e.videoTrack,
                                        o = e.id3Track,
                                        u = e.textTrack,
                                        c = i.pesData,
                                        h = r.pesData,
                                        f = o.pesData,
                                        m;
                                    if (c && (m = fn(c)) ? (this.videoParser.parseAVCPES(i, u, m, !0, this._duration), i.pesData = null) : i.pesData = c, h && (m = fn(h))) {
                                        switch (r.segmentCodec) {
                                            case "aac":
                                                this.parseAACPES(r, m);
                                                break;
                                            case "mp3":
                                                this.parseMPEGPES(r, m);
                                                break;
                                            case "ac3":
                                                this.parseAC3PES(r, m);
                                                break
                                        }
                                        r.pesData = null
                                    } else h != null && h.size && V.log("last AAC PES packet truncated,might overlap between fragments"), r.pesData = h;
                                    f && (m = fn(f)) ? (this.parseID3PES(o, m), o.pesData = null) : o.pesData = f
                                }, n.demuxSampleAes = function(e, r, i) {
                                    var o = this.demux(e, i, !0, !this.config.progressive),
                                        u = this.sampleAes = new Nn(this.observer, this.config, r);
                                    return this.decrypt(o, u)
                                }, n.decrypt = function(e, r) {
                                    return new Promise(function(i) {
                                        var o = e.audioTrack,
                                            u = e.videoTrack;
                                        o.samples && o.segmentCodec === "aac" ? r.decryptAacSamples(o.samples, 0, function() {
                                            u.samples ? r.decryptAvcSamples(u.samples, 0, 0, function() {
                                                i(e)
                                            }) : i(e)
                                        }) : u.samples && r.decryptAvcSamples(u.samples, 0, 0, function() {
                                            i(e)
                                        })
                                    })
                                }, n.destroy = function() {
                                    this._duration = 0
                                }, n.parseAACPES = function(e, r) {
                                    var i = 0,
                                        o = this.aacOverFlow,
                                        u = r.data;
                                    if (o) {
                                        this.aacOverFlow = null;
                                        var c = o.missing,
                                            h = o.sample.unit.byteLength;
                                        if (c === -1) u = Nr(o.sample.unit, u);
                                        else {
                                            var f = h - c;
                                            o.sample.unit.set(u.subarray(0, c), f), e.samples.push(o.sample), i = o.missing
                                        }
                                    }
                                    var m, p;
                                    for (m = i, p = u.length; m < p - 1 && !Ln(u, m); m++);
                                    if (m !== i) {
                                        var E, S = m < p - 1;
                                        if (S ? E = "AAC PES did not start with ADTS header,offset:" + m : E = "No ADTS header found in AAC PES", ns(this.observer, new Error(E), S), !S) return
                                    }
                                    Ds(e, this.observer, u, m, this.audioCodec);
                                    var L;
                                    if (r.pts !== void 0) L = r.pts;
                                    else if (o) {
                                        var I = Qs(e.samplerate);
                                        L = o.sample.pts + I
                                    } else {
                                        V.warn("[tsdemuxer]: AAC PES unknown PTS");
                                        return
                                    }
                                    for (var O = 0, U; m < p;)
                                        if (U = Js(e, u, m, L, O), m += U.length, U.missing) {
                                            this.aacOverFlow = U;
                                            break
                                        } else
                                            for (O++; m < p - 1 && !Ln(u, m); m++);
                                }, n.parseMPEGPES = function(e, r) {
                                    var i = r.data,
                                        o = i.length,
                                        u = 0,
                                        c = 0,
                                        h = r.pts;
                                    if (h === void 0) {
                                        V.warn("[tsdemuxer]: MPEG PES unknown PTS");
                                        return
                                    }
                                    for (; c < o;)
                                        if (_s(i, c)) {
                                            var f = ya(e, i, c, h, u);
                                            if (f) c += f.length, u++;
                                            else break
                                        } else c++
                                }, n.parseAC3PES = function(e, r) {
                                    {
                                        var i = r.data,
                                            o = r.pts;
                                        if (o === void 0) {
                                            V.warn("[tsdemuxer]: AC3 PES unknown PTS");
                                            return
                                        }
                                        for (var u = i.length, c = 0, h = 0, f; h < u && (f = Ui(e, i, h, o, c++)) > 0;) h += f
                                    }
                                }, n.parseID3PES = function(e, r) {
                                    if (r.pts === void 0) {
                                        V.warn("[tsdemuxer]: ID3 PES unknown PTS");
                                        return
                                    }
                                    var i = le({}, r, {
                                        type: this._videoTrack ? fr.emsg : fr.audioId3,
                                        duration: Number.POSITIVE_INFINITY
                                    });
                                    e.samples.push(i)
                                }, l
                            }();

                        function to(l, n) {
                            return ((l[n + 1] & 31) << 8) + l[n + 2]
                        }

                        function Cn(l, n) {
                            return (l[n + 10] & 31) << 8 | l[n + 11]
                        }

                        function Us(l, n, a, e, r) {
                            var i = {
                                    audioPid: -1,
                                    videoPid: -1,
                                    id3Pid: -1,
                                    segmentVideoCodec: "avc",
                                    segmentAudioCodec: "aac"
                                },
                                o = (l[n + 1] & 15) << 8 | l[n + 2],
                                u = n + 3 + o - 4,
                                c = (l[n + 10] & 15) << 8 | l[n + 11];
                            for (n += 12 + c; n < u;) {
                                var h = to(l, n),
                                    f = (l[n + 3] & 15) << 8 | l[n + 4];
                                switch (l[n]) {
                                    case 207:
                                        if (!e) {
                                            Yn("ADTS AAC");
                                            break
                                        }
                                    case 15:
                                        i.audioPid === -1 && (i.audioPid = h);
                                        break;
                                    case 21:
                                        i.id3Pid === -1 && (i.id3Pid = h);
                                        break;
                                    case 219:
                                        if (!e) {
                                            Yn("H.264");
                                            break
                                        }
                                    case 27:
                                        i.videoPid === -1 && (i.videoPid = h, i.segmentVideoCodec = "avc");
                                        break;
                                    case 3:
                                    case 4:
                                        !a.mpeg && !a.mp3 ? V.log("MPEG audio found, not supported in this browser") : i.audioPid === -1 && (i.audioPid = h, i.segmentAudioCodec = "mp3");
                                        break;
                                    case 193:
                                        if (!e) {
                                            Yn("AC-3");
                                            break
                                        }
                                    case 129:
                                        a.ac3 ? i.audioPid === -1 && (i.audioPid = h, i.segmentAudioCodec = "ac3") : V.log("AC-3 audio found, not supported in this browser");
                                        break;
                                    case 6:
                                        if (i.audioPid === -1 && f > 0)
                                            for (var m = n + 5, p = f; p > 2;) {
                                                var E = l[m];
                                                switch (E) {
                                                    case 106:
                                                        a.ac3 !== !0 ? V.log("AC-3 audio found, not supported in this browser for now") : (i.audioPid = h, i.segmentAudioCodec = "ac3");
                                                        break
                                                }
                                                var S = l[m + 1] + 2;
                                                m += S, p -= S
                                            }
                                        break;
                                    case 194:
                                    case 135:
                                        return ns(r, new Error("Unsupported EC-3 in M2TS found")), i;
                                    case 36:
                                        return ns(r, new Error("Unsupported HEVC in M2TS found")), i
                                }
                                n += f + 5
                            }
                            return i
                        }

                        function ns(l, n, a) {
                            V.warn("parsing error: " + n.message), l.emit(_.ERROR, _.ERROR, {
                                type: Ve.MEDIA_ERROR,
                                details: de.FRAG_PARSING_ERROR,
                                fatal: !1,
                                levelRetry: a,
                                error: n,
                                reason: n.message
                            })
                        }

                        function Yn(l) {
                            V.log(l + " with AES-128-CBC encryption found in unencrypted stream")
                        }

                        function fn(l) {
                            var n = 0,
                                a, e, r, i, o, u = l.data;
                            if (!l || l.size === 0) return null;
                            for (; u[0].length < 19 && u.length > 1;) u[0] = Nr(u[0], u[1]), u.splice(1, 1);
                            a = u[0];
                            var c = (a[0] << 16) + (a[1] << 8) + a[2];
                            if (c === 1) {
                                if (e = (a[4] << 8) + a[5], e && e > l.size - 6) return null;
                                var h = a[7];
                                h & 192 && (i = (a[9] & 14) * 536870912 + (a[10] & 255) * 4194304 + (a[11] & 254) * 16384 + (a[12] & 255) * 128 + (a[13] & 254) / 2, h & 64 ? (o = (a[14] & 14) * 536870912 + (a[15] & 255) * 4194304 + (a[16] & 254) * 16384 + (a[17] & 255) * 128 + (a[18] & 254) / 2, i - o > 60 * 9e4 && (V.warn(Math.round((i - o) / 9e4) + "s delta between PTS and DTS, align them"), i = o)) : o = i), r = a[8];
                                var f = r + 9;
                                if (l.size <= f) return null;
                                l.size -= f;
                                for (var m = new Uint8Array(l.size), p = 0, E = u.length; p < E; p++) {
                                    a = u[p];
                                    var S = a.byteLength;
                                    if (f)
                                        if (f > S) {
                                            f -= S;
                                            continue
                                        } else a = a.subarray(f), S -= f, f = 0;
                                    m.set(a, n), n += S
                                }
                                return e && (e -= r + 3), {
                                    data: m,
                                    pts: i,
                                    dts: o,
                                    len: e
                                }
                            }
                            return null
                        }
                        var Fs = function(l) {
                                x(n, l);

                                function n() {
                                    return l.apply(this, arguments) || this
                                }
                                var a = n.prototype;
                                return a.resetInitSegment = function(r, i, o, u) {
                                    l.prototype.resetInitSegment.call(this, r, i, o, u), this._audioTrack = {
                                        container: "audio/mpeg",
                                        type: "audio",
                                        id: 2,
                                        pid: -1,
                                        sequenceNumber: 0,
                                        segmentCodec: "mp3",
                                        samples: [],
                                        manifestCodec: i,
                                        duration: u,
                                        inputTimeScale: 9e4,
                                        dropped: 0
                                    }
                                }, n.probe = function(r) {
                                    if (!r) return !1;
                                    var i = gt(r, 0),
                                        o = (i == null ? void 0 : i.length) || 0;
                                    if (i && r[o] === 11 && r[o + 1] === 119 && kr(i) !== void 0 && Ns(r, o) <= 16) return !1;
                                    for (var u = r.length; o < u; o++)
                                        if (eo(r, o)) return V.log("MPEG Audio sync word found !"), !0;
                                    return !1
                                }, a.canParse = function(r, i) {
                                    return Ss(r, i)
                                }, a.appendFrame = function(r, i, o) {
                                    if (this.basePTS !== null) return ya(r, i, o, this.basePTS, this.frameIndex)
                                }, n
                            }(Xs),
                            ro = function() {
                                function l() {}
                                return l.getSilentFrame = function(a, e) {
                                    switch (a) {
                                        case "mp4a.40.2":
                                            if (e === 1) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                                            if (e === 2) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                                            if (e === 3) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                                            if (e === 4) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                                            if (e === 5) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                                            if (e === 6) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                                            break;
                                        default:
                                            if (e === 1) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                            if (e === 2) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                            if (e === 3) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                            break
                                    }
                                }, l
                            }(),
                            mn = Math.pow(2, 32) - 1,
                            ba = function() {
                                function l() {}
                                return l.init = function() {
                                    l.types = {
                                        avc1: [],
                                        avcC: [],
                                        btrt: [],
                                        dinf: [],
                                        dref: [],
                                        esds: [],
                                        ftyp: [],
                                        hdlr: [],
                                        mdat: [],
                                        mdhd: [],
                                        mdia: [],
                                        mfhd: [],
                                        minf: [],
                                        moof: [],
                                        moov: [],
                                        mp4a: [],
                                        ".mp3": [],
                                        dac3: [],
                                        "ac-3": [],
                                        mvex: [],
                                        mvhd: [],
                                        pasp: [],
                                        sdtp: [],
                                        stbl: [],
                                        stco: [],
                                        stsc: [],
                                        stsd: [],
                                        stsz: [],
                                        stts: [],
                                        tfdt: [],
                                        tfhd: [],
                                        traf: [],
                                        trak: [],
                                        trun: [],
                                        trex: [],
                                        tkhd: [],
                                        vmhd: [],
                                        smhd: []
                                    };
                                    var a;
                                    for (a in l.types) l.types.hasOwnProperty(a) && (l.types[a] = [a.charCodeAt(0), a.charCodeAt(1), a.charCodeAt(2), a.charCodeAt(3)]);
                                    var e = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                                        r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                                    l.HDLR_TYPES = {
                                        video: e,
                                        audio: r
                                    };
                                    var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                                        o = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                                    l.STTS = l.STSC = l.STCO = o, l.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), l.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), l.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), l.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                                    var u = new Uint8Array([105, 115, 111, 109]),
                                        c = new Uint8Array([97, 118, 99, 49]),
                                        h = new Uint8Array([0, 0, 0, 1]);
                                    l.FTYP = l.box(l.types.ftyp, u, h, u, c), l.DINF = l.box(l.types.dinf, l.box(l.types.dref, i))
                                }, l.box = function(a) {
                                    for (var e = 8, r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), o = 1; o < r; o++) i[o - 1] = arguments[o];
                                    for (var u = i.length, c = u; u--;) e += i[u].byteLength;
                                    var h = new Uint8Array(e);
                                    for (h[0] = e >> 24 & 255, h[1] = e >> 16 & 255, h[2] = e >> 8 & 255, h[3] = e & 255, h.set(a, 4), u = 0, e = 8; u < c; u++) h.set(i[u], e), e += i[u].byteLength;
                                    return h
                                }, l.hdlr = function(a) {
                                    return l.box(l.types.hdlr, l.HDLR_TYPES[a])
                                }, l.mdat = function(a) {
                                    return l.box(l.types.mdat, a)
                                }, l.mdhd = function(a, e) {
                                    e *= a;
                                    var r = Math.floor(e / (mn + 1)),
                                        i = Math.floor(e % (mn + 1));
                                    return l.box(l.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, a >> 24 & 255, a >> 16 & 255, a >> 8 & 255, a & 255, r >> 24, r >> 16 & 255, r >> 8 & 255, r & 255, i >> 24, i >> 16 & 255, i >> 8 & 255, i & 255, 85, 196, 0, 0]))
                                }, l.mdia = function(a) {
                                    return l.box(l.types.mdia, l.mdhd(a.timescale, a.duration), l.hdlr(a.type), l.minf(a))
                                }, l.mfhd = function(a) {
                                    return l.box(l.types.mfhd, new Uint8Array([0, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, a & 255]))
                                }, l.minf = function(a) {
                                    return a.type === "audio" ? l.box(l.types.minf, l.box(l.types.smhd, l.SMHD), l.DINF, l.stbl(a)) : l.box(l.types.minf, l.box(l.types.vmhd, l.VMHD), l.DINF, l.stbl(a))
                                }, l.moof = function(a, e, r) {
                                    return l.box(l.types.moof, l.mfhd(a), l.traf(r, e))
                                }, l.moov = function(a) {
                                    for (var e = a.length, r = []; e--;) r[e] = l.trak(a[e]);
                                    return l.box.apply(null, [l.types.moov, l.mvhd(a[0].timescale, a[0].duration)].concat(r).concat(l.mvex(a)))
                                }, l.mvex = function(a) {
                                    for (var e = a.length, r = []; e--;) r[e] = l.trex(a[e]);
                                    return l.box.apply(null, [l.types.mvex].concat(r))
                                }, l.mvhd = function(a, e) {
                                    e *= a;
                                    var r = Math.floor(e / (mn + 1)),
                                        i = Math.floor(e % (mn + 1)),
                                        o = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, a >> 24 & 255, a >> 16 & 255, a >> 8 & 255, a & 255, r >> 24, r >> 16 & 255, r >> 8 & 255, r & 255, i >> 24, i >> 16 & 255, i >> 8 & 255, i & 255, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                                    return l.box(l.types.mvhd, o)
                                }, l.sdtp = function(a) {
                                    var e = a.samples || [],
                                        r = new Uint8Array(4 + e.length),
                                        i, o;
                                    for (i = 0; i < e.length; i++) o = e[i].flags, r[i + 4] = o.dependsOn << 4 | o.isDependedOn << 2 | o.hasRedundancy;
                                    return l.box(l.types.sdtp, r)
                                }, l.stbl = function(a) {
                                    return l.box(l.types.stbl, l.stsd(a), l.box(l.types.stts, l.STTS), l.box(l.types.stsc, l.STSC), l.box(l.types.stsz, l.STSZ), l.box(l.types.stco, l.STCO))
                                }, l.avc1 = function(a) {
                                    var e = [],
                                        r = [],
                                        i, o, u;
                                    for (i = 0; i < a.sps.length; i++) o = a.sps[i], u = o.byteLength, e.push(u >>> 8 & 255), e.push(u & 255), e = e.concat(Array.prototype.slice.call(o));
                                    for (i = 0; i < a.pps.length; i++) o = a.pps[i], u = o.byteLength, r.push(u >>> 8 & 255), r.push(u & 255), r = r.concat(Array.prototype.slice.call(o));
                                    var c = l.box(l.types.avcC, new Uint8Array([1, e[3], e[4], e[5], 255, 224 | a.sps.length].concat(e).concat([a.pps.length]).concat(r))),
                                        h = a.width,
                                        f = a.height,
                                        m = a.pixelRatio[0],
                                        p = a.pixelRatio[1];
                                    return l.box(l.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, h >> 8 & 255, h & 255, f >> 8 & 255, f & 255, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), c, l.box(l.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), l.box(l.types.pasp, new Uint8Array([m >> 24, m >> 16 & 255, m >> 8 & 255, m & 255, p >> 24, p >> 16 & 255, p >> 8 & 255, p & 255])))
                                }, l.esds = function(a) {
                                    var e = a.config.length;
                                    return new Uint8Array([0, 0, 0, 0, 3, 23 + e, 0, 1, 0, 4, 15 + e, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([e]).concat(a.config).concat([6, 1, 2]))
                                }, l.audioStsd = function(a) {
                                    var e = a.samplerate;
                                    return new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, a.channelCount, 0, 16, 0, 0, 0, 0, e >> 8 & 255, e & 255, 0, 0])
                                }, l.mp4a = function(a) {
                                    return l.box(l.types.mp4a, l.audioStsd(a), l.box(l.types.esds, l.esds(a)))
                                }, l.mp3 = function(a) {
                                    return l.box(l.types[".mp3"], l.audioStsd(a))
                                }, l.ac3 = function(a) {
                                    return l.box(l.types["ac-3"], l.audioStsd(a), l.box(l.types.dac3, a.config))
                                }, l.stsd = function(a) {
                                    return a.type === "audio" ? a.segmentCodec === "mp3" && a.codec === "mp3" ? l.box(l.types.stsd, l.STSD, l.mp3(a)) : a.segmentCodec === "ac3" ? l.box(l.types.stsd, l.STSD, l.ac3(a)) : l.box(l.types.stsd, l.STSD, l.mp4a(a)) : l.box(l.types.stsd, l.STSD, l.avc1(a))
                                }, l.tkhd = function(a) {
                                    var e = a.id,
                                        r = a.duration * a.timescale,
                                        i = a.width,
                                        o = a.height,
                                        u = Math.floor(r / (mn + 1)),
                                        c = Math.floor(r % (mn + 1));
                                    return l.box(l.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, e & 255, 0, 0, 0, 0, u >> 24, u >> 16 & 255, u >> 8 & 255, u & 255, c >> 24, c >> 16 & 255, c >> 8 & 255, c & 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, i >> 8 & 255, i & 255, 0, 0, o >> 8 & 255, o & 255, 0, 0]))
                                }, l.traf = function(a, e) {
                                    var r = l.sdtp(a),
                                        i = a.id,
                                        o = Math.floor(e / (mn + 1)),
                                        u = Math.floor(e % (mn + 1));
                                    return l.box(l.types.traf, l.box(l.types.tfhd, new Uint8Array([0, 0, 0, 0, i >> 24, i >> 16 & 255, i >> 8 & 255, i & 255])), l.box(l.types.tfdt, new Uint8Array([1, 0, 0, 0, o >> 24, o >> 16 & 255, o >> 8 & 255, o & 255, u >> 24, u >> 16 & 255, u >> 8 & 255, u & 255])), l.trun(a, r.length + 16 + 20 + 8 + 16 + 8 + 8), r)
                                }, l.trak = function(a) {
                                    return a.duration = a.duration || 4294967295, l.box(l.types.trak, l.tkhd(a), l.mdia(a))
                                }, l.trex = function(a) {
                                    var e = a.id;
                                    return l.box(l.types.trex, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, e & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                                }, l.trun = function(a, e) {
                                    var r = a.samples || [],
                                        i = r.length,
                                        o = 12 + 16 * i,
                                        u = new Uint8Array(o),
                                        c, h, f, m, p, E;
                                    for (e += 8 + o, u.set([a.type === "video" ? 1 : 0, 0, 15, 1, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, i & 255, e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, e & 255], 0), c = 0; c < i; c++) h = r[c], f = h.duration, m = h.size, p = h.flags, E = h.cts, u.set([f >>> 24 & 255, f >>> 16 & 255, f >>> 8 & 255, f & 255, m >>> 24 & 255, m >>> 16 & 255, m >>> 8 & 255, m & 255, p.isLeading << 2 | p.dependsOn, p.isDependedOn << 6 | p.hasRedundancy << 4 | p.paddingValue << 1 | p.isNonSync, p.degradPrio & 61440, p.degradPrio & 15, E >>> 24 & 255, E >>> 16 & 255, E >>> 8 & 255, E & 255], 12 + 16 * c);
                                    return l.box(l.types.trun, u)
                                }, l.initSegment = function(a) {
                                    l.types || l.init();
                                    var e = l.moov(a),
                                        r = Nr(l.FTYP, e);
                                    return r
                                }, l
                            }();
                        ba.types = void 0, ba.HDLR_TYPES = void 0, ba.STTS = void 0, ba.STSC = void 0, ba.STCO = void 0, ba.STSZ = void 0, ba.VMHD = void 0, ba.SMHD = void 0, ba.STSD = void 0, ba.FTYP = void 0, ba.DINF = void 0;
                        var Bs = 9e4;

                        function _o(l, n, a, e) {
                            a === void 0 && (a = 1), e === void 0 && (e = !1);
                            var r = l * n * a;
                            return e ? Math.round(r) : r
                        }

                        function zo(l, n, a, e) {
                            return a === void 0 && (a = 1), e === void 0 && (e = !1), _o(l, n, 1 / a, e)
                        }

                        function qn(l, n) {
                            return n === void 0 && (n = !1), _o(l, 1e3, 1 / Bs, n)
                        }

                        function Ll(l, n) {
                            return n === void 0 && (n = 1), _o(l, Bs, 1 / n)
                        }
                        var Hs = 10 * 1e3,
                            io = 1024,
                            tu = 1152,
                            So = 1536,
                            ks = null,
                            ko = null,
                            Vs = function() {
                                function l(a, e, r, i) {
                                    if (this.observer = void 0, this.config = void 0, this.typeSupported = void 0, this.ISGenerated = !1, this._initPTS = null, this._initDTS = null, this.nextAvcDts = null, this.nextAudioPts = null, this.videoSampleDuration = null, this.isAudioContiguous = !1, this.isVideoContiguous = !1, this.videoTrackConfig = void 0, this.observer = a, this.config = e, this.typeSupported = r, this.ISGenerated = !1, ks === null) {
                                        var o = navigator.userAgent || "",
                                            u = o.match(/Chrome\/(\d+)/i);
                                        ks = u ? parseInt(u[1]) : 0
                                    }
                                    if (ko === null) {
                                        var c = navigator.userAgent.match(/Safari\/(\d+)/i);
                                        ko = c ? parseInt(c[1]) : 0
                                    }
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.config = this.videoTrackConfig = this._initPTS = this._initDTS = null
                                }, n.resetTimeStamp = function(e) {
                                    V.log("[mp4-remuxer]: initPTS & initDTS reset"), this._initPTS = this._initDTS = e
                                }, n.resetNextTimestamp = function() {
                                    V.log("[mp4-remuxer]: reset next timestamp"), this.isVideoContiguous = !1, this.isAudioContiguous = !1
                                }, n.resetInitSegment = function() {
                                    V.log("[mp4-remuxer]: ISGenerated flag reset"), this.ISGenerated = !1, this.videoTrackConfig = void 0
                                }, n.getVideoStartPts = function(e) {
                                    var r = !1,
                                        i = e[0].pts,
                                        o = e.reduce(function(u, c) {
                                            var h = c.pts,
                                                f = h - u;
                                            return f < -4294967296 && (r = !0, h = Ga(h, i), f = h - u), f > 0 ? u : h
                                        }, i);
                                    return r && V.debug("PTS rollover detected"), o
                                }, n.remux = function(e, r, i, o, u, c, h, f) {
                                    var m, p, E, S, L, I, O = u,
                                        U = u,
                                        G = e.pid > -1,
                                        ee = r.pid > -1,
                                        te = r.samples.length,
                                        _e = e.samples.length > 0,
                                        me = h && te > 0 || te > 1,
                                        ae = (!G || _e) && (!ee || me) || this.ISGenerated || h;
                                    if (ae) {
                                        if (this.ISGenerated) {
                                            var Se, ve, Ne, Ie, kt = this.videoTrackConfig;
                                            kt && (r.width !== kt.width || r.height !== kt.height || ((Se = r.pixelRatio) == null ? void 0 : Se[0]) !== ((ve = kt.pixelRatio) == null ? void 0 : ve[0]) || ((Ne = r.pixelRatio) == null ? void 0 : Ne[1]) !== ((Ie = kt.pixelRatio) == null ? void 0 : Ie[1])) && this.resetInitSegment()
                                        } else E = this.generateIS(e, r, u, c);
                                        var zt = this.isVideoContiguous,
                                            lr = -1,
                                            Fr;
                                        if (me && (lr = ao(r.samples), !zt && this.config.forceKeyFrameOnDiscontinuity))
                                            if (I = !0, lr > 0) {
                                                V.warn("[mp4-remuxer]: Dropped " + lr + " out of " + te + " video samples due to a missing keyframe");
                                                var Br = this.getVideoStartPts(r.samples);
                                                r.samples = r.samples.slice(lr), r.dropped += lr, U += (r.samples[0].pts - Br) / r.inputTimeScale, Fr = U
                                            } else lr === -1 && (V.warn("[mp4-remuxer]: No keyframe found out of " + te + " video samples"), I = !1);
                                        if (this.ISGenerated) {
                                            if (_e && me) {
                                                var hi = this.getVideoStartPts(r.samples),
                                                    ei = Ga(e.samples[0].pts, hi) - hi,
                                                    Hr = ei / r.inputTimeScale;
                                                O += Math.max(0, Hr), U += Math.max(0, -Hr)
                                            }
                                            if (_e) {
                                                if (e.samplerate || (V.warn("[mp4-remuxer]: regenerate InitSegment as audio detected"), E = this.generateIS(e, r, u, c)), p = this.remuxAudio(e, O, this.isAudioContiguous, c, ee || me || f === H.AUDIO ? U : void 0), me) {
                                                    var Zi = p ? p.endPTS - p.startPTS : 0;
                                                    r.inputTimeScale || (V.warn("[mp4-remuxer]: regenerate InitSegment as video detected"), E = this.generateIS(e, r, u, c)), m = this.remuxVideo(r, U, zt, Zi)
                                                }
                                            } else me && (m = this.remuxVideo(r, U, zt, 0));
                                            m && (m.firstKeyFrame = lr, m.independent = lr !== -1, m.firstKeyFramePTS = Fr)
                                        }
                                    }
                                    return this.ISGenerated && this._initPTS && this._initDTS && (i.samples.length && (L = Xo(i, u, this._initPTS, this._initDTS)), o.samples.length && (S = $n(o, u, this._initPTS))), {
                                        audio: p,
                                        video: m,
                                        initSegment: E,
                                        independent: I,
                                        text: S,
                                        id3: L
                                    }
                                }, n.generateIS = function(e, r, i, o) {
                                    var u = e.samples,
                                        c = r.samples,
                                        h = this.typeSupported,
                                        f = {},
                                        m = this._initPTS,
                                        p = !m || o,
                                        E = "audio/mp4",
                                        S, L, I;
                                    if (p && (S = L = 1 / 0), e.config && u.length) {
                                        switch (e.timescale = e.samplerate, e.segmentCodec) {
                                            case "mp3":
                                                h.mpeg ? (E = "audio/mpeg", e.codec = "") : h.mp3 && (e.codec = "mp3");
                                                break;
                                            case "ac3":
                                                e.codec = "ac-3";
                                                break
                                        }
                                        f.audio = {
                                            id: "audio",
                                            container: E,
                                            codec: e.codec,
                                            initSegment: e.segmentCodec === "mp3" && h.mpeg ? new Uint8Array(0) : ba.initSegment([e]),
                                            metadata: {
                                                channelCount: e.channelCount
                                            }
                                        }, p && (I = e.inputTimeScale, !m || I !== m.timescale ? S = L = u[0].pts - Math.round(I * i) : p = !1)
                                    }
                                    if (r.sps && r.pps && c.length) {
                                        if (r.timescale = r.inputTimeScale, f.video = {
                                                id: "main",
                                                container: "video/mp4",
                                                codec: r.codec,
                                                initSegment: ba.initSegment([r]),
                                                metadata: {
                                                    width: r.width,
                                                    height: r.height
                                                }
                                            }, p)
                                            if (I = r.inputTimeScale, !m || I !== m.timescale) {
                                                var O = this.getVideoStartPts(c),
                                                    U = Math.round(I * i);
                                                L = Math.min(L, Ga(c[0].dts, O) - U), S = Math.min(S, O - U)
                                            } else p = !1;
                                        this.videoTrackConfig = {
                                            width: r.width,
                                            height: r.height,
                                            pixelRatio: r.pixelRatio
                                        }
                                    }
                                    if (Object.keys(f).length) return this.ISGenerated = !0, p ? (this._initPTS = {
                                        baseTime: S,
                                        timescale: I
                                    }, this._initDTS = {
                                        baseTime: L,
                                        timescale: I
                                    }) : S = I = void 0, {
                                        tracks: f,
                                        initPTS: S,
                                        timescale: I
                                    }
                                }, n.remuxVideo = function(e, r, i, o) {
                                    var u = e.inputTimeScale,
                                        c = e.samples,
                                        h = [],
                                        f = c.length,
                                        m = this._initPTS,
                                        p = this.nextAvcDts,
                                        E = 8,
                                        S = this.videoSampleDuration,
                                        L, I, O = Number.POSITIVE_INFINITY,
                                        U = Number.NEGATIVE_INFINITY,
                                        G = !1;
                                    if (!i || p === null) {
                                        var ee = r * u,
                                            te = c[0].pts - Ga(c[0].dts, c[0].pts);
                                        ks && p !== null && Math.abs(ee - te - p) < 15e3 ? i = !0 : p = ee - te
                                    }
                                    for (var _e = m.baseTime * u / m.timescale, me = 0; me < f; me++) {
                                        var ae = c[me];
                                        ae.pts = Ga(ae.pts - _e, p), ae.dts = Ga(ae.dts - _e, p), ae.dts < c[me > 0 ? me - 1 : me].dts && (G = !0)
                                    }
                                    G && c.sort(function(fl, fd) {
                                        var qh = fl.dts - fd.dts,
                                            Lc = fl.pts - fd.pts;
                                        return qh || Lc
                                    }), L = c[0].dts, I = c[c.length - 1].dts;
                                    var Se = I - L,
                                        ve = Se ? Math.round(Se / (f - 1)) : S || e.inputTimeScale / 30;
                                    if (i) {
                                        var Ne = L - p,
                                            Ie = Ne > ve,
                                            kt = Ne < -1;
                                        if ((Ie || kt) && (Ie ? V.warn("AVC: " + qn(Ne, !0) + " ms (" + Ne + "dts) hole between fragments detected at " + r.toFixed(3)) : V.warn("AVC: " + qn(-Ne, !0) + " ms (" + Ne + "dts) overlapping between fragments detected at " + r.toFixed(3)), !kt || p >= c[0].pts || ks)) {
                                            L = p;
                                            var zt = c[0].pts - Ne;
                                            if (Ie) c[0].dts = L, c[0].pts = zt;
                                            else
                                                for (var lr = 0; lr < c.length && !(c[lr].dts > zt); lr++) c[lr].dts -= Ne, c[lr].pts -= Ne;
                                            V.log("Video: Initial PTS/DTS adjusted: " + qn(zt, !0) + "/" + qn(L, !0) + ", delta: " + qn(Ne, !0) + " ms")
                                        }
                                    }
                                    L = Math.max(0, L);
                                    for (var Fr = 0, Br = 0, hi = L, ei = 0; ei < f; ei++) {
                                        for (var Hr = c[ei], Zi = Hr.units, ir = Zi.length, Ii = 0, Fi = 0; Fi < ir; Fi++) Ii += Zi[Fi].data.length;
                                        Br += Ii, Fr += ir, Hr.length = Ii, Hr.dts < hi ? (Hr.dts = hi, hi += ve / 4 | 0 || 1) : hi = Hr.dts, O = Math.min(Hr.pts, O), U = Math.max(Hr.pts, U)
                                    }
                                    I = c[f - 1].dts;
                                    var wa = Br + 4 * Fr + 8,
                                        Ci;
                                    try {
                                        Ci = new Uint8Array(wa)
                                    } catch (fl) {
                                        this.observer.emit(_.ERROR, _.ERROR, {
                                            type: Ve.MUX_ERROR,
                                            details: de.REMUX_ALLOC_ERROR,
                                            fatal: !1,
                                            error: fl,
                                            bytes: wa,
                                            reason: "fail allocating video mdat " + wa
                                        });
                                        return
                                    }
                                    var Bi = new DataView(Ci.buffer);
                                    Bi.setUint32(0, wa), Ci.set(ba.types.mdat, 4);
                                    for (var on = !1, Na = Number.POSITIVE_INFINITY, pi = Number.POSITIVE_INFINITY, Ra = Number.NEGATIVE_INFINITY, Ua = Number.NEGATIVE_INFINITY, Hi = 0; Hi < f; Hi++) {
                                        for (var Ta = c[Hi], Wi = Ta.units, An = 0, Aa = 0, $s = Wi.length; Aa < $s; Aa++) {
                                            var Yl = Wi[Aa],
                                                vs = Yl.data,
                                                xo = Yl.data.byteLength;
                                            Bi.setUint32(E, xo), E += 4, Ci.set(vs, E), E += xo, An += 4 + xo
                                        }
                                        var ps = void 0;
                                        if (Hi < f - 1) S = c[Hi + 1].dts - Ta.dts, ps = c[Hi + 1].pts - Ta.pts;
                                        else {
                                            var dd = this.config,
                                                wu = Hi > 0 ? Ta.dts - c[Hi - 1].dts : ve;
                                            if (ps = Hi > 0 ? Ta.pts - c[Hi - 1].pts : ve, dd.stretchShortVideoTrack && this.nextAudioPts !== null) {
                                                var kc = Math.floor(dd.maxBufferHole * u),
                                                    Ru = (o ? O + o * u : this.nextAudioPts) - Ta.pts;
                                                Ru > kc ? (S = Ru - wu, S < 0 ? S = wu : on = !0, V.log("[mp4-remuxer]: It is approximately " + Ru / 90 + " ms to the next segment; using duration " + S / 90 + " ms for the last video frame.")) : S = wu
                                            } else S = wu
                                        }
                                        var Kh = Math.round(Ta.pts - Ta.dts);
                                        Na = Math.min(Na, S), Ra = Math.max(Ra, S), pi = Math.min(pi, ps), Ua = Math.max(Ua, ps), h.push(new no(Ta.key, S, An, Kh))
                                    }
                                    if (h.length) {
                                        if (ks) {
                                            if (ks < 70) {
                                                var zn = h[0].flags;
                                                zn.dependsOn = 2, zn.isNonSync = 0
                                            }
                                        } else if (ko && Ua - pi < Ra - Na && ve / Ra < .025 && h[0].cts === 0) {
                                            V.warn("Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.");
                                            for (var co = L, Xn = 0, wc = h.length; Xn < wc; Xn++) {
                                                var cd = co + h[Xn].duration,
                                                    Rc = co + h[Xn].cts;
                                                if (Xn < wc - 1) {
                                                    var No = cd + h[Xn + 1].cts;
                                                    h[Xn].duration = No - Rc
                                                } else h[Xn].duration = Xn ? h[Xn - 1].duration : ve;
                                                h[Xn].cts = 0, co = cd
                                            }
                                        }
                                    }
                                    S = on || !S ? ve : S, this.nextAvcDts = p = I + S, this.videoSampleDuration = S, this.isVideoContiguous = !0;
                                    var Uo = ba.moof(e.sequenceNumber++, L, le({}, e, {
                                            samples: h
                                        })),
                                        hd = "video",
                                        Yh = {
                                            data1: Uo,
                                            data2: Ci,
                                            startPTS: O / u,
                                            endPTS: (U + S) / u,
                                            startDTS: L / u,
                                            endDTS: p / u,
                                            type: hd,
                                            hasAudio: !1,
                                            hasVideo: !0,
                                            nb: h.length,
                                            dropped: e.dropped
                                        };
                                    return e.samples = [], e.dropped = 0, Yh
                                }, n.getSamplesPerFrame = function(e) {
                                    switch (e.segmentCodec) {
                                        case "mp3":
                                            return tu;
                                        case "ac3":
                                            return So;
                                        default:
                                            return io
                                    }
                                }, n.remuxAudio = function(e, r, i, o, u) {
                                    var c = e.inputTimeScale,
                                        h = e.samplerate ? e.samplerate : c,
                                        f = c / h,
                                        m = this.getSamplesPerFrame(e),
                                        p = m * f,
                                        E = this._initPTS,
                                        S = e.segmentCodec === "mp3" && this.typeSupported.mpeg,
                                        L = [],
                                        I = u !== void 0,
                                        O = e.samples,
                                        U = S ? 0 : 8,
                                        G = this.nextAudioPts || -1,
                                        ee = r * c,
                                        te = E.baseTime * c / E.timescale;
                                    if (this.isAudioContiguous = i = i || O.length && G > 0 && (o && Math.abs(ee - G) < 9e3 || Math.abs(Ga(O[0].pts - te, ee) - G) < 20 * p), O.forEach(function(Aa) {
                                            Aa.pts = Ga(Aa.pts - te, ee)
                                        }), !i || G < 0) {
                                        if (O = O.filter(function(Aa) {
                                                return Aa.pts >= 0
                                            }), !O.length) return;
                                        u === 0 ? G = 0 : o && !I ? G = Math.max(0, ee) : G = O[0].pts
                                    }
                                    if (e.segmentCodec === "aac")
                                        for (var _e = this.config.maxAudioFramesDrift, me = 0, ae = G; me < O.length; me++) {
                                            var Se = O[me],
                                                ve = Se.pts,
                                                Ne = ve - ae,
                                                Ie = Math.abs(1e3 * Ne / c);
                                            if (Ne <= -_e * p && I) me === 0 && (V.warn("Audio frame @ " + (ve / c).toFixed(3) + "s overlaps nextAudioPts by " + Math.round(1e3 * Ne / c) + " ms."), this.nextAudioPts = G = ae = ve);
                                            else if (Ne >= _e * p && Ie < Hs && I) {
                                                var kt = Math.round(Ne / p);
                                                ae = ve - kt * p, ae < 0 && (kt--, ae += p), me === 0 && (this.nextAudioPts = G = ae), V.warn("[mp4-remuxer]: Injecting " + kt + " audio frame @ " + (ae / c).toFixed(3) + "s due to " + Math.round(1e3 * Ne / c) + " ms gap.");
                                                for (var zt = 0; zt < kt; zt++) {
                                                    var lr = Math.max(ae, 0),
                                                        Fr = ro.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                                                    Fr || (V.log("[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."), Fr = Se.unit.subarray()), O.splice(me, 0, {
                                                        unit: Fr,
                                                        pts: lr
                                                    }), ae += p, me++
                                                }
                                            }
                                            Se.pts = ae, ae += p
                                        }
                                    for (var Br = null, hi = null, ei, Hr = 0, Zi = O.length; Zi--;) Hr += O[Zi].unit.byteLength;
                                    for (var ir = 0, Ii = O.length; ir < Ii; ir++) {
                                        var Fi = O[ir],
                                            wa = Fi.unit,
                                            Ci = Fi.pts;
                                        if (hi !== null) {
                                            var Bi = L[ir - 1];
                                            Bi.duration = Math.round((Ci - hi) / f)
                                        } else if (i && e.segmentCodec === "aac" && (Ci = G), Br = Ci, Hr > 0) {
                                            Hr += U;
                                            try {
                                                ei = new Uint8Array(Hr)
                                            } catch (Aa) {
                                                this.observer.emit(_.ERROR, _.ERROR, {
                                                    type: Ve.MUX_ERROR,
                                                    details: de.REMUX_ALLOC_ERROR,
                                                    fatal: !1,
                                                    error: Aa,
                                                    bytes: Hr,
                                                    reason: "fail allocating audio mdat " + Hr
                                                });
                                                return
                                            }
                                            if (!S) {
                                                var on = new DataView(ei.buffer);
                                                on.setUint32(0, Hr), ei.set(ba.types.mdat, 4)
                                            }
                                        } else return;
                                        ei.set(wa, U);
                                        var Na = wa.byteLength;
                                        U += Na, L.push(new no(!0, m, Na, 0)), hi = Ci
                                    }
                                    var pi = L.length;
                                    if (pi) {
                                        var Ra = L[L.length - 1];
                                        this.nextAudioPts = G = hi + f * Ra.duration;
                                        var Ua = S ? new Uint8Array(0) : ba.moof(e.sequenceNumber++, Br / f, le({}, e, {
                                            samples: L
                                        }));
                                        e.samples = [];
                                        var Hi = Br / c,
                                            Ta = G / c,
                                            Wi = "audio",
                                            An = {
                                                data1: Ua,
                                                data2: ei,
                                                startPTS: Hi,
                                                endPTS: Ta,
                                                startDTS: Hi,
                                                endDTS: Ta,
                                                type: Wi,
                                                hasAudio: !0,
                                                hasVideo: !1,
                                                nb: pi
                                            };
                                        return this.isAudioContiguous = !0, An
                                    }
                                }, n.remuxEmptyAudio = function(e, r, i, o) {
                                    var u = e.inputTimeScale,
                                        c = e.samplerate ? e.samplerate : u,
                                        h = u / c,
                                        f = this.nextAudioPts,
                                        m = this._initDTS,
                                        p = m.baseTime * 9e4 / m.timescale,
                                        E = (f !== null ? f : o.startDTS * u) + p,
                                        S = o.endDTS * u + p,
                                        L = h * io,
                                        I = Math.ceil((S - E) / L),
                                        O = ro.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                                    if (V.warn("[mp4-remuxer]: remux empty Audio"), !O) {
                                        V.trace("[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec");
                                        return
                                    }
                                    for (var U = [], G = 0; G < I; G++) {
                                        var ee = E + G * L;
                                        U.push({
                                            unit: O,
                                            pts: ee,
                                            dts: ee
                                        })
                                    }
                                    return e.samples = U, this.remuxAudio(e, r, i, !1)
                                }, l
                            }();

                        function Ga(l, n) {
                            var a;
                            if (n === null) return l;
                            for (n < l ? a = -8589934592 : a = 8589934592; Math.abs(l - n) > 4294967296;) l += a;
                            return l
                        }

                        function ao(l) {
                            for (var n = 0; n < l.length; n++)
                                if (l[n].key) return n;
                            return -1
                        }

                        function Xo(l, n, a, e) {
                            var r = l.samples.length;
                            if (r) {
                                for (var i = l.inputTimeScale, o = 0; o < r; o++) {
                                    var u = l.samples[o];
                                    u.pts = Ga(u.pts - a.baseTime * i / a.timescale, n * i) / i, u.dts = Ga(u.dts - e.baseTime * i / e.timescale, n * i) / i
                                }
                                var c = l.samples;
                                return l.samples = [], {
                                    samples: c
                                }
                            }
                        }

                        function $n(l, n, a) {
                            var e = l.samples.length;
                            if (e) {
                                for (var r = l.inputTimeScale, i = 0; i < e; i++) {
                                    var o = l.samples[i];
                                    o.pts = Ga(o.pts - a.baseTime * r / a.timescale, n * r) / r
                                }
                                l.samples.sort(function(c, h) {
                                    return c.pts - h.pts
                                });
                                var u = l.samples;
                                return l.samples = [], {
                                    samples: u
                                }
                            }
                        }
                        var no = function(n, a, e, r) {
                                this.size = void 0, this.duration = void 0, this.cts = void 0, this.flags = void 0, this.duration = a, this.size = e, this.cts = r, this.flags = {
                                    isLeading: 0,
                                    isDependedOn: 0,
                                    hasRedundancy: 0,
                                    degradPrio: 0,
                                    dependsOn: n ? 2 : 1,
                                    isNonSync: n ? 0 : 1
                                }
                            },
                            ss = function() {
                                function l() {
                                    this.emitInitSegment = !1, this.audioCodec = void 0, this.videoCodec = void 0, this.initData = void 0, this.initPTS = null, this.initTracks = void 0, this.lastEndTime = null
                                }
                                var n = l.prototype;
                                return n.destroy = function() {}, n.resetTimeStamp = function(e) {
                                    this.initPTS = e, this.lastEndTime = null
                                }, n.resetNextTimestamp = function() {
                                    this.lastEndTime = null
                                }, n.resetInitSegment = function(e, r, i, o) {
                                    this.audioCodec = r, this.videoCodec = i, this.generateInitSegment(_n(e, o)), this.emitInitSegment = !0
                                }, n.generateInitSegment = function(e) {
                                    var r = this.audioCodec,
                                        i = this.videoCodec;
                                    if (!(e != null && e.byteLength)) {
                                        this.initTracks = void 0, this.initData = void 0;
                                        return
                                    }
                                    var o = this.initData = Qi(e);
                                    o.audio && (r = Ws(o.audio, Xt.AUDIO)), o.video && (i = Ws(o.video, Xt.VIDEO));
                                    var u = {};
                                    o.audio && o.video ? u.audiovideo = {
                                        container: "video/mp4",
                                        codec: r + "," + i,
                                        initSegment: e,
                                        id: "main"
                                    } : o.audio ? u.audio = {
                                        container: "audio/mp4",
                                        codec: r,
                                        initSegment: e,
                                        id: "audio"
                                    } : o.video ? u.video = {
                                        container: "video/mp4",
                                        codec: i,
                                        initSegment: e,
                                        id: "main"
                                    } : V.warn("[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."), this.initTracks = u
                                }, n.remux = function(e, r, i, o, u, c) {
                                    var h, f, m = this.initPTS,
                                        p = this.lastEndTime,
                                        E = {
                                            audio: void 0,
                                            video: void 0,
                                            text: o,
                                            id3: i,
                                            initSegment: void 0
                                        };
                                    Ge(p) || (p = this.lastEndTime = u || 0);
                                    var S = r.samples;
                                    if (!(S != null && S.length)) return E;
                                    var L = {
                                            initPTS: void 0,
                                            timescale: 1
                                        },
                                        I = this.initData;
                                    if ((h = I) != null && h.length || (this.generateInitSegment(S), I = this.initData), !((f = I) != null && f.length)) return V.warn("[passthrough-remuxer.ts]: Failed to generate initSegment."), E;
                                    this.emitInitSegment && (L.tracks = this.initTracks, this.emitInitSegment = !1);
                                    var O = Pi(S, I),
                                        U = Hn(I, S),
                                        G = U === null ? u : U;
                                    (an(m, G, u, O) || L.timescale !== m.timescale && c) && (L.initPTS = G - u, m && m.timescale === 1 && V.warn("Adjusting initPTS by " + (L.initPTS - m.baseTime)), this.initPTS = m = {
                                        baseTime: L.initPTS,
                                        timescale: 1
                                    });
                                    var ee = e ? G - m.baseTime / m.timescale : p,
                                        te = ee + O;
                                    Ja(I, S, m.baseTime / m.timescale), O > 0 ? this.lastEndTime = te : (V.warn("Duration parsed from mp4 should be greater than zero"), this.resetNextTimestamp());
                                    var _e = !!I.audio,
                                        me = !!I.video,
                                        ae = "";
                                    _e && (ae += "audio"), me && (ae += "video");
                                    var Se = {
                                        data1: S,
                                        startPTS: ee,
                                        startDTS: ee,
                                        endPTS: te,
                                        endDTS: te,
                                        type: ae,
                                        hasAudio: _e,
                                        hasVideo: me,
                                        nb: 1,
                                        dropped: 0
                                    };
                                    return E.audio = Se.type === "audio" ? Se : void 0, E.video = Se.type !== "audio" ? Se : void 0, E.initSegment = L, E.id3 = Xo(i, u, m, m), o.samples.length && (E.text = $n(o, u, m)), E
                                }, l
                            }();

                        function an(l, n, a, e) {
                            if (l === null) return !0;
                            var r = Math.max(e, 1),
                                i = n - l.baseTime / l.timescale;
                            return Math.abs(i - a) > r
                        }

                        function Ws(l, n) {
                            var a = l == null ? void 0 : l.codec;
                            if (a && a.length > 4) return a;
                            if (n === Xt.AUDIO) {
                                if (a === "ec-3" || a === "ac-3" || a === "alac") return a;
                                if (a === "fLaC" || a === "Opus") {
                                    var e = !1;
                                    return Vi(a, e)
                                }
                                var r = "mp4a.40.5";
                                return V.info('Parsed audio codec "' + a + '" or audio object type not handled. Using "' + r + '"'), r
                            }
                            return V.warn('Unhandled video codec "' + a + '"'), a === "hvc1" || a === "hev1" ? "hvc1.1.6.L120.90" : a === "av01" ? "av01.0.04M.08" : "avc1.42e01e"
                        }
                        var Dn;
                        try {
                            Dn = self.performance.now.bind(self.performance)
                        } catch (l) {
                            V.debug("Unable to use Performance API on this environment"), Dn = La == null ? void 0 : La.Date.now
                        }
                        var Gs = [{
                            demux: In,
                            remux: ss
                        }, {
                            demux: Ao,
                            remux: Vs
                        }, {
                            demux: xs,
                            remux: Vs
                        }, {
                            demux: Fs,
                            remux: Vs
                        }];
                        Gs.splice(2, 0, {
                            demux: Rl,
                            remux: Vs
                        });
                        var so = function() {
                            function l(a, e, r, i, o) {
                                this.async = !1, this.observer = void 0, this.typeSupported = void 0, this.config = void 0, this.vendor = void 0, this.id = void 0, this.demuxer = void 0, this.remuxer = void 0, this.decrypter = void 0, this.probe = void 0, this.decryptionPromise = null, this.transmuxConfig = void 0, this.currentTransmuxState = void 0, this.observer = a, this.typeSupported = e, this.config = r, this.vendor = i, this.id = o
                            }
                            var n = l.prototype;
                            return n.configure = function(e) {
                                this.transmuxConfig = e, this.decrypter && this.decrypter.reset()
                            }, n.push = function(e, r, i, o) {
                                var u = this,
                                    c = i.transmuxing;
                                c.executeStart = Dn();
                                var h = new Uint8Array(e),
                                    f = this.currentTransmuxState,
                                    m = this.transmuxConfig;
                                o && (this.currentTransmuxState = o);
                                var p = o || f,
                                    E = p.contiguous,
                                    S = p.discontinuity,
                                    L = p.trackSwitch,
                                    I = p.accurateTimeOffset,
                                    O = p.timeOffset,
                                    U = p.initSegmentChange,
                                    G = m.audioCodec,
                                    ee = m.videoCodec,
                                    te = m.defaultInitPts,
                                    _e = m.duration,
                                    me = m.initSegmentData,
                                    ae = Yu(h, r);
                                if (ae && ae.method === "AES-128") {
                                    var Se = this.getDecrypter();
                                    if (Se.isSync()) {
                                        var ve = Se.softwareDecrypt(h, ae.key.buffer, ae.iv.buffer),
                                            Ne = i.part > -1;
                                        if (Ne && (ve = Se.flush()), !ve) return c.executeEnd = Dn(), Ks(i);
                                        h = new Uint8Array(ve)
                                    } else return this.decryptionPromise = Se.webCryptoDecrypt(h, ae.key.buffer, ae.iv.buffer).then(function(Fr) {
                                        var Br = u.push(Fr, null, i);
                                        return u.decryptionPromise = null, Br
                                    }), this.decryptionPromise
                                }
                                var Ie = this.needsProbing(S, L);
                                if (Ie) {
                                    var kt = this.configureTransmuxer(h);
                                    if (kt) return V.warn("[transmuxer] " + kt.message), this.observer.emit(_.ERROR, _.ERROR, {
                                        type: Ve.MEDIA_ERROR,
                                        details: de.FRAG_PARSING_ERROR,
                                        fatal: !1,
                                        error: kt,
                                        reason: kt.message
                                    }), c.executeEnd = Dn(), Ks(i)
                                }(S || L || U || Ie) && this.resetInitSegment(me, G, ee, _e, r), (S || U || Ie) && this.resetInitialTimestamp(te), E || this.resetContiguity();
                                var zt = this.transmux(h, ae, O, I, i),
                                    lr = this.currentTransmuxState;
                                return lr.contiguous = !0, lr.discontinuity = !1, lr.trackSwitch = !1, c.executeEnd = Dn(), zt
                            }, n.flush = function(e) {
                                var r = this,
                                    i = e.transmuxing;
                                i.executeStart = Dn();
                                var o = this.decrypter,
                                    u = this.currentTransmuxState,
                                    c = this.decryptionPromise;
                                if (c) return c.then(function() {
                                    return r.flush(e)
                                });
                                var h = [],
                                    f = u.timeOffset;
                                if (o) {
                                    var m = o.flush();
                                    m && h.push(this.push(m, null, e))
                                }
                                var p = this.demuxer,
                                    E = this.remuxer;
                                if (!p || !E) return i.executeEnd = Dn(), [Ks(e)];
                                var S = p.flush(f);
                                return Xa(S) ? S.then(function(L) {
                                    return r.flushRemux(h, L, e), h
                                }) : (this.flushRemux(h, S, e), h)
                            }, n.flushRemux = function(e, r, i) {
                                var o = r.audioTrack,
                                    u = r.videoTrack,
                                    c = r.id3Track,
                                    h = r.textTrack,
                                    f = this.currentTransmuxState,
                                    m = f.accurateTimeOffset,
                                    p = f.timeOffset;
                                V.log("[transmuxer.ts]: Flushed fragment " + i.sn + (i.part > -1 ? " p: " + i.part : "") + " of level " + i.level);
                                var E = this.remuxer.remux(o, u, c, h, p, m, !0, this.id);
                                e.push({
                                    remuxResult: E,
                                    chunkMeta: i
                                }), i.transmuxing.executeEnd = Dn()
                            }, n.resetInitialTimestamp = function(e) {
                                var r = this.demuxer,
                                    i = this.remuxer;
                                !r || !i || (r.resetTimeStamp(e), i.resetTimeStamp(e))
                            }, n.resetContiguity = function() {
                                var e = this.demuxer,
                                    r = this.remuxer;
                                !e || !r || (e.resetContiguity(), r.resetNextTimestamp())
                            }, n.resetInitSegment = function(e, r, i, o, u) {
                                var c = this.demuxer,
                                    h = this.remuxer;
                                !c || !h || (c.resetInitSegment(e, r, i, o), h.resetInitSegment(e, r, i, u))
                            }, n.destroy = function() {
                                this.demuxer && (this.demuxer.destroy(), this.demuxer = void 0), this.remuxer && (this.remuxer.destroy(), this.remuxer = void 0)
                            }, n.transmux = function(e, r, i, o, u) {
                                var c;
                                return r && r.method === "SAMPLE-AES" ? c = this.transmuxSampleAes(e, r, i, o, u) : c = this.transmuxUnencrypted(e, i, o, u), c
                            }, n.transmuxUnencrypted = function(e, r, i, o) {
                                var u = this.demuxer.demux(e, r, !1, !this.config.progressive),
                                    c = u.audioTrack,
                                    h = u.videoTrack,
                                    f = u.id3Track,
                                    m = u.textTrack,
                                    p = this.remuxer.remux(c, h, f, m, r, i, !1, this.id);
                                return {
                                    remuxResult: p,
                                    chunkMeta: o
                                }
                            }, n.transmuxSampleAes = function(e, r, i, o, u) {
                                var c = this;
                                return this.demuxer.demuxSampleAes(e, r, i).then(function(h) {
                                    var f = c.remuxer.remux(h.audioTrack, h.videoTrack, h.id3Track, h.textTrack, i, o, !1, c.id);
                                    return {
                                        remuxResult: f,
                                        chunkMeta: u
                                    }
                                })
                            }, n.configureTransmuxer = function(e) {
                                for (var r = this.config, i = this.observer, o = this.typeSupported, u = this.vendor, c, h = 0, f = Gs.length; h < f; h++) {
                                    var m;
                                    if ((m = Gs[h].demux) != null && m.probe(e)) {
                                        c = Gs[h];
                                        break
                                    }
                                }
                                if (!c) return new Error("Failed to find demuxer by probing fragment data");
                                var p = this.demuxer,
                                    E = this.remuxer,
                                    S = c.remux,
                                    L = c.demux;
                                (!E || !(E instanceof S)) && (this.remuxer = new S(i, r, o, u)), (!p || !(p instanceof L)) && (this.demuxer = new L(i, r, o), this.probe = L.probe)
                            }, n.needsProbing = function(e, r) {
                                return !this.demuxer || !this.remuxer || e || r
                            }, n.getDecrypter = function() {
                                var e = this.decrypter;
                                return e || (e = this.decrypter = new Ko(this.config)), e
                            }, l
                        }();

                        function Yu(l, n) {
                            var a = null;
                            return l.byteLength > 0 && (n == null ? void 0 : n.key) != null && n.iv !== null && n.method != null && (a = n), a
                        }
                        var Ks = function(n) {
                            return {
                                remuxResult: {},
                                chunkMeta: n
                            }
                        };

                        function Xa(l) {
                            return "then" in l && l.then instanceof Function
                        }
                        var Zo = function(n, a, e, r, i) {
                                this.audioCodec = void 0, this.videoCodec = void 0, this.initSegmentData = void 0, this.duration = void 0, this.defaultInitPts = void 0, this.audioCodec = n, this.videoCodec = a, this.initSegmentData = e, this.duration = r, this.defaultInitPts = i || null
                            },
                            oo = function(n, a, e, r, i, o) {
                                this.discontinuity = void 0, this.contiguous = void 0, this.accurateTimeOffset = void 0, this.trackSwitch = void 0, this.timeOffset = void 0, this.initSegmentChange = void 0, this.discontinuity = n, this.contiguous = a, this.accurateTimeOffset = e, this.trackSwitch = r, this.timeOffset = i, this.initSegmentChange = o
                            },
                            Qo = {
                                exports: {}
                            };
                        (function(l) {
                            var n = Object.prototype.hasOwnProperty,
                                a = "~";

                            function e() {}
                            Object.create && (e.prototype = Object.create(null), new e().__proto__ || (a = !1));

                            function r(c, h, f) {
                                this.fn = c, this.context = h, this.once = f || !1
                            }

                            function i(c, h, f, m, p) {
                                if (typeof f != "function") throw new TypeError("The listener must be a function");
                                var E = new r(f, m || c, p),
                                    S = a ? a + h : h;
                                return c._events[S] ? c._events[S].fn ? c._events[S] = [c._events[S], E] : c._events[S].push(E) : (c._events[S] = E, c._eventsCount++), c
                            }

                            function o(c, h) {
                                --c._eventsCount === 0 ? c._events = new e : delete c._events[h]
                            }

                            function u() {
                                this._events = new e, this._eventsCount = 0
                            }
                            u.prototype.eventNames = function() {
                                var h = [],
                                    f, m;
                                if (this._eventsCount === 0) return h;
                                for (m in f = this._events) n.call(f, m) && h.push(a ? m.slice(1) : m);
                                return Object.getOwnPropertySymbols ? h.concat(Object.getOwnPropertySymbols(f)) : h
                            }, u.prototype.listeners = function(h) {
                                var f = a ? a + h : h,
                                    m = this._events[f];
                                if (!m) return [];
                                if (m.fn) return [m.fn];
                                for (var p = 0, E = m.length, S = new Array(E); p < E; p++) S[p] = m[p].fn;
                                return S
                            }, u.prototype.listenerCount = function(h) {
                                var f = a ? a + h : h,
                                    m = this._events[f];
                                return m ? m.fn ? 1 : m.length : 0
                            }, u.prototype.emit = function(h, f, m, p, E, S) {
                                var L = a ? a + h : h;
                                if (!this._events[L]) return !1;
                                var I = this._events[L],
                                    O = arguments.length,
                                    U, G;
                                if (I.fn) {
                                    switch (I.once && this.removeListener(h, I.fn, void 0, !0), O) {
                                        case 1:
                                            return I.fn.call(I.context), !0;
                                        case 2:
                                            return I.fn.call(I.context, f), !0;
                                        case 3:
                                            return I.fn.call(I.context, f, m), !0;
                                        case 4:
                                            return I.fn.call(I.context, f, m, p), !0;
                                        case 5:
                                            return I.fn.call(I.context, f, m, p, E), !0;
                                        case 6:
                                            return I.fn.call(I.context, f, m, p, E, S), !0
                                    }
                                    for (G = 1, U = new Array(O - 1); G < O; G++) U[G - 1] = arguments[G];
                                    I.fn.apply(I.context, U)
                                } else {
                                    var ee = I.length,
                                        te;
                                    for (G = 0; G < ee; G++) switch (I[G].once && this.removeListener(h, I[G].fn, void 0, !0), O) {
                                        case 1:
                                            I[G].fn.call(I[G].context);
                                            break;
                                        case 2:
                                            I[G].fn.call(I[G].context, f);
                                            break;
                                        case 3:
                                            I[G].fn.call(I[G].context, f, m);
                                            break;
                                        case 4:
                                            I[G].fn.call(I[G].context, f, m, p);
                                            break;
                                        default:
                                            if (!U)
                                                for (te = 1, U = new Array(O - 1); te < O; te++) U[te - 1] = arguments[te];
                                            I[G].fn.apply(I[G].context, U)
                                    }
                                }
                                return !0
                            }, u.prototype.on = function(h, f, m) {
                                return i(this, h, f, m, !1)
                            }, u.prototype.once = function(h, f, m) {
                                return i(this, h, f, m, !0)
                            }, u.prototype.removeListener = function(h, f, m, p) {
                                var E = a ? a + h : h;
                                if (!this._events[E]) return this;
                                if (!f) return o(this, E), this;
                                var S = this._events[E];
                                if (S.fn) S.fn === f && (!p || S.once) && (!m || S.context === m) && o(this, E);
                                else {
                                    for (var L = 0, I = [], O = S.length; L < O; L++)(S[L].fn !== f || p && !S[L].once || m && S[L].context !== m) && I.push(S[L]);
                                    I.length ? this._events[E] = I.length === 1 ? I[0] : I : o(this, E)
                                }
                                return this
                            }, u.prototype.removeAllListeners = function(h) {
                                var f;
                                return h ? (f = a ? a + h : h, this._events[f] && o(this, f)) : (this._events = new e, this._eventsCount = 0), this
                            }, u.prototype.off = u.prototype.removeListener, u.prototype.addListener = u.prototype.on, u.prefixed = a, u.EventEmitter = u, l.exports = u
                        })(Qo);
                        var Jo = Qo.exports,
                            el = bt(Jo);
                        typeof we != "undefined" && we && v(self);

                        function v(l) {
                            var n = new el,
                                a = function(i, o) {
                                    l.postMessage({
                                        event: i,
                                        data: o
                                    })
                                };
                            n.on(_.FRAG_DECRYPTED, a), n.on(_.ERROR, a);
                            var e = function() {
                                var i = function(c) {
                                    var h = function(m) {
                                        a("workerLog", {
                                            logType: c,
                                            message: m
                                        })
                                    };
                                    V[c] = h
                                };
                                for (var o in V) i(o)
                            };
                            l.addEventListener("message", function(r) {
                                var i = r.data;
                                switch (i.cmd) {
                                    case "init":
                                        {
                                            var o = JSON.parse(i.config);l.transmuxer = new so(n, i.typeSupported, o, "", i.id),
                                            ai(o.debug, i.id),
                                            e(),
                                            a("init", null);
                                            break
                                        }
                                    case "configure":
                                        {
                                            l.transmuxer.configure(i.config);
                                            break
                                        }
                                    case "demux":
                                        {
                                            var u = l.transmuxer.push(i.data, i.decryptdata, i.chunkMeta, i.state);Xa(u) ? (l.transmuxer.async = !0, u.then(function(m) {
                                                T(l, m)
                                            }).catch(function(m) {
                                                a(_.ERROR, {
                                                    type: Ve.MEDIA_ERROR,
                                                    details: de.FRAG_PARSING_ERROR,
                                                    chunkMeta: i.chunkMeta,
                                                    fatal: !1,
                                                    error: m,
                                                    err: m,
                                                    reason: "transmuxer-worker push error"
                                                })
                                            })) : (l.transmuxer.async = !1, T(l, u));
                                            break
                                        }
                                    case "flush":
                                        {
                                            var c = i.chunkMeta,
                                                h = l.transmuxer.flush(c),
                                                f = Xa(h);f || l.transmuxer.async ? (Xa(h) || (h = Promise.resolve(h)), h.then(function(m) {
                                                J(l, m, c)
                                            }).catch(function(m) {
                                                a(_.ERROR, {
                                                    type: Ve.MEDIA_ERROR,
                                                    details: de.FRAG_PARSING_ERROR,
                                                    chunkMeta: i.chunkMeta,
                                                    fatal: !1,
                                                    error: m,
                                                    err: m,
                                                    reason: "transmuxer-worker flush error"
                                                })
                                            })) : J(l, h, c);
                                            break
                                        }
                                }
                            })
                        }

                        function T(l, n) {
                            if (ye(n.remuxResult)) return !1;
                            var a = [],
                                e = n.remuxResult,
                                r = e.audio,
                                i = e.video;
                            return r && R(a, r), i && R(a, i), l.postMessage({
                                event: "transmuxComplete",
                                data: n
                            }, a), !0
                        }

                        function R(l, n) {
                            n.data1 && l.push(n.data1.buffer), n.data2 && l.push(n.data2.buffer)
                        }

                        function J(l, n, a) {
                            var e = n.reduce(function(r, i) {
                                return T(l, i) || r
                            }, !1);
                            e || l.postMessage({
                                event: "transmuxComplete",
                                data: n[0]
                            }), l.postMessage({
                                event: "flush",
                                data: a
                            })
                        }

                        function ye(l) {
                            return !l.audio && !l.video && !l.text && !l.id3 && !l.initSegment
                        }

                        function Ye() {
                            return typeof Me == "function"
                        }

                        function Nt() {
                            var l = new self.Blob(["var exports={};var module={exports:exports};function define(f){f()};define.amd=true;(" + Me.toString() + ")(true);"], {
                                    type: "text/javascript"
                                }),
                                n = self.URL.createObjectURL(l),
                                a = new self.Worker(n);
                            return {
                                worker: a,
                                objectURL: n
                            }
                        }

                        function jt(l) {
                            var n = new self.URL(l, self.location.href).href,
                                a = new self.Worker(n);
                            return {
                                worker: a,
                                scriptURL: n
                            }
                        }
                        var Xi = function() {
                                function l(a, e, r, i) {
                                    var o = this;
                                    this.error = null, this.hls = void 0, this.id = void 0, this.observer = void 0, this.frag = null, this.part = null, this.useWorker = void 0, this.workerContext = null, this.onwmsg = void 0, this.transmuxer = null, this.onTransmuxComplete = void 0, this.onFlush = void 0;
                                    var u = a.config;
                                    this.hls = a, this.id = e, this.useWorker = !!u.enableWorker, this.onTransmuxComplete = r, this.onFlush = i;
                                    var c = function(S, L) {
                                        L = L || {}, L.frag = o.frag, L.id = o.id, S === _.ERROR && (o.error = L.error), o.hls.trigger(S, L)
                                    };
                                    this.observer = new el, this.observer.on(_.FRAG_DECRYPTED, c), this.observer.on(_.ERROR, c);
                                    var h = Ni(u.preferManagedMediaSource) || {
                                            isTypeSupported: function() {
                                                return !1
                                            }
                                        },
                                        f = {
                                            mpeg: h.isTypeSupported("audio/mpeg"),
                                            mp3: h.isTypeSupported('audio/mp4; codecs="mp3"'),
                                            ac3: h.isTypeSupported('audio/mp4; codecs="ac-3"')
                                        };
                                    if (this.useWorker && typeof Worker != "undefined") {
                                        var m = u.workerPath || Ye();
                                        if (m) {
                                            try {
                                                u.workerPath ? (V.log("loading Web Worker " + u.workerPath + ' for "' + e + '"'), this.workerContext = jt(u.workerPath)) : (V.log('injecting Web Worker for "' + e + '"'), this.workerContext = Nt()), this.onwmsg = function(E) {
                                                    return o.onWorkerMessage(E)
                                                };
                                                var p = this.workerContext.worker;
                                                p.addEventListener("message", this.onwmsg), p.onerror = function(E) {
                                                    var S = new Error(E.message + "  (" + E.filename + ":" + E.lineno + ")");
                                                    u.enableWorker = !1, V.warn('Error in "' + e + '" Web Worker, fallback to inline'), o.hls.trigger(_.ERROR, {
                                                        type: Ve.OTHER_ERROR,
                                                        details: de.INTERNAL_EXCEPTION,
                                                        fatal: !1,
                                                        event: "demuxerWorker",
                                                        error: S
                                                    })
                                                }, p.postMessage({
                                                    cmd: "init",
                                                    typeSupported: f,
                                                    vendor: "",
                                                    id: e,
                                                    config: JSON.stringify(u)
                                                })
                                            } catch (E) {
                                                V.warn('Error setting up "' + e + '" Web Worker, fallback to inline', E), this.resetWorker(), this.error = null, this.transmuxer = new so(this.observer, f, u, "", e)
                                            }
                                            return
                                        }
                                    }
                                    this.transmuxer = new so(this.observer, f, u, "", e)
                                }
                                var n = l.prototype;
                                return n.resetWorker = function() {
                                    if (this.workerContext) {
                                        var e = this.workerContext,
                                            r = e.worker,
                                            i = e.objectURL;
                                        i && self.URL.revokeObjectURL(i), r.removeEventListener("message", this.onwmsg), r.onerror = null, r.terminate(), this.workerContext = null
                                    }
                                }, n.destroy = function() {
                                    if (this.workerContext) this.resetWorker(), this.onwmsg = void 0;
                                    else {
                                        var e = this.transmuxer;
                                        e && (e.destroy(), this.transmuxer = null)
                                    }
                                    var r = this.observer;
                                    r && r.removeAllListeners(), this.frag = null, this.observer = null, this.hls = null
                                }, n.push = function(e, r, i, o, u, c, h, f, m, p) {
                                    var E, S, L = this;
                                    m.transmuxing.start = self.performance.now();
                                    var I = this.transmuxer,
                                        O = c ? c.start : u.start,
                                        U = u.decryptdata,
                                        G = this.frag,
                                        ee = !(G && u.cc === G.cc),
                                        te = !(G && m.level === G.level),
                                        _e = G ? m.sn - G.sn : -1,
                                        me = this.part ? m.part - this.part.index : -1,
                                        ae = _e === 0 && m.id > 1 && m.id === (G == null ? void 0 : G.stats.chunkCount),
                                        Se = !te && (_e === 1 || _e === 0 && (me === 1 || ae && me <= 0)),
                                        ve = self.performance.now();
                                    (te || _e || u.stats.parsing.start === 0) && (u.stats.parsing.start = ve), c && (me || !Se) && (c.stats.parsing.start = ve);
                                    var Ne = !(G && ((E = u.initSegment) == null ? void 0 : E.url) === ((S = G.initSegment) == null ? void 0 : S.url)),
                                        Ie = new oo(ee, Se, f, te, O, Ne);
                                    if (!Se || ee || Ne) {
                                        V.log("[transmuxer-interface, " + u.type + "]: Starting new transmux session for sn: " + m.sn + " p: " + m.part + " level: " + m.level + " id: " + m.id + `
        discontinuity: ` + ee + `
        trackSwitch: ` + te + `
        contiguous: ` + Se + `
        accurateTimeOffset: ` + f + `
        timeOffset: ` + O + `
        initSegmentChange: ` + Ne);
                                        var kt = new Zo(i, o, r, h, p);
                                        this.configureTransmuxer(kt)
                                    }
                                    if (this.frag = u, this.part = c, this.workerContext) this.workerContext.worker.postMessage({
                                        cmd: "demux",
                                        data: e,
                                        decryptdata: U,
                                        chunkMeta: m,
                                        state: Ie
                                    }, e instanceof ArrayBuffer ? [e] : []);
                                    else if (I) {
                                        var zt = I.push(e, U, m, Ie);
                                        Xa(zt) ? (I.async = !0, zt.then(function(lr) {
                                            L.handleTransmuxComplete(lr)
                                        }).catch(function(lr) {
                                            L.transmuxerError(lr, m, "transmuxer-interface push error")
                                        })) : (I.async = !1, this.handleTransmuxComplete(zt))
                                    }
                                }, n.flush = function(e) {
                                    var r = this;
                                    e.transmuxing.start = self.performance.now();
                                    var i = this.transmuxer;
                                    if (this.workerContext) this.workerContext.worker.postMessage({
                                        cmd: "flush",
                                        chunkMeta: e
                                    });
                                    else if (i) {
                                        var o = i.flush(e),
                                            u = Xa(o);
                                        u || i.async ? (Xa(o) || (o = Promise.resolve(o)), o.then(function(c) {
                                            r.handleFlushResult(c, e)
                                        }).catch(function(c) {
                                            r.transmuxerError(c, e, "transmuxer-interface flush error")
                                        })) : this.handleFlushResult(o, e)
                                    }
                                }, n.transmuxerError = function(e, r, i) {
                                    this.hls && (this.error = e, this.hls.trigger(_.ERROR, {
                                        type: Ve.MEDIA_ERROR,
                                        details: de.FRAG_PARSING_ERROR,
                                        chunkMeta: r,
                                        frag: this.frag || void 0,
                                        fatal: !1,
                                        error: e,
                                        err: e,
                                        reason: i
                                    }))
                                }, n.handleFlushResult = function(e, r) {
                                    var i = this;
                                    e.forEach(function(o) {
                                        i.handleTransmuxComplete(o)
                                    }), this.onFlush(r)
                                }, n.onWorkerMessage = function(e) {
                                    var r = e.data;
                                    if (!(r != null && r.event)) {
                                        V.warn("worker message received with no " + (r ? "event name" : "data"));
                                        return
                                    }
                                    var i = this.hls;
                                    if (this.hls) switch (r.event) {
                                        case "init":
                                            {
                                                var o, u = (o = this.workerContext) == null ? void 0 : o.objectURL;u && self.URL.revokeObjectURL(u);
                                                break
                                            }
                                        case "transmuxComplete":
                                            {
                                                this.handleTransmuxComplete(r.data);
                                                break
                                            }
                                        case "flush":
                                            {
                                                this.onFlush(r.data);
                                                break
                                            }
                                        case "workerLog":
                                            V[r.data.logType] && V[r.data.logType](r.data.message);
                                            break;
                                        default:
                                            {
                                                r.data = r.data || {},
                                                r.data.frag = this.frag,
                                                r.data.id = this.id,
                                                i.trigger(r.event, r.data);
                                                break
                                            }
                                    }
                                }, n.configureTransmuxer = function(e) {
                                    var r = this.transmuxer;
                                    this.workerContext ? this.workerContext.worker.postMessage({
                                        cmd: "configure",
                                        config: e
                                    }) : r && r.configure(e)
                                }, n.handleTransmuxComplete = function(e) {
                                    e.chunkMeta.transmuxing.end = self.performance.now(), this.onTransmuxComplete(e)
                                }, l
                            }(),
                            Xr = 100,
                            nn = function(l) {
                                x(n, l);

                                function n(e, r, i) {
                                    var o;
                                    return o = l.call(this, e, r, i, "[audio-stream-controller]", H.AUDIO) || this, o.videoBuffer = null, o.videoTrackCC = -1, o.waitingVideoCC = -1, o.bufferedTrack = null, o.switchingTrack = null, o.trackId = -1, o.waitingData = null, o.mainDetails = null, o.flushing = !1, o.bufferFlushed = !1, o.cachedTrackLoadedData = null, o._registerListeners(), o
                                }
                                var a = n.prototype;
                                return a.onHandlerDestroying = function() {
                                    this._unregisterListeners(), l.prototype.onHandlerDestroying.call(this), this.mainDetails = null, this.bufferedTrack = null, this.switchingTrack = null
                                }, a._registerListeners = function() {
                                    var r = this.hls;
                                    r.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.on(_.MANIFEST_LOADING, this.onManifestLoading, this), r.on(_.LEVEL_LOADED, this.onLevelLoaded, this), r.on(_.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this), r.on(_.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), r.on(_.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), r.on(_.ERROR, this.onError, this), r.on(_.BUFFER_RESET, this.onBufferReset, this), r.on(_.BUFFER_CREATED, this.onBufferCreated, this), r.on(_.BUFFER_FLUSHING, this.onBufferFlushing, this), r.on(_.BUFFER_FLUSHED, this.onBufferFlushed, this), r.on(_.INIT_PTS_FOUND, this.onInitPtsFound, this), r.on(_.FRAG_BUFFERED, this.onFragBuffered, this)
                                }, a._unregisterListeners = function() {
                                    var r = this.hls;
                                    r.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.off(_.MANIFEST_LOADING, this.onManifestLoading, this), r.off(_.LEVEL_LOADED, this.onLevelLoaded, this), r.off(_.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this), r.off(_.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), r.off(_.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), r.off(_.ERROR, this.onError, this), r.off(_.BUFFER_RESET, this.onBufferReset, this), r.off(_.BUFFER_CREATED, this.onBufferCreated, this), r.off(_.BUFFER_FLUSHING, this.onBufferFlushing, this), r.off(_.BUFFER_FLUSHED, this.onBufferFlushed, this), r.off(_.INIT_PTS_FOUND, this.onInitPtsFound, this), r.off(_.FRAG_BUFFERED, this.onFragBuffered, this)
                                }, a.onInitPtsFound = function(r, i) {
                                    var o = i.frag,
                                        u = i.id,
                                        c = i.initPTS,
                                        h = i.timescale;
                                    if (u === "main") {
                                        var f = o.cc;
                                        this.initPTS[o.cc] = {
                                            baseTime: c,
                                            timescale: h
                                        }, this.log("InitPTS for cc: " + f + " found from main: " + c), this.videoTrackCC = f, this.state === rt.WAITING_INIT_PTS && this.tick()
                                    }
                                }, a.startLoad = function(r) {
                                    if (!this.levels) {
                                        this.startPosition = r, this.state = rt.STOPPED;
                                        return
                                    }
                                    var i = this.lastCurrentTime;
                                    this.stopLoad(), this.setInterval(Xr), i > 0 && r === -1 ? (this.log("Override startPosition with lastCurrentTime @" + i.toFixed(3)), r = i, this.state = rt.IDLE) : (this.loadedmetadata = !1, this.state = rt.WAITING_TRACK), this.nextLoadPosition = this.startPosition = this.lastCurrentTime = r, this.tick()
                                }, a.doTick = function() {
                                    switch (this.state) {
                                        case rt.IDLE:
                                            this.doTickIdle();
                                            break;
                                        case rt.WAITING_TRACK:
                                            {
                                                var r, i = this.levels,
                                                    o = this.trackId,
                                                    u = i == null || (r = i[o]) == null ? void 0 : r.details;
                                                if (u) {
                                                    if (this.waitForCdnTuneIn(u)) break;
                                                    this.state = rt.WAITING_INIT_PTS
                                                }
                                                break
                                            }
                                        case rt.FRAG_LOADING_WAITING_RETRY:
                                            {
                                                var c, h = performance.now(),
                                                    f = this.retryDate;
                                                if (!f || h >= f || (c = this.media) != null && c.seeking) {
                                                    var m = this.levels,
                                                        p = this.trackId;
                                                    this.log("RetryDate reached, switch back to IDLE state"), this.resetStartWhenNotLoaded((m == null ? void 0 : m[p]) || null), this.state = rt.IDLE
                                                }
                                                break
                                            }
                                        case rt.WAITING_INIT_PTS:
                                            {
                                                var E = this.waitingData;
                                                if (E) {
                                                    var S = E.frag,
                                                        L = E.part,
                                                        I = E.cache,
                                                        O = E.complete;
                                                    if (this.initPTS[S.cc] !== void 0) {
                                                        this.waitingData = null, this.waitingVideoCC = -1, this.state = rt.FRAG_LOADING;
                                                        var U = I.flush(),
                                                            G = {
                                                                frag: S,
                                                                part: L,
                                                                payload: U,
                                                                networkDetails: null
                                                            };
                                                        this._handleFragmentLoadProgress(G), O && l.prototype._handleFragmentLoadComplete.call(this, G)
                                                    } else if (this.videoTrackCC !== this.waitingVideoCC) this.log("Waiting fragment cc (" + S.cc + ") cancelled because video is at cc " + this.videoTrackCC), this.clearWaitingFragment();
                                                    else {
                                                        var ee = this.getLoadPosition(),
                                                            te = Or.bufferInfo(this.mediaBuffer, ee, this.config.maxBufferHole),
                                                            _e = M(te.end, this.config.maxFragLookUpTolerance, S);
                                                        _e < 0 && (this.log("Waiting fragment cc (" + S.cc + ") @ " + S.start + " cancelled because another fragment at " + te.end + " is needed"), this.clearWaitingFragment())
                                                    }
                                                } else this.state = rt.IDLE
                                            }
                                    }
                                    this.onTickEnd()
                                }, a.clearWaitingFragment = function() {
                                    var r = this.waitingData;
                                    r && (this.fragmentTracker.removeFragment(r.frag), this.waitingData = null, this.waitingVideoCC = -1, this.state = rt.IDLE)
                                }, a.resetLoadingState = function() {
                                    this.clearWaitingFragment(), l.prototype.resetLoadingState.call(this)
                                }, a.onTickEnd = function() {
                                    var r = this.media;
                                    r != null && r.readyState && (this.lastCurrentTime = r.currentTime)
                                }, a.doTickIdle = function() {
                                    var r = this.hls,
                                        i = this.levels,
                                        o = this.media,
                                        u = this.trackId,
                                        c = r.config;
                                    if (!(!this.buffering || !o && (this.startFragRequested || !c.startFragPrefetch) || !(i != null && i[u]))) {
                                        var h = i[u],
                                            f = h.details;
                                        if (!f || f.live && this.levelLastLoaded !== h || this.waitForCdnTuneIn(f)) {
                                            this.state = rt.WAITING_TRACK;
                                            return
                                        }
                                        var m = this.mediaBuffer ? this.mediaBuffer : this.media;
                                        this.bufferFlushed && m && (this.bufferFlushed = !1, this.afterBufferFlushed(m, Xt.AUDIO, H.AUDIO));
                                        var p = this.getFwdBufferInfo(m, H.AUDIO);
                                        if (p !== null) {
                                            if (!this.switchingTrack && this._streamEnded(p, f)) {
                                                r.trigger(_.BUFFER_EOS, {
                                                    type: "audio"
                                                }), this.state = rt.ENDED;
                                                return
                                            }
                                            var E = this.getFwdBufferInfo(this.videoBuffer ? this.videoBuffer : this.media, H.MAIN),
                                                S = p.len,
                                                L = this.getMaxBufferLength(E == null ? void 0 : E.len),
                                                I = f.fragments,
                                                O = I[0].start,
                                                U = this.getLoadPosition(),
                                                G = this.flushing ? U : p.end;
                                            if (this.switchingTrack && o) {
                                                var ee = U;
                                                f.PTSKnown && ee < O && (p.end > O || p.nextStart) && (this.log("Alt audio track ahead of main track, seek to start of alt audio track"), o.currentTime = O + .05)
                                            }
                                            if (!(S >= L && !this.switchingTrack && G < I[I.length - 1].start)) {
                                                var te = this.getNextFragment(G, f),
                                                    _e = !1;
                                                if (te && this.isLoopLoading(te, G) && (_e = !!te.gap, te = this.getNextFragmentLoopLoading(te, f, p, H.MAIN, L)), !te) {
                                                    this.bufferFlushed = !0;
                                                    return
                                                }
                                                var me = E && te.start > E.end + f.targetduration;
                                                if (me || !(E != null && E.len) && p.len) {
                                                    var ae = this.getAppendedFrag(te.start, H.MAIN);
                                                    if (ae === null || (_e || (_e = !!ae.gap || !!me && E.len === 0), me && !_e || _e && p.nextStart && p.nextStart < ae.end)) return
                                                }
                                                this.loadFragment(te, h, G)
                                            }
                                        }
                                    }
                                }, a.getMaxBufferLength = function(r) {
                                    var i = l.prototype.getMaxBufferLength.call(this);
                                    return r ? Math.min(Math.max(i, r), this.config.maxMaxBufferLength) : i
                                }, a.onMediaDetaching = function() {
                                    this.videoBuffer = null, this.bufferFlushed = this.flushing = !1, l.prototype.onMediaDetaching.call(this)
                                }, a.onAudioTracksUpdated = function(r, i) {
                                    var o = i.audioTracks;
                                    this.resetTransmuxer(), this.levels = o.map(function(u) {
                                        return new gi(u)
                                    })
                                }, a.onAudioTrackSwitching = function(r, i) {
                                    var o = !!i.url;
                                    this.trackId = i.id;
                                    var u = this.fragCurrent;
                                    u && (u.abortRequests(), this.removeUnbufferedFrags(u.start)), this.resetLoadingState(), o ? this.setInterval(Xr) : this.resetTransmuxer(), o ? (this.switchingTrack = i, this.state = rt.IDLE, this.flushAudioIfNeeded(i)) : (this.switchingTrack = null, this.bufferedTrack = i, this.state = rt.STOPPED), this.tick()
                                }, a.onManifestLoading = function() {
                                    this.fragmentTracker.removeAllFragments(), this.startPosition = this.lastCurrentTime = 0, this.bufferFlushed = this.flushing = !1, this.levels = this.mainDetails = this.waitingData = this.bufferedTrack = this.cachedTrackLoadedData = this.switchingTrack = null, this.startFragRequested = !1, this.trackId = this.videoTrackCC = this.waitingVideoCC = -1
                                }, a.onLevelLoaded = function(r, i) {
                                    this.mainDetails = i.details, this.cachedTrackLoadedData !== null && (this.hls.trigger(_.AUDIO_TRACK_LOADED, this.cachedTrackLoadedData), this.cachedTrackLoadedData = null)
                                }, a.onAudioTrackLoaded = function(r, i) {
                                    var o;
                                    if (this.mainDetails == null) {
                                        this.cachedTrackLoadedData = i;
                                        return
                                    }
                                    var u = this.levels,
                                        c = i.details,
                                        h = i.id;
                                    if (!u) {
                                        this.warn("Audio tracks were reset while loading level " + h);
                                        return
                                    }
                                    this.log("Audio track " + h + " loaded [" + c.startSN + "," + c.endSN + "]" + (c.lastPartSn ? "[part-" + c.lastPartSn + "-" + c.lastPartIndex + "]" : "") + ",duration:" + c.totalduration);
                                    var f = u[h],
                                        m = 0;
                                    if (c.live || (o = f.details) != null && o.live) {
                                        this.checkLiveUpdate(c);
                                        var p = this.mainDetails;
                                        if (c.deltaUpdateFailed || !p) return;
                                        if (!f.details && c.hasProgramDateTime && p.hasProgramDateTime) bo(c, p), m = c.fragments[0].start;
                                        else {
                                            var E;
                                            m = this.alignPlaylists(c, f.details, (E = this.levelLastLoaded) == null ? void 0 : E.details)
                                        }
                                    }
                                    f.details = c, this.levelLastLoaded = f, !this.startFragRequested && (this.mainDetails || !c.live) && this.setStartPosition(this.mainDetails || c, m), this.state === rt.WAITING_TRACK && !this.waitForCdnTuneIn(c) && (this.state = rt.IDLE), this.tick()
                                }, a._handleFragmentLoadProgress = function(r) {
                                    var i, o = r.frag,
                                        u = r.part,
                                        c = r.payload,
                                        h = this.config,
                                        f = this.trackId,
                                        m = this.levels;
                                    if (!m) {
                                        this.warn("Audio tracks were reset while fragment load was in progress. Fragment " + o.sn + " of level " + o.level + " will not be buffered");
                                        return
                                    }
                                    var p = m[f];
                                    if (!p) {
                                        this.warn("Audio track is undefined on fragment load progress");
                                        return
                                    }
                                    var E = p.details;
                                    if (!E) {
                                        this.warn("Audio track details undefined on fragment load progress"), this.removeUnbufferedFrags(o.start);
                                        return
                                    }
                                    var S = h.defaultAudioCodec || p.audioCodec || "mp4a.40.2",
                                        L = this.transmuxer;
                                    L || (L = this.transmuxer = new Xi(this.hls, H.AUDIO, this._handleTransmuxComplete.bind(this), this._handleTransmuxerFlush.bind(this)));
                                    var I = this.initPTS[o.cc],
                                        O = (i = o.initSegment) == null ? void 0 : i.data;
                                    if (I !== void 0) {
                                        var U = !1,
                                            G = u ? u.index : -1,
                                            ee = G !== -1,
                                            te = new ha(o.level, o.sn, o.stats.chunkCount, c.byteLength, G, ee);
                                        L.push(c, O, S, "", o, u, E.totalduration, U, te, I)
                                    } else {
                                        this.log("Unknown video PTS for cc " + o.cc + ", waiting for video PTS before demuxing audio frag " + o.sn + " of [" + E.startSN + " ," + E.endSN + "],track " + f);
                                        var _e = this.waitingData = this.waitingData || {
                                                frag: o,
                                                part: u,
                                                cache: new zs,
                                                complete: !1
                                            },
                                            me = _e.cache;
                                        me.push(new Uint8Array(c)), this.waitingVideoCC = this.videoTrackCC, this.state = rt.WAITING_INIT_PTS
                                    }
                                }, a._handleFragmentLoadComplete = function(r) {
                                    if (this.waitingData) {
                                        this.waitingData.complete = !0;
                                        return
                                    }
                                    l.prototype._handleFragmentLoadComplete.call(this, r)
                                }, a.onBufferReset = function() {
                                    this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1
                                }, a.onBufferCreated = function(r, i) {
                                    var o = i.tracks.audio;
                                    o && (this.mediaBuffer = o.buffer || null), i.tracks.video && (this.videoBuffer = i.tracks.video.buffer || null)
                                }, a.onFragBuffered = function(r, i) {
                                    var o = i.frag,
                                        u = i.part;
                                    if (o.type !== H.AUDIO) {
                                        if (!this.loadedmetadata && o.type === H.MAIN) {
                                            var c = this.videoBuffer || this.media;
                                            if (c) {
                                                var h = Or.getBuffered(c);
                                                h.length && (this.loadedmetadata = !0)
                                            }
                                        }
                                        return
                                    }
                                    if (this.fragContextChanged(o)) {
                                        this.warn("Fragment " + o.sn + (u ? " p: " + u.index : "") + " of level " + o.level + " finished buffering, but was aborted. state: " + this.state + ", audioSwitch: " + (this.switchingTrack ? this.switchingTrack.name : "false"));
                                        return
                                    }
                                    if (o.sn !== "initSegment") {
                                        this.fragPrevious = o;
                                        var f = this.switchingTrack;
                                        f && (this.bufferedTrack = f, this.switchingTrack = null, this.hls.trigger(_.AUDIO_TRACK_SWITCHED, Ee({}, f)))
                                    }
                                    this.fragBufferedComplete(o, u)
                                }, a.onError = function(r, i) {
                                    var o;
                                    if (i.fatal) {
                                        this.state = rt.ERROR;
                                        return
                                    }
                                    switch (i.details) {
                                        case de.FRAG_GAP:
                                        case de.FRAG_PARSING_ERROR:
                                        case de.FRAG_DECRYPT_ERROR:
                                        case de.FRAG_LOAD_ERROR:
                                        case de.FRAG_LOAD_TIMEOUT:
                                        case de.KEY_LOAD_ERROR:
                                        case de.KEY_LOAD_TIMEOUT:
                                            this.onFragmentOrKeyLoadError(H.AUDIO, i);
                                            break;
                                        case de.AUDIO_TRACK_LOAD_ERROR:
                                        case de.AUDIO_TRACK_LOAD_TIMEOUT:
                                        case de.LEVEL_PARSING_ERROR:
                                            !i.levelRetry && this.state === rt.WAITING_TRACK && ((o = i.context) == null ? void 0 : o.type) === C.AUDIO_TRACK && (this.state = rt.IDLE);
                                            break;
                                        case de.BUFFER_APPEND_ERROR:
                                        case de.BUFFER_FULL_ERROR:
                                            if (!i.parent || i.parent !== "audio") return;
                                            if (i.details === de.BUFFER_APPEND_ERROR) {
                                                this.resetLoadingState();
                                                return
                                            }
                                            this.reduceLengthAndFlushBuffer(i) && (this.bufferedTrack = null, l.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio"));
                                            break;
                                        case de.INTERNAL_EXCEPTION:
                                            this.recoverWorkerError(i);
                                            break
                                    }
                                }, a.onBufferFlushing = function(r, i) {
                                    var o = i.type;
                                    o !== Xt.VIDEO && (this.flushing = !0)
                                }, a.onBufferFlushed = function(r, i) {
                                    var o = i.type;
                                    if (o !== Xt.VIDEO) {
                                        this.flushing = !1, this.bufferFlushed = !0, this.state === rt.ENDED && (this.state = rt.IDLE);
                                        var u = this.mediaBuffer || this.media;
                                        u && (this.afterBufferFlushed(u, o, H.AUDIO), this.tick())
                                    }
                                }, a._handleTransmuxComplete = function(r) {
                                    var i, o = "audio",
                                        u = this.hls,
                                        c = r.remuxResult,
                                        h = r.chunkMeta,
                                        f = this.getCurrentContext(h);
                                    if (!f) {
                                        this.resetWhenMissingContext(h);
                                        return
                                    }
                                    var m = f.frag,
                                        p = f.part,
                                        E = f.level,
                                        S = E.details,
                                        L = c.audio,
                                        I = c.text,
                                        O = c.id3,
                                        U = c.initSegment;
                                    if (this.fragContextChanged(m) || !S) {
                                        this.fragmentTracker.removeFragment(m);
                                        return
                                    }
                                    if (this.state = rt.PARSING, this.switchingTrack && L && this.completeAudioSwitch(this.switchingTrack), U != null && U.tracks) {
                                        var G = m.initSegment || m;
                                        this._bufferInitSegment(E, U.tracks, G, h), u.trigger(_.FRAG_PARSING_INIT_SEGMENT, {
                                            frag: G,
                                            id: o,
                                            tracks: U.tracks
                                        })
                                    }
                                    if (L) {
                                        var ee = L.startPTS,
                                            te = L.endPTS,
                                            _e = L.startDTS,
                                            me = L.endDTS;
                                        p && (p.elementaryStreams[Xt.AUDIO] = {
                                            startPTS: ee,
                                            endPTS: te,
                                            startDTS: _e,
                                            endDTS: me
                                        }), m.setElementaryStreamInfo(Xt.AUDIO, ee, te, _e, me), this.bufferFragmentData(L, m, p, h)
                                    }
                                    if (O != null && (i = O.samples) != null && i.length) {
                                        var ae = le({
                                            id: o,
                                            frag: m,
                                            details: S
                                        }, O);
                                        u.trigger(_.FRAG_PARSING_METADATA, ae)
                                    }
                                    if (I) {
                                        var Se = le({
                                            id: o,
                                            frag: m,
                                            details: S
                                        }, I);
                                        u.trigger(_.FRAG_PARSING_USERDATA, Se)
                                    }
                                }, a._bufferInitSegment = function(r, i, o, u) {
                                    if (this.state === rt.PARSING) {
                                        i.video && delete i.video;
                                        var c = i.audio;
                                        if (c) {
                                            c.id = "audio";
                                            var h = r.audioCodec;
                                            this.log("Init audio buffer, container:" + c.container + ", codecs[level/parsed]=[" + h + "/" + c.codec + "]"), h && h.split(",").length === 1 && (c.levelCodec = h), this.hls.trigger(_.BUFFER_CODECS, i);
                                            var f = c.initSegment;
                                            if (f != null && f.byteLength) {
                                                var m = {
                                                    type: "audio",
                                                    frag: o,
                                                    part: null,
                                                    chunkMeta: u,
                                                    parent: o.type,
                                                    data: f
                                                };
                                                this.hls.trigger(_.BUFFER_APPENDING, m)
                                            }
                                            this.tickImmediate()
                                        }
                                    }
                                }, a.loadFragment = function(r, i, o) {
                                    var u = this.fragmentTracker.getState(r);
                                    if (this.fragCurrent = r, this.switchingTrack || u === ui.NOT_LOADED || u === ui.PARTIAL) {
                                        var c;
                                        if (r.sn === "initSegment") this._loadInitSegment(r, i);
                                        else if ((c = i.details) != null && c.live && !this.initPTS[r.cc]) {
                                            this.log("Waiting for video PTS in continuity counter " + r.cc + " of live stream before loading audio fragment " + r.sn + " of level " + this.trackId), this.state = rt.WAITING_INIT_PTS;
                                            var h = this.mainDetails;
                                            h && h.fragments[0].start !== i.details.fragments[0].start && bo(i.details, h)
                                        } else this.startFragRequested = !0, l.prototype.loadFragment.call(this, r, i, o)
                                    } else this.clearTrackerIfNeeded(r)
                                }, a.flushAudioIfNeeded = function(r) {
                                    if (this.media && this.bufferedTrack) {
                                        var i = this.bufferedTrack,
                                            o = i.name,
                                            u = i.lang,
                                            c = i.assocLang,
                                            h = i.characteristics,
                                            f = i.audioCodec,
                                            m = i.channels;
                                        Jr({
                                            name: o,
                                            lang: u,
                                            assocLang: c,
                                            characteristics: h,
                                            audioCodec: f,
                                            channels: m
                                        }, r, ii) || (this.log("Switching audio track : flushing all audio"), l.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio"), this.bufferedTrack = null)
                                    }
                                }, a.completeAudioSwitch = function(r) {
                                    var i = this.hls;
                                    this.flushAudioIfNeeded(r), this.bufferedTrack = r, this.switchingTrack = null, i.trigger(_.AUDIO_TRACK_SWITCHED, Ee({}, r))
                                }, n
                            }(To);

                        function Mn(l, n) {
                            if (l.length !== n.length) return !1;
                            for (var a = 0; a < l.length; a++)
                                if (!Tn(l[a].attrs, n[a].attrs)) return !1;
                            return !0
                        }

                        function Tn(l, n, a) {
                            var e = l["STABLE-RENDITION-ID"];
                            return e && !a ? e === n["STABLE-RENDITION-ID"] : !(a || ["LANGUAGE", "NAME", "CHARACTERISTICS", "AUTOSELECT", "DEFAULT", "FORCED", "ASSOC-LANGUAGE"]).some(function(r) {
                                return l[r] !== n[r]
                            })
                        }

                        function jn(l, n) {
                            return n.label.toLowerCase() === l.name.toLowerCase() && (!n.language || n.language.toLowerCase() === (l.lang || "").toLowerCase())
                        }
                        var Il = function(l) {
                                x(n, l);

                                function n(e) {
                                    var r;
                                    return r = l.call(this, e, "[audio-track-controller]") || this, r.tracks = [], r.groupIds = null, r.tracksInGroup = [], r.trackId = -1, r.currentTrack = null, r.selectDefaultTrack = !0, r.registerListeners(), r
                                }
                                var a = n.prototype;
                                return a.registerListeners = function() {
                                    var r = this.hls;
                                    r.on(_.MANIFEST_LOADING, this.onManifestLoading, this), r.on(_.MANIFEST_PARSED, this.onManifestParsed, this), r.on(_.LEVEL_LOADING, this.onLevelLoading, this), r.on(_.LEVEL_SWITCHING, this.onLevelSwitching, this), r.on(_.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), r.on(_.ERROR, this.onError, this)
                                }, a.unregisterListeners = function() {
                                    var r = this.hls;
                                    r.off(_.MANIFEST_LOADING, this.onManifestLoading, this), r.off(_.MANIFEST_PARSED, this.onManifestParsed, this), r.off(_.LEVEL_LOADING, this.onLevelLoading, this), r.off(_.LEVEL_SWITCHING, this.onLevelSwitching, this), r.off(_.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), r.off(_.ERROR, this.onError, this)
                                }, a.destroy = function() {
                                    this.unregisterListeners(), this.tracks.length = 0, this.tracksInGroup.length = 0, this.currentTrack = null, l.prototype.destroy.call(this)
                                }, a.onManifestLoading = function() {
                                    this.tracks = [], this.tracksInGroup = [], this.groupIds = null, this.currentTrack = null, this.trackId = -1, this.selectDefaultTrack = !0
                                }, a.onManifestParsed = function(r, i) {
                                    this.tracks = i.audioTracks || []
                                }, a.onAudioTrackLoaded = function(r, i) {
                                    var o = i.id,
                                        u = i.groupId,
                                        c = i.details,
                                        h = this.tracksInGroup[o];
                                    if (!h || h.groupId !== u) {
                                        this.warn("Audio track with id:" + o + " and group:" + u + " not found in active group " + (h == null ? void 0 : h.groupId));
                                        return
                                    }
                                    var f = h.details;
                                    h.details = i.details, this.log("Audio track " + o + ' "' + h.name + '" lang:' + h.lang + " group:" + u + " loaded [" + c.startSN + "-" + c.endSN + "]"), o === this.trackId && this.playlistLoaded(o, i, f)
                                }, a.onLevelLoading = function(r, i) {
                                    this.switchLevel(i.level)
                                }, a.onLevelSwitching = function(r, i) {
                                    this.switchLevel(i.level)
                                }, a.switchLevel = function(r) {
                                    var i = this.hls.levels[r];
                                    if (i) {
                                        var o = i.audioGroups || null,
                                            u = this.groupIds,
                                            c = this.currentTrack;
                                        if (!o || (u == null ? void 0 : u.length) !== (o == null ? void 0 : o.length) || o != null && o.some(function(U) {
                                                return (u == null ? void 0 : u.indexOf(U)) === -1
                                            })) {
                                            this.groupIds = o, this.trackId = -1, this.currentTrack = null;
                                            var h = this.tracks.filter(function(U) {
                                                return !o || o.indexOf(U.groupId) !== -1
                                            });
                                            if (h.length) this.selectDefaultTrack && !h.some(function(U) {
                                                return U.default
                                            }) && (this.selectDefaultTrack = !1), h.forEach(function(U, G) {
                                                U.id = G
                                            });
                                            else if (!c && !this.tracksInGroup.length) return;
                                            this.tracksInGroup = h;
                                            var f = this.hls.config.audioPreference;
                                            if (!c && f) {
                                                var m = jr(f, h, ii);
                                                if (m > -1) c = h[m];
                                                else {
                                                    var p = jr(f, this.tracks);
                                                    c = this.tracks[p]
                                                }
                                            }
                                            var E = this.findTrackId(c);
                                            E === -1 && c && (E = this.findTrackId(null));
                                            var S = {
                                                audioTracks: h
                                            };
                                            this.log("Updating audio tracks, " + h.length + " track(s) found in group(s): " + (o == null ? void 0 : o.join(","))), this.hls.trigger(_.AUDIO_TRACKS_UPDATED, S);
                                            var L = this.trackId;
                                            if (E !== -1 && L === -1) this.setAudioTrack(E);
                                            else if (h.length && L === -1) {
                                                var I, O = new Error("No audio track selected for current audio group-ID(s): " + ((I = this.groupIds) == null ? void 0 : I.join(",")) + " track count: " + h.length);
                                                this.warn(O.message), this.hls.trigger(_.ERROR, {
                                                    type: Ve.MEDIA_ERROR,
                                                    details: de.AUDIO_TRACK_LOAD_ERROR,
                                                    fatal: !0,
                                                    error: O
                                                })
                                            }
                                        } else this.shouldReloadPlaylist(c) && this.setAudioTrack(this.trackId)
                                    }
                                }, a.onError = function(r, i) {
                                    i.fatal || !i.context || i.context.type === C.AUDIO_TRACK && i.context.id === this.trackId && (!this.groupIds || this.groupIds.indexOf(i.context.groupId) !== -1) && (this.requestScheduled = -1, this.checkRetry(i))
                                }, a.setAudioOption = function(r) {
                                    var i = this.hls;
                                    if (i.config.audioPreference = r, r) {
                                        var o = this.allAudioTracks;
                                        if (this.selectDefaultTrack = !1, o.length) {
                                            var u = this.currentTrack;
                                            if (u && Jr(r, u, ii)) return u;
                                            var c = jr(r, this.tracksInGroup, ii);
                                            if (c > -1) {
                                                var h = this.tracksInGroup[c];
                                                return this.setAudioTrack(c), h
                                            } else if (u) {
                                                var f = i.loadLevel;
                                                f === -1 && (f = i.firstAutoLevel);
                                                var m = zr(r, i.levels, o, f, ii);
                                                if (m === -1) return null;
                                                i.nextLoadLevel = m
                                            }
                                            if (r.channels || r.audioCodec) {
                                                var p = jr(r, o);
                                                if (p > -1) return o[p]
                                            }
                                        }
                                    }
                                    return null
                                }, a.setAudioTrack = function(r) {
                                    var i = this.tracksInGroup;
                                    if (r < 0 || r >= i.length) {
                                        this.warn("Invalid audio track id: " + r);
                                        return
                                    }
                                    this.clearTimer(), this.selectDefaultTrack = !1;
                                    var o = this.currentTrack,
                                        u = i[r],
                                        c = u.details && !u.details.live;
                                    if (!(r === this.trackId && u === o && c) && (this.log("Switching to audio-track " + r + ' "' + u.name + '" lang:' + u.lang + " group:" + u.groupId + " channels:" + u.channels), this.trackId = r, this.currentTrack = u, this.hls.trigger(_.AUDIO_TRACK_SWITCHING, Ee({}, u)), !c)) {
                                        var h = this.switchParams(u.url, o == null ? void 0 : o.details, u.details);
                                        this.loadPlaylist(h)
                                    }
                                }, a.findTrackId = function(r) {
                                    for (var i = this.tracksInGroup, o = 0; o < i.length; o++) {
                                        var u = i[o];
                                        if (!(this.selectDefaultTrack && !u.default) && (!r || Jr(r, u, ii))) return o
                                    }
                                    if (r) {
                                        for (var c = r.name, h = r.lang, f = r.assocLang, m = r.characteristics, p = r.audioCodec, E = r.channels, S = 0; S < i.length; S++) {
                                            var L = i[S];
                                            if (Jr({
                                                    name: c,
                                                    lang: h,
                                                    assocLang: f,
                                                    characteristics: m,
                                                    audioCodec: p,
                                                    channels: E
                                                }, L, ii)) return S
                                        }
                                        for (var I = 0; I < i.length; I++) {
                                            var O = i[I];
                                            if (Tn(r.attrs, O.attrs, ["LANGUAGE", "ASSOC-LANGUAGE", "CHARACTERISTICS"])) return I
                                        }
                                        for (var U = 0; U < i.length; U++) {
                                            var G = i[U];
                                            if (Tn(r.attrs, G.attrs, ["LANGUAGE"])) return U
                                        }
                                    }
                                    return -1
                                }, a.loadPlaylist = function(r) {
                                    var i = this.currentTrack;
                                    if (this.shouldLoadPlaylist(i) && i) {
                                        l.prototype.loadPlaylist.call(this);
                                        var o = i.id,
                                            u = i.groupId,
                                            c = i.url;
                                        if (r) try {
                                            c = r.addDirectives(c)
                                        } catch (h) {
                                            this.warn("Could not construct new URL with HLS Delivery Directives: " + h)
                                        }
                                        this.log("loading audio-track playlist " + o + ' "' + i.name + '" lang:' + i.lang + " group:" + u), this.clearTimer(), this.hls.trigger(_.AUDIO_TRACK_LOADING, {
                                            url: c,
                                            id: o,
                                            groupId: u,
                                            deliveryDirectives: r || null
                                        })
                                    }
                                }, tt(n, [{
                                    key: "allAudioTracks",
                                    get: function() {
                                        return this.tracks
                                    }
                                }, {
                                    key: "audioTracks",
                                    get: function() {
                                        return this.tracksInGroup
                                    }
                                }, {
                                    key: "audioTrack",
                                    get: function() {
                                        return this.trackId
                                    },
                                    set: function(r) {
                                        this.selectDefaultTrack = !1, this.setAudioTrack(r)
                                    }
                                }]), n
                            }(It),
                            wo = 500,
                            ru = function(l) {
                                x(n, l);

                                function n(e, r, i) {
                                    var o;
                                    return o = l.call(this, e, r, i, "[subtitle-stream-controller]", H.SUBTITLE) || this, o.currentTrackId = -1, o.tracksBuffered = [], o.mainDetails = null, o._registerListeners(), o
                                }
                                var a = n.prototype;
                                return a.onHandlerDestroying = function() {
                                    this._unregisterListeners(), l.prototype.onHandlerDestroying.call(this), this.mainDetails = null
                                }, a._registerListeners = function() {
                                    var r = this.hls;
                                    r.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.on(_.MANIFEST_LOADING, this.onManifestLoading, this), r.on(_.LEVEL_LOADED, this.onLevelLoaded, this), r.on(_.ERROR, this.onError, this), r.on(_.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), r.on(_.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this), r.on(_.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), r.on(_.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this), r.on(_.BUFFER_FLUSHING, this.onBufferFlushing, this), r.on(_.FRAG_BUFFERED, this.onFragBuffered, this)
                                }, a._unregisterListeners = function() {
                                    var r = this.hls;
                                    r.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.off(_.MANIFEST_LOADING, this.onManifestLoading, this), r.off(_.LEVEL_LOADED, this.onLevelLoaded, this), r.off(_.ERROR, this.onError, this), r.off(_.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), r.off(_.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this), r.off(_.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), r.off(_.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this), r.off(_.BUFFER_FLUSHING, this.onBufferFlushing, this), r.off(_.FRAG_BUFFERED, this.onFragBuffered, this)
                                }, a.startLoad = function(r) {
                                    this.stopLoad(), this.state = rt.IDLE, this.setInterval(wo), this.nextLoadPosition = this.startPosition = this.lastCurrentTime = r, this.tick()
                                }, a.onManifestLoading = function() {
                                    this.mainDetails = null, this.fragmentTracker.removeAllFragments()
                                }, a.onMediaDetaching = function() {
                                    this.tracksBuffered = [], l.prototype.onMediaDetaching.call(this)
                                }, a.onLevelLoaded = function(r, i) {
                                    this.mainDetails = i.details
                                }, a.onSubtitleFragProcessed = function(r, i) {
                                    var o = i.frag,
                                        u = i.success;
                                    if (this.fragPrevious = o, this.state = rt.IDLE, !!u) {
                                        var c = this.tracksBuffered[this.currentTrackId];
                                        if (c) {
                                            for (var h, f = o.start, m = 0; m < c.length; m++)
                                                if (f >= c[m].start && f <= c[m].end) {
                                                    h = c[m];
                                                    break
                                                }
                                            var p = o.start + o.duration;
                                            h ? h.end = p : (h = {
                                                start: f,
                                                end: p
                                            }, c.push(h)), this.fragmentTracker.fragBuffered(o), this.fragBufferedComplete(o, null)
                                        }
                                    }
                                }, a.onBufferFlushing = function(r, i) {
                                    var o = i.startOffset,
                                        u = i.endOffset;
                                    if (o === 0 && u !== Number.POSITIVE_INFINITY) {
                                        var c = u - 1;
                                        if (c <= 0) return;
                                        i.endOffsetSubtitles = Math.max(0, c), this.tracksBuffered.forEach(function(h) {
                                            for (var f = 0; f < h.length;) {
                                                if (h[f].end <= c) {
                                                    h.shift();
                                                    continue
                                                } else if (h[f].start < c) h[f].start = c;
                                                else break;
                                                f++
                                            }
                                        }), this.fragmentTracker.removeFragmentsInRange(o, c, H.SUBTITLE)
                                    }
                                }, a.onFragBuffered = function(r, i) {
                                    if (!this.loadedmetadata && i.frag.type === H.MAIN) {
                                        var o;
                                        (o = this.media) != null && o.buffered.length && (this.loadedmetadata = !0)
                                    }
                                }, a.onError = function(r, i) {
                                    var o = i.frag;
                                    (o == null ? void 0 : o.type) === H.SUBTITLE && (i.details === de.FRAG_GAP && this.fragmentTracker.fragBuffered(o, !0), this.fragCurrent && this.fragCurrent.abortRequests(), this.state !== rt.STOPPED && (this.state = rt.IDLE))
                                }, a.onSubtitleTracksUpdated = function(r, i) {
                                    var o = this,
                                        u = i.subtitleTracks;
                                    if (this.levels && Mn(this.levels, u)) {
                                        this.levels = u.map(function(c) {
                                            return new gi(c)
                                        });
                                        return
                                    }
                                    this.tracksBuffered = [], this.levels = u.map(function(c) {
                                        var h = new gi(c);
                                        return o.tracksBuffered[h.id] = [], h
                                    }), this.fragmentTracker.removeFragmentsInRange(0, Number.POSITIVE_INFINITY, H.SUBTITLE), this.fragPrevious = null, this.mediaBuffer = null
                                }, a.onSubtitleTrackSwitch = function(r, i) {
                                    var o;
                                    if (this.currentTrackId = i.id, !((o = this.levels) != null && o.length) || this.currentTrackId === -1) {
                                        this.clearInterval();
                                        return
                                    }
                                    var u = this.levels[this.currentTrackId];
                                    u != null && u.details ? this.mediaBuffer = this.mediaBufferTimeRanges : this.mediaBuffer = null, u && this.setInterval(wo)
                                }, a.onSubtitleTrackLoaded = function(r, i) {
                                    var o, u = this.currentTrackId,
                                        c = this.levels,
                                        h = i.details,
                                        f = i.id;
                                    if (!c) {
                                        this.warn("Subtitle tracks were reset while loading level " + f);
                                        return
                                    }
                                    var m = c[f];
                                    if (!(f >= c.length || !m)) {
                                        this.log("Subtitle track " + f + " loaded [" + h.startSN + "," + h.endSN + "]" + (h.lastPartSn ? "[part-" + h.lastPartSn + "-" + h.lastPartIndex + "]" : "") + ",duration:" + h.totalduration), this.mediaBuffer = this.mediaBufferTimeRanges;
                                        var p = 0;
                                        if (h.live || (o = m.details) != null && o.live) {
                                            var E = this.mainDetails;
                                            if (h.deltaUpdateFailed || !E) return;
                                            var S = E.fragments[0];
                                            if (!m.details) h.hasProgramDateTime && E.hasProgramDateTime ? (bo(h, E), p = h.fragments[0].start) : S && (p = S.start, Dr(h, p));
                                            else {
                                                var L;
                                                p = this.alignPlaylists(h, m.details, (L = this.levelLastLoaded) == null ? void 0 : L.details), p === 0 && S && (p = S.start, Dr(h, p))
                                            }
                                        }
                                        if (m.details = h, this.levelLastLoaded = m, f === u && (!this.startFragRequested && (this.mainDetails || !h.live) && this.setStartPosition(this.mainDetails || h, p), this.tick(), h.live && !this.fragCurrent && this.media && this.state === rt.IDLE)) {
                                            var I = A(null, h.fragments, this.media.currentTime, 0);
                                            I || (this.warn("Subtitle playlist not aligned with playback"), m.details = void 0)
                                        }
                                    }
                                }, a._handleFragmentLoadComplete = function(r) {
                                    var i = this,
                                        o = r.frag,
                                        u = r.payload,
                                        c = o.decryptdata,
                                        h = this.hls;
                                    if (!this.fragContextChanged(o) && u && u.byteLength > 0 && c != null && c.key && c.iv && c.method === "AES-128") {
                                        var f = performance.now();
                                        this.decrypter.decrypt(new Uint8Array(u), c.key.buffer, c.iv.buffer).catch(function(m) {
                                            throw h.trigger(_.ERROR, {
                                                type: Ve.MEDIA_ERROR,
                                                details: de.FRAG_DECRYPT_ERROR,
                                                fatal: !1,
                                                error: m,
                                                reason: m.message,
                                                frag: o
                                            }), m
                                        }).then(function(m) {
                                            var p = performance.now();
                                            h.trigger(_.FRAG_DECRYPTED, {
                                                frag: o,
                                                payload: m,
                                                stats: {
                                                    tstart: f,
                                                    tdecrypt: p
                                                }
                                            })
                                        }).catch(function(m) {
                                            i.warn(m.name + ": " + m.message), i.state = rt.IDLE
                                        })
                                    }
                                }, a.doTick = function() {
                                    if (!this.media) {
                                        this.state = rt.IDLE;
                                        return
                                    }
                                    if (this.state === rt.IDLE) {
                                        var r = this.currentTrackId,
                                            i = this.levels,
                                            o = i == null ? void 0 : i[r];
                                        if (!o || !i.length || !o.details) return;
                                        var u = this.config,
                                            c = this.getLoadPosition(),
                                            h = Or.bufferedInfo(this.tracksBuffered[this.currentTrackId] || [], c, u.maxBufferHole),
                                            f = h.end,
                                            m = h.len,
                                            p = this.getFwdBufferInfo(this.media, H.MAIN),
                                            E = o.details,
                                            S = this.getMaxBufferLength(p == null ? void 0 : p.len) + E.levelTargetDuration;
                                        if (m > S) return;
                                        var L = E.fragments,
                                            I = L.length,
                                            O = E.edge,
                                            U = null,
                                            G = this.fragPrevious;
                                        if (f < O) {
                                            var ee = u.maxFragLookUpTolerance,
                                                te = f > O - ee ? 0 : ee;
                                            U = A(G, L, Math.max(L[0].start, f), te), !U && G && G.start < L[0].start && (U = L[0])
                                        } else U = L[I - 1];
                                        if (!U) return;
                                        if (U = this.mapToInitFragWhenRequired(U), U.sn !== "initSegment") {
                                            var _e = U.sn - E.startSN,
                                                me = L[_e - 1];
                                            me && me.cc === U.cc && this.fragmentTracker.getState(me) === ui.NOT_LOADED && (U = me)
                                        }
                                        this.fragmentTracker.getState(U) === ui.NOT_LOADED && this.loadFragment(U, o, f)
                                    }
                                }, a.getMaxBufferLength = function(r) {
                                    var i = l.prototype.getMaxBufferLength.call(this);
                                    return r ? Math.max(i, r) : i
                                }, a.loadFragment = function(r, i, o) {
                                    this.fragCurrent = r, r.sn === "initSegment" ? this._loadInitSegment(r, i) : (this.startFragRequested = !0, l.prototype.loadFragment.call(this, r, i, o))
                                }, tt(n, [{
                                    key: "mediaBufferTimeRanges",
                                    get: function() {
                                        return new ch(this.tracksBuffered[this.currentTrackId] || [])
                                    }
                                }]), n
                            }(To),
                            ch = function(n) {
                                this.buffered = void 0;
                                var a = function(r, i, o) {
                                    if (i = i >>> 0, i > o - 1) throw new DOMException("Failed to execute '" + r + "' on 'TimeRanges': The index provided (" + i + ") is greater than the maximum bound (" + o + ")");
                                    return n[i][r]
                                };
                                this.buffered = {
                                    get length() {
                                        return n.length
                                    },
                                    end: function(r) {
                                        return a("end", r, n.length)
                                    },
                                    start: function(r) {
                                        return a("start", r, n.length)
                                    }
                                }
                            },
                            hh = function(l) {
                                x(n, l);

                                function n(e) {
                                    var r;
                                    return r = l.call(this, e, "[subtitle-track-controller]") || this, r.media = null, r.tracks = [], r.groupIds = null, r.tracksInGroup = [], r.trackId = -1, r.currentTrack = null, r.selectDefaultTrack = !0, r.queuedDefaultTrack = -1, r.asyncPollTrackChange = function() {
                                        return r.pollTrackChange(0)
                                    }, r.useTextTrackPolling = !1, r.subtitlePollingInterval = -1, r._subtitleDisplay = !0, r.onTextTracksChanged = function() {
                                        if (r.useTextTrackPolling || self.clearInterval(r.subtitlePollingInterval), !(!r.media || !r.hls.config.renderTextTracksNatively)) {
                                            for (var i = null, o = qt(r.media.textTracks), u = 0; u < o.length; u++)
                                                if (o[u].mode === "hidden") i = o[u];
                                                else if (o[u].mode === "showing") {
                                                i = o[u];
                                                break
                                            }
                                            var c = r.findTrackForTextTrack(i);
                                            r.subtitleTrack !== c && r.setSubtitleTrack(c)
                                        }
                                    }, r.registerListeners(), r
                                }
                                var a = n.prototype;
                                return a.destroy = function() {
                                    this.unregisterListeners(), this.tracks.length = 0, this.tracksInGroup.length = 0, this.currentTrack = null, this.onTextTracksChanged = this.asyncPollTrackChange = null, l.prototype.destroy.call(this)
                                }, a.registerListeners = function() {
                                    var r = this.hls;
                                    r.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.on(_.MANIFEST_LOADING, this.onManifestLoading, this), r.on(_.MANIFEST_PARSED, this.onManifestParsed, this), r.on(_.LEVEL_LOADING, this.onLevelLoading, this), r.on(_.LEVEL_SWITCHING, this.onLevelSwitching, this), r.on(_.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), r.on(_.ERROR, this.onError, this)
                                }, a.unregisterListeners = function() {
                                    var r = this.hls;
                                    r.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.off(_.MANIFEST_LOADING, this.onManifestLoading, this), r.off(_.MANIFEST_PARSED, this.onManifestParsed, this), r.off(_.LEVEL_LOADING, this.onLevelLoading, this), r.off(_.LEVEL_SWITCHING, this.onLevelSwitching, this), r.off(_.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), r.off(_.ERROR, this.onError, this)
                                }, a.onMediaAttached = function(r, i) {
                                    this.media = i.media, this.media && (this.queuedDefaultTrack > -1 && (this.subtitleTrack = this.queuedDefaultTrack, this.queuedDefaultTrack = -1), this.useTextTrackPolling = !(this.media.textTracks && "onchange" in this.media.textTracks), this.useTextTrackPolling ? this.pollTrackChange(500) : this.media.textTracks.addEventListener("change", this.asyncPollTrackChange))
                                }, a.pollTrackChange = function(r) {
                                    self.clearInterval(this.subtitlePollingInterval), this.subtitlePollingInterval = self.setInterval(this.onTextTracksChanged, r)
                                }, a.onMediaDetaching = function() {
                                    if (this.media) {
                                        self.clearInterval(this.subtitlePollingInterval), this.useTextTrackPolling || this.media.textTracks.removeEventListener("change", this.asyncPollTrackChange), this.trackId > -1 && (this.queuedDefaultTrack = this.trackId);
                                        var r = qt(this.media.textTracks);
                                        r.forEach(function(i) {
                                            ke(i)
                                        }), this.subtitleTrack = -1, this.media = null
                                    }
                                }, a.onManifestLoading = function() {
                                    this.tracks = [], this.groupIds = null, this.tracksInGroup = [], this.trackId = -1, this.currentTrack = null, this.selectDefaultTrack = !0
                                }, a.onManifestParsed = function(r, i) {
                                    this.tracks = i.subtitleTracks
                                }, a.onSubtitleTrackLoaded = function(r, i) {
                                    var o = i.id,
                                        u = i.groupId,
                                        c = i.details,
                                        h = this.tracksInGroup[o];
                                    if (!h || h.groupId !== u) {
                                        this.warn("Subtitle track with id:" + o + " and group:" + u + " not found in active group " + (h == null ? void 0 : h.groupId));
                                        return
                                    }
                                    var f = h.details;
                                    h.details = i.details, this.log("Subtitle track " + o + ' "' + h.name + '" lang:' + h.lang + " group:" + u + " loaded [" + c.startSN + "-" + c.endSN + "]"), o === this.trackId && this.playlistLoaded(o, i, f)
                                }, a.onLevelLoading = function(r, i) {
                                    this.switchLevel(i.level)
                                }, a.onLevelSwitching = function(r, i) {
                                    this.switchLevel(i.level)
                                }, a.switchLevel = function(r) {
                                    var i = this.hls.levels[r];
                                    if (i) {
                                        var o = i.subtitleGroups || null,
                                            u = this.groupIds,
                                            c = this.currentTrack;
                                        if (!o || (u == null ? void 0 : u.length) !== (o == null ? void 0 : o.length) || o != null && o.some(function(L) {
                                                return (u == null ? void 0 : u.indexOf(L)) === -1
                                            })) {
                                            this.groupIds = o, this.trackId = -1, this.currentTrack = null;
                                            var h = this.tracks.filter(function(L) {
                                                return !o || o.indexOf(L.groupId) !== -1
                                            });
                                            if (h.length) this.selectDefaultTrack && !h.some(function(L) {
                                                return L.default
                                            }) && (this.selectDefaultTrack = !1), h.forEach(function(L, I) {
                                                L.id = I
                                            });
                                            else if (!c && !this.tracksInGroup.length) return;
                                            this.tracksInGroup = h;
                                            var f = this.hls.config.subtitlePreference;
                                            if (!c && f) {
                                                this.selectDefaultTrack = !1;
                                                var m = jr(f, h);
                                                if (m > -1) c = h[m];
                                                else {
                                                    var p = jr(f, this.tracks);
                                                    c = this.tracks[p]
                                                }
                                            }
                                            var E = this.findTrackId(c);
                                            E === -1 && c && (E = this.findTrackId(null));
                                            var S = {
                                                subtitleTracks: h
                                            };
                                            this.log("Updating subtitle tracks, " + h.length + ' track(s) found in "' + (o == null ? void 0 : o.join(",")) + '" group-id'), this.hls.trigger(_.SUBTITLE_TRACKS_UPDATED, S), E !== -1 && this.trackId === -1 && this.setSubtitleTrack(E)
                                        } else this.shouldReloadPlaylist(c) && this.setSubtitleTrack(this.trackId)
                                    }
                                }, a.findTrackId = function(r) {
                                    for (var i = this.tracksInGroup, o = this.selectDefaultTrack, u = 0; u < i.length; u++) {
                                        var c = i[u];
                                        if (!(o && !c.default || !o && !r) && (!r || Jr(c, r))) return u
                                    }
                                    if (r) {
                                        for (var h = 0; h < i.length; h++) {
                                            var f = i[h];
                                            if (Tn(r.attrs, f.attrs, ["LANGUAGE", "ASSOC-LANGUAGE", "CHARACTERISTICS"])) return h
                                        }
                                        for (var m = 0; m < i.length; m++) {
                                            var p = i[m];
                                            if (Tn(r.attrs, p.attrs, ["LANGUAGE"])) return m
                                        }
                                    }
                                    return -1
                                }, a.findTrackForTextTrack = function(r) {
                                    if (r)
                                        for (var i = this.tracksInGroup, o = 0; o < i.length; o++) {
                                            var u = i[o];
                                            if (jn(u, r)) return o
                                        }
                                    return -1
                                }, a.onError = function(r, i) {
                                    i.fatal || !i.context || i.context.type === C.SUBTITLE_TRACK && i.context.id === this.trackId && (!this.groupIds || this.groupIds.indexOf(i.context.groupId) !== -1) && this.checkRetry(i)
                                }, a.setSubtitleOption = function(r) {
                                    if (this.hls.config.subtitlePreference = r, r) {
                                        var i = this.allSubtitleTracks;
                                        if (this.selectDefaultTrack = !1, i.length) {
                                            var o = this.currentTrack;
                                            if (o && Jr(r, o)) return o;
                                            var u = jr(r, this.tracksInGroup);
                                            if (u > -1) {
                                                var c = this.tracksInGroup[u];
                                                return this.setSubtitleTrack(u), c
                                            } else {
                                                if (o) return null;
                                                var h = jr(r, i);
                                                if (h > -1) return i[h]
                                            }
                                        }
                                    }
                                    return null
                                }, a.loadPlaylist = function(r) {
                                    l.prototype.loadPlaylist.call(this);
                                    var i = this.currentTrack;
                                    if (this.shouldLoadPlaylist(i) && i) {
                                        var o = i.id,
                                            u = i.groupId,
                                            c = i.url;
                                        if (r) try {
                                            c = r.addDirectives(c)
                                        } catch (h) {
                                            this.warn("Could not construct new URL with HLS Delivery Directives: " + h)
                                        }
                                        this.log("Loading subtitle playlist for id " + o), this.hls.trigger(_.SUBTITLE_TRACK_LOADING, {
                                            url: c,
                                            id: o,
                                            groupId: u,
                                            deliveryDirectives: r || null
                                        })
                                    }
                                }, a.toggleTrackModes = function() {
                                    var r = this.media;
                                    if (r) {
                                        var i = qt(r.textTracks),
                                            o = this.currentTrack,
                                            u;
                                        if (o && (u = i.filter(function(h) {
                                                return jn(o, h)
                                            })[0], u || this.warn('Unable to find subtitle TextTrack with name "' + o.name + '" and language "' + o.lang + '"')), [].slice.call(i).forEach(function(h) {
                                                h.mode !== "disabled" && h !== u && (h.mode = "disabled")
                                            }), u) {
                                            var c = this.subtitleDisplay ? "showing" : "hidden";
                                            u.mode !== c && (u.mode = c)
                                        }
                                    }
                                }, a.setSubtitleTrack = function(r) {
                                    var i = this.tracksInGroup;
                                    if (!this.media) {
                                        this.queuedDefaultTrack = r;
                                        return
                                    }
                                    if (r < -1 || r >= i.length || !Ge(r)) {
                                        this.warn("Invalid subtitle track id: " + r);
                                        return
                                    }
                                    this.clearTimer(), this.selectDefaultTrack = !1;
                                    var o = this.currentTrack,
                                        u = i[r] || null;
                                    if (this.trackId = r, this.currentTrack = u, this.toggleTrackModes(), !u) {
                                        this.hls.trigger(_.SUBTITLE_TRACK_SWITCH, {
                                            id: r
                                        });
                                        return
                                    }
                                    var c = !!u.details && !u.details.live;
                                    if (!(r === this.trackId && u === o && c)) {
                                        this.log("Switching to subtitle-track " + r + (u ? ' "' + u.name + '" lang:' + u.lang + " group:" + u.groupId : ""));
                                        var h = u.id,
                                            f = u.groupId,
                                            m = f === void 0 ? "" : f,
                                            p = u.name,
                                            E = u.type,
                                            S = u.url;
                                        this.hls.trigger(_.SUBTITLE_TRACK_SWITCH, {
                                            id: h,
                                            groupId: m,
                                            name: p,
                                            type: E,
                                            url: S
                                        });
                                        var L = this.switchParams(u.url, o == null ? void 0 : o.details, u.details);
                                        this.loadPlaylist(L)
                                    }
                                }, tt(n, [{
                                    key: "subtitleDisplay",
                                    get: function() {
                                        return this._subtitleDisplay
                                    },
                                    set: function(r) {
                                        this._subtitleDisplay = r, this.trackId > -1 && this.toggleTrackModes()
                                    }
                                }, {
                                    key: "allSubtitleTracks",
                                    get: function() {
                                        return this.tracks
                                    }
                                }, {
                                    key: "subtitleTracks",
                                    get: function() {
                                        return this.tracksInGroup
                                    }
                                }, {
                                    key: "subtitleTrack",
                                    get: function() {
                                        return this.trackId
                                    },
                                    set: function(r) {
                                        this.selectDefaultTrack = !1, this.setSubtitleTrack(r)
                                    }
                                }]), n
                            }(It),
                            qd = function() {
                                function l(a) {
                                    this.buffers = void 0, this.queues = {
                                        video: [],
                                        audio: [],
                                        audiovideo: []
                                    }, this.buffers = a
                                }
                                var n = l.prototype;
                                return n.append = function(e, r, i) {
                                    var o = this.queues[r];
                                    o.push(e), o.length === 1 && !i && this.executeNext(r)
                                }, n.insertAbort = function(e, r) {
                                    var i = this.queues[r];
                                    i.unshift(e), this.executeNext(r)
                                }, n.appendBlocker = function(e) {
                                    var r, i = new Promise(function(u) {
                                            r = u
                                        }),
                                        o = {
                                            execute: r,
                                            onStart: function() {},
                                            onComplete: function() {},
                                            onError: function() {}
                                        };
                                    return this.append(o, e), i
                                }, n.executeNext = function(e) {
                                    var r = this.queues[e];
                                    if (r.length) {
                                        var i = r[0];
                                        try {
                                            i.execute()
                                        } catch (u) {
                                            V.warn('[buffer-operation-queue]: Exception executing "' + e + '" SourceBuffer operation: ' + u), i.onError(u);
                                            var o = this.buffers[e];
                                            o != null && o.updating || this.shiftAndExecuteNext(e)
                                        }
                                    }
                                }, n.shiftAndExecuteNext = function(e) {
                                    this.queues[e].shift(), this.executeNext(e)
                                }, n.current = function(e) {
                                    return this.queues[e][0]
                                }, l
                            }(),
                            $d = /(avc[1234]|hvc1|hev1|dvh[1e]|vp09|av01)(?:\.[^.,]+)+/,
                            jd = function() {
                                function l(a) {
                                    var e = this;
                                    this.details = null, this._objectUrl = null, this.operationQueue = void 0, this.listeners = void 0, this.hls = void 0, this.bufferCodecEventsExpected = 0, this._bufferCodecEventsTotal = 0, this.media = null, this.mediaSource = null, this.lastMpegAudioChunk = null, this.appendSource = void 0, this.appendErrors = {
                                        audio: 0,
                                        video: 0,
                                        audiovideo: 0
                                    }, this.tracks = {}, this.pendingTracks = {}, this.sourceBuffer = void 0, this.log = void 0, this.warn = void 0, this.error = void 0, this._onEndStreaming = function(i) {
                                        e.hls && e.hls.pauseBuffering()
                                    }, this._onStartStreaming = function(i) {
                                        e.hls && e.hls.resumeBuffering()
                                    }, this._onMediaSourceOpen = function() {
                                        var i = e.media,
                                            o = e.mediaSource;
                                        e.log("Media source opened"), i && (i.removeEventListener("emptied", e._onMediaEmptied), e.updateMediaElementDuration(), e.hls.trigger(_.MEDIA_ATTACHED, {
                                            media: i,
                                            mediaSource: o
                                        })), o && o.removeEventListener("sourceopen", e._onMediaSourceOpen), e.checkPendingTracks()
                                    }, this._onMediaSourceClose = function() {
                                        e.log("Media source closed")
                                    }, this._onMediaSourceEnded = function() {
                                        e.log("Media source ended")
                                    }, this._onMediaEmptied = function() {
                                        var i = e.mediaSrc,
                                            o = e._objectUrl;
                                        i !== o && V.error("Media element src was set while attaching MediaSource (" + o + " > " + i + ")")
                                    }, this.hls = a;
                                    var r = "[buffer-controller]";
                                    this.appendSource = ea(Ni(a.config.preferManagedMediaSource)), this.log = V.log.bind(V, r), this.warn = V.warn.bind(V, r), this.error = V.error.bind(V, r), this._initSourceBuffer(), this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.hasSourceTypes = function() {
                                    return this.getSourceBufferTypes().length > 0 || Object.keys(this.pendingTracks).length > 0
                                }, n.destroy = function() {
                                    this.unregisterListeners(), this.details = null, this.lastMpegAudioChunk = null, this.hls = null
                                }, n.registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.MEDIA_ATTACHING, this.onMediaAttaching, this), e.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), e.on(_.MANIFEST_LOADING, this.onManifestLoading, this), e.on(_.MANIFEST_PARSED, this.onManifestParsed, this), e.on(_.BUFFER_RESET, this.onBufferReset, this), e.on(_.BUFFER_APPENDING, this.onBufferAppending, this), e.on(_.BUFFER_CODECS, this.onBufferCodecs, this), e.on(_.BUFFER_EOS, this.onBufferEos, this), e.on(_.BUFFER_FLUSHING, this.onBufferFlushing, this), e.on(_.LEVEL_UPDATED, this.onLevelUpdated, this), e.on(_.FRAG_PARSED, this.onFragParsed, this), e.on(_.FRAG_CHANGED, this.onFragChanged, this)
                                }, n.unregisterListeners = function() {
                                    var e = this.hls;
                                    e.off(_.MEDIA_ATTACHING, this.onMediaAttaching, this), e.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), e.off(_.MANIFEST_LOADING, this.onManifestLoading, this), e.off(_.MANIFEST_PARSED, this.onManifestParsed, this), e.off(_.BUFFER_RESET, this.onBufferReset, this), e.off(_.BUFFER_APPENDING, this.onBufferAppending, this), e.off(_.BUFFER_CODECS, this.onBufferCodecs, this), e.off(_.BUFFER_EOS, this.onBufferEos, this), e.off(_.BUFFER_FLUSHING, this.onBufferFlushing, this), e.off(_.LEVEL_UPDATED, this.onLevelUpdated, this), e.off(_.FRAG_PARSED, this.onFragParsed, this), e.off(_.FRAG_CHANGED, this.onFragChanged, this)
                                }, n._initSourceBuffer = function() {
                                    this.sourceBuffer = {}, this.operationQueue = new qd(this.sourceBuffer), this.listeners = {
                                        audio: [],
                                        video: [],
                                        audiovideo: []
                                    }, this.appendErrors = {
                                        audio: 0,
                                        video: 0,
                                        audiovideo: 0
                                    }, this.lastMpegAudioChunk = null
                                }, n.onManifestLoading = function() {
                                    this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = 0, this.details = null
                                }, n.onManifestParsed = function(e, r) {
                                    var i = 2;
                                    (r.audio && !r.video || !r.altAudio) && (i = 1), this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = i, this.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected")
                                }, n.onMediaAttaching = function(e, r) {
                                    var i = this.media = r.media,
                                        o = Ni(this.appendSource);
                                    if (i && o) {
                                        var u, c = this.mediaSource = new o;
                                        this.log("created media source: " + ((u = c.constructor) == null ? void 0 : u.name)), c.addEventListener("sourceopen", this._onMediaSourceOpen), c.addEventListener("sourceended", this._onMediaSourceEnded), c.addEventListener("sourceclose", this._onMediaSourceClose), this.appendSource && (c.addEventListener("startstreaming", this._onStartStreaming), c.addEventListener("endstreaming", this._onEndStreaming));
                                        var h = this._objectUrl = self.URL.createObjectURL(c);
                                        if (this.appendSource) try {
                                            i.removeAttribute("src");
                                            var f = self.ManagedMediaSource;
                                            i.disableRemotePlayback = i.disableRemotePlayback || f && c instanceof f, zd(i), iu(i, h), i.load()
                                        } catch (m) {
                                            i.src = h
                                        } else i.src = h;
                                        i.addEventListener("emptied", this._onMediaEmptied)
                                    }
                                }, n.onMediaDetaching = function() {
                                    var e = this.media,
                                        r = this.mediaSource,
                                        i = this._objectUrl;
                                    if (r) {
                                        if (this.log("media source detaching"), r.readyState === "open") try {
                                            r.endOfStream()
                                        } catch (o) {
                                            this.warn("onMediaDetaching: " + o.message + " while calling endOfStream")
                                        }
                                        this.onBufferReset(), r.removeEventListener("sourceopen", this._onMediaSourceOpen), r.removeEventListener("sourceended", this._onMediaSourceEnded), r.removeEventListener("sourceclose", this._onMediaSourceClose), this.appendSource && (r.removeEventListener("startstreaming", this._onStartStreaming), r.removeEventListener("endstreaming", this._onEndStreaming)), e && (e.removeEventListener("emptied", this._onMediaEmptied), i && self.URL.revokeObjectURL(i), this.mediaSrc === i ? (e.removeAttribute("src"), this.appendSource && zd(e), e.load()) : this.warn("media|source.src was changed by a third party - skip cleanup")), this.mediaSource = null, this.media = null, this._objectUrl = null, this.bufferCodecEventsExpected = this._bufferCodecEventsTotal, this.pendingTracks = {}, this.tracks = {}
                                    }
                                    this.hls.trigger(_.MEDIA_DETACHED, void 0)
                                }, n.onBufferReset = function() {
                                    var e = this;
                                    this.getSourceBufferTypes().forEach(function(r) {
                                        e.resetBuffer(r)
                                    }), this._initSourceBuffer(), this.hls.resumeBuffering()
                                }, n.resetBuffer = function(e) {
                                    var r = this.sourceBuffer[e];
                                    try {
                                        if (r) {
                                            var i;
                                            this.removeBufferListeners(e), this.sourceBuffer[e] = void 0, (i = this.mediaSource) != null && i.sourceBuffers.length && this.mediaSource.removeSourceBuffer(r)
                                        }
                                    } catch (o) {
                                        this.warn("onBufferReset " + e, o)
                                    }
                                }, n.onBufferCodecs = function(e, r) {
                                    var i = this,
                                        o = this.getSourceBufferTypes().length,
                                        u = Object.keys(r);
                                    if (u.forEach(function(h) {
                                            if (o) {
                                                var f = i.tracks[h];
                                                if (f && typeof f.buffer.changeType == "function") {
                                                    var m, p = r[h],
                                                        E = p.id,
                                                        S = p.codec,
                                                        L = p.levelCodec,
                                                        I = p.container,
                                                        O = p.metadata,
                                                        U = Da(f.codec, f.levelCodec),
                                                        G = U == null ? void 0 : U.replace($d, "$1"),
                                                        ee = Da(S, L),
                                                        te = (m = ee) == null ? void 0 : m.replace($d, "$1");
                                                    if (ee && G !== te) {
                                                        h.slice(0, 5) === "audio" && (ee = Vi(ee, i.appendSource));
                                                        var _e = I + ";codecs=" + ee;
                                                        i.appendChangeType(h, _e), i.log("switching codec " + U + " to " + ee), i.tracks[h] = {
                                                            buffer: f.buffer,
                                                            codec: S,
                                                            container: I,
                                                            levelCodec: L,
                                                            metadata: O,
                                                            id: E
                                                        }
                                                    }
                                                }
                                            } else i.pendingTracks[h] = r[h]
                                        }), !o) {
                                        var c = Math.max(this.bufferCodecEventsExpected - 1, 0);
                                        this.bufferCodecEventsExpected !== c && (this.log(c + " bufferCodec event(s) expected " + u.join(",")), this.bufferCodecEventsExpected = c), this.mediaSource && this.mediaSource.readyState === "open" && this.checkPendingTracks()
                                    }
                                }, n.appendChangeType = function(e, r) {
                                    var i = this,
                                        o = this.operationQueue,
                                        u = {
                                            execute: function() {
                                                var h = i.sourceBuffer[e];
                                                h && (i.log("changing " + e + " sourceBuffer type to " + r), h.changeType(r)), o.shiftAndExecuteNext(e)
                                            },
                                            onStart: function() {},
                                            onComplete: function() {},
                                            onError: function(h) {
                                                i.warn("Failed to change " + e + " SourceBuffer type", h)
                                            }
                                        };
                                    o.append(u, e, !!this.pendingTracks[e])
                                }, n.onBufferAppending = function(e, r) {
                                    var i = this,
                                        o = this.hls,
                                        u = this.operationQueue,
                                        c = this.tracks,
                                        h = r.data,
                                        f = r.type,
                                        m = r.frag,
                                        p = r.part,
                                        E = r.chunkMeta,
                                        S = E.buffering[f],
                                        L = self.performance.now();
                                    S.start = L;
                                    var I = m.stats.buffering,
                                        O = p ? p.stats.buffering : null;
                                    I.start === 0 && (I.start = L), O && O.start === 0 && (O.start = L);
                                    var U = c.audio,
                                        G = !1;
                                    f === "audio" && (U == null ? void 0 : U.container) === "audio/mpeg" && (G = !this.lastMpegAudioChunk || E.id === 1 || this.lastMpegAudioChunk.sn !== E.sn, this.lastMpegAudioChunk = E);
                                    var ee = m.start,
                                        te = {
                                            execute: function() {
                                                if (S.executeStart = self.performance.now(), G) {
                                                    var me = i.sourceBuffer[f];
                                                    if (me) {
                                                        var ae = ee - me.timestampOffset;
                                                        Math.abs(ae) >= .1 && (i.log("Updating audio SourceBuffer timestampOffset to " + ee + " (delta: " + ae + ") sn: " + m.sn + ")"), me.timestampOffset = ee)
                                                    }
                                                }
                                                i.appendExecutor(h, f)
                                            },
                                            onStart: function() {},
                                            onComplete: function() {
                                                var me = self.performance.now();
                                                S.executeEnd = S.end = me, I.first === 0 && (I.first = me), O && O.first === 0 && (O.first = me);
                                                var ae = i.sourceBuffer,
                                                    Se = {};
                                                for (var ve in ae) Se[ve] = Or.getBuffered(ae[ve]);
                                                i.appendErrors[f] = 0, f === "audio" || f === "video" ? i.appendErrors.audiovideo = 0 : (i.appendErrors.audio = 0, i.appendErrors.video = 0), i.hls.trigger(_.BUFFER_APPENDED, {
                                                    type: f,
                                                    frag: m,
                                                    part: p,
                                                    chunkMeta: E,
                                                    parent: m.type,
                                                    timeRanges: Se
                                                })
                                            },
                                            onError: function(me) {
                                                var ae = {
                                                    type: Ve.MEDIA_ERROR,
                                                    parent: m.type,
                                                    details: de.BUFFER_APPEND_ERROR,
                                                    sourceBufferName: f,
                                                    frag: m,
                                                    part: p,
                                                    chunkMeta: E,
                                                    error: me,
                                                    err: me,
                                                    fatal: !1
                                                };
                                                if (me.code === DOMException.QUOTA_EXCEEDED_ERR) ae.details = de.BUFFER_FULL_ERROR;
                                                else {
                                                    var Se = ++i.appendErrors[f];
                                                    ae.details = de.BUFFER_APPEND_ERROR, i.warn("Failed " + Se + "/" + o.config.appendErrorMaxRetry + ' times to append segment in "' + f + '" sourceBuffer'), Se >= o.config.appendErrorMaxRetry && (ae.fatal = !0)
                                                }
                                                o.trigger(_.ERROR, ae)
                                            }
                                        };
                                    u.append(te, f, !!this.pendingTracks[f])
                                }, n.onBufferFlushing = function(e, r) {
                                    var i = this,
                                        o = this.operationQueue,
                                        u = function(h) {
                                            return {
                                                execute: i.removeExecutor.bind(i, h, r.startOffset, r.endOffset),
                                                onStart: function() {},
                                                onComplete: function() {
                                                    i.hls.trigger(_.BUFFER_FLUSHED, {
                                                        type: h
                                                    })
                                                },
                                                onError: function(m) {
                                                    i.warn("Failed to remove from " + h + " SourceBuffer", m)
                                                }
                                            }
                                        };
                                    r.type ? o.append(u(r.type), r.type) : this.getSourceBufferTypes().forEach(function(c) {
                                        o.append(u(c), c)
                                    })
                                }, n.onFragParsed = function(e, r) {
                                    var i = this,
                                        o = r.frag,
                                        u = r.part,
                                        c = [],
                                        h = u ? u.elementaryStreams : o.elementaryStreams;
                                    h[Xt.AUDIOVIDEO] ? c.push("audiovideo") : (h[Xt.AUDIO] && c.push("audio"), h[Xt.VIDEO] && c.push("video"));
                                    var f = function() {
                                        var p = self.performance.now();
                                        o.stats.buffering.end = p, u && (u.stats.buffering.end = p);
                                        var E = u ? u.stats : o.stats;
                                        i.hls.trigger(_.FRAG_BUFFERED, {
                                            frag: o,
                                            part: u,
                                            stats: E,
                                            id: o.type
                                        })
                                    };
                                    c.length === 0 && this.warn("Fragments must have at least one ElementaryStreamType set. type: " + o.type + " level: " + o.level + " sn: " + o.sn), this.blockBuffers(f, c)
                                }, n.onFragChanged = function(e, r) {
                                    this.trimBuffers()
                                }, n.onBufferEos = function(e, r) {
                                    var i = this,
                                        o = this.getSourceBufferTypes().reduce(function(u, c) {
                                            var h = i.sourceBuffer[c];
                                            return h && (!r.type || r.type === c) && (h.ending = !0, h.ended || (h.ended = !0, i.log(c + " sourceBuffer now EOS"))), u && !!(!h || h.ended)
                                        }, !0);
                                    o && (this.log("Queueing mediaSource.endOfStream()"), this.blockBuffers(function() {
                                        i.getSourceBufferTypes().forEach(function(c) {
                                            var h = i.sourceBuffer[c];
                                            h && (h.ending = !1)
                                        });
                                        var u = i.mediaSource;
                                        if (!u || u.readyState !== "open") {
                                            u && i.log("Could not call mediaSource.endOfStream(). mediaSource.readyState: " + u.readyState);
                                            return
                                        }
                                        i.log("Calling mediaSource.endOfStream()"), u.endOfStream()
                                    }))
                                }, n.onLevelUpdated = function(e, r) {
                                    var i = r.details;
                                    i.fragments.length && (this.details = i, this.getSourceBufferTypes().length ? this.blockBuffers(this.updateMediaElementDuration.bind(this)) : this.updateMediaElementDuration())
                                }, n.trimBuffers = function() {
                                    var e = this.hls,
                                        r = this.details,
                                        i = this.media;
                                    if (!(!i || r === null)) {
                                        var o = this.getSourceBufferTypes();
                                        if (o.length) {
                                            var u = e.config,
                                                c = i.currentTime,
                                                h = r.levelTargetDuration,
                                                f = r.live && u.liveBackBufferLength !== null ? u.liveBackBufferLength : u.backBufferLength;
                                            if (Ge(f) && f > 0) {
                                                var m = Math.max(f, h),
                                                    p = Math.floor(c / h) * h - m;
                                                this.flushBackBuffer(c, h, p)
                                            }
                                            if (Ge(u.frontBufferFlushThreshold) && u.frontBufferFlushThreshold > 0) {
                                                var E = Math.max(u.maxBufferLength, u.frontBufferFlushThreshold),
                                                    S = Math.max(E, h),
                                                    L = Math.floor(c / h) * h + S;
                                                this.flushFrontBuffer(c, h, L)
                                            }
                                        }
                                    }
                                }, n.flushBackBuffer = function(e, r, i) {
                                    var o = this,
                                        u = this.details,
                                        c = this.sourceBuffer,
                                        h = this.getSourceBufferTypes();
                                    h.forEach(function(f) {
                                        var m = c[f];
                                        if (m) {
                                            var p = Or.getBuffered(m);
                                            if (p.length > 0 && i > p.start(0)) {
                                                if (o.hls.trigger(_.BACK_BUFFER_REACHED, {
                                                        bufferEnd: i
                                                    }), u != null && u.live) o.hls.trigger(_.LIVE_BACK_BUFFER_REACHED, {
                                                    bufferEnd: i
                                                });
                                                else if (m.ended && p.end(p.length - 1) - e < r * 2) {
                                                    o.log("Cannot flush " + f + " back buffer while SourceBuffer is in ended state");
                                                    return
                                                }
                                                o.hls.trigger(_.BUFFER_FLUSHING, {
                                                    startOffset: 0,
                                                    endOffset: i,
                                                    type: f
                                                })
                                            }
                                        }
                                    })
                                }, n.flushFrontBuffer = function(e, r, i) {
                                    var o = this,
                                        u = this.sourceBuffer,
                                        c = this.getSourceBufferTypes();
                                    c.forEach(function(h) {
                                        var f = u[h];
                                        if (f) {
                                            var m = Or.getBuffered(f),
                                                p = m.length;
                                            if (p < 2) return;
                                            var E = m.start(p - 1),
                                                S = m.end(p - 1);
                                            if (i > E || e >= E && e <= S) return;
                                            if (f.ended && e - S < 2 * r) {
                                                o.log("Cannot flush " + h + " front buffer while SourceBuffer is in ended state");
                                                return
                                            }
                                            o.hls.trigger(_.BUFFER_FLUSHING, {
                                                startOffset: E,
                                                endOffset: 1 / 0,
                                                type: h
                                            })
                                        }
                                    })
                                }, n.updateMediaElementDuration = function() {
                                    if (!(!this.details || !this.media || !this.mediaSource || this.mediaSource.readyState !== "open")) {
                                        var e = this.details,
                                            r = this.hls,
                                            i = this.media,
                                            o = this.mediaSource,
                                            u = e.fragments[0].start + e.totalduration,
                                            c = i.duration,
                                            h = Ge(o.duration) ? o.duration : 0;
                                        e.live && r.config.liveDurationInfinity ? (o.duration = 1 / 0, this.updateSeekableRange(e)) : (u > h && u > c || !Ge(c)) && (this.log("Updating Media Source duration to " + u.toFixed(3)), o.duration = u)
                                    }
                                }, n.updateSeekableRange = function(e) {
                                    var r = this.mediaSource,
                                        i = e.fragments,
                                        o = i.length;
                                    if (o && e.live && r != null && r.setLiveSeekableRange) {
                                        var u = Math.max(0, i[0].start),
                                            c = Math.max(u, u + e.totalduration);
                                        this.log("Media Source duration is set to " + r.duration + ". Setting seekable range to " + u + "-" + c + "."), r.setLiveSeekableRange(u, c)
                                    }
                                }, n.checkPendingTracks = function() {
                                    var e = this.bufferCodecEventsExpected,
                                        r = this.operationQueue,
                                        i = this.pendingTracks,
                                        o = Object.keys(i).length;
                                    if (o && (!e || o === 2 || "audiovideo" in i)) {
                                        this.createSourceBuffers(i), this.pendingTracks = {};
                                        var u = this.getSourceBufferTypes();
                                        if (u.length) this.hls.trigger(_.BUFFER_CREATED, {
                                            tracks: this.tracks
                                        }), u.forEach(function(h) {
                                            r.executeNext(h)
                                        });
                                        else {
                                            var c = new Error("could not create source buffer for media codec(s)");
                                            this.hls.trigger(_.ERROR, {
                                                type: Ve.MEDIA_ERROR,
                                                details: de.BUFFER_INCOMPATIBLE_CODECS_ERROR,
                                                fatal: !0,
                                                error: c,
                                                reason: c.message
                                            })
                                        }
                                    }
                                }, n.createSourceBuffers = function(e) {
                                    var r = this,
                                        i = this.sourceBuffer,
                                        o = this.mediaSource;
                                    if (!o) throw Error("createSourceBuffers called when mediaSource was null");
                                    var u = function(f) {
                                        if (!i[f]) {
                                            var m, p = e[f];
                                            if (!p) throw Error("source buffer exists for track " + f + ", however track does not");
                                            var E = ((m = p.levelCodec) == null ? void 0 : m.indexOf(",")) === -1 ? p.levelCodec : p.codec;
                                            E && f.slice(0, 5) === "audio" && (E = Vi(E, r.appendSource));
                                            var S = p.container + ";codecs=" + E;
                                            r.log("creating sourceBuffer(" + S + ")");
                                            try {
                                                var L = i[f] = o.addSourceBuffer(S),
                                                    I = f;
                                                r.addBufferListener(I, "updatestart", r._onSBUpdateStart), r.addBufferListener(I, "updateend", r._onSBUpdateEnd), r.addBufferListener(I, "error", r._onSBUpdateError), r.appendSource && r.addBufferListener(I, "bufferedchange", function(O, U) {
                                                    var G = U.removedRanges;
                                                    G != null && G.length && r.hls.trigger(_.BUFFER_FLUSHED, {
                                                        type: f
                                                    })
                                                }), r.tracks[f] = {
                                                    buffer: L,
                                                    codec: E,
                                                    container: p.container,
                                                    levelCodec: p.levelCodec,
                                                    metadata: p.metadata,
                                                    id: p.id
                                                }
                                            } catch (O) {
                                                r.error("error while trying to add sourceBuffer: " + O.message), r.hls.trigger(_.ERROR, {
                                                    type: Ve.MEDIA_ERROR,
                                                    details: de.BUFFER_ADD_CODEC_ERROR,
                                                    fatal: !1,
                                                    error: O,
                                                    sourceBufferName: f,
                                                    mimeType: S
                                                })
                                            }
                                        }
                                    };
                                    for (var c in e) u(c)
                                }, n._onSBUpdateStart = function(e) {
                                    var r = this.operationQueue,
                                        i = r.current(e);
                                    i.onStart()
                                }, n._onSBUpdateEnd = function(e) {
                                    var r;
                                    if (((r = this.mediaSource) == null ? void 0 : r.readyState) === "closed") {
                                        this.resetBuffer(e);
                                        return
                                    }
                                    var i = this.operationQueue,
                                        o = i.current(e);
                                    o.onComplete(), i.shiftAndExecuteNext(e)
                                }, n._onSBUpdateError = function(e, r) {
                                    var i, o = new Error(e + " SourceBuffer error. MediaSource readyState: " + ((i = this.mediaSource) == null ? void 0 : i.readyState));
                                    this.error("" + o, r), this.hls.trigger(_.ERROR, {
                                        type: Ve.MEDIA_ERROR,
                                        details: de.BUFFER_APPENDING_ERROR,
                                        sourceBufferName: e,
                                        error: o,
                                        fatal: !1
                                    });
                                    var u = this.operationQueue.current(e);
                                    u && u.onError(o)
                                }, n.removeExecutor = function(e, r, i) {
                                    var o = this.media,
                                        u = this.mediaSource,
                                        c = this.operationQueue,
                                        h = this.sourceBuffer,
                                        f = h[e];
                                    if (!o || !u || !f) {
                                        this.warn("Attempting to remove from the " + e + " SourceBuffer, but it does not exist"), c.shiftAndExecuteNext(e);
                                        return
                                    }
                                    var m = Ge(o.duration) ? o.duration : 1 / 0,
                                        p = Ge(u.duration) ? u.duration : 1 / 0,
                                        E = Math.max(0, r),
                                        S = Math.min(i, m, p);
                                    S > E && (!f.ending || f.ended) ? (f.ended = !1, this.log("Removing [" + E + "," + S + "] from the " + e + " SourceBuffer"), f.remove(E, S)) : c.shiftAndExecuteNext(e)
                                }, n.appendExecutor = function(e, r) {
                                    var i = this.sourceBuffer[r];
                                    if (!i) {
                                        if (!this.pendingTracks[r]) throw new Error("Attempting to append to the " + r + " SourceBuffer, but it does not exist");
                                        return
                                    }
                                    i.ended = !1, i.appendBuffer(e)
                                }, n.blockBuffers = function(e, r) {
                                    var i = this;
                                    if (r === void 0 && (r = this.getSourceBufferTypes()), !r.length) {
                                        this.log("Blocking operation requested, but no SourceBuffers exist"), Promise.resolve().then(e);
                                        return
                                    }
                                    var o = this.operationQueue,
                                        u = r.map(function(c) {
                                            return o.appendBlocker(c)
                                        });
                                    Promise.all(u).then(function() {
                                        e(), r.forEach(function(c) {
                                            var h = i.sourceBuffer[c];
                                            h != null && h.updating || o.shiftAndExecuteNext(c)
                                        })
                                    })
                                }, n.getSourceBufferTypes = function() {
                                    return Object.keys(this.sourceBuffer)
                                }, n.addBufferListener = function(e, r, i) {
                                    var o = this.sourceBuffer[e];
                                    if (o) {
                                        var u = i.bind(this, e);
                                        this.listeners[e].push({
                                            event: r,
                                            listener: u
                                        }), o.addEventListener(r, u)
                                    }
                                }, n.removeBufferListeners = function(e) {
                                    var r = this.sourceBuffer[e];
                                    r && this.listeners[e].forEach(function(i) {
                                        r.removeEventListener(i.event, i.listener)
                                    })
                                }, tt(l, [{
                                    key: "mediaSrc",
                                    get: function() {
                                        var e, r, i = ((e = this.media) == null || (r = e.querySelector) == null ? void 0 : r.call(e, "source")) || this.media;
                                        return i == null ? void 0 : i.src
                                    }
                                }]), l
                            }();

                        function zd(l) {
                            var n = l.querySelectorAll("source");
                            [].slice.call(n).forEach(function(a) {
                                l.removeChild(a)
                            })
                        }

                        function iu(l, n) {
                            var a = self.document.createElement("source");
                            a.type = "video/mp4", a.src = n, l.appendChild(a)
                        }
                        var Cl = {
                                42: 225,
                                92: 233,
                                94: 237,
                                95: 243,
                                96: 250,
                                123: 231,
                                124: 247,
                                125: 209,
                                126: 241,
                                127: 9608,
                                128: 174,
                                129: 176,
                                130: 189,
                                131: 191,
                                132: 8482,
                                133: 162,
                                134: 163,
                                135: 9834,
                                136: 224,
                                137: 32,
                                138: 232,
                                139: 226,
                                140: 234,
                                141: 238,
                                142: 244,
                                143: 251,
                                144: 193,
                                145: 201,
                                146: 211,
                                147: 218,
                                148: 220,
                                149: 252,
                                150: 8216,
                                151: 161,
                                152: 42,
                                153: 8217,
                                154: 9473,
                                155: 169,
                                156: 8480,
                                157: 8226,
                                158: 8220,
                                159: 8221,
                                160: 192,
                                161: 194,
                                162: 199,
                                163: 200,
                                164: 202,
                                165: 203,
                                166: 235,
                                167: 206,
                                168: 207,
                                169: 239,
                                170: 212,
                                171: 217,
                                172: 249,
                                173: 219,
                                174: 171,
                                175: 187,
                                176: 195,
                                177: 227,
                                178: 205,
                                179: 204,
                                180: 236,
                                181: 210,
                                182: 242,
                                183: 213,
                                184: 245,
                                185: 123,
                                186: 125,
                                187: 92,
                                188: 94,
                                189: 95,
                                190: 124,
                                191: 8764,
                                192: 196,
                                193: 228,
                                194: 214,
                                195: 246,
                                196: 223,
                                197: 165,
                                198: 164,
                                199: 9475,
                                200: 197,
                                201: 229,
                                202: 216,
                                203: 248,
                                204: 9487,
                                205: 9491,
                                206: 9495,
                                207: 9499
                            },
                            Xd = function(n) {
                                return String.fromCharCode(Cl[n] || n)
                            },
                            os = 15,
                            Ys = 100,
                            Zd = {
                                17: 1,
                                18: 3,
                                21: 5,
                                22: 7,
                                23: 9,
                                16: 11,
                                19: 12,
                                20: 14
                            },
                            Qd = {
                                17: 2,
                                18: 4,
                                21: 6,
                                22: 8,
                                23: 10,
                                19: 13,
                                20: 15
                            },
                            fh = {
                                25: 1,
                                26: 3,
                                29: 5,
                                30: 7,
                                31: 9,
                                24: 11,
                                27: 12,
                                28: 14
                            },
                            Jd = {
                                25: 2,
                                26: 4,
                                29: 6,
                                30: 8,
                                31: 10,
                                27: 13,
                                28: 15
                            },
                            Dl = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"],
                            ec = function() {
                                function l() {
                                    this.time = null, this.verboseLevel = 0
                                }
                                var n = l.prototype;
                                return n.log = function(e, r) {
                                    if (this.verboseLevel >= e) {
                                        var i = typeof r == "function" ? r() : r;
                                        V.log(this.time + " [" + e + "] " + i)
                                    }
                                }, l
                            }(),
                            ls = function(n) {
                                for (var a = [], e = 0; e < n.length; e++) a.push(n[e].toString(16));
                                return a
                            },
                            us = function() {
                                function l() {
                                    this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1
                                }
                                var n = l.prototype;
                                return n.reset = function() {
                                    this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1
                                }, n.setStyles = function(e) {
                                    for (var r = ["foreground", "underline", "italics", "background", "flash"], i = 0; i < r.length; i++) {
                                        var o = r[i];
                                        e.hasOwnProperty(o) && (this[o] = e[o])
                                    }
                                }, n.isDefault = function() {
                                    return this.foreground === "white" && !this.underline && !this.italics && this.background === "black" && !this.flash
                                }, n.equals = function(e) {
                                    return this.foreground === e.foreground && this.underline === e.underline && this.italics === e.italics && this.background === e.background && this.flash === e.flash
                                }, n.copy = function(e) {
                                    this.foreground = e.foreground, this.underline = e.underline, this.italics = e.italics, this.background = e.background, this.flash = e.flash
                                }, n.toString = function() {
                                    return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
                                }, l
                            }(),
                            au = function() {
                                function l() {
                                    this.uchar = " ", this.penState = new us
                                }
                                var n = l.prototype;
                                return n.reset = function() {
                                    this.uchar = " ", this.penState.reset()
                                }, n.setChar = function(e, r) {
                                    this.uchar = e, this.penState.copy(r)
                                }, n.setPenState = function(e) {
                                    this.penState.copy(e)
                                }, n.equals = function(e) {
                                    return this.uchar === e.uchar && this.penState.equals(e.penState)
                                }, n.copy = function(e) {
                                    this.uchar = e.uchar, this.penState.copy(e.penState)
                                }, n.isEmpty = function() {
                                    return this.uchar === " " && this.penState.isDefault()
                                }, l
                            }(),
                            nu = function() {
                                function l(a) {
                                    this.chars = [], this.pos = 0, this.currPenState = new us, this.cueStartTime = null, this.logger = void 0;
                                    for (var e = 0; e < Ys; e++) this.chars.push(new au);
                                    this.logger = a
                                }
                                var n = l.prototype;
                                return n.equals = function(e) {
                                    for (var r = 0; r < Ys; r++)
                                        if (!this.chars[r].equals(e.chars[r])) return !1;
                                    return !0
                                }, n.copy = function(e) {
                                    for (var r = 0; r < Ys; r++) this.chars[r].copy(e.chars[r])
                                }, n.isEmpty = function() {
                                    for (var e = !0, r = 0; r < Ys; r++)
                                        if (!this.chars[r].isEmpty()) {
                                            e = !1;
                                            break
                                        }
                                    return e
                                }, n.setCursor = function(e) {
                                    this.pos !== e && (this.pos = e), this.pos < 0 ? (this.logger.log(3, "Negative cursor position " + this.pos), this.pos = 0) : this.pos > Ys && (this.logger.log(3, "Too large cursor position " + this.pos), this.pos = Ys)
                                }, n.moveCursor = function(e) {
                                    var r = this.pos + e;
                                    if (e > 1)
                                        for (var i = this.pos + 1; i < r + 1; i++) this.chars[i].setPenState(this.currPenState);
                                    this.setCursor(r)
                                }, n.backSpace = function() {
                                    this.moveCursor(-1), this.chars[this.pos].setChar(" ", this.currPenState)
                                }, n.insertChar = function(e) {
                                    var r = this;
                                    e >= 144 && this.backSpace();
                                    var i = Xd(e);
                                    if (this.pos >= Ys) {
                                        this.logger.log(0, function() {
                                            return "Cannot insert " + e.toString(16) + " (" + i + ") at position " + r.pos + ". Skipping it!"
                                        });
                                        return
                                    }
                                    this.chars[this.pos].setChar(i, this.currPenState), this.moveCursor(1)
                                }, n.clearFromPos = function(e) {
                                    var r;
                                    for (r = e; r < Ys; r++) this.chars[r].reset()
                                }, n.clear = function() {
                                    this.clearFromPos(0), this.pos = 0, this.currPenState.reset()
                                }, n.clearToEndOfRow = function() {
                                    this.clearFromPos(this.pos)
                                }, n.getTextString = function() {
                                    for (var e = [], r = !0, i = 0; i < Ys; i++) {
                                        var o = this.chars[i].uchar;
                                        o !== " " && (r = !1), e.push(o)
                                    }
                                    return r ? "" : e.join("")
                                }, n.setPenStyles = function(e) {
                                    this.currPenState.setStyles(e);
                                    var r = this.chars[this.pos];
                                    r.setPenState(this.currPenState)
                                }, l
                            }(),
                            su = function() {
                                function l(a) {
                                    this.rows = [], this.currRow = os - 1, this.nrRollUpRows = null, this.lastOutputScreen = null, this.logger = void 0;
                                    for (var e = 0; e < os; e++) this.rows.push(new nu(a));
                                    this.logger = a
                                }
                                var n = l.prototype;
                                return n.reset = function() {
                                    for (var e = 0; e < os; e++) this.rows[e].clear();
                                    this.currRow = os - 1
                                }, n.equals = function(e) {
                                    for (var r = !0, i = 0; i < os; i++)
                                        if (!this.rows[i].equals(e.rows[i])) {
                                            r = !1;
                                            break
                                        }
                                    return r
                                }, n.copy = function(e) {
                                    for (var r = 0; r < os; r++) this.rows[r].copy(e.rows[r])
                                }, n.isEmpty = function() {
                                    for (var e = !0, r = 0; r < os; r++)
                                        if (!this.rows[r].isEmpty()) {
                                            e = !1;
                                            break
                                        }
                                    return e
                                }, n.backSpace = function() {
                                    var e = this.rows[this.currRow];
                                    e.backSpace()
                                }, n.clearToEndOfRow = function() {
                                    var e = this.rows[this.currRow];
                                    e.clearToEndOfRow()
                                }, n.insertChar = function(e) {
                                    var r = this.rows[this.currRow];
                                    r.insertChar(e)
                                }, n.setPen = function(e) {
                                    var r = this.rows[this.currRow];
                                    r.setPenStyles(e)
                                }, n.moveCursor = function(e) {
                                    var r = this.rows[this.currRow];
                                    r.moveCursor(e)
                                }, n.setCursor = function(e) {
                                    this.logger.log(2, "setCursor: " + e);
                                    var r = this.rows[this.currRow];
                                    r.setCursor(e)
                                }, n.setPAC = function(e) {
                                    this.logger.log(2, function() {
                                        return "pacData = " + JSON.stringify(e)
                                    });
                                    var r = e.row - 1;
                                    if (this.nrRollUpRows && r < this.nrRollUpRows - 1 && (r = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== r) {
                                        for (var i = 0; i < os; i++) this.rows[i].clear();
                                        var o = this.currRow + 1 - this.nrRollUpRows,
                                            u = this.lastOutputScreen;
                                        if (u) {
                                            var c = u.rows[o].cueStartTime,
                                                h = this.logger.time;
                                            if (c !== null && h !== null && c < h)
                                                for (var f = 0; f < this.nrRollUpRows; f++) this.rows[r - this.nrRollUpRows + f + 1].copy(u.rows[o + f])
                                        }
                                    }
                                    this.currRow = r;
                                    var m = this.rows[this.currRow];
                                    if (e.indent !== null) {
                                        var p = e.indent,
                                            E = Math.max(p - 1, 0);
                                        m.setCursor(e.indent), e.color = m.chars[E].penState.foreground
                                    }
                                    var S = {
                                        foreground: e.color,
                                        underline: e.underline,
                                        italics: e.italics,
                                        background: "black",
                                        flash: !1
                                    };
                                    this.setPen(S)
                                }, n.setBkgData = function(e) {
                                    this.logger.log(2, function() {
                                        return "bkgData = " + JSON.stringify(e)
                                    }), this.backSpace(), this.setPen(e), this.insertChar(32)
                                }, n.setRollUpRows = function(e) {
                                    this.nrRollUpRows = e
                                }, n.rollUp = function() {
                                    var e = this;
                                    if (this.nrRollUpRows === null) {
                                        this.logger.log(3, "roll_up but nrRollUpRows not set yet");
                                        return
                                    }
                                    this.logger.log(1, function() {
                                        return e.getDisplayText()
                                    });
                                    var r = this.currRow + 1 - this.nrRollUpRows,
                                        i = this.rows.splice(r, 1)[0];
                                    i.clear(), this.rows.splice(this.currRow, 0, i), this.logger.log(2, "Rolling up")
                                }, n.getDisplayText = function(e) {
                                    e = e || !1;
                                    for (var r = [], i = "", o = -1, u = 0; u < os; u++) {
                                        var c = this.rows[u].getTextString();
                                        c && (o = u + 1, e ? r.push("Row " + o + ": '" + c + "'") : r.push(c.trim()))
                                    }
                                    return r.length > 0 && (e ? i = "[" + r.join(" | ") + "]" : i = r.join(`
`)), i
                                }, n.getTextAndFormat = function() {
                                    return this.rows
                                }, l
                            }(),
                            qu = function() {
                                function l(a, e, r) {
                                    this.chNr = void 0, this.outputFilter = void 0, this.mode = void 0, this.verbose = void 0, this.displayedMemory = void 0, this.nonDisplayedMemory = void 0, this.lastOutputScreen = void 0, this.currRollUpRow = void 0, this.writeScreen = void 0, this.cueStartTime = void 0, this.logger = void 0, this.chNr = a, this.outputFilter = e, this.mode = null, this.verbose = 0, this.displayedMemory = new su(r), this.nonDisplayedMemory = new su(r), this.lastOutputScreen = new su(r), this.currRollUpRow = this.displayedMemory.rows[os - 1], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null, this.logger = r
                                }
                                var n = l.prototype;
                                return n.reset = function() {
                                    this.mode = null, this.displayedMemory.reset(), this.nonDisplayedMemory.reset(), this.lastOutputScreen.reset(), this.outputFilter.reset(), this.currRollUpRow = this.displayedMemory.rows[os - 1], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null
                                }, n.getHandler = function() {
                                    return this.outputFilter
                                }, n.setHandler = function(e) {
                                    this.outputFilter = e
                                }, n.setPAC = function(e) {
                                    this.writeScreen.setPAC(e)
                                }, n.setBkgData = function(e) {
                                    this.writeScreen.setBkgData(e)
                                }, n.setMode = function(e) {
                                    e !== this.mode && (this.mode = e, this.logger.log(2, function() {
                                        return "MODE=" + e
                                    }), this.mode === "MODE_POP-ON" ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory, this.writeScreen.reset()), this.mode !== "MODE_ROLL-UP" && (this.displayedMemory.nrRollUpRows = null, this.nonDisplayedMemory.nrRollUpRows = null), this.mode = e)
                                }, n.insertChars = function(e) {
                                    for (var r = this, i = 0; i < e.length; i++) this.writeScreen.insertChar(e[i]);
                                    var o = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
                                    this.logger.log(2, function() {
                                        return o + ": " + r.writeScreen.getDisplayText(!0)
                                    }), (this.mode === "MODE_PAINT-ON" || this.mode === "MODE_ROLL-UP") && (this.logger.log(1, function() {
                                        return "DISPLAYED: " + r.displayedMemory.getDisplayText(!0)
                                    }), this.outputDataUpdate())
                                }, n.ccRCL = function() {
                                    this.logger.log(2, "RCL - Resume Caption Loading"), this.setMode("MODE_POP-ON")
                                }, n.ccBS = function() {
                                    this.logger.log(2, "BS - BackSpace"), this.mode !== "MODE_TEXT" && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate())
                                }, n.ccAOF = function() {}, n.ccAON = function() {}, n.ccDER = function() {
                                    this.logger.log(2, "DER- Delete to End of Row"), this.writeScreen.clearToEndOfRow(), this.outputDataUpdate()
                                }, n.ccRU = function(e) {
                                    this.logger.log(2, "RU(" + e + ") - Roll Up"), this.writeScreen = this.displayedMemory, this.setMode("MODE_ROLL-UP"), this.writeScreen.setRollUpRows(e)
                                }, n.ccFON = function() {
                                    this.logger.log(2, "FON - Flash On"), this.writeScreen.setPen({
                                        flash: !0
                                    })
                                }, n.ccRDC = function() {
                                    this.logger.log(2, "RDC - Resume Direct Captioning"), this.setMode("MODE_PAINT-ON")
                                }, n.ccTR = function() {
                                    this.logger.log(2, "TR"), this.setMode("MODE_TEXT")
                                }, n.ccRTD = function() {
                                    this.logger.log(2, "RTD"), this.setMode("MODE_TEXT")
                                }, n.ccEDM = function() {
                                    this.logger.log(2, "EDM - Erase Displayed Memory"), this.displayedMemory.reset(), this.outputDataUpdate(!0)
                                }, n.ccCR = function() {
                                    this.logger.log(2, "CR - Carriage Return"), this.writeScreen.rollUp(), this.outputDataUpdate(!0)
                                }, n.ccENM = function() {
                                    this.logger.log(2, "ENM - Erase Non-displayed Memory"), this.nonDisplayedMemory.reset()
                                }, n.ccEOC = function() {
                                    var e = this;
                                    if (this.logger.log(2, "EOC - End Of Caption"), this.mode === "MODE_POP-ON") {
                                        var r = this.displayedMemory;
                                        this.displayedMemory = this.nonDisplayedMemory, this.nonDisplayedMemory = r, this.writeScreen = this.nonDisplayedMemory, this.logger.log(1, function() {
                                            return "DISP: " + e.displayedMemory.getDisplayText()
                                        })
                                    }
                                    this.outputDataUpdate(!0)
                                }, n.ccTO = function(e) {
                                    this.logger.log(2, "TO(" + e + ") - Tab Offset"), this.writeScreen.moveCursor(e)
                                }, n.ccMIDROW = function(e) {
                                    var r = {
                                        flash: !1
                                    };
                                    if (r.underline = e % 2 === 1, r.italics = e >= 46, r.italics) r.foreground = "white";
                                    else {
                                        var i = Math.floor(e / 2) - 16,
                                            o = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"];
                                        r.foreground = o[i]
                                    }
                                    this.logger.log(2, "MIDROW: " + JSON.stringify(r)), this.writeScreen.setPen(r)
                                }, n.outputDataUpdate = function(e) {
                                    e === void 0 && (e = !1);
                                    var r = this.logger.time;
                                    r !== null && this.outputFilter && (this.cueStartTime === null && !this.displayedMemory.isEmpty() ? this.cueStartTime = r : this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue(this.cueStartTime, r, this.lastOutputScreen), e && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue(), this.cueStartTime = this.displayedMemory.isEmpty() ? null : r), this.lastOutputScreen.copy(this.displayedMemory))
                                }, n.cueSplitAtTime = function(e) {
                                    this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, e, this.displayedMemory), this.cueStartTime = e))
                                }, l
                            }(),
                            tc = function() {
                                function l(a, e, r) {
                                    this.channels = void 0, this.currentChannel = 0, this.cmdHistory = mh(), this.logger = void 0;
                                    var i = this.logger = new ec;
                                    this.channels = [null, new qu(a, e, i), new qu(a + 1, r, i)]
                                }
                                var n = l.prototype;
                                return n.getHandler = function(e) {
                                    return this.channels[e].getHandler()
                                }, n.setHandler = function(e, r) {
                                    this.channels[e].setHandler(r)
                                }, n.addData = function(e, r) {
                                    var i = this;
                                    this.logger.time = e;
                                    for (var o = function(f) {
                                            var m = r[f] & 127,
                                                p = r[f + 1] & 127,
                                                E = !1,
                                                S = null;
                                            if (m === 0 && p === 0) return 0;
                                            i.logger.log(3, function() {
                                                return "[" + ls([r[f], r[f + 1]]) + "] -> (" + ls([m, p]) + ")"
                                            });
                                            var L = i.cmdHistory,
                                                I = m >= 16 && m <= 31;
                                            if (I) {
                                                if (Ro(m, p, L)) return ou(null, null, L), i.logger.log(3, function() {
                                                    return "Repeated command (" + ls([m, p]) + ") is dropped"
                                                }), 0;
                                                ou(m, p, i.cmdHistory), E = i.parseCmd(m, p), E || (E = i.parseMidrow(m, p)), E || (E = i.parsePAC(m, p)), E || (E = i.parseBackgroundAttributes(m, p))
                                            } else ou(null, null, L);
                                            if (!E && (S = i.parseChars(m, p), S)) {
                                                var O = i.currentChannel;
                                                if (O && O > 0) {
                                                    var U = i.channels[O];
                                                    U.insertChars(S)
                                                } else i.logger.log(2, "No channel found yet. TEXT-MODE?")
                                            }!E && !S && i.logger.log(2, function() {
                                                return "Couldn't parse cleaned data " + ls([m, p]) + " orig: " + ls([r[f], r[f + 1]])
                                            })
                                        }, u, c = 0; c < r.length; c += 2) u = o(c)
                                }, n.parseCmd = function(e, r) {
                                    var i = (e === 20 || e === 28 || e === 21 || e === 29) && r >= 32 && r <= 47,
                                        o = (e === 23 || e === 31) && r >= 33 && r <= 35;
                                    if (!(i || o)) return !1;
                                    var u = e === 20 || e === 21 || e === 23 ? 1 : 2,
                                        c = this.channels[u];
                                    return e === 20 || e === 21 || e === 28 || e === 29 ? r === 32 ? c.ccRCL() : r === 33 ? c.ccBS() : r === 34 ? c.ccAOF() : r === 35 ? c.ccAON() : r === 36 ? c.ccDER() : r === 37 ? c.ccRU(2) : r === 38 ? c.ccRU(3) : r === 39 ? c.ccRU(4) : r === 40 ? c.ccFON() : r === 41 ? c.ccRDC() : r === 42 ? c.ccTR() : r === 43 ? c.ccRTD() : r === 44 ? c.ccEDM() : r === 45 ? c.ccCR() : r === 46 ? c.ccENM() : r === 47 && c.ccEOC() : c.ccTO(r - 32), this.currentChannel = u, !0
                                }, n.parseMidrow = function(e, r) {
                                    var i = 0;
                                    if ((e === 17 || e === 25) && r >= 32 && r <= 47) {
                                        if (e === 17 ? i = 1 : i = 2, i !== this.currentChannel) return this.logger.log(0, "Mismatch channel in midrow parsing"), !1;
                                        var o = this.channels[i];
                                        return o ? (o.ccMIDROW(r), this.logger.log(3, function() {
                                            return "MIDROW (" + ls([e, r]) + ")"
                                        }), !0) : !1
                                    }
                                    return !1
                                }, n.parsePAC = function(e, r) {
                                    var i, o = (e >= 17 && e <= 23 || e >= 25 && e <= 31) && r >= 64 && r <= 127,
                                        u = (e === 16 || e === 24) && r >= 64 && r <= 95;
                                    if (!(o || u)) return !1;
                                    var c = e <= 23 ? 1 : 2;
                                    r >= 64 && r <= 95 ? i = c === 1 ? Zd[e] : fh[e] : i = c === 1 ? Qd[e] : Jd[e];
                                    var h = this.channels[c];
                                    return h ? (h.setPAC(this.interpretPAC(i, r)), this.currentChannel = c, !0) : !1
                                }, n.interpretPAC = function(e, r) {
                                    var i, o = {
                                        color: null,
                                        italics: !1,
                                        indent: null,
                                        underline: !1,
                                        row: e
                                    };
                                    return r > 95 ? i = r - 96 : i = r - 64, o.underline = (i & 1) === 1, i <= 13 ? o.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(i / 2)] : i <= 15 ? (o.italics = !0, o.color = "white") : o.indent = Math.floor((i - 16) / 2) * 4, o
                                }, n.parseChars = function(e, r) {
                                    var i, o = null,
                                        u = null;
                                    if (e >= 25 ? (i = 2, u = e - 8) : (i = 1, u = e), u >= 17 && u <= 19) {
                                        var c;
                                        u === 17 ? c = r + 80 : u === 18 ? c = r + 112 : c = r + 144, this.logger.log(2, function() {
                                            return "Special char '" + Xd(c) + "' in channel " + i
                                        }), o = [c]
                                    } else e >= 32 && e <= 127 && (o = r === 0 ? [e] : [e, r]);
                                    return o && this.logger.log(3, function() {
                                        return "Char codes =  " + ls(o).join(",")
                                    }), o
                                }, n.parseBackgroundAttributes = function(e, r) {
                                    var i = (e === 16 || e === 24) && r >= 32 && r <= 47,
                                        o = (e === 23 || e === 31) && r >= 45 && r <= 47;
                                    if (!(i || o)) return !1;
                                    var u, c = {};
                                    e === 16 || e === 24 ? (u = Math.floor((r - 32) / 2), c.background = Dl[u], r % 2 === 1 && (c.background = c.background + "_semi")) : r === 45 ? c.background = "transparent" : (c.foreground = "black", r === 47 && (c.underline = !0));
                                    var h = e <= 23 ? 1 : 2,
                                        f = this.channels[h];
                                    return f.setBkgData(c), !0
                                }, n.reset = function() {
                                    for (var e = 0; e < Object.keys(this.channels).length; e++) {
                                        var r = this.channels[e];
                                        r && r.reset()
                                    }
                                    ou(null, null, this.cmdHistory)
                                }, n.cueSplitAtTime = function(e) {
                                    for (var r = 0; r < this.channels.length; r++) {
                                        var i = this.channels[r];
                                        i && i.cueSplitAtTime(e)
                                    }
                                }, l
                            }();

                        function ou(l, n, a) {
                            a.a = l, a.b = n
                        }

                        function Ro(l, n, a) {
                            return a.a === l && a.b === n
                        }

                        function mh() {
                            return {
                                a: null,
                                b: null
                            }
                        }
                        var Ml = function() {
                                function l(a, e) {
                                    this.timelineController = void 0, this.cueRanges = [], this.trackName = void 0, this.startTime = null, this.endTime = null, this.screen = null, this.timelineController = a, this.trackName = e
                                }
                                var n = l.prototype;
                                return n.dispatchCue = function() {
                                    this.startTime !== null && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen, this.cueRanges), this.startTime = null)
                                }, n.newCue = function(e, r, i) {
                                    (this.startTime === null || this.startTime > e) && (this.startTime = e), this.endTime = r, this.screen = i, this.timelineController.createCaptionsTrack(this.trackName)
                                }, n.reset = function() {
                                    this.cueRanges = [], this.startTime = null
                                }, l
                            }(),
                            $u = function() {
                                if (La != null && La.VTTCue) return self.VTTCue;
                                var l = ["", "lr", "rl"],
                                    n = ["start", "middle", "end", "left", "right"];

                                function a(u, c) {
                                    if (typeof c != "string" || !Array.isArray(u)) return !1;
                                    var h = c.toLowerCase();
                                    return ~u.indexOf(h) ? h : !1
                                }

                                function e(u) {
                                    return a(l, u)
                                }

                                function r(u) {
                                    return a(n, u)
                                }

                                function i(u) {
                                    for (var c = arguments.length, h = new Array(c > 1 ? c - 1 : 0), f = 1; f < c; f++) h[f - 1] = arguments[f];
                                    for (var m = 1; m < arguments.length; m++) {
                                        var p = arguments[m];
                                        for (var E in p) u[E] = p[E]
                                    }
                                    return u
                                }

                                function o(u, c, h) {
                                    var f = this,
                                        m = {
                                            enumerable: !0
                                        };
                                    f.hasBeenReset = !1;
                                    var p = "",
                                        E = !1,
                                        S = u,
                                        L = c,
                                        I = h,
                                        O = null,
                                        U = "",
                                        G = !0,
                                        ee = "auto",
                                        te = "start",
                                        _e = 50,
                                        me = "middle",
                                        ae = 50,
                                        Se = "middle";
                                    Object.defineProperty(f, "id", i({}, m, {
                                        get: function() {
                                            return p
                                        },
                                        set: function(Ne) {
                                            p = "" + Ne
                                        }
                                    })), Object.defineProperty(f, "pauseOnExit", i({}, m, {
                                        get: function() {
                                            return E
                                        },
                                        set: function(Ne) {
                                            E = !!Ne
                                        }
                                    })), Object.defineProperty(f, "startTime", i({}, m, {
                                        get: function() {
                                            return S
                                        },
                                        set: function(Ne) {
                                            if (typeof Ne != "number") throw new TypeError("Start time must be set to a number.");
                                            S = Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "endTime", i({}, m, {
                                        get: function() {
                                            return L
                                        },
                                        set: function(Ne) {
                                            if (typeof Ne != "number") throw new TypeError("End time must be set to a number.");
                                            L = Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "text", i({}, m, {
                                        get: function() {
                                            return I
                                        },
                                        set: function(Ne) {
                                            I = "" + Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "region", i({}, m, {
                                        get: function() {
                                            return O
                                        },
                                        set: function(Ne) {
                                            O = Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "vertical", i({}, m, {
                                        get: function() {
                                            return U
                                        },
                                        set: function(Ne) {
                                            var Ie = e(Ne);
                                            if (Ie === !1) throw new SyntaxError("An invalid or illegal string was specified.");
                                            U = Ie, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "snapToLines", i({}, m, {
                                        get: function() {
                                            return G
                                        },
                                        set: function(Ne) {
                                            G = !!Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "line", i({}, m, {
                                        get: function() {
                                            return ee
                                        },
                                        set: function(Ne) {
                                            if (typeof Ne != "number" && Ne !== "auto") throw new SyntaxError("An invalid number or illegal string was specified.");
                                            ee = Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "lineAlign", i({}, m, {
                                        get: function() {
                                            return te
                                        },
                                        set: function(Ne) {
                                            var Ie = r(Ne);
                                            if (!Ie) throw new SyntaxError("An invalid or illegal string was specified.");
                                            te = Ie, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "position", i({}, m, {
                                        get: function() {
                                            return _e
                                        },
                                        set: function(Ne) {
                                            if (Ne < 0 || Ne > 100) throw new Error("Position must be between 0 and 100.");
                                            _e = Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "positionAlign", i({}, m, {
                                        get: function() {
                                            return me
                                        },
                                        set: function(Ne) {
                                            var Ie = r(Ne);
                                            if (!Ie) throw new SyntaxError("An invalid or illegal string was specified.");
                                            me = Ie, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "size", i({}, m, {
                                        get: function() {
                                            return ae
                                        },
                                        set: function(Ne) {
                                            if (Ne < 0 || Ne > 100) throw new Error("Size must be between 0 and 100.");
                                            ae = Ne, this.hasBeenReset = !0
                                        }
                                    })), Object.defineProperty(f, "align", i({}, m, {
                                        get: function() {
                                            return Se
                                        },
                                        set: function(Ne) {
                                            var Ie = r(Ne);
                                            if (!Ie) throw new SyntaxError("An invalid or illegal string was specified.");
                                            Se = Ie, this.hasBeenReset = !0
                                        }
                                    })), f.displayState = void 0
                                }
                                return o.prototype.getCueAsHTML = function() {
                                    var u = self.WebVTT;
                                    return u.convertCueToDOMTree(self, this.text)
                                }, o
                            }(),
                            rc = function() {
                                function l() {}
                                var n = l.prototype;
                                return n.decode = function(e, r) {
                                    if (!e) return "";
                                    if (typeof e != "string") throw new Error("Error - expected string data.");
                                    return decodeURIComponent(encodeURIComponent(e))
                                }, l
                            }();

                        function ic(l) {
                            function n(e, r, i, o) {
                                return (e | 0) * 3600 + (r | 0) * 60 + (i | 0) + parseFloat(o || 0)
                            }
                            var a = l.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/);
                            return a ? parseFloat(a[2]) > 59 ? n(a[2], a[3], 0, a[4]) : n(a[1], a[2], a[3], a[4]) : null
                        }
                        var ac = function() {
                            function l() {
                                this.values = Object.create(null)
                            }
                            var n = l.prototype;
                            return n.set = function(e, r) {
                                !this.get(e) && r !== "" && (this.values[e] = r)
                            }, n.get = function(e, r, i) {
                                return i ? this.has(e) ? this.values[e] : r[i] : this.has(e) ? this.values[e] : r
                            }, n.has = function(e) {
                                return e in this.values
                            }, n.alt = function(e, r, i) {
                                for (var o = 0; o < i.length; ++o)
                                    if (r === i[o]) {
                                        this.set(e, r);
                                        break
                                    }
                            }, n.integer = function(e, r) {
                                /^-?\d+$/.test(r) && this.set(e, parseInt(r, 10))
                            }, n.percent = function(e, r) {
                                if (/^([\d]{1,3})(\.[\d]*)?%$/.test(r)) {
                                    var i = parseFloat(r);
                                    if (i >= 0 && i <= 100) return this.set(e, i), !0
                                }
                                return !1
                            }, l
                        }();

                        function nc(l, n, a, e) {
                            var r = e ? l.split(e) : [l];
                            for (var i in r)
                                if (typeof r[i] == "string") {
                                    var o = r[i].split(a);
                                    if (o.length === 2) {
                                        var u = o[0],
                                            c = o[1];
                                        n(u, c)
                                    }
                                }
                        }
                        var lu = new $u(0, 0, ""),
                            Pl = lu.align === "middle" ? "middle" : "center";

                        function vh(l, n, a) {
                            var e = l;

                            function r() {
                                var u = ic(l);
                                if (u === null) throw new Error("Malformed timestamp: " + e);
                                return l = l.replace(/^[^\sa-zA-Z-]+/, ""), u
                            }

                            function i(u, c) {
                                var h = new ac;
                                nc(u, function(p, E) {
                                    var S;
                                    switch (p) {
                                        case "region":
                                            for (var L = a.length - 1; L >= 0; L--)
                                                if (a[L].id === E) {
                                                    h.set(p, a[L].region);
                                                    break
                                                }
                                            break;
                                        case "vertical":
                                            h.alt(p, E, ["rl", "lr"]);
                                            break;
                                        case "line":
                                            S = E.split(","), h.integer(p, S[0]), h.percent(p, S[0]) && h.set("snapToLines", !1), h.alt(p, S[0], ["auto"]), S.length === 2 && h.alt("lineAlign", S[1], ["start", Pl, "end"]);
                                            break;
                                        case "position":
                                            S = E.split(","), h.percent(p, S[0]), S.length === 2 && h.alt("positionAlign", S[1], ["start", Pl, "end", "line-left", "line-right", "auto"]);
                                            break;
                                        case "size":
                                            h.percent(p, E);
                                            break;
                                        case "align":
                                            h.alt(p, E, ["start", Pl, "end", "left", "right"]);
                                            break
                                    }
                                }, /:/, /\s/), c.region = h.get("region", null), c.vertical = h.get("vertical", "");
                                var f = h.get("line", "auto");
                                f === "auto" && lu.line === -1 && (f = -1), c.line = f, c.lineAlign = h.get("lineAlign", "start"), c.snapToLines = h.get("snapToLines", !0), c.size = h.get("size", 100), c.align = h.get("align", Pl);
                                var m = h.get("position", "auto");
                                m === "auto" && lu.position === 50 && (m = c.align === "start" || c.align === "left" ? 0 : c.align === "end" || c.align === "right" ? 100 : 50), c.position = m
                            }

                            function o() {
                                l = l.replace(/^\s+/, "")
                            }
                            if (o(), n.startTime = r(), o(), l.slice(0, 3) !== "-->") throw new Error("Malformed time stamp (time stamps must be separated by '-->'): " + e);
                            l = l.slice(3), o(), n.endTime = r(), o(), i(l, n)
                        }

                        function ju(l) {
                            return l.replace(/<br(?: \/)?>/gi, `
`)
                        }
                        var ph = function() {
                                function l() {
                                    this.state = "INITIAL", this.buffer = "", this.decoder = new rc, this.regionList = [], this.cue = null, this.oncue = void 0, this.onparsingerror = void 0, this.onflush = void 0
                                }
                                var n = l.prototype;
                                return n.parse = function(e) {
                                    var r = this;
                                    e && (r.buffer += r.decoder.decode(e, {
                                        stream: !0
                                    }));

                                    function i() {
                                        var m = r.buffer,
                                            p = 0;
                                        for (m = ju(m); p < m.length && m[p] !== "\r" && m[p] !== `
`;) ++p;
                                        var E = m.slice(0, p);
                                        return m[p] === "\r" && ++p, m[p] === `
` && ++p, r.buffer = m.slice(p), E
                                    }

                                    function o(m) {
                                        nc(m, function(p, E) {}, /:/)
                                    }
                                    try {
                                        var u = "";
                                        if (r.state === "INITIAL") {
                                            if (!/\r\n|\n/.test(r.buffer)) return this;
                                            u = i();
                                            var c = u.match(/^(ï»¿)?WEBVTT([ \t].*)?$/);
                                            if (!(c != null && c[0])) throw new Error("Malformed WebVTT signature.");
                                            r.state = "HEADER"
                                        }
                                        for (var h = !1; r.buffer;) {
                                            if (!/\r\n|\n/.test(r.buffer)) return this;
                                            switch (h ? h = !1 : u = i(), r.state) {
                                                case "HEADER":
                                                    /:/.test(u) ? o(u) : u || (r.state = "ID");
                                                    continue;
                                                case "NOTE":
                                                    u || (r.state = "ID");
                                                    continue;
                                                case "ID":
                                                    if (/^NOTE($|[ \t])/.test(u)) {
                                                        r.state = "NOTE";
                                                        break
                                                    }
                                                    if (!u) continue;
                                                    if (r.cue = new $u(0, 0, ""), r.state = "CUE", u.indexOf("-->") === -1) {
                                                        r.cue.id = u;
                                                        continue
                                                    }
                                                case "CUE":
                                                    if (!r.cue) {
                                                        r.state = "BADCUE";
                                                        continue
                                                    }
                                                    try {
                                                        vh(u, r.cue, r.regionList)
                                                    } catch (m) {
                                                        r.cue = null, r.state = "BADCUE";
                                                        continue
                                                    }
                                                    r.state = "CUETEXT";
                                                    continue;
                                                case "CUETEXT":
                                                    {
                                                        var f = u.indexOf("-->") !== -1;
                                                        if (!u || f && (h = !0)) {
                                                            r.oncue && r.cue && r.oncue(r.cue), r.cue = null, r.state = "ID";
                                                            continue
                                                        }
                                                        if (r.cue === null) continue;r.cue.text && (r.cue.text += `
`),
                                                        r.cue.text += u
                                                    }
                                                    continue;
                                                case "BADCUE":
                                                    u || (r.state = "ID")
                                            }
                                        }
                                    } catch (m) {
                                        r.state === "CUETEXT" && r.cue && r.oncue && r.oncue(r.cue), r.cue = null, r.state = r.state === "INITIAL" ? "BADWEBVTT" : "BADCUE"
                                    }
                                    return this
                                }, n.flush = function() {
                                    var e = this;
                                    try {
                                        if ((e.cue || e.state === "HEADER") && (e.buffer += `

`, e.parse()), e.state === "INITIAL" || e.state === "BADWEBVTT") throw new Error("Malformed WebVTT signature.")
                                    } catch (r) {
                                        e.onparsingerror && e.onparsingerror(r)
                                    }
                                    return e.onflush && e.onflush(), this
                                }, l
                            }(),
                            gh = /\r\n|\n\r|\n|\r/g,
                            tl = function(n, a, e) {
                                return e === void 0 && (e = 0), n.slice(e, e + a.length) === a
                            },
                            Eh = function(n) {
                                var a = parseInt(n.slice(-3)),
                                    e = parseInt(n.slice(-6, -4)),
                                    r = parseInt(n.slice(-9, -7)),
                                    i = n.length > 9 ? parseInt(n.substring(0, n.indexOf(":"))) : 0;
                                if (!Ge(a) || !Ge(e) || !Ge(r) || !Ge(i)) throw Error("Malformed X-TIMESTAMP-MAP: Local:" + n);
                                return a += 1e3 * e, a += 60 * 1e3 * r, a += 60 * 60 * 1e3 * i, a
                            },
                            lo = function(n) {
                                for (var a = 5381, e = n.length; e;) a = a * 33 ^ n.charCodeAt(--e);
                                return (a >>> 0).toString()
                            };

                        function Ol(l, n, a) {
                            return lo(l.toString()) + lo(n.toString()) + lo(a)
                        }
                        var sc = function(n, a, e) {
                            var r = n[a],
                                i = n[r.prevCC];
                            if (!i || !i.new && r.new) {
                                n.ccOffset = n.presentationOffset = r.start, r.new = !1;
                                return
                            }
                            for (;
                                (o = i) != null && o.new;) {
                                var o;
                                n.ccOffset += r.start - i.start, r.new = !1, r = i, i = n[r.prevCC]
                            }
                            n.presentationOffset = e
                        };

                        function xl(l, n, a, e, r, i, o) {
                            var u = new ph,
                                c = Ze(new Uint8Array(l)).trim().replace(gh, `
`).split(`
`),
                                h = [],
                                f = n ? Ll(n.baseTime, n.timescale) : 0,
                                m = "00:00.000",
                                p = 0,
                                E = 0,
                                S, L = !0;
                            u.oncue = function(I) {
                                var O = a[e],
                                    U = a.ccOffset,
                                    G = (p - f) / 9e4;
                                if (O != null && O.new && (E !== void 0 ? U = a.ccOffset = O.start : sc(a, e, G)), G) {
                                    if (!n) {
                                        S = new Error("Missing initPTS for VTT MPEGTS");
                                        return
                                    }
                                    U = G - a.presentationOffset
                                }
                                var ee = I.endTime - I.startTime,
                                    te = Ga((I.startTime + U - E) * 9e4, r * 9e4) / 9e4;
                                I.startTime = Math.max(te, 0), I.endTime = Math.max(te + ee, 0);
                                var _e = I.text.trim();
                                I.text = decodeURIComponent(encodeURIComponent(_e)), I.id || (I.id = Ol(I.startTime, I.endTime, _e)), I.endTime > 0 && h.push(I)
                            }, u.onparsingerror = function(I) {
                                S = I
                            }, u.onflush = function() {
                                if (S) {
                                    o(S);
                                    return
                                }
                                i(h)
                            }, c.forEach(function(I) {
                                if (L)
                                    if (tl(I, "X-TIMESTAMP-MAP=")) {
                                        L = !1, I.slice(16).split(",").forEach(function(O) {
                                            tl(O, "LOCAL:") ? m = O.slice(6) : tl(O, "MPEGTS:") && (p = parseInt(O.slice(7)))
                                        });
                                        try {
                                            E = Eh(m) / 1e3
                                        } catch (O) {
                                            S = O
                                        }
                                        return
                                    } else I === "" && (L = !1);
                                u.parse(I + `
`)
                            }), u.flush()
                        }
                        var uu = "stpp.ttml.im1t",
                            oc = /^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/,
                            lc = /^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/,
                            yh = {
                                left: "start",
                                center: "center",
                                right: "end",
                                start: "start",
                                end: "end"
                            };

                        function zu(l, n, a, e) {
                            var r = Vt(new Uint8Array(l), ["mdat"]);
                            if (r.length === 0) {
                                e(new Error("Could not parse IMSC1 mdat"));
                                return
                            }
                            var i = r.map(function(u) {
                                    return Ze(u)
                                }),
                                o = zo(n.baseTime, 1, n.timescale);
                            try {
                                i.forEach(function(u) {
                                    return a(bh(u, o))
                                })
                            } catch (u) {
                                e(u)
                            }
                        }

                        function bh(l, n) {
                            var a = new DOMParser,
                                e = a.parseFromString(l, "text/xml"),
                                r = e.getElementsByTagName("tt")[0];
                            if (!r) throw new Error("Invalid ttml");
                            var i = {
                                    frameRate: 30,
                                    subFrameRate: 1,
                                    frameRateMultiplier: 0,
                                    tickRate: 0
                                },
                                o = Object.keys(i).reduce(function(m, p) {
                                    return m[p] = r.getAttribute("ttp:" + p) || i[p], m
                                }, {}),
                                u = r.getAttribute("xml:space") !== "preserve",
                                c = uc(du(r, "styling", "style")),
                                h = uc(du(r, "layout", "region")),
                                f = du(r, "body", "[begin]");
                            return [].map.call(f, function(m) {
                                var p = ds(m, u);
                                if (!p || !m.hasAttribute("begin")) return null;
                                var E = Zu(m.getAttribute("begin"), o),
                                    S = Zu(m.getAttribute("dur"), o),
                                    L = Zu(m.getAttribute("end"), o);
                                if (E === null) throw cc(m);
                                if (L === null) {
                                    if (S === null) throw cc(m);
                                    L = E + S
                                }
                                var I = new $u(E - n, L - n, p);
                                I.id = Ol(I.startTime, I.endTime, I.text);
                                var O = h[m.getAttribute("region")],
                                    U = c[m.getAttribute("style")],
                                    G = dc(O, U, c),
                                    ee = G.textAlign;
                                if (ee) {
                                    var te = yh[ee];
                                    te && (I.lineAlign = te), I.align = ee
                                }
                                return le(I, G), I
                            }).filter(function(m) {
                                return m !== null
                            })
                        }

                        function du(l, n, a) {
                            var e = l.getElementsByTagName(n)[0];
                            return e ? [].slice.call(e.querySelectorAll(a)) : []
                        }

                        function uc(l) {
                            return l.reduce(function(n, a) {
                                var e = a.getAttribute("xml:id");
                                return e && (n[e] = a), n
                            }, {})
                        }

                        function ds(l, n) {
                            return [].slice.call(l.childNodes).reduce(function(a, e, r) {
                                var i;
                                return e.nodeName === "br" && r ? a + `
` : (i = e.childNodes) != null && i.length ? ds(e, n) : n ? a + e.textContent.trim().replace(/\s+/g, " ") : a + e.textContent
                            }, "")
                        }

                        function dc(l, n, a) {
                            var e = "http://www.w3.org/ns/ttml#styling",
                                r = null,
                                i = ["displayAlign", "textAlign", "color", "backgroundColor", "fontSize", "fontFamily"],
                                o = l != null && l.hasAttribute("style") ? l.getAttribute("style") : null;
                            return o && a.hasOwnProperty(o) && (r = a[o]), i.reduce(function(u, c) {
                                var h = Xu(n, e, c) || Xu(l, e, c) || Xu(r, e, c);
                                return h && (u[c] = h), u
                            }, {})
                        }

                        function Xu(l, n, a) {
                            return l && l.hasAttributeNS(n, a) ? l.getAttributeNS(n, a) : null
                        }

                        function cc(l) {
                            return new Error("Could not parse ttml timestamp " + l)
                        }

                        function Zu(l, n) {
                            if (!l) return null;
                            var a = ic(l);
                            return a === null && (oc.test(l) ? a = hc(l, n) : lc.test(l) && (a = Th(l, n))), a
                        }

                        function hc(l, n) {
                            var a = oc.exec(l),
                                e = (a[4] | 0) + (a[5] | 0) / n.subFrameRate;
                            return (a[1] | 0) * 3600 + (a[2] | 0) * 60 + (a[3] | 0) + e / n.frameRate
                        }

                        function Th(l, n) {
                            var a = lc.exec(l),
                                e = Number(a[1]),
                                r = a[2];
                            switch (r) {
                                case "h":
                                    return e * 3600;
                                case "m":
                                    return e * 60;
                                case "ms":
                                    return e * 1e3;
                                case "f":
                                    return e / n.frameRate;
                                case "t":
                                    return e / n.tickRate
                            }
                            return e
                        }
                        var Ah = function() {
                            function l(a) {
                                this.hls = void 0, this.media = null, this.config = void 0, this.enabled = !0, this.Cues = void 0, this.textTracks = [], this.tracks = [], this.initPTS = [], this.unparsedVttFrags = [], this.captionsTracks = {}, this.nonNativeCaptionsTracks = {}, this.cea608Parser1 = void 0, this.cea608Parser2 = void 0, this.lastCc = -1, this.lastSn = -1, this.lastPartIndex = -1, this.prevCC = -1, this.vttCCs = Qu(), this.captionsProperties = void 0, this.hls = a, this.config = a.config, this.Cues = a.config.cueHandler, this.captionsProperties = {
                                    textTrack1: {
                                        label: this.config.captionsTextTrack1Label,
                                        languageCode: this.config.captionsTextTrack1LanguageCode
                                    },
                                    textTrack2: {
                                        label: this.config.captionsTextTrack2Label,
                                        languageCode: this.config.captionsTextTrack2LanguageCode
                                    },
                                    textTrack3: {
                                        label: this.config.captionsTextTrack3Label,
                                        languageCode: this.config.captionsTextTrack3LanguageCode
                                    },
                                    textTrack4: {
                                        label: this.config.captionsTextTrack4Label,
                                        languageCode: this.config.captionsTextTrack4LanguageCode
                                    }
                                }, a.on(_.MEDIA_ATTACHING, this.onMediaAttaching, this), a.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), a.on(_.MANIFEST_LOADING, this.onManifestLoading, this), a.on(_.MANIFEST_LOADED, this.onManifestLoaded, this), a.on(_.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), a.on(_.FRAG_LOADING, this.onFragLoading, this), a.on(_.FRAG_LOADED, this.onFragLoaded, this), a.on(_.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this), a.on(_.FRAG_DECRYPTED, this.onFragDecrypted, this), a.on(_.INIT_PTS_FOUND, this.onInitPtsFound, this), a.on(_.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this), a.on(_.BUFFER_FLUSHING, this.onBufferFlushing, this)
                            }
                            var n = l.prototype;
                            return n.destroy = function() {
                                var e = this.hls;
                                e.off(_.MEDIA_ATTACHING, this.onMediaAttaching, this), e.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), e.off(_.MANIFEST_LOADING, this.onManifestLoading, this), e.off(_.MANIFEST_LOADED, this.onManifestLoaded, this), e.off(_.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), e.off(_.FRAG_LOADING, this.onFragLoading, this), e.off(_.FRAG_LOADED, this.onFragLoaded, this), e.off(_.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this), e.off(_.FRAG_DECRYPTED, this.onFragDecrypted, this), e.off(_.INIT_PTS_FOUND, this.onInitPtsFound, this), e.off(_.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this), e.off(_.BUFFER_FLUSHING, this.onBufferFlushing, this), this.hls = this.config = null, this.cea608Parser1 = this.cea608Parser2 = void 0
                            }, n.initCea608Parsers = function() {
                                if (this.config.enableCEA708Captions && (!this.cea608Parser1 || !this.cea608Parser2)) {
                                    var e = new Ml(this, "textTrack1"),
                                        r = new Ml(this, "textTrack2"),
                                        i = new Ml(this, "textTrack3"),
                                        o = new Ml(this, "textTrack4");
                                    this.cea608Parser1 = new tc(1, e, r), this.cea608Parser2 = new tc(3, i, o)
                                }
                            }, n.addCues = function(e, r, i, o, u) {
                                for (var c = !1, h = u.length; h--;) {
                                    var f = u[h],
                                        m = _h(f[0], f[1], r, i);
                                    if (m >= 0 && (f[0] = Math.min(f[0], r), f[1] = Math.max(f[1], i), c = !0, m / (i - r) > .5)) return
                                }
                                if (c || u.push([r, i]), this.config.renderTextTracksNatively) {
                                    var p = this.captionsTracks[e];
                                    this.Cues.newCue(p, r, i, o)
                                } else {
                                    var E = this.Cues.newCue(null, r, i, o);
                                    this.hls.trigger(_.CUES_PARSED, {
                                        type: "captions",
                                        cues: E,
                                        track: e
                                    })
                                }
                            }, n.onInitPtsFound = function(e, r) {
                                var i = this,
                                    o = r.frag,
                                    u = r.id,
                                    c = r.initPTS,
                                    h = r.timescale,
                                    f = this.unparsedVttFrags;
                                u === "main" && (this.initPTS[o.cc] = {
                                    baseTime: c,
                                    timescale: h
                                }), f.length && (this.unparsedVttFrags = [], f.forEach(function(m) {
                                    i.onFragLoaded(_.FRAG_LOADED, m)
                                }))
                            }, n.getExistingTrack = function(e, r) {
                                var i = this.media;
                                if (i)
                                    for (var o = 0; o < i.textTracks.length; o++) {
                                        var u = i.textTracks[o];
                                        if (Nl(u, {
                                                name: e,
                                                lang: r,
                                                attrs: {}
                                            })) return u
                                    }
                                return null
                            }, n.createCaptionsTrack = function(e) {
                                this.config.renderTextTracksNatively ? this.createNativeTrack(e) : this.createNonNativeTrack(e)
                            }, n.createNativeTrack = function(e) {
                                if (!this.captionsTracks[e]) {
                                    var r = this.captionsProperties,
                                        i = this.captionsTracks,
                                        o = this.media,
                                        u = r[e],
                                        c = u.label,
                                        h = u.languageCode,
                                        f = this.getExistingTrack(c, h);
                                    if (f) i[e] = f, ke(i[e]), He(i[e], o);
                                    else {
                                        var m = this.createTextTrack("captions", c, h);
                                        m && (m[e] = !0, i[e] = m)
                                    }
                                }
                            }, n.createNonNativeTrack = function(e) {
                                if (!this.nonNativeCaptionsTracks[e]) {
                                    var r = this.captionsProperties[e];
                                    if (r) {
                                        var i = r.label,
                                            o = {
                                                _id: e,
                                                label: i,
                                                kind: "captions",
                                                default: r.media ? !!r.media.default : !1,
                                                closedCaptions: r.media
                                            };
                                        this.nonNativeCaptionsTracks[e] = o, this.hls.trigger(_.NON_NATIVE_TEXT_TRACKS_FOUND, {
                                            tracks: [o]
                                        })
                                    }
                                }
                            }, n.createTextTrack = function(e, r, i) {
                                var o = this.media;
                                if (o) return o.addTextTrack(e, r, i)
                            }, n.onMediaAttaching = function(e, r) {
                                this.media = r.media, this._cleanTracks()
                            }, n.onMediaDetaching = function() {
                                var e = this.captionsTracks;
                                Object.keys(e).forEach(function(r) {
                                    ke(e[r]), delete e[r]
                                }), this.nonNativeCaptionsTracks = {}
                            }, n.onManifestLoading = function() {
                                this.lastCc = -1, this.lastSn = -1, this.lastPartIndex = -1, this.prevCC = -1, this.vttCCs = Qu(), this._cleanTracks(), this.tracks = [], this.captionsTracks = {}, this.nonNativeCaptionsTracks = {}, this.textTracks = [], this.unparsedVttFrags = [], this.initPTS = [], this.cea608Parser1 && this.cea608Parser2 && (this.cea608Parser1.reset(), this.cea608Parser2.reset())
                            }, n._cleanTracks = function() {
                                var e = this.media;
                                if (e) {
                                    var r = e.textTracks;
                                    if (r)
                                        for (var i = 0; i < r.length; i++) ke(r[i])
                                }
                            }, n.onSubtitleTracksUpdated = function(e, r) {
                                var i = this,
                                    o = r.subtitleTracks || [],
                                    u = o.some(function(E) {
                                        return E.textCodec === uu
                                    });
                                if (this.config.enableWebVTT || u && this.config.enableIMSC1) {
                                    var c = Mn(this.tracks, o);
                                    if (c) {
                                        this.tracks = o;
                                        return
                                    }
                                    if (this.textTracks = [], this.tracks = o, this.config.renderTextTracksNatively) {
                                        var h = this.media,
                                            f = h ? qt(h.textTracks) : null;
                                        if (this.tracks.forEach(function(E, S) {
                                                var L;
                                                if (f) {
                                                    for (var I = null, O = 0; O < f.length; O++)
                                                        if (f[O] && Nl(f[O], E)) {
                                                            I = f[O], f[O] = null;
                                                            break
                                                        }
                                                    I && (L = I)
                                                }
                                                if (L) ke(L);
                                                else {
                                                    var U = fc(E);
                                                    L = i.createTextTrack(U, E.name, E.lang), L && (L.mode = "disabled")
                                                }
                                                L && i.textTracks.push(L)
                                            }), f != null && f.length) {
                                            var m = f.filter(function(E) {
                                                return E !== null
                                            }).map(function(E) {
                                                return E.label
                                            });
                                            m.length && V.warn("Media element contains unused subtitle tracks: " + m.join(", ") + ". Replace media element for each source to clear TextTracks and captions menu.")
                                        }
                                    } else if (this.tracks.length) {
                                        var p = this.tracks.map(function(E) {
                                            return {
                                                label: E.name,
                                                kind: E.type.toLowerCase(),
                                                default: E.default,
                                                subtitleTrack: E
                                            }
                                        });
                                        this.hls.trigger(_.NON_NATIVE_TEXT_TRACKS_FOUND, {
                                            tracks: p
                                        })
                                    }
                                }
                            }, n.onManifestLoaded = function(e, r) {
                                var i = this;
                                this.config.enableCEA708Captions && r.captions && r.captions.forEach(function(o) {
                                    var u = /(?:CC|SERVICE)([1-4])/.exec(o.instreamId);
                                    if (u) {
                                        var c = "textTrack" + u[1],
                                            h = i.captionsProperties[c];
                                        h && (h.label = o.name, o.lang && (h.languageCode = o.lang), h.media = o)
                                    }
                                })
                            }, n.closedCaptionsForLevel = function(e) {
                                var r = this.hls.levels[e.level];
                                return r == null ? void 0 : r.attrs["CLOSED-CAPTIONS"]
                            }, n.onFragLoading = function(e, r) {
                                if (this.enabled && r.frag.type === H.MAIN) {
                                    var i, o, u = this.cea608Parser1,
                                        c = this.cea608Parser2,
                                        h = this.lastSn,
                                        f = r.frag,
                                        m = f.cc,
                                        p = f.sn,
                                        E = (i = (o = r.part) == null ? void 0 : o.index) != null ? i : -1;
                                    u && c && (p !== h + 1 || p === h && E !== this.lastPartIndex + 1 || m !== this.lastCc) && (u.reset(), c.reset()), this.lastCc = m, this.lastSn = p, this.lastPartIndex = E
                                }
                            }, n.onFragLoaded = function(e, r) {
                                var i = r.frag,
                                    o = r.payload;
                                if (i.type === H.SUBTITLE)
                                    if (o.byteLength) {
                                        var u = i.decryptdata,
                                            c = "stats" in r;
                                        if (u == null || !u.encrypted || c) {
                                            var h = this.tracks[i.level],
                                                f = this.vttCCs;
                                            f[i.cc] || (f[i.cc] = {
                                                start: i.start,
                                                prevCC: this.prevCC,
                                                new: !0
                                            }, this.prevCC = i.cc), h && h.textCodec === uu ? this._parseIMSC1(i, o) : this._parseVTTs(r)
                                        }
                                    } else this.hls.trigger(_.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: i,
                                        error: new Error("Empty subtitle payload")
                                    })
                            }, n._parseIMSC1 = function(e, r) {
                                var i = this,
                                    o = this.hls;
                                zu(r, this.initPTS[e.cc], function(u) {
                                    i._appendCues(u, e.level), o.trigger(_.SUBTITLE_FRAG_PROCESSED, {
                                        success: !0,
                                        frag: e
                                    })
                                }, function(u) {
                                    V.log("Failed to parse IMSC1: " + u), o.trigger(_.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: e,
                                        error: u
                                    })
                                })
                            }, n._parseVTTs = function(e) {
                                var r, i = this,
                                    o = e.frag,
                                    u = e.payload,
                                    c = this.initPTS,
                                    h = this.unparsedVttFrags,
                                    f = c.length - 1;
                                if (!c[o.cc] && f === -1) {
                                    h.push(e);
                                    return
                                }
                                var m = this.hls,
                                    p = (r = o.initSegment) != null && r.data ? Nr(o.initSegment.data, new Uint8Array(u)) : u;
                                xl(p, this.initPTS[o.cc], this.vttCCs, o.cc, o.start, function(E) {
                                    i._appendCues(E, o.level), m.trigger(_.SUBTITLE_FRAG_PROCESSED, {
                                        success: !0,
                                        frag: o
                                    })
                                }, function(E) {
                                    var S = E.message === "Missing initPTS for VTT MPEGTS";
                                    S ? h.push(e) : i._fallbackToIMSC1(o, u), V.log("Failed to parse VTT cue: " + E), !(S && f > o.cc) && m.trigger(_.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: o,
                                        error: E
                                    })
                                })
                            }, n._fallbackToIMSC1 = function(e, r) {
                                var i = this,
                                    o = this.tracks[e.level];
                                o.textCodec || zu(r, this.initPTS[e.cc], function() {
                                    o.textCodec = uu, i._parseIMSC1(e, r)
                                }, function() {
                                    o.textCodec = "wvtt"
                                })
                            }, n._appendCues = function(e, r) {
                                var i = this.hls;
                                if (this.config.renderTextTracksNatively) {
                                    var o = this.textTracks[r];
                                    if (!o || o.mode === "disabled") return;
                                    e.forEach(function(h) {
                                        return Qe(o, h)
                                    })
                                } else {
                                    var u = this.tracks[r];
                                    if (!u) return;
                                    var c = u.default ? "default" : "subtitles" + r;
                                    i.trigger(_.CUES_PARSED, {
                                        type: "subtitles",
                                        cues: e,
                                        track: c
                                    })
                                }
                            }, n.onFragDecrypted = function(e, r) {
                                var i = r.frag;
                                i.type === H.SUBTITLE && this.onFragLoaded(_.FRAG_LOADED, r)
                            }, n.onSubtitleTracksCleared = function() {
                                this.tracks = [], this.captionsTracks = {}
                            }, n.onFragParsingUserdata = function(e, r) {
                                this.initCea608Parsers();
                                var i = this.cea608Parser1,
                                    o = this.cea608Parser2;
                                if (!(!this.enabled || !i || !o)) {
                                    var u = r.frag,
                                        c = r.samples;
                                    if (!(u.type === H.MAIN && this.closedCaptionsForLevel(u) === "NONE"))
                                        for (var h = 0; h < c.length; h++) {
                                            var f = c[h].bytes;
                                            if (f) {
                                                var m = this.extractCea608Data(f);
                                                i.addData(c[h].pts, m[0]), o.addData(c[h].pts, m[1])
                                            }
                                        }
                                }
                            }, n.onBufferFlushing = function(e, r) {
                                var i = r.startOffset,
                                    o = r.endOffset,
                                    u = r.endOffsetSubtitles,
                                    c = r.type,
                                    h = this.media;
                                if (!(!h || h.currentTime < o)) {
                                    if (!c || c === "video") {
                                        var f = this.captionsTracks;
                                        Object.keys(f).forEach(function(p) {
                                            return We(f[p], i, o)
                                        })
                                    }
                                    if (this.config.renderTextTracksNatively && i === 0 && u !== void 0) {
                                        var m = this.textTracks;
                                        Object.keys(m).forEach(function(p) {
                                            return We(m[p], i, u)
                                        })
                                    }
                                }
                            }, n.extractCea608Data = function(e) {
                                for (var r = [
                                        [],
                                        []
                                    ], i = e[0] & 31, o = 2, u = 0; u < i; u++) {
                                    var c = e[o++],
                                        h = 127 & e[o++],
                                        f = 127 & e[o++];
                                    if (!(h === 0 && f === 0)) {
                                        var m = (4 & c) !== 0;
                                        if (m) {
                                            var p = 3 & c;
                                            (p === 0 || p === 1) && (r[p].push(h), r[p].push(f))
                                        }
                                    }
                                }
                                return r
                            }, l
                        }();

                        function fc(l) {
                            return l.characteristics && /transcribes-spoken-dialog/gi.test(l.characteristics) && /describes-music-and-sound/gi.test(l.characteristics) ? "captions" : "subtitles"
                        }

                        function Nl(l, n) {
                            return !!l && l.kind === fc(n) && jn(n, l)
                        }

                        function _h(l, n, a, e) {
                            return Math.min(n, e) - Math.max(l, a)
                        }

                        function Qu() {
                            return {
                                ccOffset: 0,
                                presentationOffset: 0,
                                0: {
                                    start: 0,
                                    prevCC: -1,
                                    new: !0
                                }
                            }
                        }
                        var cu = function() {
                                function l(a) {
                                    this.hls = void 0, this.autoLevelCapping = void 0, this.firstLevel = void 0, this.media = void 0, this.restrictedLevels = void 0, this.timer = void 0, this.clientRect = void 0, this.streamController = void 0, this.hls = a, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.firstLevel = -1, this.media = null, this.restrictedLevels = [], this.timer = void 0, this.clientRect = null, this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.setStreamController = function(e) {
                                    this.streamController = e
                                }, n.destroy = function() {
                                    this.hls && this.unregisterListener(), this.timer && this.stopCapping(), this.media = null, this.clientRect = null, this.hls = this.streamController = null
                                }, n.registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this), e.on(_.MEDIA_ATTACHING, this.onMediaAttaching, this), e.on(_.MANIFEST_PARSED, this.onManifestParsed, this), e.on(_.LEVELS_UPDATED, this.onLevelsUpdated, this), e.on(_.BUFFER_CODECS, this.onBufferCodecs, this), e.on(_.MEDIA_DETACHING, this.onMediaDetaching, this)
                                }, n.unregisterListener = function() {
                                    var e = this.hls;
                                    e.off(_.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this), e.off(_.MEDIA_ATTACHING, this.onMediaAttaching, this), e.off(_.MANIFEST_PARSED, this.onManifestParsed, this), e.off(_.LEVELS_UPDATED, this.onLevelsUpdated, this), e.off(_.BUFFER_CODECS, this.onBufferCodecs, this), e.off(_.MEDIA_DETACHING, this.onMediaDetaching, this)
                                }, n.onFpsDropLevelCapping = function(e, r) {
                                    var i = this.hls.levels[r.droppedLevel];
                                    this.isLevelAllowed(i) && this.restrictedLevels.push({
                                        bitrate: i.bitrate,
                                        height: i.height,
                                        width: i.width
                                    })
                                }, n.onMediaAttaching = function(e, r) {
                                    this.media = r.media instanceof HTMLVideoElement ? r.media : null, this.clientRect = null, this.timer && this.hls.levels.length && this.detectPlayerSize()
                                }, n.onManifestParsed = function(e, r) {
                                    var i = this.hls;
                                    this.restrictedLevels = [], this.firstLevel = r.firstLevel, i.config.capLevelToPlayerSize && r.video && this.startCapping()
                                }, n.onLevelsUpdated = function(e, r) {
                                    this.timer && Ge(this.autoLevelCapping) && this.detectPlayerSize()
                                }, n.onBufferCodecs = function(e, r) {
                                    var i = this.hls;
                                    i.config.capLevelToPlayerSize && r.video && this.startCapping()
                                }, n.onMediaDetaching = function() {
                                    this.stopCapping()
                                }, n.detectPlayerSize = function() {
                                    if (this.media) {
                                        if (this.mediaHeight <= 0 || this.mediaWidth <= 0) {
                                            this.clientRect = null;
                                            return
                                        }
                                        var e = this.hls.levels;
                                        if (e.length) {
                                            var r = this.hls,
                                                i = this.getMaxLevel(e.length - 1);
                                            i !== this.autoLevelCapping && V.log("Setting autoLevelCapping to " + i + ": " + e[i].height + "p@" + e[i].bitrate + " for media " + this.mediaWidth + "x" + this.mediaHeight), r.autoLevelCapping = i, r.autoLevelCapping > this.autoLevelCapping && this.streamController && this.streamController.nextLevelSwitch(), this.autoLevelCapping = r.autoLevelCapping
                                        }
                                    }
                                }, n.getMaxLevel = function(e) {
                                    var r = this,
                                        i = this.hls.levels;
                                    if (!i.length) return -1;
                                    var o = i.filter(function(u, c) {
                                        return r.isLevelAllowed(u) && c <= e
                                    });
                                    return this.clientRect = null, l.getMaxLevelByMediaSize(o, this.mediaWidth, this.mediaHeight)
                                }, n.startCapping = function() {
                                    this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, self.clearInterval(this.timer), this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize())
                                }, n.stopCapping = function() {
                                    this.restrictedLevels = [], this.firstLevel = -1, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.timer && (self.clearInterval(this.timer), this.timer = void 0)
                                }, n.getDimensions = function() {
                                    if (this.clientRect) return this.clientRect;
                                    var e = this.media,
                                        r = {
                                            width: 0,
                                            height: 0
                                        };
                                    if (e) {
                                        var i = e.getBoundingClientRect();
                                        r.width = i.width, r.height = i.height, !r.width && !r.height && (r.width = i.right - i.left || e.width || 0, r.height = i.bottom - i.top || e.height || 0)
                                    }
                                    return this.clientRect = r, r
                                }, n.isLevelAllowed = function(e) {
                                    var r = this.restrictedLevels;
                                    return !r.some(function(i) {
                                        return e.bitrate === i.bitrate && e.width === i.width && e.height === i.height
                                    })
                                }, l.getMaxLevelByMediaSize = function(e, r, i) {
                                    if (!(e != null && e.length)) return -1;
                                    for (var o = function(p, E) {
                                            return E ? p.width !== E.width || p.height !== E.height : !0
                                        }, u = e.length - 1, c = Math.max(r, i), h = 0; h < e.length; h += 1) {
                                        var f = e[h];
                                        if ((f.width >= c || f.height >= c) && o(f, e[h + 1])) {
                                            u = h;
                                            break
                                        }
                                    }
                                    return u
                                }, tt(l, [{
                                    key: "mediaWidth",
                                    get: function() {
                                        return this.getDimensions().width * this.contentScaleFactor
                                    }
                                }, {
                                    key: "mediaHeight",
                                    get: function() {
                                        return this.getDimensions().height * this.contentScaleFactor
                                    }
                                }, {
                                    key: "contentScaleFactor",
                                    get: function() {
                                        var e = 1;
                                        if (!this.hls.config.ignoreDevicePixelRatio) try {
                                            e = self.devicePixelRatio
                                        } catch (r) {}
                                        return e
                                    }
                                }]), l
                            }(),
                            Sh = function() {
                                function l(a) {
                                    this.hls = void 0, this.isVideoPlaybackQualityAvailable = !1, this.timer = void 0, this.media = null, this.lastTime = void 0, this.lastDroppedFrames = 0, this.lastDecodedFrames = 0, this.streamController = void 0, this.hls = a, this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.setStreamController = function(e) {
                                    this.streamController = e
                                }, n.registerListeners = function() {
                                    this.hls.on(_.MEDIA_ATTACHING, this.onMediaAttaching, this)
                                }, n.unregisterListeners = function() {
                                    this.hls.off(_.MEDIA_ATTACHING, this.onMediaAttaching, this)
                                }, n.destroy = function() {
                                    this.timer && clearInterval(this.timer), this.unregisterListeners(), this.isVideoPlaybackQualityAvailable = !1, this.media = null
                                }, n.onMediaAttaching = function(e, r) {
                                    var i = this.hls.config;
                                    if (i.capLevelOnFPSDrop) {
                                        var o = r.media instanceof self.HTMLVideoElement ? r.media : null;
                                        this.media = o, o && typeof o.getVideoPlaybackQuality == "function" && (this.isVideoPlaybackQualityAvailable = !0), self.clearInterval(this.timer), this.timer = self.setInterval(this.checkFPSInterval.bind(this), i.fpsDroppedMonitoringPeriod)
                                    }
                                }, n.checkFPS = function(e, r, i) {
                                    var o = performance.now();
                                    if (r) {
                                        if (this.lastTime) {
                                            var u = o - this.lastTime,
                                                c = i - this.lastDroppedFrames,
                                                h = r - this.lastDecodedFrames,
                                                f = 1e3 * c / u,
                                                m = this.hls;
                                            if (m.trigger(_.FPS_DROP, {
                                                    currentDropped: c,
                                                    currentDecoded: h,
                                                    totalDroppedFrames: i
                                                }), f > 0 && c > m.config.fpsDroppedMonitoringThreshold * h) {
                                                var p = m.currentLevel;
                                                V.warn("drop FPS ratio greater than max allowed value for currentLevel: " + p), p > 0 && (m.autoLevelCapping === -1 || m.autoLevelCapping >= p) && (p = p - 1, m.trigger(_.FPS_DROP_LEVEL_CAPPING, {
                                                    level: p,
                                                    droppedLevel: m.currentLevel
                                                }), m.autoLevelCapping = p, this.streamController.nextLevelSwitch())
                                            }
                                        }
                                        this.lastTime = o, this.lastDroppedFrames = i, this.lastDecodedFrames = r
                                    }
                                }, n.checkFPSInterval = function() {
                                    var e = this.media;
                                    if (e)
                                        if (this.isVideoPlaybackQualityAvailable) {
                                            var r = e.getVideoPlaybackQuality();
                                            this.checkFPS(e, r.totalVideoFrames, r.droppedVideoFrames)
                                        } else this.checkFPS(e, e.webkitDecodedFrameCount, e.webkitDroppedFrameCount)
                                }, l
                            }(),
                            Lo = "[eme]",
                            cs = function() {
                                function l(a) {
                                    var e = this;
                                    this.hls = void 0, this.config = void 0, this.media = null, this.keyFormatPromise = null, this.keySystemAccessPromises = {}, this._requestLicenseFailureCount = 0, this.mediaKeySessions = [], this.keyIdToKeySessionPromise = {}, this.setMediaKeysQueue = l.CDMCleanupPromise ? [l.CDMCleanupPromise] : [], this.debug = V.debug.bind(V, Lo), this.log = V.log.bind(V, Lo), this.warn = V.warn.bind(V, Lo), this.error = V.error.bind(V, Lo), this.onMediaEncrypted = function(r) {
                                        var i = r.initDataType,
                                            o = r.initData,
                                            u = '"' + r.type + '" event: init data type: "' + i + '"';
                                        if (e.debug(u), o !== null) {
                                            if (!e.keyFormatPromise) {
                                                var c = Object.keys(e.keySystemAccessPromises);
                                                c.length || (c = ie(e.config));
                                                var h = c.map(Tt).filter(function(f) {
                                                    return !!f
                                                });
                                                e.keyFormatPromise = e.getKeyFormatPromise(h)
                                            }
                                            e.keyFormatPromise.then(function(f) {
                                                var m = ri(f),
                                                    p, E;
                                                if (i === "sinf") {
                                                    if (m !== Gr.FAIRPLAY) {
                                                        e.warn('Ignoring unexpected "' + r.type + '" event with init data type: "' + i + '" for selected key-system ' + m);
                                                        return
                                                    }
                                                    var S = yi(new Uint8Array(o));
                                                    try {
                                                        var L = si(JSON.parse(S).sinf),
                                                            I = Qa(L);
                                                        if (!I) throw new Error("'schm' box missing or not cbcs/cenc with schi > tenc");
                                                        p = I.subarray(8, 24), E = Gr.FAIRPLAY
                                                    } catch (Ie) {
                                                        e.warn(u + " Failed to parse sinf: " + Ie);
                                                        return
                                                    }
                                                } else {
                                                    if (m !== Gr.WIDEVINE && m !== Gr.PLAYREADY) {
                                                        e.warn('Ignoring unexpected "' + r.type + '" event with init data type: "' + i + '" for selected key-system ' + m);
                                                        return
                                                    }
                                                    var O = Oi(o),
                                                        U = O.filter(function(Ie) {
                                                            return !!Ie.systemId && aa(Ie.systemId) === m
                                                        });
                                                    U.length > 1 && e.warn(u + " Using first of " + U.length + " pssh found for selected key-system " + m);
                                                    var G = U[0];
                                                    if (!G) {
                                                        O.length === 0 || O.some(function(Ie) {
                                                            return !Ie.systemId
                                                        }) ? e.warn(u + " contains incomplete or invalid pssh data") : e.log("ignoring " + u + " for " + O.map(function(Ie) {
                                                            return aa(Ie.systemId)
                                                        }).join(",") + " pssh data in favor of playlist keys");
                                                        return
                                                    }
                                                    if (E = aa(G.systemId), G.version === 0 && G.data)
                                                        if (E === Gr.WIDEVINE) {
                                                            var ee = G.data.length - 22;
                                                            p = G.data.subarray(ee, ee + 16)
                                                        } else E === Gr.PLAYREADY && (p = pe(G.data))
                                                }
                                                if (!E || !p) {
                                                    e.log("Unable to handle " + u + " with key-system " + m);
                                                    return
                                                }
                                                for (var te = Lr.hexDump(p), _e = e.keyIdToKeySessionPromise, me = e.mediaKeySessions, ae = _e[te], Se = function() {
                                                        var kt = me[Ne],
                                                            zt = kt.decryptdata;
                                                        if (!zt.keyId) return 0;
                                                        var lr = Lr.hexDump(zt.keyId);
                                                        if (te === lr || zt.uri.replace(/-/g, "").indexOf(te) !== -1) return ae = _e[lr], zt.pssh || (delete _e[lr], zt.pssh = new Uint8Array(o), zt.keyId = p, ae = _e[te] = ae.then(function() {
                                                            return e.generateRequestWithPreferredKeySession(kt, i, o, "encrypted-event-key-match")
                                                        }), ae.catch(function(Fr) {
                                                            return e.handleError(Fr)
                                                        })), 1
                                                    }, ve, Ne = 0; Ne < me.length && (ve = Se(), !(ve !== 0 && ve === 1)); Ne++);
                                                if (!ae) {
                                                    if (E !== m) {
                                                        e.log('Ignoring "' + u + '" with ' + E + " init data for selected key-system " + m);
                                                        return
                                                    }
                                                    ae = _e[te] = e.getKeySystemSelectionPromise([E]).then(function(Ie) {
                                                        var kt, zt = Ie.keySystem,
                                                            lr = Ie.mediaKeys;
                                                        e.throwIfDestroyed();
                                                        var Fr = new Ha("ISO-23001-7", te, (kt = Tt(zt)) != null ? kt : "");
                                                        return Fr.pssh = new Uint8Array(o), Fr.keyId = p, e.attemptSetMediaKeys(zt, lr).then(function() {
                                                            e.throwIfDestroyed();
                                                            var Br = e.createMediaKeySessionContext({
                                                                decryptdata: Fr,
                                                                keySystem: zt,
                                                                mediaKeys: lr
                                                            });
                                                            return e.generateRequestWithPreferredKeySession(Br, i, o, "encrypted-event-no-match")
                                                        })
                                                    }), ae.catch(function(Ie) {
                                                        return e.handleError(Ie)
                                                    })
                                                }
                                            })
                                        }
                                    }, this.onWaitingForKey = function(r) {
                                        e.log('"' + r.type + '" event')
                                    }, this.hls = a, this.config = a.config, this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.unregisterListeners(), this.onMediaDetached();
                                    var e = this.config;
                                    e.requestMediaKeySystemAccessFunc = null, e.licenseXhrSetup = e.licenseResponseCallback = void 0, e.drmSystems = e.drmSystemOptions = {}, this.hls = this.config = this.keyIdToKeySessionPromise = null, this.onMediaEncrypted = this.onWaitingForKey = null
                                }, n.registerListeners = function() {
                                    this.hls.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.on(_.MEDIA_DETACHED, this.onMediaDetached, this), this.hls.on(_.MANIFEST_LOADING, this.onManifestLoading, this), this.hls.on(_.MANIFEST_LOADED, this.onManifestLoaded, this)
                                }, n.unregisterListeners = function() {
                                    this.hls.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.off(_.MEDIA_DETACHED, this.onMediaDetached, this), this.hls.off(_.MANIFEST_LOADING, this.onManifestLoading, this), this.hls.off(_.MANIFEST_LOADED, this.onManifestLoaded, this)
                                }, n.getLicenseServerUrl = function(e) {
                                    var r = this.config,
                                        i = r.drmSystems,
                                        o = r.widevineLicenseUrl,
                                        u = i[e];
                                    if (u) return u.licenseUrl;
                                    if (e === Gr.WIDEVINE && o) return o
                                }, n.getLicenseServerUrlOrThrow = function(e) {
                                    var r = this.getLicenseServerUrl(e);
                                    if (r === void 0) throw new Error('no license server URL configured for key-system "' + e + '"');
                                    return r
                                }, n.getServerCertificateUrl = function(e) {
                                    var r = this.config.drmSystems,
                                        i = r[e];
                                    if (i) return i.serverCertificateUrl;
                                    this.log('No Server Certificate in config.drmSystems["' + e + '"]')
                                }, n.attemptKeySystemAccess = function(e) {
                                    var r = this,
                                        i = this.hls.levels,
                                        o = function(f, m, p) {
                                            return !!f && p.indexOf(f) === m
                                        },
                                        u = i.map(function(h) {
                                            return h.audioCodec
                                        }).filter(o),
                                        c = i.map(function(h) {
                                            return h.videoCodec
                                        }).filter(o);
                                    return u.length + c.length === 0 && c.push("avc1.42e01e"), new Promise(function(h, f) {
                                        var m = function p(E) {
                                            var S = E.shift();
                                            r.getMediaKeysPromise(S, u, c).then(function(L) {
                                                return h({
                                                    keySystem: S,
                                                    mediaKeys: L
                                                })
                                            }).catch(function(L) {
                                                E.length ? p(E) : L instanceof Un ? f(L) : f(new Un({
                                                    type: Ve.KEY_SYSTEM_ERROR,
                                                    details: de.KEY_SYSTEM_NO_ACCESS,
                                                    error: L,
                                                    fatal: !0
                                                }, L.message))
                                            })
                                        };
                                        m(e)
                                    })
                                }, n.requestMediaKeySystemAccess = function(e, r) {
                                    var i = this.config.requestMediaKeySystemAccessFunc;
                                    if (typeof i != "function") {
                                        var o = "Configured requestMediaKeySystemAccess is not a function " + i;
                                        return j === null && self.location.protocol === "http:" && (o = "navigator.requestMediaKeySystemAccess is not available over insecure protocol " + location.protocol), Promise.reject(new Error(o))
                                    }
                                    return i(e, r)
                                }, n.getMediaKeysPromise = function(e, r, i) {
                                    var o = this,
                                        u = Z(e, r, i, this.config.drmSystemOptions),
                                        c = this.keySystemAccessPromises[e],
                                        h = c == null ? void 0 : c.keySystemAccess;
                                    if (!h) {
                                        this.log('Requesting encrypted media "' + e + '" key-system access with config: ' + JSON.stringify(u)), h = this.requestMediaKeySystemAccess(e, u);
                                        var f = this.keySystemAccessPromises[e] = {
                                            keySystemAccess: h
                                        };
                                        return h.catch(function(m) {
                                            o.log('Failed to obtain access to key-system "' + e + '": ' + m)
                                        }), h.then(function(m) {
                                            o.log('Access for key-system "' + m.keySystem + '" obtained');
                                            var p = o.fetchServerCertificate(e);
                                            return o.log('Create media-keys for "' + e + '"'), f.mediaKeys = m.createMediaKeys().then(function(E) {
                                                return o.log('Media-keys created for "' + e + '"'), p.then(function(S) {
                                                    return S ? o.setMediaKeysServerCertificate(E, e, S) : E
                                                })
                                            }), f.mediaKeys.catch(function(E) {
                                                o.error('Failed to create media-keys for "' + e + '"}: ' + E)
                                            }), f.mediaKeys
                                        })
                                    }
                                    return h.then(function() {
                                        return c.mediaKeys
                                    })
                                }, n.createMediaKeySessionContext = function(e) {
                                    var r = e.decryptdata,
                                        i = e.keySystem,
                                        o = e.mediaKeys;
                                    this.log('Creating key-system session "' + i + '" keyId: ' + Lr.hexDump(r.keyId || []));
                                    var u = o.createSession(),
                                        c = {
                                            decryptdata: r,
                                            keySystem: i,
                                            mediaKeys: o,
                                            mediaKeysSession: u,
                                            keyStatus: "status-pending"
                                        };
                                    return this.mediaKeySessions.push(c), c
                                }, n.renewKeySession = function(e) {
                                    var r = e.decryptdata;
                                    if (r.pssh) {
                                        var i = this.createMediaKeySessionContext(e),
                                            o = this.getKeyIdString(r),
                                            u = "cenc";
                                        this.keyIdToKeySessionPromise[o] = this.generateRequestWithPreferredKeySession(i, u, r.pssh, "expired")
                                    } else this.warn("Could not renew expired session. Missing pssh initData.");
                                    this.removeSession(e)
                                }, n.getKeyIdString = function(e) {
                                    if (!e) throw new Error("Could not read keyId of undefined decryptdata");
                                    if (e.keyId === null) throw new Error("keyId is null");
                                    return Lr.hexDump(e.keyId)
                                }, n.updateKeySession = function(e, r) {
                                    var i, o = e.mediaKeysSession;
                                    return this.log('Updating key-session "' + o.sessionId + '" for keyID ' + Lr.hexDump(((i = e.decryptdata) == null ? void 0 : i.keyId) || []) + `
      } (data length: ` + (r && r.byteLength) + ")"), o.update(r)
                                }, n.selectKeySystemFormat = function(e) {
                                    var r = Object.keys(e.levelkeys || {});
                                    return this.keyFormatPromise || (this.log("Selecting key-system from fragment (sn: " + e.sn + " " + e.type + ": " + e.level + ") key formats " + r.join(", ")), this.keyFormatPromise = this.getKeyFormatPromise(r)), this.keyFormatPromise
                                }, n.getKeyFormatPromise = function(e) {
                                    var r = this;
                                    return new Promise(function(i, o) {
                                        var u = ie(r.config),
                                            c = e.map(ri).filter(function(h) {
                                                return !!h && u.indexOf(h) !== -1
                                            });
                                        return r.getKeySystemSelectionPromise(c).then(function(h) {
                                            var f = h.keySystem,
                                                m = Tt(f);
                                            m ? i(m) : o(new Error('Unable to find format for key-system "' + f + '"'))
                                        }).catch(o)
                                    })
                                }, n.loadKey = function(e) {
                                    var r = this,
                                        i = e.keyInfo.decryptdata,
                                        o = this.getKeyIdString(i),
                                        u = "(keyId: " + o + ' format: "' + i.keyFormat + '" method: ' + i.method + " uri: " + i.uri + ")";
                                    this.log("Starting session for key " + u);
                                    var c = this.keyIdToKeySessionPromise[o];
                                    return c || (c = this.keyIdToKeySessionPromise[o] = this.getKeySystemForKeyPromise(i).then(function(h) {
                                        var f = h.keySystem,
                                            m = h.mediaKeys;
                                        return r.throwIfDestroyed(), r.log("Handle encrypted media sn: " + e.frag.sn + " " + e.frag.type + ": " + e.frag.level + " using key " + u), r.attemptSetMediaKeys(f, m).then(function() {
                                            r.throwIfDestroyed();
                                            var p = r.createMediaKeySessionContext({
                                                    keySystem: f,
                                                    mediaKeys: m,
                                                    decryptdata: i
                                                }),
                                                E = "cenc";
                                            return r.generateRequestWithPreferredKeySession(p, E, i.pssh, "playlist-key")
                                        })
                                    }), c.catch(function(h) {
                                        return r.handleError(h)
                                    })), c
                                }, n.throwIfDestroyed = function(e) {
                                    if (!this.hls) throw new Error("invalid state")
                                }, n.handleError = function(e) {
                                    this.hls && (this.error(e.message), e instanceof Un ? this.hls.trigger(_.ERROR, e.data) : this.hls.trigger(_.ERROR, {
                                        type: Ve.KEY_SYSTEM_ERROR,
                                        details: de.KEY_SYSTEM_NO_KEYS,
                                        error: e,
                                        fatal: !0
                                    }))
                                }, n.getKeySystemForKeyPromise = function(e) {
                                    var r = this.getKeyIdString(e),
                                        i = this.keyIdToKeySessionPromise[r];
                                    if (!i) {
                                        var o = ri(e.keyFormat),
                                            u = o ? [o] : ie(this.config);
                                        return this.attemptKeySystemAccess(u)
                                    }
                                    return i
                                }, n.getKeySystemSelectionPromise = function(e) {
                                    if (e.length || (e = ie(this.config)), e.length === 0) throw new Un({
                                        type: Ve.KEY_SYSTEM_ERROR,
                                        details: de.KEY_SYSTEM_NO_CONFIGURED_LICENSE,
                                        fatal: !0
                                    }, "Missing key-system license configuration options " + JSON.stringify({
                                        drmSystems: this.config.drmSystems
                                    }));
                                    return this.attemptKeySystemAccess(e)
                                }, n.attemptSetMediaKeys = function(e, r) {
                                    var i = this,
                                        o = this.setMediaKeysQueue.slice();
                                    this.log('Setting media-keys for "' + e + '"');
                                    var u = Promise.all(o).then(function() {
                                        if (!i.media) throw new Error("Attempted to set mediaKeys without media element attached");
                                        return i.media.setMediaKeys(r)
                                    });
                                    return this.setMediaKeysQueue.push(u), u.then(function() {
                                        i.log('Media-keys set for "' + e + '"'), o.push(u), i.setMediaKeysQueue = i.setMediaKeysQueue.filter(function(c) {
                                            return o.indexOf(c) === -1
                                        })
                                    })
                                }, n.generateRequestWithPreferredKeySession = function(e, r, i, o) {
                                    var u, c, h = this,
                                        f = (u = this.config.drmSystems) == null || (c = u[e.keySystem]) == null ? void 0 : c.generateRequest;
                                    if (f) try {
                                        var m = f.call(this.hls, r, i, e);
                                        if (!m) throw new Error("Invalid response from configured generateRequest filter");
                                        r = m.initDataType, i = e.decryptdata.pssh = m.initData ? new Uint8Array(m.initData) : null
                                    } catch (U) {
                                        var p;
                                        if (this.warn(U.message), (p = this.hls) != null && p.config.debug) throw U
                                    }
                                    if (i === null) return this.log('Skipping key-session request for "' + o + '" (no initData)'), Promise.resolve(e);
                                    var E = this.getKeyIdString(e.decryptdata);
                                    this.log('Generating key-session request for "' + o + '": ' + E + " (init data type: " + r + " length: " + (i ? i.byteLength : null) + ")");
                                    var S = new el,
                                        L = e._onmessage = function(U) {
                                            var G = e.mediaKeysSession;
                                            if (!G) {
                                                S.emit("error", new Error("invalid state"));
                                                return
                                            }
                                            var ee = U.messageType,
                                                te = U.message;
                                            h.log('"' + ee + '" message event for session "' + G.sessionId + '" message size: ' + te.byteLength), ee === "license-request" || ee === "license-renewal" ? h.renewLicense(e, te).catch(function(_e) {
                                                h.handleError(_e), S.emit("error", _e)
                                            }) : ee === "license-release" ? e.keySystem === Gr.FAIRPLAY && (h.updateKeySession(e, Cr("acknowledged")), h.removeSession(e)) : h.warn('unhandled media key message type "' + ee + '"')
                                        },
                                        I = e._onkeystatuseschange = function(U) {
                                            var G = e.mediaKeysSession;
                                            if (!G) {
                                                S.emit("error", new Error("invalid state"));
                                                return
                                            }
                                            h.onKeyStatusChange(e);
                                            var ee = e.keyStatus;
                                            S.emit("keyStatus", ee), ee === "expired" && (h.warn(e.keySystem + " expired for key " + E), h.renewKeySession(e))
                                        };
                                    e.mediaKeysSession.addEventListener("message", L), e.mediaKeysSession.addEventListener("keystatuseschange", I);
                                    var O = new Promise(function(U, G) {
                                        S.on("error", G), S.on("keyStatus", function(ee) {
                                            ee.startsWith("usable") ? U() : ee === "output-restricted" ? G(new Un({
                                                type: Ve.KEY_SYSTEM_ERROR,
                                                details: de.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED,
                                                fatal: !1
                                            }, "HDCP level output restricted")) : ee === "internal-error" ? G(new Un({
                                                type: Ve.KEY_SYSTEM_ERROR,
                                                details: de.KEY_SYSTEM_STATUS_INTERNAL_ERROR,
                                                fatal: !0
                                            }, 'key status changed to "' + ee + '"')) : ee === "expired" ? G(new Error("key expired while generating request")) : h.warn('unhandled key status change "' + ee + '"')
                                        })
                                    });
                                    return e.mediaKeysSession.generateRequest(r, i).then(function() {
                                        var U;
                                        h.log('Request generated for key-session "' + ((U = e.mediaKeysSession) == null ? void 0 : U.sessionId) + '" keyId: ' + E)
                                    }).catch(function(U) {
                                        throw new Un({
                                            type: Ve.KEY_SYSTEM_ERROR,
                                            details: de.KEY_SYSTEM_NO_SESSION,
                                            error: U,
                                            fatal: !1
                                        }, "Error generating key-session request: " + U)
                                    }).then(function() {
                                        return O
                                    }).catch(function(U) {
                                        throw S.removeAllListeners(), h.removeSession(e), U
                                    }).then(function() {
                                        return S.removeAllListeners(), e
                                    })
                                }, n.onKeyStatusChange = function(e) {
                                    var r = this;
                                    e.mediaKeysSession.keyStatuses.forEach(function(i, o) {
                                        r.log('key status change "' + i + '" for keyStatuses keyId: ' + Lr.hexDump("buffer" in o ? new Uint8Array(o.buffer, o.byteOffset, o.byteLength) : new Uint8Array(o)) + " session keyId: " + Lr.hexDump(new Uint8Array(e.decryptdata.keyId || [])) + " uri: " + e.decryptdata.uri), e.keyStatus = i
                                    })
                                }, n.fetchServerCertificate = function(e) {
                                    var r = this.config,
                                        i = r.loader,
                                        o = new i(r),
                                        u = this.getServerCertificateUrl(e);
                                    return u ? (this.log('Fetching server certificate for "' + e + '"'), new Promise(function(c, h) {
                                        var f = {
                                                responseType: "arraybuffer",
                                                url: u
                                            },
                                            m = r.certLoadPolicy.default,
                                            p = {
                                                loadPolicy: m,
                                                timeout: m.maxLoadTimeMs,
                                                maxRetry: 0,
                                                retryDelay: 0,
                                                maxRetryDelay: 0
                                            },
                                            E = {
                                                onSuccess: function(L, I, O, U) {
                                                    c(L.data)
                                                },
                                                onError: function(L, I, O, U) {
                                                    h(new Un({
                                                        type: Ve.KEY_SYSTEM_ERROR,
                                                        details: de.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                                        fatal: !0,
                                                        networkDetails: O,
                                                        response: Ee({
                                                            url: f.url,
                                                            data: void 0
                                                        }, L)
                                                    }, '"' + e + '" certificate request failed (' + u + "). Status: " + L.code + " (" + L.text + ")"))
                                                },
                                                onTimeout: function(L, I, O) {
                                                    h(new Un({
                                                        type: Ve.KEY_SYSTEM_ERROR,
                                                        details: de.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                                        fatal: !0,
                                                        networkDetails: O,
                                                        response: {
                                                            url: f.url,
                                                            data: void 0
                                                        }
                                                    }, '"' + e + '" certificate request timed out (' + u + ")"))
                                                },
                                                onAbort: function(L, I, O) {
                                                    h(new Error("aborted"))
                                                }
                                            };
                                        o.load(f, p, E)
                                    })) : Promise.resolve()
                                }, n.setMediaKeysServerCertificate = function(e, r, i) {
                                    var o = this;
                                    return new Promise(function(u, c) {
                                        e.setServerCertificate(i).then(function(h) {
                                            o.log("setServerCertificate " + (h ? "success" : "not supported by CDM") + " (" + (i == null ? void 0 : i.byteLength) + ') on "' + r + '"'), u(e)
                                        }).catch(function(h) {
                                            c(new Un({
                                                type: Ve.KEY_SYSTEM_ERROR,
                                                details: de.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED,
                                                error: h,
                                                fatal: !0
                                            }, h.message))
                                        })
                                    })
                                }, n.renewLicense = function(e, r) {
                                    var i = this;
                                    return this.requestLicense(e, new Uint8Array(r)).then(function(o) {
                                        return i.updateKeySession(e, new Uint8Array(o)).catch(function(u) {
                                            throw new Un({
                                                type: Ve.KEY_SYSTEM_ERROR,
                                                details: de.KEY_SYSTEM_SESSION_UPDATE_FAILED,
                                                error: u,
                                                fatal: !0
                                            }, u.message)
                                        })
                                    })
                                }, n.unpackPlayReadyKeyMessage = function(e, r) {
                                    var i = String.fromCharCode.apply(null, new Uint16Array(r.buffer));
                                    if (!i.includes("PlayReadyKeyMessage")) return e.setRequestHeader("Content-Type", "text/xml; charset=utf-8"), r;
                                    var o = new DOMParser().parseFromString(i, "application/xml"),
                                        u = o.querySelectorAll("HttpHeader");
                                    if (u.length > 0)
                                        for (var c, h = 0, f = u.length; h < f; h++) {
                                            var m, p;
                                            c = u[h];
                                            var E = (m = c.querySelector("name")) == null ? void 0 : m.textContent,
                                                S = (p = c.querySelector("value")) == null ? void 0 : p.textContent;
                                            E && S && e.setRequestHeader(E, S)
                                        }
                                    var L = o.querySelector("Challenge"),
                                        I = L == null ? void 0 : L.textContent;
                                    if (!I) throw new Error("Cannot find <Challenge> in key message");
                                    return Cr(atob(I))
                                }, n.setupLicenseXHR = function(e, r, i, o) {
                                    var u = this,
                                        c = this.config.licenseXhrSetup;
                                    return c ? Promise.resolve().then(function() {
                                        if (!i.decryptdata) throw new Error("Key removed");
                                        return c.call(u.hls, e, r, i, o)
                                    }).catch(function(h) {
                                        if (!i.decryptdata) throw h;
                                        return e.open("POST", r, !0), c.call(u.hls, e, r, i, o)
                                    }).then(function(h) {
                                        e.readyState || e.open("POST", r, !0);
                                        var f = h || o;
                                        return {
                                            xhr: e,
                                            licenseChallenge: f
                                        }
                                    }) : (e.open("POST", r, !0), Promise.resolve({
                                        xhr: e,
                                        licenseChallenge: o
                                    }))
                                }, n.requestLicense = function(e, r) {
                                    var i = this,
                                        o = this.config.keyLoadPolicy.default;
                                    return new Promise(function(u, c) {
                                        var h = i.getLicenseServerUrlOrThrow(e.keySystem);
                                        i.log("Sending license request to URL: " + h);
                                        var f = new XMLHttpRequest;
                                        f.responseType = "arraybuffer", f.onreadystatechange = function() {
                                            if (!i.hls || !e.mediaKeysSession) return c(new Error("invalid state"));
                                            if (f.readyState === 4)
                                                if (f.status === 200) {
                                                    i._requestLicenseFailureCount = 0;
                                                    var m = f.response;
                                                    i.log("License received " + (m instanceof ArrayBuffer ? m.byteLength : m));
                                                    var p = i.config.licenseResponseCallback;
                                                    if (p) try {
                                                        m = p.call(i.hls, f, h, e)
                                                    } catch (I) {
                                                        i.error(I)
                                                    }
                                                    u(m)
                                                } else {
                                                    var E = o.errorRetry,
                                                        S = E ? E.maxNumRetry : 0;
                                                    if (i._requestLicenseFailureCount++, i._requestLicenseFailureCount > S || f.status >= 400 && f.status < 500) c(new Un({
                                                        type: Ve.KEY_SYSTEM_ERROR,
                                                        details: de.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                                        fatal: !0,
                                                        networkDetails: f,
                                                        response: {
                                                            url: h,
                                                            data: void 0,
                                                            code: f.status,
                                                            text: f.statusText
                                                        }
                                                    }, "License Request XHR failed (" + h + "). Status: " + f.status + " (" + f.statusText + ")"));
                                                    else {
                                                        var L = S - i._requestLicenseFailureCount + 1;
                                                        i.warn("Retrying license request, " + L + " attempts left"), i.requestLicense(e, r).then(u, c)
                                                    }
                                                }
                                        }, e.licenseXhr && e.licenseXhr.readyState !== XMLHttpRequest.DONE && e.licenseXhr.abort(), e.licenseXhr = f, i.setupLicenseXHR(f, h, e, r).then(function(m) {
                                            var p = m.xhr,
                                                E = m.licenseChallenge;
                                            e.keySystem == Gr.PLAYREADY && (E = i.unpackPlayReadyKeyMessage(p, E)), p.send(E)
                                        })
                                    })
                                }, n.onMediaAttached = function(e, r) {
                                    if (this.config.emeEnabled) {
                                        var i = r.media;
                                        this.media = i, i.removeEventListener("encrypted", this.onMediaEncrypted), i.removeEventListener("waitingforkey", this.onWaitingForKey), i.addEventListener("encrypted", this.onMediaEncrypted), i.addEventListener("waitingforkey", this.onWaitingForKey)
                                    }
                                }, n.onMediaDetached = function() {
                                    var e = this,
                                        r = this.media,
                                        i = this.mediaKeySessions;
                                    r && (r.removeEventListener("encrypted", this.onMediaEncrypted), r.removeEventListener("waitingforkey", this.onWaitingForKey), this.media = null), this._requestLicenseFailureCount = 0, this.setMediaKeysQueue = [], this.mediaKeySessions = [], this.keyIdToKeySessionPromise = {}, Ha.clearKeyUriToKeyIdMap();
                                    var o = i.length;
                                    l.CDMCleanupPromise = Promise.all(i.map(function(u) {
                                        return e.removeSession(u)
                                    }).concat(r == null ? void 0 : r.setMediaKeys(null).catch(function(u) {
                                        e.log("Could not clear media keys: " + u)
                                    }))).then(function() {
                                        o && (e.log("finished closing key sessions and clearing media keys"), i.length = 0)
                                    }).catch(function(u) {
                                        e.log("Could not close sessions and clear media keys: " + u)
                                    })
                                }, n.onManifestLoading = function() {
                                    this.keyFormatPromise = null
                                }, n.onManifestLoaded = function(e, r) {
                                    var i = r.sessionKeys;
                                    if (!(!i || !this.config.emeEnabled) && !this.keyFormatPromise) {
                                        var o = i.reduce(function(u, c) {
                                            return u.indexOf(c.keyFormat) === -1 && u.push(c.keyFormat), u
                                        }, []);
                                        this.log("Selecting key-system from session-keys " + o.join(", ")), this.keyFormatPromise = this.getKeyFormatPromise(o)
                                    }
                                }, n.removeSession = function(e) {
                                    var r = this,
                                        i = e.mediaKeysSession,
                                        o = e.licenseXhr;
                                    if (i) {
                                        this.log("Remove licenses and keys and close session " + i.sessionId), e._onmessage && (i.removeEventListener("message", e._onmessage), e._onmessage = void 0), e._onkeystatuseschange && (i.removeEventListener("keystatuseschange", e._onkeystatuseschange), e._onkeystatuseschange = void 0), o && o.readyState !== XMLHttpRequest.DONE && o.abort(), e.mediaKeysSession = e.decryptdata = e.licenseXhr = void 0;
                                        var u = this.mediaKeySessions.indexOf(e);
                                        return u > -1 && this.mediaKeySessions.splice(u, 1), i.remove().catch(function(c) {
                                            r.log("Could not remove session: " + c)
                                        }).then(function() {
                                            return i.close()
                                        }).catch(function(c) {
                                            r.log("Could not close session: " + c)
                                        })
                                    }
                                }, l
                            }();
                        cs.CDMCleanupPromise = void 0;
                        var Un = function(l) {
                                x(n, l);

                                function n(a, e) {
                                    var r;
                                    return r = l.call(this, e) || this, r.data = void 0, a.error || (a.error = new Error(e)), r.data = a, a.err = a.error, r
                                }
                                return n
                            }(Rt(Error)),
                            vn;
                        (function(l) {
                            l.MANIFEST = "m", l.AUDIO = "a", l.VIDEO = "v", l.MUXED = "av", l.INIT = "i", l.CAPTION = "c", l.TIMED_TEXT = "tt", l.KEY = "k", l.OTHER = "o"
                        })(vn || (vn = {}));
                        var hu;
                        (function(l) {
                            l.DASH = "d", l.HLS = "h", l.SMOOTH = "s", l.OTHER = "o"
                        })(hu || (hu = {}));
                        var uo;
                        (function(l) {
                            l.OBJECT = "CMCD-Object", l.REQUEST = "CMCD-Request", l.SESSION = "CMCD-Session", l.STATUS = "CMCD-Status"
                        })(uo || (uo = {}));
                        var rl, kh = (rl = {}, rl[uo.OBJECT] = ["br", "d", "ot", "tb"], rl[uo.REQUEST] = ["bl", "dl", "mtp", "nor", "nrr", "su"], rl[uo.SESSION] = ["cid", "pr", "sf", "sid", "st", "v"], rl[uo.STATUS] = ["bs", "rtp"], rl),
                            Io = function l(n, a) {
                                this.value = void 0, this.params = void 0, Array.isArray(n) && (n = n.map(function(e) {
                                    return e instanceof l ? e : new l(e)
                                })), this.value = n, this.params = a
                            },
                            mc = function(n) {
                                this.description = void 0, this.description = n
                            },
                            il = "Dict";

                        function fu(l) {
                            return Array.isArray(l) ? JSON.stringify(l) : l instanceof Map ? "Map{}" : l instanceof Set ? "Set{}" : typeof l == "object" ? JSON.stringify(l) : String(l)
                        }

                        function wh(l, n, a, e) {
                            return new Error("failed to " + l + ' "' + fu(n) + '" as ' + a, {
                                cause: e
                            })
                        }
                        var Ju = "Bare Item",
                            Rh = "Boolean",
                            Lh = "Byte Sequence",
                            al = "Decimal",
                            mu = "Integer";

                        function Ih(l) {
                            return l < -999999999999999 || 999999999999999 < l
                        }
                        var vc = /[\x00-\x1f\x7f]+/,
                            Ch = "Token",
                            Dh = "Key";

                        function hs(l, n, a) {
                            return wh("serialize", l, n, a)
                        }

                        function ed(l) {
                            if (typeof l != "boolean") throw hs(l, Rh);
                            return l ? "?1" : "?0"
                        }

                        function Mh(l) {
                            return btoa(String.fromCharCode.apply(String, l))
                        }

                        function Ph(l) {
                            if (ArrayBuffer.isView(l) === !1) throw hs(l, Lh);
                            return ":" + Mh(l) + ":"
                        }

                        function Co(l) {
                            if (Ih(l)) throw hs(l, mu);
                            return l.toString()
                        }

                        function fs(l) {
                            return "@" + Co(l.getTime() / 1e3)
                        }

                        function td(l, n) {
                            if (l < 0) return -td(-l, n);
                            var a = Math.pow(10, n),
                                e = Math.abs(l * a % 1 - .5) < Number.EPSILON;
                            if (e) {
                                var r = Math.floor(l * a);
                                return (r % 2 === 0 ? r : r + 1) / a
                            } else return Math.round(l * a) / a
                        }

                        function pc(l) {
                            var n = td(l, 3);
                            if (Math.floor(Math.abs(n)).toString().length > 12) throw hs(l, al);
                            var a = n.toString();
                            return a.includes(".") ? a : a + ".0"
                        }
                        var Oh = "String";

                        function gc(l) {
                            if (vc.test(l)) throw hs(l, Oh);
                            return '"' + l.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"'
                        }

                        function xh(l) {
                            return l.description || l.toString().slice(7, -1)
                        }

                        function Ec(l) {
                            var n = xh(l);
                            if (/^([a-zA-Z*])([!#$%&'*+\-.^_`|~\w:/]*)$/.test(n) === !1) throw hs(n, Ch);
                            return n
                        }

                        function rd(l) {
                            switch (typeof l) {
                                case "number":
                                    if (!Ge(l)) throw hs(l, Ju);
                                    return Number.isInteger(l) ? Co(l) : pc(l);
                                case "string":
                                    return gc(l);
                                case "symbol":
                                    return Ec(l);
                                case "boolean":
                                    return ed(l);
                                case "object":
                                    if (l instanceof Date) return fs(l);
                                    if (l instanceof Uint8Array) return Ph(l);
                                    if (l instanceof mc) return Ec(l);
                                default:
                                    throw hs(l, Ju)
                            }
                        }

                        function vu(l) {
                            if (/^[a-z*][a-z0-9\-_.*]*$/.test(l) === !1) throw hs(l, Dh);
                            return l
                        }

                        function xa(l) {
                            return l == null ? "" : Object.entries(l).map(function(n) {
                                var a = n[0],
                                    e = n[1];
                                return e === !0 ? ";" + vu(a) : ";" + vu(a) + "=" + rd(e)
                            }).join("")
                        }

                        function ms(l) {
                            return l instanceof Io ? "" + rd(l.value) + xa(l.params) : rd(l)
                        }

                        function Fn(l) {
                            return "(" + l.value.map(ms).join(" ") + ")" + xa(l.params)
                        }

                        function Nh(l, n) {
                            var a;
                            if (n === void 0 && (n = {
                                    whitespace: !0
                                }), typeof l != "object") throw hs(l, il);
                            var e = l instanceof Map ? l.entries() : Object.entries(l),
                                r = (a = n) != null && a.whitespace ? " " : "";
                            return Array.from(e).map(function(i) {
                                var o = i[0],
                                    u = i[1];
                                u instanceof Io || (u = new Io(u));
                                var c = vu(o);
                                return u.value === !0 ? c += xa(u.params) : (c += "=", Array.isArray(u.value) ? c += Fn(u) : c += ms(u)), c
                            }).join("," + r)
                        }

                        function nl(l, n) {
                            return Nh(l, n)
                        }
                        var pu = function(n) {
                                return n === "ot" || n === "sf" || n === "st"
                            },
                            sl = function(n) {
                                return typeof n == "number" ? Ge(n) : n != null && n !== "" && n !== !1
                            };

                        function Ul(l, n) {
                            var a = new URL(l),
                                e = new URL(n);
                            if (a.origin !== e.origin) return l;
                            for (var r = a.pathname.split("/").slice(1), i = e.pathname.split("/").slice(1, -1); r[0] === i[0];) r.shift(), i.shift();
                            for (; i.length;) i.shift(), r.unshift("..");
                            return r.join("/")
                        }

                        function gu() {
                            try {
                                return crypto.randomUUID()
                            } catch (r) {
                                try {
                                    var l = URL.createObjectURL(new Blob),
                                        n = l.toString();
                                    return URL.revokeObjectURL(l), n.slice(n.lastIndexOf("/") + 1)
                                } catch (i) {
                                    var a = new Date().getTime(),
                                        e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(o) {
                                            var u = (a + Math.random() * 16) % 16 | 0;
                                            return a = Math.floor(a / 16), (o == "x" ? u : u & 3 | 8).toString(16)
                                        });
                                    return e
                                }
                            }
                        }
                        var Do = function(n) {
                                return Math.round(n)
                            },
                            Eu = function(n, a) {
                                return a != null && a.baseUrl && (n = Ul(n, a.baseUrl)), encodeURIComponent(n)
                            },
                            qs = function(n) {
                                return Do(n / 100) * 100
                            },
                            Mo = {
                                br: Do,
                                d: Do,
                                bl: qs,
                                dl: qs,
                                mtp: qs,
                                nor: Eu,
                                rtp: qs,
                                tb: Do
                            };

                        function yu(l, n) {
                            var a = {};
                            if (l == null || typeof l != "object") return a;
                            var e = Object.keys(l).sort(),
                                r = le({}, Mo, n == null ? void 0 : n.formatters),
                                i = n == null ? void 0 : n.filter;
                            return e.forEach(function(o) {
                                if (!(i != null && i(o))) {
                                    var u = l[o],
                                        c = r[o];
                                    c && (u = c(u, n)), !(o === "v" && u === 1) && (o == "pr" && u === 1 || sl(u) && (pu(o) && typeof u == "string" && (u = new mc(u)), a[o] = u))
                                }
                            }), a
                        }

                        function yc(l, n) {
                            return n === void 0 && (n = {}), l ? nl(yu(l, n), le({
                                whitespace: !1
                            }, n)) : ""
                        }

                        function id(l, n) {
                            var a;
                            if (n === void 0 && (n = {}), !l) return {};
                            var e = Object.entries(l),
                                r = Object.entries(kh).concat(Object.entries(((a = n) == null ? void 0 : a.customHeaderMap) || {})),
                                i = e.reduce(function(o, u) {
                                    var c, h, f = u[0],
                                        m = u[1],
                                        p = ((c = r.find(function(E) {
                                            return E[1].includes(f)
                                        })) == null ? void 0 : c[0]) || uo.REQUEST;
                                    return (h = o[p]) != null || (o[p] = {}), o[p][f] = m, o
                                }, {});
                            return Object.entries(i).reduce(function(o, u) {
                                var c = u[0],
                                    h = u[1];
                                return o[c] = yc(h, n), o
                            }, {})
                        }

                        function Ka(l, n, a) {
                            return le(l, id(n, a))
                        }
                        var Za = "CMCD";

                        function ws(l, n) {
                            if (n === void 0 && (n = {}), !l) return "";
                            var a = yc(l, n);
                            return Za + "=" + encodeURIComponent(a)
                        }
                        var sn = /CMCD=[^&#]+/;

                        function ol(l, n, a) {
                            var e = ws(n, a);
                            if (!e) return l;
                            if (sn.test(l)) return l.replace(sn, e);
                            var r = l.includes("?") ? "&" : "?";
                            return "" + l + r + e
                        }
                        var Po = function() {
                                function l(a) {
                                    var e = this;
                                    this.hls = void 0, this.config = void 0, this.media = void 0, this.sid = void 0, this.cid = void 0, this.useHeaders = !1, this.includeKeys = void 0, this.initialized = !1, this.starved = !1, this.buffering = !0, this.audioBuffer = void 0, this.videoBuffer = void 0, this.onWaiting = function() {
                                        e.initialized && (e.starved = !0), e.buffering = !0
                                    }, this.onPlaying = function() {
                                        e.initialized || (e.initialized = !0), e.buffering = !1
                                    }, this.applyPlaylistData = function(o) {
                                        try {
                                            e.apply(o, {
                                                ot: vn.MANIFEST,
                                                su: !e.initialized
                                            })
                                        } catch (u) {
                                            V.warn("Could not generate manifest CMCD data.", u)
                                        }
                                    }, this.applyFragmentData = function(o) {
                                        try {
                                            var u = o.frag,
                                                c = e.hls.levels[u.level],
                                                h = e.getObjectType(u),
                                                f = {
                                                    d: u.duration * 1e3,
                                                    ot: h
                                                };
                                            (h === vn.VIDEO || h === vn.AUDIO || h == vn.MUXED) && (f.br = c.bitrate / 1e3, f.tb = e.getTopBandwidth(h) / 1e3, f.bl = e.getBufferLength(h)), e.apply(o, f)
                                        } catch (m) {
                                            V.warn("Could not generate segment CMCD data.", m)
                                        }
                                    }, this.hls = a;
                                    var r = this.config = a.config,
                                        i = r.cmcd;
                                    i != null && (r.pLoader = this.createPlaylistLoader(), r.fLoader = this.createFragmentLoader(), this.sid = i.sessionId || gu(), this.cid = i.contentId, this.useHeaders = i.useHeaders === !0, this.includeKeys = i.includeKeys, this.registerListeners())
                                }
                                var n = l.prototype;
                                return n.registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), e.on(_.MEDIA_DETACHED, this.onMediaDetached, this), e.on(_.BUFFER_CREATED, this.onBufferCreated, this)
                                }, n.unregisterListeners = function() {
                                    var e = this.hls;
                                    e.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), e.off(_.MEDIA_DETACHED, this.onMediaDetached, this), e.off(_.BUFFER_CREATED, this.onBufferCreated, this)
                                }, n.destroy = function() {
                                    this.unregisterListeners(), this.onMediaDetached(), this.hls = this.config = this.audioBuffer = this.videoBuffer = null, this.onWaiting = this.onPlaying = null
                                }, n.onMediaAttached = function(e, r) {
                                    this.media = r.media, this.media.addEventListener("waiting", this.onWaiting), this.media.addEventListener("playing", this.onPlaying)
                                }, n.onMediaDetached = function() {
                                    this.media && (this.media.removeEventListener("waiting", this.onWaiting), this.media.removeEventListener("playing", this.onPlaying), this.media = null)
                                }, n.onBufferCreated = function(e, r) {
                                    var i, o;
                                    this.audioBuffer = (i = r.tracks.audio) == null ? void 0 : i.buffer, this.videoBuffer = (o = r.tracks.video) == null ? void 0 : o.buffer
                                }, n.createData = function() {
                                    var e;
                                    return {
                                        v: 1,
                                        sf: hu.HLS,
                                        sid: this.sid,
                                        cid: this.cid,
                                        pr: (e = this.media) == null ? void 0 : e.playbackRate,
                                        mtp: this.hls.bandwidthEstimate / 1e3
                                    }
                                }, n.apply = function(e, r) {
                                    r === void 0 && (r = {}), le(r, this.createData());
                                    var i = r.ot === vn.INIT || r.ot === vn.VIDEO || r.ot === vn.MUXED;
                                    this.starved && i && (r.bs = !0, r.su = !0, this.starved = !1), r.su == null && (r.su = this.buffering);
                                    var o = this.includeKeys;
                                    o && (r = Object.keys(r).reduce(function(u, c) {
                                        return o.includes(c) && (u[c] = r[c]), u
                                    }, {})), this.useHeaders ? (e.headers || (e.headers = {}), Ka(e.headers, r)) : e.url = ol(e.url, r)
                                }, n.getObjectType = function(e) {
                                    var r = e.type;
                                    if (r === "subtitle") return vn.TIMED_TEXT;
                                    if (e.sn === "initSegment") return vn.INIT;
                                    if (r === "audio") return vn.AUDIO;
                                    if (r === "main") return this.hls.audioTracks.length ? vn.VIDEO : vn.MUXED
                                }, n.getTopBandwidth = function(e) {
                                    var r = 0,
                                        i, o = this.hls;
                                    if (e === vn.AUDIO) i = o.audioTracks;
                                    else {
                                        var u = o.maxAutoLevel,
                                            c = u > -1 ? u + 1 : o.levels.length;
                                        i = o.levels.slice(0, c)
                                    }
                                    for (var h = at(i), f; !(f = h()).done;) {
                                        var m = f.value;
                                        m.bitrate > r && (r = m.bitrate)
                                    }
                                    return r > 0 ? r : NaN
                                }, n.getBufferLength = function(e) {
                                    var r = this.hls.media,
                                        i = e === vn.AUDIO ? this.audioBuffer : this.videoBuffer;
                                    if (!i || !r) return NaN;
                                    var o = Or.bufferInfo(i, r.currentTime, this.config.maxBufferHole);
                                    return o.len * 1e3
                                }, n.createPlaylistLoader = function() {
                                    var e = this.config.pLoader,
                                        r = this.applyPlaylistData,
                                        i = e || this.config.loader;
                                    return function() {
                                        function o(c) {
                                            this.loader = void 0, this.loader = new i(c)
                                        }
                                        var u = o.prototype;
                                        return u.destroy = function() {
                                            this.loader.destroy()
                                        }, u.abort = function() {
                                            this.loader.abort()
                                        }, u.load = function(h, f, m) {
                                            r(h), this.loader.load(h, f, m)
                                        }, tt(o, [{
                                            key: "stats",
                                            get: function() {
                                                return this.loader.stats
                                            }
                                        }, {
                                            key: "context",
                                            get: function() {
                                                return this.loader.context
                                            }
                                        }]), o
                                    }()
                                }, n.createFragmentLoader = function() {
                                    var e = this.config.fLoader,
                                        r = this.applyFragmentData,
                                        i = e || this.config.loader;
                                    return function() {
                                        function o(c) {
                                            this.loader = void 0, this.loader = new i(c)
                                        }
                                        var u = o.prototype;
                                        return u.destroy = function() {
                                            this.loader.destroy()
                                        }, u.abort = function() {
                                            this.loader.abort()
                                        }, u.load = function(h, f, m) {
                                            r(h), this.loader.load(h, f, m)
                                        }, tt(o, [{
                                            key: "stats",
                                            get: function() {
                                                return this.loader.stats
                                            }
                                        }, {
                                            key: "context",
                                            get: function() {
                                                return this.loader.context
                                            }
                                        }]), o
                                    }()
                                }, l
                            }(),
                            bu = 3e5,
                            Fl = function() {
                                function l(a) {
                                    this.hls = void 0, this.log = void 0, this.loader = null, this.uri = null, this.pathwayId = ".", this.pathwayPriority = null, this.timeToLoad = 300, this.reloadTimer = -1, this.updated = 0, this.started = !1, this.enabled = !0, this.levels = null, this.audioTracks = null, this.subtitleTracks = null, this.penalizedPathways = {}, this.hls = a, this.log = V.log.bind(V, "[content-steering]:"), this.registerListeners()
                                }
                                var n = l.prototype;
                                return n.registerListeners = function() {
                                    var e = this.hls;
                                    e.on(_.MANIFEST_LOADING, this.onManifestLoading, this), e.on(_.MANIFEST_LOADED, this.onManifestLoaded, this), e.on(_.MANIFEST_PARSED, this.onManifestParsed, this), e.on(_.ERROR, this.onError, this)
                                }, n.unregisterListeners = function() {
                                    var e = this.hls;
                                    e && (e.off(_.MANIFEST_LOADING, this.onManifestLoading, this), e.off(_.MANIFEST_LOADED, this.onManifestLoaded, this), e.off(_.MANIFEST_PARSED, this.onManifestParsed, this), e.off(_.ERROR, this.onError, this))
                                }, n.startLoad = function() {
                                    if (this.started = !0, this.clearTimeout(), this.enabled && this.uri) {
                                        if (this.updated) {
                                            var e = this.timeToLoad * 1e3 - (performance.now() - this.updated);
                                            if (e > 0) {
                                                this.scheduleRefresh(this.uri, e);
                                                return
                                            }
                                        }
                                        this.loadSteeringManifest(this.uri)
                                    }
                                }, n.stopLoad = function() {
                                    this.started = !1, this.loader && (this.loader.destroy(), this.loader = null), this.clearTimeout()
                                }, n.clearTimeout = function() {
                                    this.reloadTimer !== -1 && (self.clearTimeout(this.reloadTimer), this.reloadTimer = -1)
                                }, n.destroy = function() {
                                    this.unregisterListeners(), this.stopLoad(), this.hls = null, this.levels = this.audioTracks = this.subtitleTracks = null
                                }, n.removeLevel = function(e) {
                                    var r = this.levels;
                                    r && (this.levels = r.filter(function(i) {
                                        return i !== e
                                    }))
                                }, n.onManifestLoading = function() {
                                    this.stopLoad(), this.enabled = !0, this.timeToLoad = 300, this.updated = 0, this.uri = null, this.pathwayId = ".", this.levels = this.audioTracks = this.subtitleTracks = null
                                }, n.onManifestLoaded = function(e, r) {
                                    var i = r.contentSteering;
                                    i !== null && (this.pathwayId = i.pathwayId, this.uri = i.uri, this.started && this.startLoad())
                                }, n.onManifestParsed = function(e, r) {
                                    this.audioTracks = r.audioTracks, this.subtitleTracks = r.subtitleTracks
                                }, n.onError = function(e, r) {
                                    var i = r.errorAction;
                                    if ((i == null ? void 0 : i.action) === Te.SendAlternateToPenaltyBox && i.flags === Le.MoveAllAlternatesMatchingHost) {
                                        var o = this.levels,
                                            u = this.pathwayPriority,
                                            c = this.pathwayId;
                                        if (r.context) {
                                            var h = r.context,
                                                f = h.groupId,
                                                m = h.pathwayId,
                                                p = h.type;
                                            f && o ? c = this.getPathwayForGroupId(f, p, c) : m && (c = m)
                                        }
                                        c in this.penalizedPathways || (this.penalizedPathways[c] = performance.now()), !u && o && (u = o.reduce(function(E, S) {
                                            return E.indexOf(S.pathwayId) === -1 && E.push(S.pathwayId), E
                                        }, [])), u && u.length > 1 && (this.updatePathwayPriority(u), i.resolved = this.pathwayId !== c), i.resolved || V.warn("Could not resolve " + r.details + ' ("' + r.error.message + '") with content-steering for Pathway: ' + c + " levels: " + (o && o.length) + " priorities: " + JSON.stringify(u) + " penalized: " + JSON.stringify(this.penalizedPathways))
                                    }
                                }, n.filterParsedLevels = function(e) {
                                    this.levels = e;
                                    var r = this.getLevelsForPathway(this.pathwayId);
                                    if (r.length === 0) {
                                        var i = e[0].pathwayId;
                                        this.log("No levels found in Pathway " + this.pathwayId + '. Setting initial Pathway to "' + i + '"'), r = this.getLevelsForPathway(i), this.pathwayId = i
                                    }
                                    return r.length !== e.length && this.log("Found " + r.length + "/" + e.length + ' levels in Pathway "' + this.pathwayId + '"'), r
                                }, n.getLevelsForPathway = function(e) {
                                    return this.levels === null ? [] : this.levels.filter(function(r) {
                                        return e === r.pathwayId
                                    })
                                }, n.updatePathwayPriority = function(e) {
                                    this.pathwayPriority = e;
                                    var r, i = this.penalizedPathways,
                                        o = performance.now();
                                    Object.keys(i).forEach(function(p) {
                                        o - i[p] > bu && delete i[p]
                                    });
                                    for (var u = 0; u < e.length; u++) {
                                        var c = e[u];
                                        if (!(c in i)) {
                                            if (c === this.pathwayId) return;
                                            var h = this.hls.nextLoadLevel,
                                                f = this.hls.levels[h];
                                            if (r = this.getLevelsForPathway(c), r.length > 0) {
                                                this.log('Setting Pathway to "' + c + '"'), this.pathwayId = c, $a(r), this.hls.trigger(_.LEVELS_UPDATED, {
                                                    levels: r
                                                });
                                                var m = this.hls.levels[h];
                                                f && m && this.levels && (m.attrs["STABLE-VARIANT-ID"] !== f.attrs["STABLE-VARIANT-ID"] && m.bitrate !== f.bitrate && this.log("Unstable Pathways change from bitrate " + f.bitrate + " to " + m.bitrate), this.hls.nextLoadLevel = h);
                                                break
                                            }
                                        }
                                    }
                                }, n.getPathwayForGroupId = function(e, r, i) {
                                    for (var o = this.getLevelsForPathway(i).concat(this.levels || []), u = 0; u < o.length; u++)
                                        if (r === C.AUDIO_TRACK && o[u].hasAudioGroup(e) || r === C.SUBTITLE_TRACK && o[u].hasSubtitleGroup(e)) return o[u].pathwayId;
                                    return i
                                }, n.clonePathways = function(e) {
                                    var r = this,
                                        i = this.levels;
                                    if (i) {
                                        var o = {},
                                            u = {};
                                        e.forEach(function(c) {
                                            var h = c.ID,
                                                f = c["BASE-ID"],
                                                m = c["URI-REPLACEMENT"];
                                            if (!i.some(function(E) {
                                                    return E.pathwayId === h
                                                })) {
                                                var p = r.getLevelsForPathway(f).map(function(E) {
                                                    var S = new st(E.attrs);
                                                    S["PATHWAY-ID"] = h;
                                                    var L = S.AUDIO && S.AUDIO + "_clone_" + h,
                                                        I = S.SUBTITLES && S.SUBTITLES + "_clone_" + h;
                                                    L && (o[S.AUDIO] = L, S.AUDIO = L), I && (u[S.SUBTITLES] = I, S.SUBTITLES = I);
                                                    var O = Hl(E.uri, S["STABLE-VARIANT-ID"], "PER-VARIANT-URIS", m),
                                                        U = new gi({
                                                            attrs: S,
                                                            audioCodec: E.audioCodec,
                                                            bitrate: E.bitrate,
                                                            height: E.height,
                                                            name: E.name,
                                                            url: O,
                                                            videoCodec: E.videoCodec,
                                                            width: E.width
                                                        });
                                                    if (E.audioGroups)
                                                        for (var G = 1; G < E.audioGroups.length; G++) U.addGroupId("audio", E.audioGroups[G] + "_clone_" + h);
                                                    if (E.subtitleGroups)
                                                        for (var ee = 1; ee < E.subtitleGroups.length; ee++) U.addGroupId("text", E.subtitleGroups[ee] + "_clone_" + h);
                                                    return U
                                                });
                                                i.push.apply(i, p), Bl(r.audioTracks, o, m, h), Bl(r.subtitleTracks, u, m, h)
                                            }
                                        })
                                    }
                                }, n.loadSteeringManifest = function(e) {
                                    var r = this,
                                        i = this.hls.config,
                                        o = i.loader;
                                    this.loader && this.loader.destroy(), this.loader = new o(i);
                                    var u;
                                    try {
                                        u = new self.URL(e)
                                    } catch (S) {
                                        this.enabled = !1, this.log("Failed to parse Steering Manifest URI: " + e);
                                        return
                                    }
                                    if (u.protocol !== "data:") {
                                        var c = (this.hls.bandwidthEstimate || i.abrEwmaDefaultEstimate) | 0;
                                        u.searchParams.set("_HLS_pathway", this.pathwayId), u.searchParams.set("_HLS_throughput", "" + c)
                                    }
                                    var h = {
                                            responseType: "json",
                                            url: u.href
                                        },
                                        f = i.steeringManifestLoadPolicy.default,
                                        m = f.errorRetry || f.timeoutRetry || {},
                                        p = {
                                            loadPolicy: f,
                                            timeout: f.maxLoadTimeMs,
                                            maxRetry: m.maxNumRetry || 0,
                                            retryDelay: m.retryDelayMs || 0,
                                            maxRetryDelay: m.maxRetryDelayMs || 0
                                        },
                                        E = {
                                            onSuccess: function(L, I, O, U) {
                                                r.log('Loaded steering manifest: "' + u + '"');
                                                var G = L.data;
                                                if (G.VERSION !== 1) {
                                                    r.log("Steering VERSION " + G.VERSION + " not supported!");
                                                    return
                                                }
                                                r.updated = performance.now(), r.timeToLoad = G.TTL;
                                                var ee = G["RELOAD-URI"],
                                                    te = G["PATHWAY-CLONES"],
                                                    _e = G["PATHWAY-PRIORITY"];
                                                if (ee) try {
                                                    r.uri = new self.URL(ee, u).href
                                                } catch (ae) {
                                                    r.enabled = !1, r.log("Failed to parse Steering Manifest RELOAD-URI: " + ee);
                                                    return
                                                }
                                                r.scheduleRefresh(r.uri || O.url), te && r.clonePathways(te);
                                                var me = {
                                                    steeringManifest: G,
                                                    url: u.toString()
                                                };
                                                r.hls.trigger(_.STEERING_MANIFEST_LOADED, me), _e && r.updatePathwayPriority(_e)
                                            },
                                            onError: function(L, I, O, U) {
                                                if (r.log("Error loading steering manifest: " + L.code + " " + L.text + " (" + I.url + ")"), r.stopLoad(), L.code === 410) {
                                                    r.enabled = !1, r.log("Steering manifest " + I.url + " no longer available");
                                                    return
                                                }
                                                var G = r.timeToLoad * 1e3;
                                                if (L.code === 429) {
                                                    var ee = r.loader;
                                                    if (typeof(ee == null ? void 0 : ee.getResponseHeader) == "function") {
                                                        var te = ee.getResponseHeader("Retry-After");
                                                        te && (G = parseFloat(te) * 1e3)
                                                    }
                                                    r.log("Steering manifest " + I.url + " rate limited");
                                                    return
                                                }
                                                r.scheduleRefresh(r.uri || I.url, G)
                                            },
                                            onTimeout: function(L, I, O) {
                                                r.log("Timeout loading steering manifest (" + I.url + ")"), r.scheduleRefresh(r.uri || I.url)
                                            }
                                        };
                                    this.log("Requesting steering manifest: " + u), this.loader.load(h, p, E)
                                }, n.scheduleRefresh = function(e, r) {
                                    var i = this;
                                    r === void 0 && (r = this.timeToLoad * 1e3), this.clearTimeout(), this.reloadTimer = self.setTimeout(function() {
                                        var o, u = (o = i.hls) == null ? void 0 : o.media;
                                        if (u && !u.ended) {
                                            i.loadSteeringManifest(e);
                                            return
                                        }
                                        i.scheduleRefresh(e, i.timeToLoad * 1e3)
                                    }, r)
                                }, l
                            }();

                        function Bl(l, n, a, e) {
                            l && Object.keys(n).forEach(function(r) {
                                var i = l.filter(function(o) {
                                    return o.groupId === r
                                }).map(function(o) {
                                    var u = le({}, o);
                                    return u.details = void 0, u.attrs = new st(u.attrs), u.url = u.attrs.URI = Hl(o.url, o.attrs["STABLE-RENDITION-ID"], "PER-RENDITION-URIS", a), u.groupId = u.attrs["GROUP-ID"] = n[r], u.attrs["PATHWAY-ID"] = e, u
                                });
                                l.push.apply(l, i)
                            })
                        }

                        function Hl(l, n, a, e) {
                            var r = e.HOST,
                                i = e.PARAMS,
                                o = e[a],
                                u;
                            n && (u = o == null ? void 0 : o[n], u && (l = u));
                            var c = new self.URL(l);
                            return r && !u && (c.host = r), i && Object.keys(i).sort().forEach(function(h) {
                                h && c.searchParams.set(h, i[h])
                            }), c.href
                        }
                        var Vl = /^age:\s*[\d.]+\s*$/im,
                            ll = function() {
                                function l(a) {
                                    this.xhrSetup = void 0, this.requestTimeout = void 0, this.retryTimeout = void 0, this.retryDelay = void 0, this.config = null, this.callbacks = null, this.context = null, this.loader = null, this.stats = void 0, this.xhrSetup = a && a.xhrSetup || null, this.stats = new Er, this.retryDelay = 0
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.callbacks = null, this.abortInternal(), this.loader = null, this.config = null, this.context = null, this.xhrSetup = null
                                }, n.abortInternal = function() {
                                    var e = this.loader;
                                    self.clearTimeout(this.requestTimeout), self.clearTimeout(this.retryTimeout), e && (e.onreadystatechange = null, e.onprogress = null, e.readyState !== 4 && (this.stats.aborted = !0, e.abort()))
                                }, n.abort = function() {
                                    var e;
                                    this.abortInternal(), (e = this.callbacks) != null && e.onAbort && this.callbacks.onAbort(this.stats, this.context, this.loader)
                                }, n.load = function(e, r, i) {
                                    if (this.stats.loading.start) throw new Error("Loader can only be used once.");
                                    this.stats.loading.start = self.performance.now(), this.context = e, this.config = r, this.callbacks = i, this.loadInternal()
                                }, n.loadInternal = function() {
                                    var e = this,
                                        r = this.config,
                                        i = this.context;
                                    if (!(!r || !i)) {
                                        var o = this.loader = new self.XMLHttpRequest,
                                            u = this.stats;
                                        u.loading.first = 0, u.loaded = 0, u.aborted = !1;
                                        var c = this.xhrSetup;
                                        c ? Promise.resolve().then(function() {
                                            if (!(e.loader !== o || e.stats.aborted)) return c(o, i.url)
                                        }).catch(function(h) {
                                            if (!(e.loader !== o || e.stats.aborted)) return o.open("GET", i.url, !0), c(o, i.url)
                                        }).then(function() {
                                            e.loader !== o || e.stats.aborted || e.openAndSendXhr(o, i, r)
                                        }).catch(function(h) {
                                            e.callbacks.onError({
                                                code: o.status,
                                                text: h.message
                                            }, i, o, u)
                                        }) : this.openAndSendXhr(o, i, r)
                                    }
                                }, n.openAndSendXhr = function(e, r, i) {
                                    e.readyState || e.open("GET", r.url, !0);
                                    var o = r.headers,
                                        u = i.loadPolicy,
                                        c = u.maxTimeToFirstByteMs,
                                        h = u.maxLoadTimeMs;
                                    if (o)
                                        for (var f in o) e.setRequestHeader(f, o[f]);
                                    r.rangeEnd && e.setRequestHeader("Range", "bytes=" + r.rangeStart + "-" + (r.rangeEnd - 1)), e.onreadystatechange = this.readystatechange.bind(this), e.onprogress = this.loadprogress.bind(this), e.responseType = r.responseType, self.clearTimeout(this.requestTimeout), i.timeout = c && Ge(c) ? c : h, this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), i.timeout), e.send()
                                }, n.readystatechange = function() {
                                    var e = this.context,
                                        r = this.loader,
                                        i = this.stats;
                                    if (!(!e || !r)) {
                                        var o = r.readyState,
                                            u = this.config;
                                        if (!i.aborted && o >= 2 && (i.loading.first === 0 && (i.loading.first = Math.max(self.performance.now(), i.loading.start), u.timeout !== u.loadPolicy.maxLoadTimeMs && (self.clearTimeout(this.requestTimeout), u.timeout = u.loadPolicy.maxLoadTimeMs, this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), u.loadPolicy.maxLoadTimeMs - (i.loading.first - i.loading.start)))), o === 4)) {
                                            self.clearTimeout(this.requestTimeout), r.onreadystatechange = null, r.onprogress = null;
                                            var c = r.status,
                                                h = r.responseType === "text" ? r.responseText : null;
                                            if (c >= 200 && c < 300) {
                                                var f = h != null ? h : r.response;
                                                if (f != null) {
                                                    i.loading.end = Math.max(self.performance.now(), i.loading.first);
                                                    var m = r.responseType === "arraybuffer" ? f.byteLength : f.length;
                                                    if (i.loaded = i.total = m, i.bwEstimate = i.total * 8e3 / (i.loading.end - i.loading.first), !this.callbacks) return;
                                                    var p = this.callbacks.onProgress;
                                                    if (p && p(i, e, f, r), !this.callbacks) return;
                                                    var E = {
                                                        url: r.responseURL,
                                                        data: f,
                                                        code: c
                                                    };
                                                    this.callbacks.onSuccess(E, i, e, r);
                                                    return
                                                }
                                            }
                                            var S = u.loadPolicy.errorRetry,
                                                L = i.retry,
                                                I = {
                                                    url: e.url,
                                                    data: void 0,
                                                    code: c
                                                };
                                            Wn(S, L, !1, I) ? this.retry(S) : (V.error(c + " while loading " + e.url), this.callbacks.onError({
                                                code: c,
                                                text: r.statusText
                                            }, e, r, i))
                                        }
                                    }
                                }, n.loadtimeout = function() {
                                    if (this.config) {
                                        var e = this.config.loadPolicy.timeoutRetry,
                                            r = this.stats.retry;
                                        if (Wn(e, r, !0)) this.retry(e);
                                        else {
                                            var i;
                                            V.warn("timeout while loading " + ((i = this.context) == null ? void 0 : i.url));
                                            var o = this.callbacks;
                                            o && (this.abortInternal(), o.onTimeout(this.stats, this.context, this.loader))
                                        }
                                    }
                                }, n.retry = function(e) {
                                    var r = this.context,
                                        i = this.stats;
                                    this.retryDelay = ci(e, i.retry), i.retry++, V.warn((status ? "HTTP Status " + status : "Timeout") + " while loading " + (r == null ? void 0 : r.url) + ", retrying " + i.retry + "/" + e.maxNumRetry + " in " + this.retryDelay + "ms"), this.abortInternal(), this.loader = null, self.clearTimeout(this.retryTimeout), this.retryTimeout = self.setTimeout(this.loadInternal.bind(this), this.retryDelay)
                                }, n.loadprogress = function(e) {
                                    var r = this.stats;
                                    r.loaded = e.loaded, e.lengthComputable && (r.total = e.total)
                                }, n.getCacheAge = function() {
                                    var e = null;
                                    if (this.loader && Vl.test(this.loader.getAllResponseHeaders())) {
                                        var r = this.loader.getResponseHeader("age");
                                        e = r ? parseFloat(r) : null
                                    }
                                    return e
                                }, n.getResponseHeader = function(e) {
                                    return this.loader && new RegExp("^" + e + ":\\s*[\\d.]+\\s*$", "im").test(this.loader.getAllResponseHeaders()) ? this.loader.getResponseHeader(e) : null
                                }, l
                            }();

                        function ul() {
                            if (self.fetch && self.AbortController && self.ReadableStream && self.Request) try {
                                return new self.ReadableStream({}), !0
                            } catch (l) {}
                            return !1
                        }
                        var dl = /(\d+)-(\d+)\/(\d+)/,
                            cl = function() {
                                function l(a) {
                                    this.fetchSetup = void 0, this.requestTimeout = void 0, this.request = null, this.response = null, this.controller = void 0, this.context = null, this.config = null, this.callbacks = null, this.stats = void 0, this.loader = null, this.fetchSetup = a.fetchSetup || Tu, this.controller = new self.AbortController, this.stats = new Er
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.loader = this.callbacks = this.context = this.config = this.request = null, this.abortInternal(), this.response = null, this.fetchSetup = this.controller = this.stats = null
                                }, n.abortInternal = function() {
                                    this.controller && !this.stats.loading.end && (this.stats.aborted = !0, this.controller.abort())
                                }, n.abort = function() {
                                    var e;
                                    this.abortInternal(), (e = this.callbacks) != null && e.onAbort && this.callbacks.onAbort(this.stats, this.context, this.response)
                                }, n.load = function(e, r, i) {
                                    var o = this,
                                        u = this.stats;
                                    if (u.loading.start) throw new Error("Loader can only be used once.");
                                    u.loading.start = self.performance.now();
                                    var c = ad(e, this.controller.signal),
                                        h = i.onProgress,
                                        f = e.responseType === "arraybuffer",
                                        m = f ? "byteLength" : "length",
                                        p = r.loadPolicy,
                                        E = p.maxTimeToFirstByteMs,
                                        S = p.maxLoadTimeMs;
                                    this.context = e, this.config = r, this.callbacks = i, this.request = this.fetchSetup(e, c), self.clearTimeout(this.requestTimeout), r.timeout = E && Ge(E) ? E : S, this.requestTimeout = self.setTimeout(function() {
                                        o.abortInternal(), i.onTimeout(u, e, o.response)
                                    }, r.timeout), self.fetch(this.request).then(function(L) {
                                        o.response = o.loader = L;
                                        var I = Math.max(self.performance.now(), u.loading.start);
                                        if (self.clearTimeout(o.requestTimeout), r.timeout = S, o.requestTimeout = self.setTimeout(function() {
                                                o.abortInternal(), i.onTimeout(u, e, o.response)
                                            }, S - (I - u.loading.start)), !L.ok) {
                                            var O = L.status,
                                                U = L.statusText;
                                            throw new sd(U || "fetch, bad network response", O, L)
                                        }
                                        return u.loading.first = I, u.total = nd(L.headers) || u.total, h && Ge(r.highWaterMark) ? o.loadProgressively(L, u, e, r.highWaterMark, h) : f ? L.arrayBuffer() : e.responseType === "json" ? L.json() : L.text()
                                    }).then(function(L) {
                                        var I = o.response;
                                        if (!I) throw new Error("loader destroyed");
                                        self.clearTimeout(o.requestTimeout), u.loading.end = Math.max(self.performance.now(), u.loading.first);
                                        var O = L[m];
                                        O && (u.loaded = u.total = O);
                                        var U = {
                                            url: I.url,
                                            data: L,
                                            code: I.status
                                        };
                                        h && !Ge(r.highWaterMark) && h(u, e, L, I), i.onSuccess(U, u, e, I)
                                    }).catch(function(L) {
                                        if (self.clearTimeout(o.requestTimeout), !u.aborted) {
                                            var I = L && L.code || 0,
                                                O = L ? L.message : null;
                                            i.onError({
                                                code: I,
                                                text: O
                                            }, e, L ? L.details : null, u)
                                        }
                                    })
                                }, n.getCacheAge = function() {
                                    var e = null;
                                    if (this.response) {
                                        var r = this.response.headers.get("age");
                                        e = r ? parseFloat(r) : null
                                    }
                                    return e
                                }, n.getResponseHeader = function(e) {
                                    return this.response ? this.response.headers.get(e) : null
                                }, n.loadProgressively = function(e, r, i, o, u) {
                                    o === void 0 && (o = 0);
                                    var c = new zs,
                                        h = e.body.getReader(),
                                        f = function m() {
                                            return h.read().then(function(p) {
                                                if (p.done) return c.dataLength && u(r, i, c.flush(), e), Promise.resolve(new ArrayBuffer(0));
                                                var E = p.value,
                                                    S = E.length;
                                                return r.loaded += S, S < o || c.dataLength ? (c.push(E), c.dataLength >= o && u(r, i, c.flush(), e)) : u(r, i, E, e), m()
                                            }).catch(function() {
                                                return Promise.reject()
                                            })
                                        };
                                    return f()
                                }, l
                            }();

                        function ad(l, n) {
                            var a = {
                                method: "GET",
                                mode: "cors",
                                credentials: "same-origin",
                                signal: n,
                                headers: new self.Headers(le({}, l.headers))
                            };
                            return l.rangeEnd && a.headers.set("Range", "bytes=" + l.rangeStart + "-" + String(l.rangeEnd - 1)), a
                        }

                        function bc(l) {
                            var n = dl.exec(l);
                            if (n) return parseInt(n[2]) - parseInt(n[1]) + 1
                        }

                        function nd(l) {
                            var n = l.get("Content-Range");
                            if (n) {
                                var a = bc(n);
                                if (Ge(a)) return a
                            }
                            var e = l.get("Content-Length");
                            if (e) return parseInt(e)
                        }

                        function Tu(l, n) {
                            return new self.Request(l.url, n)
                        }
                        var sd = function(l) {
                                x(n, l);

                                function n(a, e, r) {
                                    var i;
                                    return i = l.call(this, a) || this, i.code = void 0, i.details = void 0, i.code = e, i.details = r, i
                                }
                                return n
                            }(Rt(Error)),
                            Au = /\s/,
                            od = {
                                newCue: function(n, a, e, r) {
                                    for (var i = [], o, u, c, h, f, m = self.VTTCue || self.TextTrackCue, p = 0; p < r.rows.length; p++)
                                        if (o = r.rows[p], c = !0, h = 0, f = "", !o.isEmpty()) {
                                            for (var E, S = 0; S < o.chars.length; S++) Au.test(o.chars[S].uchar) && c ? h++ : (f += o.chars[S].uchar, c = !1);
                                            o.cueStartTime = a, a === e && (e += 1e-4), h >= 16 ? h-- : h++;
                                            var L = ju(f.trim()),
                                                I = Ol(a, e, L);
                                            n != null && (E = n.cues) != null && E.getCueById(I) || (u = new m(a, e, L), u.id = I, u.line = p + 1, u.align = "left", u.position = 10 + Math.min(80, Math.floor(h * 8 / 32) * 10), i.push(u))
                                        }
                                    return n && i.length && (i.sort(function(O, U) {
                                        return O.line === "auto" || U.line === "auto" ? 0 : O.line > 8 && U.line > 8 ? U.line - O.line : O.line - U.line
                                    }), i.forEach(function(O) {
                                        return Qe(n, O)
                                    })), i
                                }
                            },
                            _u = {
                                maxTimeToFirstByteMs: 8e3,
                                maxLoadTimeMs: 2e4,
                                timeoutRetry: null,
                                errorRetry: null
                            },
                            Su = Ee(Ee({
                                autoStartLoad: !0,
                                startPosition: -1,
                                defaultAudioCodec: void 0,
                                debug: !1,
                                capLevelOnFPSDrop: !1,
                                capLevelToPlayerSize: !1,
                                ignoreDevicePixelRatio: !1,
                                preferManagedMediaSource: !0,
                                initialLiveManifestSize: 1,
                                maxBufferLength: 30,
                                backBufferLength: 1 / 0,
                                frontBufferFlushThreshold: 1 / 0,
                                maxBufferSize: 60 * 1e3 * 1e3,
                                maxBufferHole: .1,
                                highBufferWatchdogPeriod: 2,
                                nudgeOffset: .1,
                                nudgeMaxRetry: 3,
                                maxFragLookUpTolerance: .25,
                                liveSyncDurationCount: 3,
                                liveMaxLatencyDurationCount: 1 / 0,
                                liveSyncDuration: void 0,
                                liveMaxLatencyDuration: void 0,
                                maxLiveSyncPlaybackRate: 1,
                                liveDurationInfinity: !1,
                                liveBackBufferLength: null,
                                maxMaxBufferLength: 600,
                                enableWorker: !0,
                                workerPath: null,
                                enableSoftwareAES: !0,
                                startLevel: void 0,
                                startFragPrefetch: !1,
                                fpsDroppedMonitoringPeriod: 5e3,
                                fpsDroppedMonitoringThreshold: .2,
                                appendErrorMaxRetry: 3,
                                loader: ll,
                                fLoader: void 0,
                                pLoader: void 0,
                                xhrSetup: void 0,
                                licenseXhrSetup: void 0,
                                licenseResponseCallback: void 0,
                                abrController: bs,
                                bufferController: jd,
                                capLevelController: cu,
                                errorController: Re,
                                fpsController: Sh,
                                stretchShortVideoTrack: !1,
                                maxAudioFramesDrift: 1,
                                forceKeyFrameOnDiscontinuity: !0,
                                abrEwmaFastLive: 3,
                                abrEwmaSlowLive: 9,
                                abrEwmaFastVoD: 3,
                                abrEwmaSlowVoD: 9,
                                abrEwmaDefaultEstimate: 5e5,
                                abrEwmaDefaultEstimateMax: 5e6,
                                abrBandWidthFactor: .95,
                                abrBandWidthUpFactor: .7,
                                abrMaxWithRealBitrate: !1,
                                maxStarvationDelay: 4,
                                maxLoadingDelay: 4,
                                minAutoBitrate: 0,
                                emeEnabled: !1,
                                widevineLicenseUrl: void 0,
                                drmSystems: {},
                                drmSystemOptions: {},
                                requestMediaKeySystemAccessFunc: j,
                                testBandwidth: !0,
                                progressive: !1,
                                lowLatencyMode: !0,
                                cmcd: void 0,
                                enableDateRangeMetadataCues: !0,
                                enableEmsgMetadataCues: !0,
                                enableID3MetadataCues: !0,
                                useMediaCapabilities: !0,
                                certLoadPolicy: {
                                    default: _u
                                },
                                keyLoadPolicy: {
                                    default: {
                                        maxTimeToFirstByteMs: 8e3,
                                        maxLoadTimeMs: 2e4,
                                        timeoutRetry: {
                                            maxNumRetry: 1,
                                            retryDelayMs: 1e3,
                                            maxRetryDelayMs: 2e4,
                                            backoff: "linear"
                                        },
                                        errorRetry: {
                                            maxNumRetry: 8,
                                            retryDelayMs: 1e3,
                                            maxRetryDelayMs: 2e4,
                                            backoff: "linear"
                                        }
                                    }
                                },
                                manifestLoadPolicy: {
                                    default: {
                                        maxTimeToFirstByteMs: 1 / 0,
                                        maxLoadTimeMs: 2e4,
                                        timeoutRetry: {
                                            maxNumRetry: 2,
                                            retryDelayMs: 0,
                                            maxRetryDelayMs: 0
                                        },
                                        errorRetry: {
                                            maxNumRetry: 1,
                                            retryDelayMs: 1e3,
                                            maxRetryDelayMs: 8e3
                                        }
                                    }
                                },
                                playlistLoadPolicy: {
                                    default: {
                                        maxTimeToFirstByteMs: 1e4,
                                        maxLoadTimeMs: 2e4,
                                        timeoutRetry: {
                                            maxNumRetry: 2,
                                            retryDelayMs: 0,
                                            maxRetryDelayMs: 0
                                        },
                                        errorRetry: {
                                            maxNumRetry: 2,
                                            retryDelayMs: 1e3,
                                            maxRetryDelayMs: 8e3
                                        }
                                    }
                                },
                                fragLoadPolicy: {
                                    default: {
                                        maxTimeToFirstByteMs: 1e4,
                                        maxLoadTimeMs: 12e4,
                                        timeoutRetry: {
                                            maxNumRetry: 4,
                                            retryDelayMs: 0,
                                            maxRetryDelayMs: 0
                                        },
                                        errorRetry: {
                                            maxNumRetry: 6,
                                            retryDelayMs: 1e3,
                                            maxRetryDelayMs: 8e3
                                        }
                                    }
                                },
                                steeringManifestLoadPolicy: {
                                    default: {
                                        maxTimeToFirstByteMs: 1e4,
                                        maxLoadTimeMs: 2e4,
                                        timeoutRetry: {
                                            maxNumRetry: 2,
                                            retryDelayMs: 0,
                                            maxRetryDelayMs: 0
                                        },
                                        errorRetry: {
                                            maxNumRetry: 1,
                                            retryDelayMs: 1e3,
                                            maxRetryDelayMs: 8e3
                                        }
                                    }
                                },
                                manifestLoadingTimeOut: 1e4,
                                manifestLoadingMaxRetry: 1,
                                manifestLoadingRetryDelay: 1e3,
                                manifestLoadingMaxRetryTimeout: 64e3,
                                levelLoadingTimeOut: 1e4,
                                levelLoadingMaxRetry: 4,
                                levelLoadingRetryDelay: 1e3,
                                levelLoadingMaxRetryTimeout: 64e3,
                                fragLoadingTimeOut: 2e4,
                                fragLoadingMaxRetry: 6,
                                fragLoadingRetryDelay: 1e3,
                                fragLoadingMaxRetryTimeout: 64e3
                            }, ld()), {}, {
                                subtitleStreamController: ru,
                                subtitleTrackController: hh,
                                timelineController: Ah,
                                audioStreamController: nn,
                                audioTrackController: Il,
                                emeController: cs,
                                cmcdController: Po,
                                contentSteeringController: Fl
                            });

                        function ld() {
                            return {
                                cueHandler: od,
                                enableWebVTT: !0,
                                enableIMSC1: !0,
                                enableCEA708Captions: !0,
                                captionsTextTrack1Label: "English",
                                captionsTextTrack1LanguageCode: "en",
                                captionsTextTrack2Label: "Spanish",
                                captionsTextTrack2LanguageCode: "es",
                                captionsTextTrack3Label: "Unknown CC",
                                captionsTextTrack3LanguageCode: "",
                                captionsTextTrack4Label: "Unknown CC",
                                captionsTextTrack4LanguageCode: "",
                                renderTextTracksNatively: !0
                            }
                        }

                        function Tc(l, n) {
                            if ((n.liveSyncDurationCount || n.liveMaxLatencyDurationCount) && (n.liveSyncDuration || n.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                            if (n.liveMaxLatencyDurationCount !== void 0 && (n.liveSyncDurationCount === void 0 || n.liveMaxLatencyDurationCount <= n.liveSyncDurationCount)) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"');
                            if (n.liveMaxLatencyDuration !== void 0 && (n.liveSyncDuration === void 0 || n.liveMaxLatencyDuration <= n.liveSyncDuration)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"');
                            var a = Oo(l),
                                e = ["manifest", "level", "frag"],
                                r = ["TimeOut", "MaxRetry", "RetryDelay", "MaxRetryTimeout"];
                            return e.forEach(function(i) {
                                var o = (i === "level" ? "playlist" : i) + "LoadPolicy",
                                    u = n[o] === void 0,
                                    c = [];
                                r.forEach(function(h) {
                                    var f = i + "Loading" + h,
                                        m = n[f];
                                    if (m !== void 0 && u) {
                                        c.push(f);
                                        var p = a[o].default;
                                        switch (n[o] = {
                                            default: p
                                        }, h) {
                                            case "TimeOut":
                                                p.maxLoadTimeMs = m, p.maxTimeToFirstByteMs = m;
                                                break;
                                            case "MaxRetry":
                                                p.errorRetry.maxNumRetry = m, p.timeoutRetry.maxNumRetry = m;
                                                break;
                                            case "RetryDelay":
                                                p.errorRetry.retryDelayMs = m, p.timeoutRetry.retryDelayMs = m;
                                                break;
                                            case "MaxRetryTimeout":
                                                p.errorRetry.maxRetryDelayMs = m, p.timeoutRetry.maxRetryDelayMs = m;
                                                break
                                        }
                                    }
                                }), c.length && V.warn('hls.js config: "' + c.join('", "') + '" setting(s) are deprecated, use "' + o + '": ' + JSON.stringify(n[o]))
                            }), Ee(Ee({}, a), n)
                        }

                        function Oo(l) {
                            return l && typeof l == "object" ? Array.isArray(l) ? l.map(Oo) : Object.keys(l).reduce(function(n, a) {
                                return n[a] = Oo(l[a]), n
                            }, {}) : l
                        }

                        function ku(l) {
                            var n = l.loader;
                            if (n !== cl && n !== ll) V.log("[config]: Custom loader detected, cannot enable progressive streaming"), l.progressive = !1;
                            else {
                                var a = ul();
                                a && (l.loader = cl, l.progressive = !0, l.enableSoftwareAES = !0, V.log("[config]: Progressive streaming enabled, using FetchLoader"))
                            }
                        }
                        var Wl, Ac = function(l) {
                            x(n, l);

                            function n(e, r) {
                                var i;
                                return i = l.call(this, e, "[level-controller]") || this, i._levels = [], i._firstLevel = -1, i._maxAutoLevel = -1, i._startLevel = void 0, i.currentLevel = null, i.currentLevelIndex = -1, i.manualLevelIndex = -1, i.steering = void 0, i.onParsedComplete = void 0, i.steering = r, i._registerListeners(), i
                            }
                            var a = n.prototype;
                            return a._registerListeners = function() {
                                var r = this.hls;
                                r.on(_.MANIFEST_LOADING, this.onManifestLoading, this), r.on(_.MANIFEST_LOADED, this.onManifestLoaded, this), r.on(_.LEVEL_LOADED, this.onLevelLoaded, this), r.on(_.LEVELS_UPDATED, this.onLevelsUpdated, this), r.on(_.FRAG_BUFFERED, this.onFragBuffered, this), r.on(_.ERROR, this.onError, this)
                            }, a._unregisterListeners = function() {
                                var r = this.hls;
                                r.off(_.MANIFEST_LOADING, this.onManifestLoading, this), r.off(_.MANIFEST_LOADED, this.onManifestLoaded, this), r.off(_.LEVEL_LOADED, this.onLevelLoaded, this), r.off(_.LEVELS_UPDATED, this.onLevelsUpdated, this), r.off(_.FRAG_BUFFERED, this.onFragBuffered, this), r.off(_.ERROR, this.onError, this)
                            }, a.destroy = function() {
                                this._unregisterListeners(), this.steering = null, this.resetLevels(), l.prototype.destroy.call(this)
                            }, a.stopLoad = function() {
                                var r = this._levels;
                                r.forEach(function(i) {
                                    i.loadError = 0, i.fragmentError = 0
                                }), l.prototype.stopLoad.call(this)
                            }, a.resetLevels = function() {
                                this._startLevel = void 0, this.manualLevelIndex = -1, this.currentLevelIndex = -1, this.currentLevel = null, this._levels = [], this._maxAutoLevel = -1
                            }, a.onManifestLoading = function(r, i) {
                                this.resetLevels()
                            }, a.onManifestLoaded = function(r, i) {
                                var o = this.hls.config.preferManagedMediaSource,
                                    u = [],
                                    c = {},
                                    h = {},
                                    f = !1,
                                    m = !1,
                                    p = !1;
                                i.levels.forEach(function(E) {
                                    var S, L, I = E.attrs,
                                        O = E.audioCodec,
                                        U = E.videoCodec;
                                    ((S = O) == null ? void 0 : S.indexOf("mp4a.40.34")) !== -1 && (Wl || (Wl = /chrome|firefox/i.test(navigator.userAgent)), Wl && (E.audioCodec = O = void 0)), O && (E.audioCodec = O = Vi(O, o)), ((L = U) == null ? void 0 : L.indexOf("avc1")) === 0 && (U = E.videoCodec = tn(U));
                                    var G = E.width,
                                        ee = E.height,
                                        te = E.unknownCodecs;
                                    if (f || (f = !!(G && ee)), m || (m = !!U), p || (p = !!O), !(te != null && te.length || O && !Ca(O, "audio", o) || U && !Ca(U, "video", o))) {
                                        var _e = I.CODECS,
                                            me = I["FRAME-RATE"],
                                            ae = I["HDCP-LEVEL"],
                                            Se = I["PATHWAY-ID"],
                                            ve = I.RESOLUTION,
                                            Ne = I["VIDEO-RANGE"],
                                            Ie = (Se || ".") + "-",
                                            kt = "" + Ie + E.bitrate + "-" + ve + "-" + me + "-" + _e + "-" + Ne + "-" + ae;
                                        if (c[kt])
                                            if (c[kt].uri !== E.url && !E.attrs["PATHWAY-ID"]) {
                                                var lr = h[kt] += 1;
                                                E.attrs["PATHWAY-ID"] = new Array(lr + 1).join(".");
                                                var Fr = new gi(E);
                                                c[kt] = Fr, u.push(Fr)
                                            } else c[kt].addGroupId("audio", I.AUDIO), c[kt].addGroupId("text", I.SUBTITLES);
                                        else {
                                            var zt = new gi(E);
                                            c[kt] = zt, h[kt] = 1, u.push(zt)
                                        }
                                    }
                                }), this.filterAndSortMediaOptions(u, i, f, m, p)
                            }, a.filterAndSortMediaOptions = function(r, i, o, u, c) {
                                var h = this,
                                    f = [],
                                    m = [],
                                    p = r;
                                if ((o || u) && c && (p = p.filter(function(ae) {
                                        var Se = ae.videoCodec,
                                            ve = ae.videoRange,
                                            Ne = ae.width,
                                            Ie = ae.height;
                                        return (!!Se || !!(Ne && Ie)) && qi(ve)
                                    })), p.length === 0) {
                                    Promise.resolve().then(function() {
                                        if (h.hls) {
                                            i.levels.length && h.warn("One or more CODECS in variant not supported: " + JSON.stringify(i.levels[0].attrs));
                                            var ae = new Error("no level with compatible codecs found in manifest");
                                            h.hls.trigger(_.ERROR, {
                                                type: Ve.MEDIA_ERROR,
                                                details: de.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                                fatal: !0,
                                                url: i.url,
                                                error: ae,
                                                reason: ae.message
                                            })
                                        }
                                    });
                                    return
                                }
                                if (i.audioTracks) {
                                    var E = this.hls.config.preferManagedMediaSource;
                                    f = i.audioTracks.filter(function(ae) {
                                        return !ae.audioCodec || Ca(ae.audioCodec, "audio", E)
                                    }), _c(f)
                                }
                                i.subtitles && (m = i.subtitles, _c(m));
                                var S = p.slice(0);
                                p.sort(function(ae, Se) {
                                    if (ae.attrs["HDCP-LEVEL"] !== Se.attrs["HDCP-LEVEL"]) return (ae.attrs["HDCP-LEVEL"] || "") > (Se.attrs["HDCP-LEVEL"] || "") ? 1 : -1;
                                    if (o && ae.height !== Se.height) return ae.height - Se.height;
                                    if (ae.frameRate !== Se.frameRate) return ae.frameRate - Se.frameRate;
                                    if (ae.videoRange !== Se.videoRange) return wi.indexOf(ae.videoRange) - wi.indexOf(Se.videoRange);
                                    if (ae.videoCodec !== Se.videoCodec) {
                                        var ve = qr(ae.videoCodec),
                                            Ne = qr(Se.videoCodec);
                                        if (ve !== Ne) return Ne - ve
                                    }
                                    if (ae.uri === Se.uri && ae.codecSet !== Se.codecSet) {
                                        var Ie = va(ae.codecSet),
                                            kt = va(Se.codecSet);
                                        if (Ie !== kt) return kt - Ie
                                    }
                                    return ae.averageBitrate !== Se.averageBitrate ? ae.averageBitrate - Se.averageBitrate : 0
                                });
                                var L = S[0];
                                if (this.steering && (p = this.steering.filterParsedLevels(p), p.length !== S.length)) {
                                    for (var I = 0; I < S.length; I++)
                                        if (S[I].pathwayId === p[0].pathwayId) {
                                            L = S[I];
                                            break
                                        }
                                }
                                this._levels = p;
                                for (var O = 0; O < p.length; O++)
                                    if (p[O] === L) {
                                        var U;
                                        this._firstLevel = O;
                                        var G = L.bitrate,
                                            ee = this.hls.bandwidthEstimate;
                                        if (this.log("manifest loaded, " + p.length + " level(s) found, first bitrate: " + G), ((U = this.hls.userConfig) == null ? void 0 : U.abrEwmaDefaultEstimate) === void 0) {
                                            var te = Math.min(G, this.hls.config.abrEwmaDefaultEstimateMax);
                                            te > ee && ee === Su.abrEwmaDefaultEstimate && (this.hls.bandwidthEstimate = te)
                                        }
                                        break
                                    }
                                var _e = c && !u,
                                    me = {
                                        levels: p,
                                        audioTracks: f,
                                        subtitleTracks: m,
                                        sessionData: i.sessionData,
                                        sessionKeys: i.sessionKeys,
                                        firstLevel: this._firstLevel,
                                        stats: i.stats,
                                        audio: c,
                                        video: u,
                                        altAudio: !_e && f.some(function(ae) {
                                            return !!ae.url
                                        })
                                    };
                                this.hls.trigger(_.MANIFEST_PARSED, me), (this.hls.config.autoStartLoad || this.hls.forceStartLoad) && this.hls.startLoad(this.hls.config.startPosition)
                            }, a.onError = function(r, i) {
                                i.fatal || !i.context || i.context.type === C.LEVEL && i.context.level === this.level && this.checkRetry(i)
                            }, a.onFragBuffered = function(r, i) {
                                var o = i.frag;
                                if (o !== void 0 && o.type === H.MAIN) {
                                    var u = o.elementaryStreams;
                                    if (!Object.keys(u).some(function(h) {
                                            return !!u[h]
                                        })) return;
                                    var c = this._levels[o.level];
                                    c != null && c.loadError && (this.log("Resetting level error count of " + c.loadError + " on frag buffered"), c.loadError = 0)
                                }
                            }, a.onLevelLoaded = function(r, i) {
                                var o, u = i.level,
                                    c = i.details,
                                    h = this._levels[u];
                                if (!h) {
                                    var f;
                                    this.warn("Invalid level index " + u), (f = i.deliveryDirectives) != null && f.skip && (c.deltaUpdateFailed = !0);
                                    return
                                }
                                u === this.currentLevelIndex ? (h.fragmentError === 0 && (h.loadError = 0), this.playlistLoaded(u, i, h.details)) : (o = i.deliveryDirectives) != null && o.skip && (c.deltaUpdateFailed = !0)
                            }, a.loadPlaylist = function(r) {
                                l.prototype.loadPlaylist.call(this);
                                var i = this.currentLevelIndex,
                                    o = this.currentLevel;
                                if (o && this.shouldLoadPlaylist(o)) {
                                    var u = o.uri;
                                    if (r) try {
                                        u = r.addDirectives(u)
                                    } catch (h) {
                                        this.warn("Could not construct new URL with HLS Delivery Directives: " + h)
                                    }
                                    var c = o.attrs["PATHWAY-ID"];
                                    this.log("Loading level index " + i + ((r == null ? void 0 : r.msn) !== void 0 ? " at sn " + r.msn + " part " + r.part : "") + " with" + (c ? " Pathway " + c : "") + " " + u), this.clearTimer(), this.hls.trigger(_.LEVEL_LOADING, {
                                        url: u,
                                        level: i,
                                        pathwayId: o.attrs["PATHWAY-ID"],
                                        id: 0,
                                        deliveryDirectives: r || null
                                    })
                                }
                            }, a.removeLevel = function(r) {
                                var i = this,
                                    o, u = this._levels.filter(function(c, h) {
                                        return h !== r ? !0 : (i.steering && i.steering.removeLevel(c), c === i.currentLevel && (i.currentLevel = null, i.currentLevelIndex = -1, c.details && c.details.fragments.forEach(function(f) {
                                            return f.level = -1
                                        })), !1)
                                    });
                                $a(u), this._levels = u, this.currentLevelIndex > -1 && (o = this.currentLevel) != null && o.details && (this.currentLevelIndex = this.currentLevel.details.fragments[0].level), this.hls.trigger(_.LEVELS_UPDATED, {
                                    levels: u
                                })
                            }, a.onLevelsUpdated = function(r, i) {
                                var o = i.levels;
                                this._levels = o
                            }, a.checkMaxAutoUpdated = function() {
                                var r = this.hls,
                                    i = r.autoLevelCapping,
                                    o = r.maxAutoLevel,
                                    u = r.maxHdcpLevel;
                                this._maxAutoLevel !== o && (this._maxAutoLevel = o, this.hls.trigger(_.MAX_AUTO_LEVEL_UPDATED, {
                                    autoLevelCapping: i,
                                    levels: this.levels,
                                    maxAutoLevel: o,
                                    minAutoLevel: this.hls.minAutoLevel,
                                    maxHdcpLevel: u
                                }))
                            }, tt(n, [{
                                key: "levels",
                                get: function() {
                                    return this._levels.length === 0 ? null : this._levels
                                }
                            }, {
                                key: "level",
                                get: function() {
                                    return this.currentLevelIndex
                                },
                                set: function(r) {
                                    var i = this._levels;
                                    if (i.length !== 0) {
                                        if (r < 0 || r >= i.length) {
                                            var o = new Error("invalid level idx"),
                                                u = r < 0;
                                            if (this.hls.trigger(_.ERROR, {
                                                    type: Ve.OTHER_ERROR,
                                                    details: de.LEVEL_SWITCH_ERROR,
                                                    level: r,
                                                    fatal: u,
                                                    error: o,
                                                    reason: o.message
                                                }), u) return;
                                            r = Math.min(r, i.length - 1)
                                        }
                                        var c = this.currentLevelIndex,
                                            h = this.currentLevel,
                                            f = h ? h.attrs["PATHWAY-ID"] : void 0,
                                            m = i[r],
                                            p = m.attrs["PATHWAY-ID"];
                                        if (this.currentLevelIndex = r, this.currentLevel = m, !(c === r && m.details && h && f === p)) {
                                            this.log("Switching to level " + r + " (" + (m.height ? m.height + "p " : "") + (m.videoRange ? m.videoRange + " " : "") + (m.codecSet ? m.codecSet + " " : "") + "@" + m.bitrate + ")" + (p ? " with Pathway " + p : "") + " from level " + c + (f ? " with Pathway " + f : ""));
                                            var E = {
                                                level: r,
                                                attrs: m.attrs,
                                                details: m.details,
                                                bitrate: m.bitrate,
                                                averageBitrate: m.averageBitrate,
                                                maxBitrate: m.maxBitrate,
                                                realBitrate: m.realBitrate,
                                                width: m.width,
                                                height: m.height,
                                                codecSet: m.codecSet,
                                                audioCodec: m.audioCodec,
                                                videoCodec: m.videoCodec,
                                                audioGroups: m.audioGroups,
                                                subtitleGroups: m.subtitleGroups,
                                                loaded: m.loaded,
                                                loadError: m.loadError,
                                                fragmentError: m.fragmentError,
                                                name: m.name,
                                                id: m.id,
                                                uri: m.uri,
                                                url: m.url,
                                                urlId: 0,
                                                audioGroupIds: m.audioGroupIds,
                                                textGroupIds: m.textGroupIds
                                            };
                                            this.hls.trigger(_.LEVEL_SWITCHING, E);
                                            var S = m.details;
                                            if (!S || S.live) {
                                                var L = this.switchParams(m.uri, h == null ? void 0 : h.details, S);
                                                this.loadPlaylist(L)
                                            }
                                        }
                                    }
                                }
                            }, {
                                key: "manualLevel",
                                get: function() {
                                    return this.manualLevelIndex
                                },
                                set: function(r) {
                                    this.manualLevelIndex = r, this._startLevel === void 0 && (this._startLevel = r), r !== -1 && (this.level = r)
                                }
                            }, {
                                key: "firstLevel",
                                get: function() {
                                    return this._firstLevel
                                },
                                set: function(r) {
                                    this._firstLevel = r
                                }
                            }, {
                                key: "startLevel",
                                get: function() {
                                    if (this._startLevel === void 0) {
                                        var r = this.hls.config.startLevel;
                                        return r !== void 0 ? r : this.hls.firstAutoLevel
                                    }
                                    return this._startLevel
                                },
                                set: function(r) {
                                    this._startLevel = r
                                }
                            }, {
                                key: "nextLoadLevel",
                                get: function() {
                                    return this.manualLevelIndex !== -1 ? this.manualLevelIndex : this.hls.nextAutoLevel
                                },
                                set: function(r) {
                                    this.level = r, this.manualLevelIndex === -1 && (this.hls.nextAutoLevel = r)
                                }
                            }]), n
                        }(It);

                        function _c(l) {
                            var n = {};
                            l.forEach(function(a) {
                                var e = a.groupId || "";
                                a.id = n[e] = n[e] || 0, n[e]++
                            })
                        }
                        var Uh = function() {
                            function l(a) {
                                this.config = void 0, this.keyUriToKeyInfo = {}, this.emeController = null, this.config = a
                            }
                            var n = l.prototype;
                            return n.abort = function(e) {
                                for (var r in this.keyUriToKeyInfo) {
                                    var i = this.keyUriToKeyInfo[r].loader;
                                    if (i) {
                                        var o;
                                        if (e && e !== ((o = i.context) == null ? void 0 : o.frag.type)) return;
                                        i.abort()
                                    }
                                }
                            }, n.detach = function() {
                                for (var e in this.keyUriToKeyInfo) {
                                    var r = this.keyUriToKeyInfo[e];
                                    (r.mediaKeySessionContext || r.decryptdata.isCommonEncryption) && delete this.keyUriToKeyInfo[e]
                                }
                            }, n.destroy = function() {
                                this.detach();
                                for (var e in this.keyUriToKeyInfo) {
                                    var r = this.keyUriToKeyInfo[e].loader;
                                    r && r.destroy()
                                }
                                this.keyUriToKeyInfo = {}
                            }, n.createKeyLoadError = function(e, r, i, o, u) {
                                return r === void 0 && (r = de.KEY_LOAD_ERROR), new Kn({
                                    type: Ve.NETWORK_ERROR,
                                    details: r,
                                    fatal: !1,
                                    frag: e,
                                    response: u,
                                    error: i,
                                    networkDetails: o
                                })
                            }, n.loadClear = function(e, r) {
                                var i = this;
                                if (this.emeController && this.config.emeEnabled)
                                    for (var o = e.sn, u = e.cc, c = function() {
                                            var m = r[h];
                                            if (u <= m.cc && (o === "initSegment" || m.sn === "initSegment" || o < m.sn)) return i.emeController.selectKeySystemFormat(m).then(function(p) {
                                                m.setKeyFormat(p)
                                            }), 1
                                        }, h = 0; h < r.length && !c(); h++);
                            }, n.load = function(e) {
                                var r = this;
                                return !e.decryptdata && e.encrypted && this.emeController && this.config.emeEnabled ? this.emeController.selectKeySystemFormat(e).then(function(i) {
                                    return r.loadInternal(e, i)
                                }) : this.loadInternal(e)
                            }, n.loadInternal = function(e, r) {
                                var i, o;
                                r && e.setKeyFormat(r);
                                var u = e.decryptdata;
                                if (!u) {
                                    var c = new Error(r ? "Expected frag.decryptdata to be defined after setting format " + r : "Missing decryption data on fragment in onKeyLoading");
                                    return Promise.reject(this.createKeyLoadError(e, de.KEY_LOAD_ERROR, c))
                                }
                                var h = u.uri;
                                if (!h) return Promise.reject(this.createKeyLoadError(e, de.KEY_LOAD_ERROR, new Error('Invalid key URI: "' + h + '"')));
                                var f = this.keyUriToKeyInfo[h];
                                if ((i = f) != null && i.decryptdata.key) return u.key = f.decryptdata.key, Promise.resolve({
                                    frag: e,
                                    keyInfo: f
                                });
                                if ((o = f) != null && o.keyLoadPromise) {
                                    var m;
                                    switch ((m = f.mediaKeySessionContext) == null ? void 0 : m.keyStatus) {
                                        case void 0:
                                        case "status-pending":
                                        case "usable":
                                        case "usable-in-future":
                                            return f.keyLoadPromise.then(function(p) {
                                                return u.key = p.keyInfo.decryptdata.key, {
                                                    frag: e,
                                                    keyInfo: f
                                                }
                                            })
                                    }
                                }
                                switch (f = this.keyUriToKeyInfo[h] = {
                                    decryptdata: u,
                                    keyLoadPromise: null,
                                    loader: null,
                                    mediaKeySessionContext: null
                                }, u.method) {
                                    case "ISO-23001-7":
                                    case "SAMPLE-AES":
                                    case "SAMPLE-AES-CENC":
                                    case "SAMPLE-AES-CTR":
                                        return u.keyFormat === "identity" ? this.loadKeyHTTP(f, e) : this.loadKeyEME(f, e);
                                    case "AES-128":
                                        return this.loadKeyHTTP(f, e);
                                    default:
                                        return Promise.reject(this.createKeyLoadError(e, de.KEY_LOAD_ERROR, new Error('Key supplied with unsupported METHOD: "' + u.method + '"')))
                                }
                            }, n.loadKeyEME = function(e, r) {
                                var i = {
                                    frag: r,
                                    keyInfo: e
                                };
                                if (this.emeController && this.config.emeEnabled) {
                                    var o = this.emeController.loadKey(i);
                                    if (o) return (e.keyLoadPromise = o.then(function(u) {
                                        return e.mediaKeySessionContext = u, i
                                    })).catch(function(u) {
                                        throw e.keyLoadPromise = null, u
                                    })
                                }
                                return Promise.resolve(i)
                            }, n.loadKeyHTTP = function(e, r) {
                                var i = this,
                                    o = this.config,
                                    u = o.loader,
                                    c = new u(o);
                                return r.keyLoader = e.loader = c, e.keyLoadPromise = new Promise(function(h, f) {
                                    var m = {
                                            keyInfo: e,
                                            frag: r,
                                            responseType: "arraybuffer",
                                            url: e.decryptdata.uri
                                        },
                                        p = o.keyLoadPolicy.default,
                                        E = {
                                            loadPolicy: p,
                                            timeout: p.maxLoadTimeMs,
                                            maxRetry: 0,
                                            retryDelay: 0,
                                            maxRetryDelay: 0
                                        },
                                        S = {
                                            onSuccess: function(I, O, U, G) {
                                                var ee = U.frag,
                                                    te = U.keyInfo,
                                                    _e = U.url;
                                                if (!ee.decryptdata || te !== i.keyUriToKeyInfo[_e]) return f(i.createKeyLoadError(ee, de.KEY_LOAD_ERROR, new Error("after key load, decryptdata unset or changed"), G));
                                                te.decryptdata.key = ee.decryptdata.key = new Uint8Array(I.data), ee.keyLoader = null, te.loader = null, h({
                                                    frag: ee,
                                                    keyInfo: te
                                                })
                                            },
                                            onError: function(I, O, U, G) {
                                                i.resetLoader(O), f(i.createKeyLoadError(r, de.KEY_LOAD_ERROR, new Error("HTTP Error " + I.code + " loading key " + I.text), U, Ee({
                                                    url: m.url,
                                                    data: void 0
                                                }, I)))
                                            },
                                            onTimeout: function(I, O, U) {
                                                i.resetLoader(O), f(i.createKeyLoadError(r, de.KEY_LOAD_TIMEOUT, new Error("key loading timed out"), U))
                                            },
                                            onAbort: function(I, O, U) {
                                                i.resetLoader(O), f(i.createKeyLoadError(r, de.INTERNAL_ABORTED, new Error("key loading aborted"), U))
                                            }
                                        };
                                    c.load(m, E, S)
                                })
                            }, n.resetLoader = function(e) {
                                var r = e.frag,
                                    i = e.keyInfo,
                                    o = e.url,
                                    u = i.loader;
                                r.keyLoader === u && (r.keyLoader = null, i.loader = null), delete this.keyUriToKeyInfo[o], u && u.destroy()
                            }, l
                        }();

                        function ud() {
                            return self.SourceBuffer || self.WebKitSourceBuffer
                        }

                        function Gl() {
                            var l = Ni();
                            if (!l) return !1;
                            var n = ud();
                            return !n || n.prototype && typeof n.prototype.appendBuffer == "function" && typeof n.prototype.remove == "function"
                        }

                        function Sc() {
                            if (!Gl()) return !1;
                            var l = Ni();
                            return typeof(l == null ? void 0 : l.isTypeSupported) == "function" && (["avc1.42E01E,mp4a.40.2", "av01.0.01M.08", "vp09.00.50.08"].some(function(n) {
                                return l.isTypeSupported(Pr(n, "video"))
                            }) || ["mp4a.40.2", "fLaC"].some(function(n) {
                                return l.isTypeSupported(Pr(n, "audio"))
                            }))
                        }

                        function Fh() {
                            var l, n = ud();
                            return typeof(n == null || (l = n.prototype) == null ? void 0 : l.changeType) == "function"
                        }
                        var hl = 250,
                            Kl = 2,
                            Bh = .1,
                            Hh = .05,
                            Vh = function() {
                                function l(a, e, r, i) {
                                    this.config = void 0, this.media = null, this.fragmentTracker = void 0, this.hls = void 0, this.nudgeRetry = 0, this.stallReported = !1, this.stalled = null, this.moved = !1, this.seeking = !1, this.config = a, this.media = e, this.fragmentTracker = r, this.hls = i
                                }
                                var n = l.prototype;
                                return n.destroy = function() {
                                    this.media = null, this.hls = this.fragmentTracker = null
                                }, n.poll = function(e, r) {
                                    var i = this.config,
                                        o = this.media,
                                        u = this.stalled;
                                    if (o !== null) {
                                        var c = o.currentTime,
                                            h = o.seeking,
                                            f = this.seeking && !h,
                                            m = !this.seeking && h;
                                        if (this.seeking = h, c !== e) {
                                            if (this.moved = !0, h || (this.nudgeRetry = 0), u !== null) {
                                                if (this.stallReported) {
                                                    var p = self.performance.now() - u;
                                                    V.warn("playback not stuck anymore @" + c + ", after " + Math.round(p) + "ms"), this.stallReported = !1
                                                }
                                                this.stalled = null
                                            }
                                            return
                                        }
                                        if (m || f) {
                                            this.stalled = null;
                                            return
                                        }
                                        if (o.paused && !h || o.ended || o.playbackRate === 0 || !Or.getBuffered(o).length) {
                                            this.nudgeRetry = 0;
                                            return
                                        }
                                        var E = Or.bufferInfo(o, c, 0),
                                            S = E.nextStart || 0;
                                        if (h) {
                                            var L = E.len > Kl,
                                                I = !S || r && r.start <= c || S - c > Kl && !this.fragmentTracker.getPartialFragment(c);
                                            if (L || I) return;
                                            this.moved = !1
                                        }
                                        if (!this.moved && this.stalled !== null) {
                                            var O, U = E.len > 0;
                                            if (!U && !S) return;
                                            var G = Math.max(S, E.start || 0) - c,
                                                ee = this.hls.levels ? this.hls.levels[this.hls.currentLevel] : null,
                                                te = ee == null || (O = ee.details) == null ? void 0 : O.live,
                                                _e = te ? ee.details.targetduration * 2 : Kl,
                                                me = this.fragmentTracker.getPartialFragment(c);
                                            if (G > 0 && (G <= _e || me)) {
                                                o.paused || this._trySkipBufferHole(me);
                                                return
                                            }
                                        }
                                        var ae = self.performance.now();
                                        if (u === null) {
                                            this.stalled = ae;
                                            return
                                        }
                                        var Se = ae - u;
                                        if (!(!h && Se >= hl && (this._reportStall(E), !this.media))) {
                                            var ve = Or.bufferInfo(o, c, i.maxBufferHole);
                                            this._tryFixBufferStall(ve, Se)
                                        }
                                    }
                                }, n._tryFixBufferStall = function(e, r) {
                                    var i = this.config,
                                        o = this.fragmentTracker,
                                        u = this.media;
                                    if (u !== null) {
                                        var c = u.currentTime,
                                            h = o.getPartialFragment(c);
                                        if (h) {
                                            var f = this._trySkipBufferHole(h);
                                            if (f || !this.media) return
                                        }(e.len > i.maxBufferHole || e.nextStart && e.nextStart - c < i.maxBufferHole) && r > i.highBufferWatchdogPeriod * 1e3 && (V.warn("Trying to nudge playhead over buffer-hole"), this.stalled = null, this._tryNudgeBuffer())
                                    }
                                }, n._reportStall = function(e) {
                                    var r = this.hls,
                                        i = this.media,
                                        o = this.stallReported;
                                    if (!o && i) {
                                        this.stallReported = !0;
                                        var u = new Error("Playback stalling at @" + i.currentTime + " due to low buffer (" + JSON.stringify(e) + ")");
                                        V.warn(u.message), r.trigger(_.ERROR, {
                                            type: Ve.MEDIA_ERROR,
                                            details: de.BUFFER_STALLED_ERROR,
                                            fatal: !1,
                                            error: u,
                                            buffer: e.len
                                        })
                                    }
                                }, n._trySkipBufferHole = function(e) {
                                    var r = this.config,
                                        i = this.hls,
                                        o = this.media;
                                    if (o === null) return 0;
                                    var u = o.currentTime,
                                        c = Or.bufferInfo(o, u, 0),
                                        h = u < c.start ? c.start : c.nextStart;
                                    if (h) {
                                        var f = c.len <= r.maxBufferHole,
                                            m = c.len > 0 && c.len < 1 && o.readyState < 3,
                                            p = h - u;
                                        if (p > 0 && (f || m)) {
                                            if (p > r.maxBufferHole) {
                                                var E = this.fragmentTracker,
                                                    S = !1;
                                                if (u === 0) {
                                                    var L = E.getAppendedFrag(0, H.MAIN);
                                                    L && h < L.end && (S = !0)
                                                }
                                                if (!S) {
                                                    var I = e || E.getAppendedFrag(u, H.MAIN);
                                                    if (I) {
                                                        for (var O = !1, U = I.end; U < h;) {
                                                            var G = E.getPartialFragment(U);
                                                            if (G) U += G.duration;
                                                            else {
                                                                O = !0;
                                                                break
                                                            }
                                                        }
                                                        if (O) return 0
                                                    }
                                                }
                                            }
                                            var ee = Math.max(h + Hh, u + Bh);
                                            if (V.warn("skipping hole, adjusting currentTime from " + u + " to " + ee), this.moved = !0, this.stalled = null, o.currentTime = ee, e && !e.gap) {
                                                var te = new Error("fragment loaded with buffer holes, seeking from " + u + " to " + ee);
                                                i.trigger(_.ERROR, {
                                                    type: Ve.MEDIA_ERROR,
                                                    details: de.BUFFER_SEEK_OVER_HOLE,
                                                    fatal: !1,
                                                    error: te,
                                                    reason: te.message,
                                                    frag: e
                                                })
                                            }
                                            return ee
                                        }
                                    }
                                    return 0
                                }, n._tryNudgeBuffer = function() {
                                    var e = this.config,
                                        r = this.hls,
                                        i = this.media,
                                        o = this.nudgeRetry;
                                    if (i !== null) {
                                        var u = i.currentTime;
                                        if (this.nudgeRetry++, o < e.nudgeMaxRetry) {
                                            var c = u + (o + 1) * e.nudgeOffset,
                                                h = new Error("Nudging 'currentTime' from " + u + " to " + c);
                                            V.warn(h.message), i.currentTime = c, r.trigger(_.ERROR, {
                                                type: Ve.MEDIA_ERROR,
                                                details: de.BUFFER_NUDGE_ON_STALL,
                                                error: h,
                                                fatal: !1
                                            })
                                        } else {
                                            var f = new Error("Playhead still not moving while enough data buffered @" + u + " after " + e.nudgeMaxRetry + " nudges");
                                            V.error(f.message), r.trigger(_.ERROR, {
                                                type: Ve.MEDIA_ERROR,
                                                details: de.BUFFER_STALLED_ERROR,
                                                error: f,
                                                fatal: !0
                                            })
                                        }
                                    }
                                }, l
                            }(),
                            Wh = 100,
                            Gh = function(l) {
                                x(n, l);

                                function n(e, r, i) {
                                    var o;
                                    return o = l.call(this, e, r, i, "[stream-controller]", H.MAIN) || this, o.audioCodecSwap = !1, o.gapController = null, o.level = -1, o._forceStartLoad = !1, o.altAudio = !1, o.audioOnly = !1, o.fragPlaying = null, o.onvplaying = null, o.onvseeked = null, o.fragLastKbps = 0, o.couldBacktrack = !1, o.backtrackFragment = null, o.audioCodecSwitch = !1, o.videoBuffer = null, o._registerListeners(), o
                                }
                                var a = n.prototype;
                                return a._registerListeners = function() {
                                    var r = this.hls;
                                    r.on(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.on(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.on(_.MANIFEST_LOADING, this.onManifestLoading, this), r.on(_.MANIFEST_PARSED, this.onManifestParsed, this), r.on(_.LEVEL_LOADING, this.onLevelLoading, this), r.on(_.LEVEL_LOADED, this.onLevelLoaded, this), r.on(_.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this), r.on(_.ERROR, this.onError, this), r.on(_.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), r.on(_.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), r.on(_.BUFFER_CREATED, this.onBufferCreated, this), r.on(_.BUFFER_FLUSHED, this.onBufferFlushed, this), r.on(_.LEVELS_UPDATED, this.onLevelsUpdated, this), r.on(_.FRAG_BUFFERED, this.onFragBuffered, this)
                                }, a._unregisterListeners = function() {
                                    var r = this.hls;
                                    r.off(_.MEDIA_ATTACHED, this.onMediaAttached, this), r.off(_.MEDIA_DETACHING, this.onMediaDetaching, this), r.off(_.MANIFEST_LOADING, this.onManifestLoading, this), r.off(_.MANIFEST_PARSED, this.onManifestParsed, this), r.off(_.LEVEL_LOADED, this.onLevelLoaded, this), r.off(_.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this), r.off(_.ERROR, this.onError, this), r.off(_.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), r.off(_.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), r.off(_.BUFFER_CREATED, this.onBufferCreated, this), r.off(_.BUFFER_FLUSHED, this.onBufferFlushed, this), r.off(_.LEVELS_UPDATED, this.onLevelsUpdated, this), r.off(_.FRAG_BUFFERED, this.onFragBuffered, this)
                                }, a.onHandlerDestroying = function() {
                                    this._unregisterListeners(), l.prototype.onHandlerDestroying.call(this)
                                }, a.startLoad = function(r) {
                                    if (this.levels) {
                                        var i = this.lastCurrentTime,
                                            o = this.hls;
                                        if (this.stopLoad(), this.setInterval(Wh), this.level = -1, !this.startFragRequested) {
                                            var u = o.startLevel;
                                            u === -1 && (o.config.testBandwidth && this.levels.length > 1 ? (u = 0, this.bitrateTest = !0) : u = o.firstAutoLevel), o.nextLoadLevel = u, this.level = o.loadLevel, this.loadedmetadata = !1
                                        }
                                        i > 0 && r === -1 && (this.log("Override startPosition with lastCurrentTime @" + i.toFixed(3)), r = i), this.state = rt.IDLE, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = r, this.tick()
                                    } else this._forceStartLoad = !0, this.state = rt.STOPPED
                                }, a.stopLoad = function() {
                                    this._forceStartLoad = !1, l.prototype.stopLoad.call(this)
                                }, a.doTick = function() {
                                    switch (this.state) {
                                        case rt.WAITING_LEVEL:
                                            {
                                                var r = this.levels,
                                                    i = this.level,
                                                    o = r == null ? void 0 : r[i],
                                                    u = o == null ? void 0 : o.details;
                                                if (u && (!u.live || this.levelLastLoaded === o)) {
                                                    if (this.waitForCdnTuneIn(u)) break;
                                                    this.state = rt.IDLE;
                                                    break
                                                } else if (this.hls.nextLoadLevel !== this.level) {
                                                    this.state = rt.IDLE;
                                                    break
                                                }
                                                break
                                            }
                                        case rt.FRAG_LOADING_WAITING_RETRY:
                                            {
                                                var c, h = self.performance.now(),
                                                    f = this.retryDate;
                                                if (!f || h >= f || (c = this.media) != null && c.seeking) {
                                                    var m = this.levels,
                                                        p = this.level,
                                                        E = m == null ? void 0 : m[p];
                                                    this.resetStartWhenNotLoaded(E || null), this.state = rt.IDLE
                                                }
                                            }
                                            break
                                    }
                                    this.state === rt.IDLE && this.doTickIdle(), this.onTickEnd()
                                }, a.onTickEnd = function() {
                                    l.prototype.onTickEnd.call(this), this.checkBuffer(), this.checkFragmentChanged()
                                }, a.doTickIdle = function() {
                                    var r = this.hls,
                                        i = this.levelLastLoaded,
                                        o = this.levels,
                                        u = this.media;
                                    if (!(i === null || !u && (this.startFragRequested || !r.config.startFragPrefetch)) && !(this.altAudio && this.audioOnly)) {
                                        var c = this.buffering ? r.nextLoadLevel : r.loadLevel;
                                        if (o != null && o[c]) {
                                            var h = o[c],
                                                f = this.getMainFwdBufferInfo();
                                            if (f !== null) {
                                                var m = this.getLevelDetails();
                                                if (m && this._streamEnded(f, m)) {
                                                    var p = {};
                                                    this.altAudio && (p.type = "video"), this.hls.trigger(_.BUFFER_EOS, p), this.state = rt.ENDED;
                                                    return
                                                }
                                                if (this.buffering) {
                                                    r.loadLevel !== c && r.manualLevel === -1 && this.log("Adapting to level " + c + " from level " + this.level), this.level = r.nextLoadLevel = c;
                                                    var E = h.details;
                                                    if (!E || this.state === rt.WAITING_LEVEL || E.live && this.levelLastLoaded !== h) {
                                                        this.level = c, this.state = rt.WAITING_LEVEL;
                                                        return
                                                    }
                                                    var S = f.len,
                                                        L = this.getMaxBufferLength(h.maxBitrate);
                                                    if (!(S >= L)) {
                                                        this.backtrackFragment && this.backtrackFragment.start > f.end && (this.backtrackFragment = null);
                                                        var I = this.backtrackFragment ? this.backtrackFragment.start : f.end,
                                                            O = this.getNextFragment(I, E);
                                                        if (this.couldBacktrack && !this.fragPrevious && O && O.sn !== "initSegment" && this.fragmentTracker.getState(O) !== ui.OK) {
                                                            var U, G = ((U = this.backtrackFragment) != null ? U : O).sn,
                                                                ee = G - E.startSN,
                                                                te = E.fragments[ee - 1];
                                                            te && O.cc === te.cc && (O = te, this.fragmentTracker.removeFragment(te))
                                                        } else this.backtrackFragment && f.len && (this.backtrackFragment = null);
                                                        if (O && this.isLoopLoading(O, I)) {
                                                            var _e = O.gap;
                                                            if (!_e) {
                                                                var me = this.audioOnly && !this.altAudio ? Xt.AUDIO : Xt.VIDEO,
                                                                    ae = (me === Xt.VIDEO ? this.videoBuffer : this.mediaBuffer) || this.media;
                                                                ae && this.afterBufferFlushed(ae, me, H.MAIN)
                                                            }
                                                            O = this.getNextFragmentLoopLoading(O, E, f, H.MAIN, L)
                                                        }
                                                        O && (O.initSegment && !O.initSegment.data && !this.bitrateTest && (O = O.initSegment), this.loadFragment(O, h, I))
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }, a.loadFragment = function(r, i, o) {
                                    var u = this.fragmentTracker.getState(r);
                                    this.fragCurrent = r, u === ui.NOT_LOADED || u === ui.PARTIAL ? r.sn === "initSegment" ? this._loadInitSegment(r, i) : this.bitrateTest ? (this.log("Fragment " + r.sn + " of level " + r.level + " is being downloaded to test bitrate and will not be buffered"), this._loadBitrateTestFrag(r, i)) : (this.startFragRequested = !0, l.prototype.loadFragment.call(this, r, i, o)) : this.clearTrackerIfNeeded(r)
                                }, a.getBufferedFrag = function(r) {
                                    return this.fragmentTracker.getBufferedFrag(r, H.MAIN)
                                }, a.followingBufferedFrag = function(r) {
                                    return r ? this.getBufferedFrag(r.end + .5) : null
                                }, a.immediateLevelSwitch = function() {
                                    this.abortCurrentFrag(), this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                                }, a.nextLevelSwitch = function() {
                                    var r = this.levels,
                                        i = this.media;
                                    if (i != null && i.readyState) {
                                        var o, u = this.getAppendedFrag(i.currentTime);
                                        u && u.start > 1 && this.flushMainBuffer(0, u.start - 1);
                                        var c = this.getLevelDetails();
                                        if (c != null && c.live) {
                                            var h = this.getMainFwdBufferInfo();
                                            if (!h || h.len < c.targetduration * 2) return
                                        }
                                        if (!i.paused && r) {
                                            var f = this.hls.nextLoadLevel,
                                                m = r[f],
                                                p = this.fragLastKbps;
                                            p && this.fragCurrent ? o = this.fragCurrent.duration * m.maxBitrate / (1e3 * p) + 1 : o = 0
                                        } else o = 0;
                                        var E = this.getBufferedFrag(i.currentTime + o);
                                        if (E) {
                                            var S = this.followingBufferedFrag(E);
                                            if (S) {
                                                this.abortCurrentFrag();
                                                var L = S.maxStartPTS ? S.maxStartPTS : S.start,
                                                    I = S.duration,
                                                    O = Math.max(E.end, L + Math.min(Math.max(I - this.config.maxFragLookUpTolerance, I * (this.couldBacktrack ? .5 : .125)), I * (this.couldBacktrack ? .75 : .25)));
                                                this.flushMainBuffer(O, Number.POSITIVE_INFINITY)
                                            }
                                        }
                                    }
                                }, a.abortCurrentFrag = function() {
                                    var r = this.fragCurrent;
                                    switch (this.fragCurrent = null, this.backtrackFragment = null, r && (r.abortRequests(), this.fragmentTracker.removeFragment(r)), this.state) {
                                        case rt.KEY_LOADING:
                                        case rt.FRAG_LOADING:
                                        case rt.FRAG_LOADING_WAITING_RETRY:
                                        case rt.PARSING:
                                        case rt.PARSED:
                                            this.state = rt.IDLE;
                                            break
                                    }
                                    this.nextLoadPosition = this.getLoadPosition()
                                }, a.flushMainBuffer = function(r, i) {
                                    l.prototype.flushMainBuffer.call(this, r, i, this.altAudio ? "video" : null)
                                }, a.onMediaAttached = function(r, i) {
                                    l.prototype.onMediaAttached.call(this, r, i);
                                    var o = i.media;
                                    this.onvplaying = this.onMediaPlaying.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), o.addEventListener("playing", this.onvplaying), o.addEventListener("seeked", this.onvseeked), this.gapController = new Vh(this.config, o, this.fragmentTracker, this.hls)
                                }, a.onMediaDetaching = function() {
                                    var r = this.media;
                                    r && this.onvplaying && this.onvseeked && (r.removeEventListener("playing", this.onvplaying), r.removeEventListener("seeked", this.onvseeked), this.onvplaying = this.onvseeked = null, this.videoBuffer = null), this.fragPlaying = null, this.gapController && (this.gapController.destroy(), this.gapController = null), l.prototype.onMediaDetaching.call(this)
                                }, a.onMediaPlaying = function() {
                                    this.tick()
                                }, a.onMediaSeeked = function() {
                                    var r = this.media,
                                        i = r ? r.currentTime : null;
                                    Ge(i) && this.log("Media seeked to " + i.toFixed(3));
                                    var o = this.getMainFwdBufferInfo();
                                    if (o === null || o.len === 0) {
                                        this.warn('Main forward buffer length on "seeked" event ' + (o ? o.len : "empty") + ")");
                                        return
                                    }
                                    this.tick()
                                }, a.onManifestLoading = function() {
                                    this.log("Trigger BUFFER_RESET"), this.hls.trigger(_.BUFFER_RESET, void 0), this.fragmentTracker.removeAllFragments(), this.couldBacktrack = !1, this.startPosition = this.lastCurrentTime = this.fragLastKbps = 0, this.levels = this.fragPlaying = this.backtrackFragment = this.levelLastLoaded = null, this.altAudio = this.audioOnly = this.startFragRequested = !1
                                }, a.onManifestParsed = function(r, i) {
                                    var o = !1,
                                        u = !1;
                                    i.levels.forEach(function(c) {
                                        var h = c.audioCodec;
                                        h && (o = o || h.indexOf("mp4a.40.2") !== -1, u = u || h.indexOf("mp4a.40.5") !== -1)
                                    }), this.audioCodecSwitch = o && u && !Fh(), this.audioCodecSwitch && this.log("Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"), this.levels = i.levels, this.startFragRequested = !1
                                }, a.onLevelLoading = function(r, i) {
                                    var o = this.levels;
                                    if (!(!o || this.state !== rt.IDLE)) {
                                        var u = o[i.level];
                                        (!u.details || u.details.live && this.levelLastLoaded !== u || this.waitForCdnTuneIn(u.details)) && (this.state = rt.WAITING_LEVEL)
                                    }
                                }, a.onLevelLoaded = function(r, i) {
                                    var o, u = this.levels,
                                        c = i.level,
                                        h = i.details,
                                        f = h.totalduration;
                                    if (!u) {
                                        this.warn("Levels were reset while loading level " + c);
                                        return
                                    }
                                    this.log("Level " + c + " loaded [" + h.startSN + "," + h.endSN + "]" + (h.lastPartSn ? "[part-" + h.lastPartSn + "-" + h.lastPartIndex + "]" : "") + ", cc [" + h.startCC + ", " + h.endCC + "] duration:" + f);
                                    var m = u[c],
                                        p = this.fragCurrent;
                                    p && (this.state === rt.FRAG_LOADING || this.state === rt.FRAG_LOADING_WAITING_RETRY) && p.level !== i.level && p.loader && this.abortCurrentFrag();
                                    var E = 0;
                                    if (h.live || (o = m.details) != null && o.live) {
                                        var S;
                                        if (this.checkLiveUpdate(h), h.deltaUpdateFailed) return;
                                        E = this.alignPlaylists(h, m.details, (S = this.levelLastLoaded) == null ? void 0 : S.details)
                                    }
                                    if (m.details = h, this.levelLastLoaded = m, this.hls.trigger(_.LEVEL_UPDATED, {
                                            details: h,
                                            level: c
                                        }), this.state === rt.WAITING_LEVEL) {
                                        if (this.waitForCdnTuneIn(h)) return;
                                        this.state = rt.IDLE
                                    }
                                    this.startFragRequested ? h.live && this.synchronizeToLiveEdge(h) : this.setStartPosition(h, E), this.tick()
                                }, a._handleFragmentLoadProgress = function(r) {
                                    var i, o = r.frag,
                                        u = r.part,
                                        c = r.payload,
                                        h = this.levels;
                                    if (!h) {
                                        this.warn("Levels were reset while fragment load was in progress. Fragment " + o.sn + " of level " + o.level + " will not be buffered");
                                        return
                                    }
                                    var f = h[o.level],
                                        m = f.details;
                                    if (!m) {
                                        this.warn("Dropping fragment " + o.sn + " of level " + o.level + " after level details were reset"), this.fragmentTracker.removeFragment(o);
                                        return
                                    }
                                    var p = f.videoCodec,
                                        E = m.PTSKnown || !m.live,
                                        S = (i = o.initSegment) == null ? void 0 : i.data,
                                        L = this._getAudioCodec(f),
                                        I = this.transmuxer = this.transmuxer || new Xi(this.hls, H.MAIN, this._handleTransmuxComplete.bind(this), this._handleTransmuxerFlush.bind(this)),
                                        O = u ? u.index : -1,
                                        U = O !== -1,
                                        G = new ha(o.level, o.sn, o.stats.chunkCount, c.byteLength, O, U),
                                        ee = this.initPTS[o.cc];
                                    I.push(c, S, L, p, o, u, m.totalduration, E, G, ee)
                                }, a.onAudioTrackSwitching = function(r, i) {
                                    var o = this.altAudio,
                                        u = !!i.url;
                                    if (!u) {
                                        if (this.mediaBuffer !== this.media) {
                                            this.log("Switching on main audio, use media.buffered to schedule main fragment loading"), this.mediaBuffer = this.media;
                                            var c = this.fragCurrent;
                                            c && (this.log("Switching to main audio track, cancel main fragment load"), c.abortRequests(), this.fragmentTracker.removeFragment(c)), this.resetTransmuxer(), this.resetLoadingState()
                                        } else this.audioOnly && this.resetTransmuxer();
                                        var h = this.hls;
                                        o && (h.trigger(_.BUFFER_FLUSHING, {
                                            startOffset: 0,
                                            endOffset: Number.POSITIVE_INFINITY,
                                            type: null
                                        }), this.fragmentTracker.removeAllFragments()), h.trigger(_.AUDIO_TRACK_SWITCHED, i)
                                    }
                                }, a.onAudioTrackSwitched = function(r, i) {
                                    var o = i.id,
                                        u = !!this.hls.audioTracks[o].url;
                                    if (u) {
                                        var c = this.videoBuffer;
                                        c && this.mediaBuffer !== c && (this.log("Switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = c)
                                    }
                                    this.altAudio = u, this.tick()
                                }, a.onBufferCreated = function(r, i) {
                                    var o = i.tracks,
                                        u, c, h = !1;
                                    for (var f in o) {
                                        var m = o[f];
                                        if (m.id === "main") {
                                            if (c = f, u = m, f === "video") {
                                                var p = o[f];
                                                p && (this.videoBuffer = p.buffer)
                                            }
                                        } else h = !0
                                    }
                                    h && u ? (this.log("Alternate track found, use " + c + ".buffered to schedule main fragment loading"), this.mediaBuffer = u.buffer) : this.mediaBuffer = this.media
                                }, a.onFragBuffered = function(r, i) {
                                    var o = i.frag,
                                        u = i.part;
                                    if (!(o && o.type !== H.MAIN)) {
                                        if (this.fragContextChanged(o)) {
                                            this.warn("Fragment " + o.sn + (u ? " p: " + u.index : "") + " of level " + o.level + " finished buffering, but was aborted. state: " + this.state), this.state === rt.PARSED && (this.state = rt.IDLE);
                                            return
                                        }
                                        var c = u ? u.stats : o.stats;
                                        this.fragLastKbps = Math.round(8 * c.total / (c.buffering.end - c.loading.first)), o.sn !== "initSegment" && (this.fragPrevious = o), this.fragBufferedComplete(o, u)
                                    }
                                }, a.onError = function(r, i) {
                                    var o;
                                    if (i.fatal) {
                                        this.state = rt.ERROR;
                                        return
                                    }
                                    switch (i.details) {
                                        case de.FRAG_GAP:
                                        case de.FRAG_PARSING_ERROR:
                                        case de.FRAG_DECRYPT_ERROR:
                                        case de.FRAG_LOAD_ERROR:
                                        case de.FRAG_LOAD_TIMEOUT:
                                        case de.KEY_LOAD_ERROR:
                                        case de.KEY_LOAD_TIMEOUT:
                                            this.onFragmentOrKeyLoadError(H.MAIN, i);
                                            break;
                                        case de.LEVEL_LOAD_ERROR:
                                        case de.LEVEL_LOAD_TIMEOUT:
                                        case de.LEVEL_PARSING_ERROR:
                                            !i.levelRetry && this.state === rt.WAITING_LEVEL && ((o = i.context) == null ? void 0 : o.type) === C.LEVEL && (this.state = rt.IDLE);
                                            break;
                                        case de.BUFFER_APPEND_ERROR:
                                        case de.BUFFER_FULL_ERROR:
                                            if (!i.parent || i.parent !== "main") return;
                                            if (i.details === de.BUFFER_APPEND_ERROR) {
                                                this.resetLoadingState();
                                                return
                                            }
                                            this.reduceLengthAndFlushBuffer(i) && this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                                            break;
                                        case de.INTERNAL_EXCEPTION:
                                            this.recoverWorkerError(i);
                                            break
                                    }
                                }, a.checkBuffer = function() {
                                    var r = this.media,
                                        i = this.gapController;
                                    if (!(!r || !i || !r.readyState)) {
                                        if (this.loadedmetadata || !Or.getBuffered(r).length) {
                                            var o = this.state !== rt.IDLE ? this.fragCurrent : null;
                                            i.poll(this.lastCurrentTime, o)
                                        }
                                        this.lastCurrentTime = r.currentTime
                                    }
                                }, a.onFragLoadEmergencyAborted = function() {
                                    this.state = rt.IDLE, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tickImmediate()
                                }, a.onBufferFlushed = function(r, i) {
                                    var o = i.type;
                                    if (o !== Xt.AUDIO || this.audioOnly && !this.altAudio) {
                                        var u = (o === Xt.VIDEO ? this.videoBuffer : this.mediaBuffer) || this.media;
                                        this.afterBufferFlushed(u, o, H.MAIN), this.tick()
                                    }
                                }, a.onLevelsUpdated = function(r, i) {
                                    this.level > -1 && this.fragCurrent && (this.level = this.fragCurrent.level), this.levels = i.levels
                                }, a.swapAudioCodec = function() {
                                    this.audioCodecSwap = !this.audioCodecSwap
                                }, a.seekToStartPos = function() {
                                    var r = this.media;
                                    if (r) {
                                        var i = r.currentTime,
                                            o = this.startPosition;
                                        if (o >= 0 && i < o) {
                                            if (r.seeking) {
                                                this.log("could not seek to " + o + ", already seeking at " + i);
                                                return
                                            }
                                            var u = Or.getBuffered(r),
                                                c = u.length ? u.start(0) : 0,
                                                h = c - o;
                                            h > 0 && (h < this.config.maxBufferHole || h < this.config.maxFragLookUpTolerance) && (this.log("adjusting start position by " + h + " to match buffer start"), o += h, this.startPosition = o), this.log("seek to target start position " + o + " from current time " + i), r.currentTime = o
                                        }
                                    }
                                }, a._getAudioCodec = function(r) {
                                    var i = this.config.defaultAudioCodec || r.audioCodec;
                                    return this.audioCodecSwap && i && (this.log("Swapping audio codec"), i.indexOf("mp4a.40.5") !== -1 ? i = "mp4a.40.2" : i = "mp4a.40.5"), i
                                }, a._loadBitrateTestFrag = function(r, i) {
                                    var o = this;
                                    r.bitrateTest = !0, this._doFragLoad(r, i).then(function(u) {
                                        var c = o.hls;
                                        if (!(!u || o.fragContextChanged(r))) {
                                            i.fragmentError = 0, o.state = rt.IDLE, o.startFragRequested = !1, o.bitrateTest = !1;
                                            var h = r.stats;
                                            h.parsing.start = h.parsing.end = h.buffering.start = h.buffering.end = self.performance.now(), c.trigger(_.FRAG_LOADED, u), r.bitrateTest = !1
                                        }
                                    })
                                }, a._handleTransmuxComplete = function(r) {
                                    var i, o = "main",
                                        u = this.hls,
                                        c = r.remuxResult,
                                        h = r.chunkMeta,
                                        f = this.getCurrentContext(h);
                                    if (!f) {
                                        this.resetWhenMissingContext(h);
                                        return
                                    }
                                    var m = f.frag,
                                        p = f.part,
                                        E = f.level,
                                        S = c.video,
                                        L = c.text,
                                        I = c.id3,
                                        O = c.initSegment,
                                        U = E.details,
                                        G = this.altAudio ? void 0 : c.audio;
                                    if (this.fragContextChanged(m)) {
                                        this.fragmentTracker.removeFragment(m);
                                        return
                                    }
                                    if (this.state = rt.PARSING, O) {
                                        if (O != null && O.tracks) {
                                            var ee = m.initSegment || m;
                                            this._bufferInitSegment(E, O.tracks, ee, h), u.trigger(_.FRAG_PARSING_INIT_SEGMENT, {
                                                frag: ee,
                                                id: o,
                                                tracks: O.tracks
                                            })
                                        }
                                        var te = O.initPTS,
                                            _e = O.timescale;
                                        Ge(te) && (this.initPTS[m.cc] = {
                                            baseTime: te,
                                            timescale: _e
                                        }, u.trigger(_.INIT_PTS_FOUND, {
                                            frag: m,
                                            id: o,
                                            initPTS: te,
                                            timescale: _e
                                        }))
                                    }
                                    if (S && U && m.sn !== "initSegment") {
                                        var me = U.fragments[m.sn - 1 - U.startSN],
                                            ae = m.sn === U.startSN,
                                            Se = !me || m.cc > me.cc;
                                        if (c.independent !== !1) {
                                            var ve = S.startPTS,
                                                Ne = S.endPTS,
                                                Ie = S.startDTS,
                                                kt = S.endDTS;
                                            if (p) p.elementaryStreams[S.type] = {
                                                startPTS: ve,
                                                endPTS: Ne,
                                                startDTS: Ie,
                                                endDTS: kt
                                            };
                                            else if (S.firstKeyFrame && S.independent && h.id === 1 && !Se && (this.couldBacktrack = !0), S.dropped && S.independent) {
                                                var zt = this.getMainFwdBufferInfo(),
                                                    lr = (zt ? zt.end : this.getLoadPosition()) + this.config.maxBufferHole,
                                                    Fr = S.firstKeyFramePTS ? S.firstKeyFramePTS : ve;
                                                if (!ae && lr < Fr - this.config.maxBufferHole && !Se) {
                                                    this.backtrack(m);
                                                    return
                                                } else Se && (m.gap = !0);
                                                m.setElementaryStreamInfo(S.type, m.start, Ne, m.start, kt, !0)
                                            } else ae && ve > Kl && (m.gap = !0);
                                            m.setElementaryStreamInfo(S.type, ve, Ne, Ie, kt), this.backtrackFragment && (this.backtrackFragment = m), this.bufferFragmentData(S, m, p, h, ae || Se)
                                        } else if (ae || Se) m.gap = !0;
                                        else {
                                            this.backtrack(m);
                                            return
                                        }
                                    }
                                    if (G) {
                                        var Br = G.startPTS,
                                            hi = G.endPTS,
                                            ei = G.startDTS,
                                            Hr = G.endDTS;
                                        p && (p.elementaryStreams[Xt.AUDIO] = {
                                            startPTS: Br,
                                            endPTS: hi,
                                            startDTS: ei,
                                            endDTS: Hr
                                        }), m.setElementaryStreamInfo(Xt.AUDIO, Br, hi, ei, Hr), this.bufferFragmentData(G, m, p, h)
                                    }
                                    if (U && I != null && (i = I.samples) != null && i.length) {
                                        var Zi = {
                                            id: o,
                                            frag: m,
                                            details: U,
                                            samples: I.samples
                                        };
                                        u.trigger(_.FRAG_PARSING_METADATA, Zi)
                                    }
                                    if (U && L) {
                                        var ir = {
                                            id: o,
                                            frag: m,
                                            details: U,
                                            samples: L.samples
                                        };
                                        u.trigger(_.FRAG_PARSING_USERDATA, ir)
                                    }
                                }, a._bufferInitSegment = function(r, i, o, u) {
                                    var c = this;
                                    if (this.state === rt.PARSING) {
                                        this.audioOnly = !!i.audio && !i.video, this.altAudio && !this.audioOnly && delete i.audio;
                                        var h = i.audio,
                                            f = i.video,
                                            m = i.audiovideo;
                                        if (h) {
                                            var p = r.audioCodec,
                                                E = navigator.userAgent.toLowerCase();
                                            if (this.audioCodecSwitch) {
                                                p && (p.indexOf("mp4a.40.5") !== -1 ? p = "mp4a.40.2" : p = "mp4a.40.5");
                                                var S = h.metadata;
                                                S && "channelCount" in S && (S.channelCount || 1) !== 1 && E.indexOf("firefox") === -1 && (p = "mp4a.40.5")
                                            }
                                            p && p.indexOf("mp4a.40.5") !== -1 && E.indexOf("android") !== -1 && h.container !== "audio/mpeg" && (p = "mp4a.40.2", this.log("Android: force audio codec to " + p)), r.audioCodec && r.audioCodec !== p && this.log('Swapping manifest audio codec "' + r.audioCodec + '" for "' + p + '"'), h.levelCodec = p, h.id = "main", this.log("Init audio buffer, container:" + h.container + ", codecs[selected/level/parsed]=[" + (p || "") + "/" + (r.audioCodec || "") + "/" + h.codec + "]")
                                        }
                                        f && (f.levelCodec = r.videoCodec, f.id = "main", this.log("Init video buffer, container:" + f.container + ", codecs[level/parsed]=[" + (r.videoCodec || "") + "/" + f.codec + "]")), m && this.log("Init audiovideo buffer, container:" + m.container + ", codecs[level/parsed]=[" + r.codecs + "/" + m.codec + "]"), this.hls.trigger(_.BUFFER_CODECS, i), Object.keys(i).forEach(function(L) {
                                            var I = i[L],
                                                O = I.initSegment;
                                            O != null && O.byteLength && c.hls.trigger(_.BUFFER_APPENDING, {
                                                type: L,
                                                data: O,
                                                frag: o,
                                                part: null,
                                                chunkMeta: u,
                                                parent: o.type
                                            })
                                        }), this.tickImmediate()
                                    }
                                }, a.getMainFwdBufferInfo = function() {
                                    return this.getFwdBufferInfo(this.mediaBuffer ? this.mediaBuffer : this.media, H.MAIN)
                                }, a.backtrack = function(r) {
                                    this.couldBacktrack = !0, this.backtrackFragment = r, this.resetTransmuxer(), this.flushBufferGap(r), this.fragmentTracker.removeFragment(r), this.fragPrevious = null, this.nextLoadPosition = r.start, this.state = rt.IDLE
                                }, a.checkFragmentChanged = function() {
                                    var r = this.media,
                                        i = null;
                                    if (r && r.readyState > 1 && r.seeking === !1) {
                                        var o = r.currentTime;
                                        if (Or.isBuffered(r, o) ? i = this.getAppendedFrag(o) : Or.isBuffered(r, o + .1) && (i = this.getAppendedFrag(o + .1)), i) {
                                            this.backtrackFragment = null;
                                            var u = this.fragPlaying,
                                                c = i.level;
                                            (!u || i.sn !== u.sn || u.level !== c) && (this.fragPlaying = i, this.hls.trigger(_.FRAG_CHANGED, {
                                                frag: i
                                            }), (!u || u.level !== c) && this.hls.trigger(_.LEVEL_SWITCHED, {
                                                level: c
                                            }))
                                        }
                                    }
                                }, tt(n, [{
                                    key: "nextLevel",
                                    get: function() {
                                        var r = this.nextBufferedFrag;
                                        return r ? r.level : -1
                                    }
                                }, {
                                    key: "currentFrag",
                                    get: function() {
                                        var r = this.media;
                                        return r ? this.fragPlaying || this.getAppendedFrag(r.currentTime) : null
                                    }
                                }, {
                                    key: "currentProgramDateTime",
                                    get: function() {
                                        var r = this.media;
                                        if (r) {
                                            var i = r.currentTime,
                                                o = this.currentFrag;
                                            if (o && Ge(i) && Ge(o.programDateTime)) {
                                                var u = o.programDateTime + (i - o.start) * 1e3;
                                                return new Date(u)
                                            }
                                        }
                                        return null
                                    }
                                }, {
                                    key: "currentLevel",
                                    get: function() {
                                        var r = this.currentFrag;
                                        return r ? r.level : -1
                                    }
                                }, {
                                    key: "nextBufferedFrag",
                                    get: function() {
                                        var r = this.currentFrag;
                                        return r ? this.followingBufferedFrag(r) : null
                                    }
                                }, {
                                    key: "forceStartLoad",
                                    get: function() {
                                        return this._forceStartLoad
                                    }
                                }]), n
                            }(To),
                            er = function() {
                                l.isMSESupported = function() {
                                    return Gl()
                                }, l.isSupported = function() {
                                    return Sc()
                                }, l.getMediaSource = function() {
                                    return Ni()
                                };

                                function l(a) {
                                    a === void 0 && (a = {}), this.config = void 0, this.userConfig = void 0, this.coreComponents = void 0, this.networkControllers = void 0, this.started = !1, this._emitter = new el, this._autoLevelCapping = -1, this._maxHdcpLevel = null, this.abrController = void 0, this.bufferController = void 0, this.capLevelController = void 0, this.latencyController = void 0, this.levelController = void 0, this.streamController = void 0, this.audioTrackController = void 0, this.subtitleTrackController = void 0, this.emeController = void 0, this.cmcdController = void 0, this._media = null, this.url = null, this.triggeringException = void 0, ai(a.debug || !1, "Hls instance");
                                    var e = this.config = Tc(l.DefaultConfig, a);
                                    this.userConfig = a, e.progressive && ku(e);
                                    var r = e.abrController,
                                        i = e.bufferController,
                                        o = e.capLevelController,
                                        u = e.errorController,
                                        c = e.fpsController,
                                        h = new u(this),
                                        f = this.abrController = new r(this),
                                        m = this.bufferController = new i(this),
                                        p = this.capLevelController = new o(this),
                                        E = new c(this),
                                        S = new Ce(this),
                                        L = new Gt(this),
                                        I = e.contentSteeringController,
                                        O = I ? new I(this) : null,
                                        U = this.levelController = new Ac(this, O),
                                        G = new Ea(this),
                                        ee = new Uh(this.config),
                                        te = this.streamController = new Gh(this, G, ee);
                                    p.setStreamController(te), E.setStreamController(te);
                                    var _e = [S, U, te];
                                    O && _e.splice(1, 0, O), this.networkControllers = _e;
                                    var me = [f, m, p, E, L, G];
                                    this.audioTrackController = this.createController(e.audioTrackController, _e);
                                    var ae = e.audioStreamController;
                                    ae && _e.push(new ae(this, G, ee)), this.subtitleTrackController = this.createController(e.subtitleTrackController, _e);
                                    var Se = e.subtitleStreamController;
                                    Se && _e.push(new Se(this, G, ee)), this.createController(e.timelineController, me), ee.emeController = this.emeController = this.createController(e.emeController, me), this.cmcdController = this.createController(e.cmcdController, me), this.latencyController = this.createController(pr, me), this.coreComponents = me, _e.push(h);
                                    var ve = h.onErrorOut;
                                    typeof ve == "function" && this.on(_.ERROR, ve, h)
                                }
                                var n = l.prototype;
                                return n.createController = function(e, r) {
                                    if (e) {
                                        var i = new e(this);
                                        return r && r.push(i), i
                                    }
                                    return null
                                }, n.on = function(e, r, i) {
                                    i === void 0 && (i = this), this._emitter.on(e, r, i)
                                }, n.once = function(e, r, i) {
                                    i === void 0 && (i = this), this._emitter.once(e, r, i)
                                }, n.removeAllListeners = function(e) {
                                    this._emitter.removeAllListeners(e)
                                }, n.off = function(e, r, i, o) {
                                    i === void 0 && (i = this), this._emitter.off(e, r, i, o)
                                }, n.listeners = function(e) {
                                    return this._emitter.listeners(e)
                                }, n.emit = function(e, r, i) {
                                    return this._emitter.emit(e, r, i)
                                }, n.trigger = function(e, r) {
                                    if (this.config.debug) return this.emit(e, e, r);
                                    try {
                                        return this.emit(e, e, r)
                                    } catch (o) {
                                        if (V.error("An internal error happened while handling event " + e + '. Error message: "' + o.message + '". Here is a stacktrace:', o), !this.triggeringException) {
                                            this.triggeringException = !0;
                                            var i = e === _.ERROR;
                                            this.trigger(_.ERROR, {
                                                type: Ve.OTHER_ERROR,
                                                details: de.INTERNAL_EXCEPTION,
                                                fatal: i,
                                                event: e,
                                                error: o
                                            }), this.triggeringException = !1
                                        }
                                    }
                                    return !1
                                }, n.listenerCount = function(e) {
                                    return this._emitter.listenerCount(e)
                                }, n.destroy = function() {
                                    V.log("destroy"), this.trigger(_.DESTROYING, void 0), this.detachMedia(), this.removeAllListeners(), this._autoLevelCapping = -1, this.url = null, this.networkControllers.forEach(function(r) {
                                        return r.destroy()
                                    }), this.networkControllers.length = 0, this.coreComponents.forEach(function(r) {
                                        return r.destroy()
                                    }), this.coreComponents.length = 0;
                                    var e = this.config;
                                    e.xhrSetup = e.fetchSetup = void 0, this.userConfig = null
                                }, n.attachMedia = function(e) {
                                    V.log("attachMedia"), this._media = e, this.trigger(_.MEDIA_ATTACHING, {
                                        media: e
                                    })
                                }, n.detachMedia = function() {
                                    V.log("detachMedia"), this.trigger(_.MEDIA_DETACHING, void 0), this._media = null
                                }, n.loadSource = function(e) {
                                    this.stopLoad();
                                    var r = this.media,
                                        i = this.url,
                                        o = this.url = fe.buildAbsoluteURL(self.location.href, e, {
                                            alwaysNormalize: !0
                                        });
                                    this._autoLevelCapping = -1, this._maxHdcpLevel = null, V.log("loadSource:" + o), r && i && (i !== o || this.bufferController.hasSourceTypes()) && (this.detachMedia(), this.attachMedia(r)), this.trigger(_.MANIFEST_LOADING, {
                                        url: e
                                    })
                                }, n.startLoad = function(e) {
                                    e === void 0 && (e = -1), V.log("startLoad(" + e + ")"), this.started = !0, this.resumeBuffering();
                                    for (var r = 0; r < this.networkControllers.length && (this.networkControllers[r].startLoad(e), !(!this.started || !this.networkControllers)); r++);
                                }, n.stopLoad = function() {
                                    V.log("stopLoad"), this.started = !1;
                                    for (var e = 0; e < this.networkControllers.length && (this.networkControllers[e].stopLoad(), !(this.started || !this.networkControllers)); e++);
                                }, n.resumeBuffering = function() {
                                    V.log("resume buffering"), this.networkControllers.forEach(function(e) {
                                        e.resumeBuffering && e.resumeBuffering()
                                    })
                                }, n.pauseBuffering = function() {
                                    V.log("pause buffering"), this.networkControllers.forEach(function(e) {
                                        e.pauseBuffering && e.pauseBuffering()
                                    })
                                }, n.swapAudioCodec = function() {
                                    V.log("swapAudioCodec"), this.streamController.swapAudioCodec()
                                }, n.recoverMediaError = function() {
                                    V.log("recoverMediaError");
                                    var e = this._media;
                                    this.detachMedia(), e && this.attachMedia(e)
                                }, n.removeLevel = function(e) {
                                    this.levelController.removeLevel(e)
                                }, n.setAudioOption = function(e) {
                                    var r;
                                    return (r = this.audioTrackController) == null ? void 0 : r.setAudioOption(e)
                                }, n.setSubtitleOption = function(e) {
                                    var r;
                                    return (r = this.subtitleTrackController) == null || r.setSubtitleOption(e), null
                                }, tt(l, [{
                                    key: "levels",
                                    get: function() {
                                        var e = this.levelController.levels;
                                        return e || []
                                    }
                                }, {
                                    key: "currentLevel",
                                    get: function() {
                                        return this.streamController.currentLevel
                                    },
                                    set: function(e) {
                                        V.log("set currentLevel:" + e), this.levelController.manualLevel = e, this.streamController.immediateLevelSwitch()
                                    }
                                }, {
                                    key: "nextLevel",
                                    get: function() {
                                        return this.streamController.nextLevel
                                    },
                                    set: function(e) {
                                        V.log("set nextLevel:" + e), this.levelController.manualLevel = e, this.streamController.nextLevelSwitch()
                                    }
                                }, {
                                    key: "loadLevel",
                                    get: function() {
                                        return this.levelController.level
                                    },
                                    set: function(e) {
                                        V.log("set loadLevel:" + e), this.levelController.manualLevel = e
                                    }
                                }, {
                                    key: "nextLoadLevel",
                                    get: function() {
                                        return this.levelController.nextLoadLevel
                                    },
                                    set: function(e) {
                                        this.levelController.nextLoadLevel = e
                                    }
                                }, {
                                    key: "firstLevel",
                                    get: function() {
                                        return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                                    },
                                    set: function(e) {
                                        V.log("set firstLevel:" + e), this.levelController.firstLevel = e
                                    }
                                }, {
                                    key: "startLevel",
                                    get: function() {
                                        var e = this.levelController.startLevel;
                                        return e === -1 && this.abrController.forcedAutoLevel > -1 ? this.abrController.forcedAutoLevel : e
                                    },
                                    set: function(e) {
                                        V.log("set startLevel:" + e), e !== -1 && (e = Math.max(e, this.minAutoLevel)), this.levelController.startLevel = e
                                    }
                                }, {
                                    key: "capLevelToPlayerSize",
                                    get: function() {
                                        return this.config.capLevelToPlayerSize
                                    },
                                    set: function(e) {
                                        var r = !!e;
                                        r !== this.config.capLevelToPlayerSize && (r ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(), this.autoLevelCapping = -1, this.streamController.nextLevelSwitch()), this.config.capLevelToPlayerSize = r)
                                    }
                                }, {
                                    key: "autoLevelCapping",
                                    get: function() {
                                        return this._autoLevelCapping
                                    },
                                    set: function(e) {
                                        this._autoLevelCapping !== e && (V.log("set autoLevelCapping:" + e), this._autoLevelCapping = e, this.levelController.checkMaxAutoUpdated())
                                    }
                                }, {
                                    key: "bandwidthEstimate",
                                    get: function() {
                                        var e = this.abrController.bwEstimator;
                                        return e ? e.getEstimate() : NaN
                                    },
                                    set: function(e) {
                                        this.abrController.resetEstimator(e)
                                    }
                                }, {
                                    key: "ttfbEstimate",
                                    get: function() {
                                        var e = this.abrController.bwEstimator;
                                        return e ? e.getEstimateTTFB() : NaN
                                    }
                                }, {
                                    key: "maxHdcpLevel",
                                    get: function() {
                                        return this._maxHdcpLevel
                                    },
                                    set: function(e) {
                                        Zt(e) && this._maxHdcpLevel !== e && (this._maxHdcpLevel = e, this.levelController.checkMaxAutoUpdated())
                                    }
                                }, {
                                    key: "autoLevelEnabled",
                                    get: function() {
                                        return this.levelController.manualLevel === -1
                                    }
                                }, {
                                    key: "manualLevel",
                                    get: function() {
                                        return this.levelController.manualLevel
                                    }
                                }, {
                                    key: "minAutoLevel",
                                    get: function() {
                                        var e = this.levels,
                                            r = this.config.minAutoBitrate;
                                        if (!e) return 0;
                                        for (var i = e.length, o = 0; o < i; o++)
                                            if (e[o].maxBitrate >= r) return o;
                                        return 0
                                    }
                                }, {
                                    key: "maxAutoLevel",
                                    get: function() {
                                        var e = this.levels,
                                            r = this.autoLevelCapping,
                                            i = this.maxHdcpLevel,
                                            o;
                                        if (r === -1 && e != null && e.length ? o = e.length - 1 : o = r, i)
                                            for (var u = o; u--;) {
                                                var c = e[u].attrs["HDCP-LEVEL"];
                                                if (c && c <= i) return u
                                            }
                                        return o
                                    }
                                }, {
                                    key: "firstAutoLevel",
                                    get: function() {
                                        return this.abrController.firstAutoLevel
                                    }
                                }, {
                                    key: "nextAutoLevel",
                                    get: function() {
                                        return this.abrController.nextAutoLevel
                                    },
                                    set: function(e) {
                                        this.abrController.nextAutoLevel = e
                                    }
                                }, {
                                    key: "playingDate",
                                    get: function() {
                                        return this.streamController.currentProgramDateTime
                                    }
                                }, {
                                    key: "mainForwardBufferInfo",
                                    get: function() {
                                        return this.streamController.getMainFwdBufferInfo()
                                    }
                                }, {
                                    key: "allAudioTracks",
                                    get: function() {
                                        var e = this.audioTrackController;
                                        return e ? e.allAudioTracks : []
                                    }
                                }, {
                                    key: "audioTracks",
                                    get: function() {
                                        var e = this.audioTrackController;
                                        return e ? e.audioTracks : []
                                    }
                                }, {
                                    key: "audioTrack",
                                    get: function() {
                                        var e = this.audioTrackController;
                                        return e ? e.audioTrack : -1
                                    },
                                    set: function(e) {
                                        var r = this.audioTrackController;
                                        r && (r.audioTrack = e)
                                    }
                                }, {
                                    key: "allSubtitleTracks",
                                    get: function() {
                                        var e = this.subtitleTrackController;
                                        return e ? e.allSubtitleTracks : []
                                    }
                                }, {
                                    key: "subtitleTracks",
                                    get: function() {
                                        var e = this.subtitleTrackController;
                                        return e ? e.subtitleTracks : []
                                    }
                                }, {
                                    key: "subtitleTrack",
                                    get: function() {
                                        var e = this.subtitleTrackController;
                                        return e ? e.subtitleTrack : -1
                                    },
                                    set: function(e) {
                                        var r = this.subtitleTrackController;
                                        r && (r.subtitleTrack = e)
                                    }
                                }, {
                                    key: "media",
                                    get: function() {
                                        return this._media
                                    }
                                }, {
                                    key: "subtitleDisplay",
                                    get: function() {
                                        var e = this.subtitleTrackController;
                                        return e ? e.subtitleDisplay : !1
                                    },
                                    set: function(e) {
                                        var r = this.subtitleTrackController;
                                        r && (r.subtitleDisplay = e)
                                    }
                                }, {
                                    key: "lowLatencyMode",
                                    get: function() {
                                        return this.config.lowLatencyMode
                                    },
                                    set: function(e) {
                                        this.config.lowLatencyMode = e
                                    }
                                }, {
                                    key: "liveSyncPosition",
                                    get: function() {
                                        return this.latencyController.liveSyncPosition
                                    }
                                }, {
                                    key: "latency",
                                    get: function() {
                                        return this.latencyController.latency
                                    }
                                }, {
                                    key: "maxLatency",
                                    get: function() {
                                        return this.latencyController.maxLatency
                                    }
                                }, {
                                    key: "targetLatency",
                                    get: function() {
                                        return this.latencyController.targetLatency
                                    }
                                }, {
                                    key: "drift",
                                    get: function() {
                                        return this.latencyController.drift
                                    }
                                }, {
                                    key: "forceStartLoad",
                                    get: function() {
                                        return this.streamController.forceStartLoad
                                    }
                                }], [{
                                    key: "version",
                                    get: function() {
                                        return "1.5.20"
                                    }
                                }, {
                                    key: "Events",
                                    get: function() {
                                        return _
                                    }
                                }, {
                                    key: "ErrorTypes",
                                    get: function() {
                                        return Ve
                                    }
                                }, {
                                    key: "ErrorDetails",
                                    get: function() {
                                        return de
                                    }
                                }, {
                                    key: "DefaultConfig",
                                    get: function() {
                                        return l.defaultConfig ? l.defaultConfig : Su
                                    },
                                    set: function(e) {
                                        l.defaultConfig = e
                                    }
                                }]), l
                            }();
                        return er.defaultConfig = void 0, er
                    })
                })(!1)
            },
            74956: function(wt, Me, we) {
                "use strict";
                var je = Object.defineProperty,
                    Ee = Object.defineProperties,
                    Je = Object.getOwnPropertyDescriptors,
                    Y = Object.getOwnPropertySymbols,
                    Ct = Object.prototype.hasOwnProperty,
                    tt = Object.prototype.propertyIsEnumerable,
                    mt = (t, s, d) => s in t ? je(t, s, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: d
                    }) : t[s] = d,
                    le = (t, s) => {
                        for (var d in s || (s = {})) Ct.call(s, d) && mt(t, d, s[d]);
                        if (Y)
                            for (var d of Y(s)) tt.call(s, d) && mt(t, d, s[d]);
                        return t
                    },
                    x = (t, s) => Ee(t, Je(s)),
                    K = (t, s) => {
                        var d = {};
                        for (var g in t) Ct.call(t, g) && s.indexOf(g) < 0 && (d[g] = t[g]);
                        if (t != null && Y)
                            for (var g of Y(t)) s.indexOf(g) < 0 && tt.call(t, g) && (d[g] = t[g]);
                        return d
                    },
                    Q = (t, s, d) => new Promise((g, w) => {
                        var N = $e => {
                                try {
                                    ue(d.next($e))
                                } catch (et) {
                                    w(et)
                                }
                            },
                            X = $e => {
                                try {
                                    ue(d.throw($e))
                                } catch (et) {
                                    w(et)
                                }
                            },
                            ue = $e => $e.done ? g($e.value) : Promise.resolve($e.value).then(N, X);
                        ue((d = d.apply(t, s)).next())
                    }),
                    he = Object.create,
                    ot = Object.defineProperty,
                    it = Object.getOwnPropertyDescriptor,
                    Rt = Object.getOwnPropertyNames,
                    Ft = Object.getPrototypeOf,
                    Dt = Object.prototype.hasOwnProperty,
                    dt = t => {
                        throw TypeError(t)
                    },
                    at = (t, s) => {
                        for (var d in s) ot(t, d, {
                            get: s[d],
                            enumerable: !0
                        })
                    },
                    bt = (t, s, d, g) => {
                        if (s && typeof s == "object" || typeof s == "function")
                            for (let w of Rt(s)) !Dt.call(t, w) && w !== d && ot(t, w, {
                                get: () => s[w],
                                enumerable: !(g = it(s, w)) || g.enumerable
                            });
                        return t
                    },
                    Wt = (t, s, d) => (d = t != null ? he(Ft(t)) : {}, bt(s || !t || !t.__esModule ? ot(d, "default", {
                        value: t,
                        enumerable: !0
                    }) : d, t)),
                    fe = t => bt(ot({}, "__esModule", {
                        value: !0
                    }), t),
                    Ge = (t, s, d) => s.has(t) || dt("Cannot " + d),
                    B = (t, s, d) => (Ge(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Be = (t, s, d) => s.has(t) ? dt("Cannot add the same private member more than once") : s instanceof WeakSet ? s.add(t) : s.set(t, d),
                    _ = (t, s, d, g) => (Ge(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Ve = (t, s, d) => (Ge(t, s, "access private method"), d),
                    de = {};
                at(de, {
                    MediaError: () => er.MediaError,
                    default: () => Op,
                    generatePlayerInitTime: () => l.generatePlayerInitTime,
                    getVideoAttribute: () => pl,
                    playerSoftwareName: () => qf,
                    playerSoftwareVersion: () => Yf
                }), wt.exports = fe(de);
                var yt = class {
                    addEventListener() {}
                    removeEventListener() {}
                    dispatchEvent(t) {
                        return !0
                    }
                };
                if (typeof DocumentFragment == "undefined") {
                    class t extends yt {}
                    globalThis.DocumentFragment = t
                }
                var Ir = class extends yt {},
                    ar = class extends yt {},
                    nt = {
                        get(t) {},
                        define(t, s, d) {},
                        getName(t) {
                            return null
                        },
                        upgrade(t) {},
                        whenDefined(t) {
                            return Promise.resolve(Ir)
                        }
                    },
                    dr, ai = class {
                        constructor(t, s = {}) {
                            Be(this, dr), _(this, dr, s == null ? void 0 : s.detail)
                        }
                        get detail() {
                            return B(this, dr)
                        }
                        initCustomEvent() {}
                    };
                dr = new WeakMap;

                function V(t, s) {
                    return new Ir
                }
                var ce = {
                        document: {
                            createElement: V
                        },
                        DocumentFragment,
                        customElements: nt,
                        CustomEvent: ai,
                        EventTarget: yt,
                        HTMLElement: Ir,
                        HTMLVideoElement: ar
                    },
                    Pe = typeof window == "undefined" || typeof globalThis.customElements == "undefined",
                    st = Pe ? ce : globalThis,
                    ct = Pe ? ce.document : globalThis.document,
                    Fe = {
                        MEDIA_PLAY_REQUEST: "mediaplayrequest",
                        MEDIA_PAUSE_REQUEST: "mediapauserequest",
                        MEDIA_MUTE_REQUEST: "mediamuterequest",
                        MEDIA_UNMUTE_REQUEST: "mediaunmuterequest",
                        MEDIA_VOLUME_REQUEST: "mediavolumerequest",
                        MEDIA_SEEK_REQUEST: "mediaseekrequest",
                        MEDIA_AIRPLAY_REQUEST: "mediaairplayrequest",
                        MEDIA_ENTER_FULLSCREEN_REQUEST: "mediaenterfullscreenrequest",
                        MEDIA_EXIT_FULLSCREEN_REQUEST: "mediaexitfullscreenrequest",
                        MEDIA_PREVIEW_REQUEST: "mediapreviewrequest",
                        MEDIA_ENTER_PIP_REQUEST: "mediaenterpiprequest",
                        MEDIA_EXIT_PIP_REQUEST: "mediaexitpiprequest",
                        MEDIA_ENTER_CAST_REQUEST: "mediaentercastrequest",
                        MEDIA_EXIT_CAST_REQUEST: "mediaexitcastrequest",
                        MEDIA_SHOW_TEXT_TRACKS_REQUEST: "mediashowtexttracksrequest",
                        MEDIA_HIDE_TEXT_TRACKS_REQUEST: "mediahidetexttracksrequest",
                        MEDIA_SHOW_SUBTITLES_REQUEST: "mediashowsubtitlesrequest",
                        MEDIA_DISABLE_SUBTITLES_REQUEST: "mediadisablesubtitlesrequest",
                        MEDIA_TOGGLE_SUBTITLES_REQUEST: "mediatogglesubtitlesrequest",
                        MEDIA_PLAYBACK_RATE_REQUEST: "mediaplaybackraterequest",
                        MEDIA_RENDITION_REQUEST: "mediarenditionrequest",
                        MEDIA_AUDIO_TRACK_REQUEST: "mediaaudiotrackrequest",
                        MEDIA_SEEK_TO_LIVE_REQUEST: "mediaseektoliverequest",
                        REGISTER_MEDIA_STATE_RECEIVER: "registermediastatereceiver",
                        UNREGISTER_MEDIA_STATE_RECEIVER: "unregistermediastatereceiver"
                    },
                    ht = {
                        MEDIA_CHROME_ATTRIBUTES: "mediachromeattributes",
                        MEDIA_CONTROLLER: "mediacontroller"
                    },
                    Er = {
                        MEDIA_AIRPLAY_UNAVAILABLE: "mediaAirplayUnavailable",
                        MEDIA_AUDIO_TRACK_ENABLED: "mediaAudioTrackEnabled",
                        MEDIA_AUDIO_TRACK_LIST: "mediaAudioTrackList",
                        MEDIA_AUDIO_TRACK_UNAVAILABLE: "mediaAudioTrackUnavailable",
                        MEDIA_BUFFERED: "mediaBuffered",
                        MEDIA_CAST_UNAVAILABLE: "mediaCastUnavailable",
                        MEDIA_CHAPTERS_CUES: "mediaChaptersCues",
                        MEDIA_CURRENT_TIME: "mediaCurrentTime",
                        MEDIA_DURATION: "mediaDuration",
                        MEDIA_ENDED: "mediaEnded",
                        MEDIA_ERROR: "mediaError",
                        MEDIA_ERROR_CODE: "mediaErrorCode",
                        MEDIA_ERROR_MESSAGE: "mediaErrorMessage",
                        MEDIA_FULLSCREEN_UNAVAILABLE: "mediaFullscreenUnavailable",
                        MEDIA_HAS_PLAYED: "mediaHasPlayed",
                        MEDIA_HEIGHT: "mediaHeight",
                        MEDIA_IS_AIRPLAYING: "mediaIsAirplaying",
                        MEDIA_IS_CASTING: "mediaIsCasting",
                        MEDIA_IS_FULLSCREEN: "mediaIsFullscreen",
                        MEDIA_IS_PIP: "mediaIsPip",
                        MEDIA_LOADING: "mediaLoading",
                        MEDIA_MUTED: "mediaMuted",
                        MEDIA_PAUSED: "mediaPaused",
                        MEDIA_PIP_UNAVAILABLE: "mediaPipUnavailable",
                        MEDIA_PLAYBACK_RATE: "mediaPlaybackRate",
                        MEDIA_PREVIEW_CHAPTER: "mediaPreviewChapter",
                        MEDIA_PREVIEW_COORDS: "mediaPreviewCoords",
                        MEDIA_PREVIEW_IMAGE: "mediaPreviewImage",
                        MEDIA_PREVIEW_TIME: "mediaPreviewTime",
                        MEDIA_RENDITION_LIST: "mediaRenditionList",
                        MEDIA_RENDITION_SELECTED: "mediaRenditionSelected",
                        MEDIA_RENDITION_UNAVAILABLE: "mediaRenditionUnavailable",
                        MEDIA_SEEKABLE: "mediaSeekable",
                        MEDIA_STREAM_TYPE: "mediaStreamType",
                        MEDIA_SUBTITLES_LIST: "mediaSubtitlesList",
                        MEDIA_SUBTITLES_SHOWING: "mediaSubtitlesShowing",
                        MEDIA_TARGET_LIVE_WINDOW: "mediaTargetLiveWindow",
                        MEDIA_TIME_IS_LIVE: "mediaTimeIsLive",
                        MEDIA_VOLUME: "mediaVolume",
                        MEDIA_VOLUME_LEVEL: "mediaVolumeLevel",
                        MEDIA_VOLUME_UNAVAILABLE: "mediaVolumeUnavailable",
                        MEDIA_WIDTH: "mediaWidth"
                    },
                    Xt = Object.entries(Er),
                    W = Xt.reduce((t, [s, d]) => (t[s] = d.toLowerCase(), t), {}),
                    Zr = {
                        USER_INACTIVE_CHANGE: "userinactivechange",
                        BREAKPOINTS_CHANGE: "breakpointchange",
                        BREAKPOINTS_COMPUTED: "breakpointscomputed"
                    },
                    br = Xt.reduce((t, [s, d]) => (t[s] = d.toLowerCase(), t), le({}, Zr)),
                    ni = Object.entries(br).reduce((t, [s, d]) => {
                        let g = W[s];
                        return g && (t[d] = g), t
                    }, {
                        userinactivechange: "userinactive"
                    }),
                    Mi = Object.entries(W).reduce((t, [s, d]) => {
                        let g = br[s];
                        return g && (t[d] = g), t
                    }, {
                        userinactive: "userinactivechange"
                    }),
                    si = {
                        SUBTITLES: "subtitles",
                        CAPTIONS: "captions",
                        DESCRIPTIONS: "descriptions",
                        CHAPTERS: "chapters",
                        METADATA: "metadata"
                    },
                    ti = {
                        DISABLED: "disabled",
                        HIDDEN: "hidden",
                        SHOWING: "showing"
                    },
                    oa = {
                        MOUSE: "mouse",
                        PEN: "pen",
                        TOUCH: "touch"
                    },
                    Wr = {
                        UNAVAILABLE: "unavailable",
                        UNSUPPORTED: "unsupported"
                    },
                    Cr = {
                        LIVE: "live",
                        ON_DEMAND: "on-demand",
                        UNKNOWN: "unknown"
                    },
                    La = {
                        INLINE: "inline",
                        FULLSCREEN: "fullscreen",
                        PICTURE_IN_PICTURE: "picture-in-picture"
                    };

                function Gr(t) {
                    return t == null ? void 0 : t.map(ri).join(" ")
                }

                function Kt(t) {
                    return t == null ? void 0 : t.split(/\s+/).map(ki)
                }

                function ri(t) {
                    if (t) {
                        let {
                            id: s,
                            width: d,
                            height: g
                        } = t;
                        return [s, d, g].filter(w => w != null).join(":")
                    }
                }

                function ki(t) {
                    if (t) {
                        let [s, d, g] = t.split(":");
                        return {
                            id: s,
                            width: +d,
                            height: +g
                        }
                    }
                }

                function aa(t) {
                    return t == null ? void 0 : t.map(ie).join(" ")
                }

                function Tt(t) {
                    return t == null ? void 0 : t.split(/\s+/).map(j)
                }

                function ie(t) {
                    if (t) {
                        let {
                            id: s,
                            kind: d,
                            language: g,
                            label: w
                        } = t;
                        return [s, d, g, w].filter(N => N != null).join(":")
                    }
                }

                function j(t) {
                    if (t) {
                        let [s, d, g, w] = t.split(":");
                        return {
                            id: s,
                            kind: d,
                            language: g,
                            label: w
                        }
                    }
                }

                function Z(t) {
                    return t.replace(/[-_]([a-z])/g, (s, d) => d.toUpperCase())
                }

                function ne(t) {
                    return typeof t == "number" && !Number.isNaN(t) && Number.isFinite(t)
                }

                function pe(t) {
                    return typeof t != "string" ? !1 : !isNaN(t) && !isNaN(parseFloat(t))
                }
                var De = t => new Promise(s => setTimeout(s, t)),
                    ze = [{
                        singular: "hour",
                        plural: "hours"
                    }, {
                        singular: "minute",
                        plural: "minutes"
                    }, {
                        singular: "second",
                        plural: "seconds"
                    }],
                    ft = (t, s) => {
                        let d = t === 1 ? ze[s].singular : ze[s].plural;
                        return `${t} ${d}`
                    },
                    gt = t => {
                        if (!ne(t)) return "";
                        let s = Math.abs(t),
                            d = s !== t,
                            g = new Date(0, 0, 0, 0, 0, s, 0);
                        return `${[g.getHours(),g.getMinutes(),g.getSeconds()].map((w,N)=>w&&ft(w,N)).filter(w=>w).join(", ")}${d?" remaining":""}`
                    };

                function qe(t, s) {
                    let d = !1;
                    t < 0 && (d = !0, t = 0 - t), t = t < 0 ? 0 : t;
                    let g = Math.floor(t % 60),
                        w = Math.floor(t / 60 % 60),
                        N = Math.floor(t / 3600),
                        X = Math.floor(s / 60 % 60),
                        ue = Math.floor(s / 3600);
                    return (isNaN(t) || t === 1 / 0) && (N = w = g = "0"), N = N > 0 || ue > 0 ? N + ":" : "", w = ((N || X >= 10) && w < 10 ? "0" + w : w) + ":", g = g < 10 ? "0" + g : g, (d ? "-" : "") + N + w + g
                }
                var wr = Object.freeze({
                        length: 0,
                        start(t) {
                            let s = t >>> 0;
                            if (s >= this.length) throw new DOMException(`Failed to execute 'start' on 'TimeRanges': The index provided (${s}) is greater than or equal to the maximum bound (${this.length}).`);
                            return 0
                        },
                        end(t) {
                            let s = t >>> 0;
                            if (s >= this.length) throw new DOMException(`Failed to execute 'end' on 'TimeRanges': The index provided (${s}) is greater than or equal to the maximum bound (${this.length}).`);
                            return 0
                        }
                    }),
                    kr = {
                        "Start airplay": "Start airplay",
                        "Stop airplay": "Stop airplay",
                        Audio: "Audio",
                        Captions: "Captions",
                        "Enable captions": "Enable captions",
                        "Disable captions": "Disable captions",
                        "Start casting": "Start casting",
                        "Stop casting": "Stop casting",
                        "Enter fullscreen mode": "Enter fullscreen mode",
                        "Exit fullscreen mode": "Exit fullscreen mode",
                        Mute: "Mute",
                        Unmute: "Unmute",
                        "Enter picture in picture mode": "Enter picture in picture mode",
                        "Exit picture in picture mode": "Exit picture in picture mode",
                        Play: "Play",
                        Pause: "Pause",
                        "Playback rate": "Playback rate",
                        "Playback rate {playbackRate}": "Playback rate {playbackRate}",
                        Quality: "Quality",
                        "Seek backward": "Seek backward",
                        "Seek forward": "Seek forward",
                        Settings: "Settings",
                        "audio player": "audio player",
                        "video player": "video player",
                        volume: "volume",
                        seek: "seek",
                        "closed captions": "closed captions",
                        "current playback rate": "current playback rate",
                        "playback time": "playback time",
                        "media loading": "media loading",
                        settings: "settings",
                        "audio tracks": "audio tracks",
                        quality: "quality",
                        play: "play",
                        pause: "pause",
                        mute: "mute",
                        unmute: "unmute",
                        live: "live",
                        "start airplay": "start airplay",
                        "stop airplay": "stop airplay",
                        "start casting": "start casting",
                        "stop casting": "stop casting",
                        "enter fullscreen mode": "enter fullscreen mode",
                        "exit fullscreen mode": "exit fullscreen mode",
                        "enter picture in picture mode": "enter picture in picture mode",
                        "exit picture in picture mode": "exit picture in picture mode",
                        "seek to live": "seek to live",
                        "playing live": "playing live",
                        "seek back {seekOffset} seconds": "seek back {seekOffset} seconds",
                        "seek forward {seekOffset} seconds": "seek forward {seekOffset} seconds",
                        "Network Error": "Network Error",
                        "Decode Error": "Decode Error",
                        "Source Not Supported": "Source Not Supported",
                        "Encryption Error": "Encryption Error",
                        "A network error caused the media download to fail.": "A network error caused the media download to fail.",
                        "A media error caused playback to be aborted. The media could be corrupt or your browser does not support this format.": "A media error caused playback to be aborted. The media could be corrupt or your browser does not support this format.",
                        "An unsupported error occurred. The server or network failed, or your browser does not support this format.": "An unsupported error occurred. The server or network failed, or your browser does not support this format.",
                        "The media is encrypted and there are no keys to decrypt it.": "The media is encrypted and there are no keys to decrypt it."
                    },
                    Ar, $t = {
                        en: kr
                    },
                    hr = ((Ar = globalThis.navigator) == null ? void 0 : Ar.language.split("-")[0]) || "en",
                    Gi = t => {
                        hr = t
                    },
                    vt = (t, s = {}) => {
                        var d;
                        return (((d = $t[hr]) == null ? void 0 : d[t]) || kr[t]).replace(/\{(\w+)\}/g, (g, w) => s[w] !== void 0 ? String(s[w]) : `{${w}}`)
                    },
                    oi = class {
                        addEventListener() {}
                        removeEventListener() {}
                        dispatchEvent() {
                            return !0
                        }
                    },
                    Mt = class extends oi {},
                    Ht = class extends Mt {
                        constructor() {
                            super(...arguments), this.role = null
                        }
                    },
                    Ze = class {
                        observe() {}
                        unobserve() {}
                        disconnect() {}
                    },
                    sr = {
                        createElement: function() {
                            return new mr.HTMLElement
                        },
                        createElementNS: function() {
                            return new mr.HTMLElement
                        },
                        addEventListener() {},
                        removeEventListener() {},
                        dispatchEvent(t) {
                            return !1
                        }
                    },
                    mr = {
                        ResizeObserver: Ze,
                        document: sr,
                        Node: Mt,
                        Element: Ht,
                        HTMLElement: class extends Ht {
                            constructor() {
                                super(...arguments), this.innerHTML = ""
                            }
                            get content() {
                                return new mr.DocumentFragment
                            }
                        },
                        DocumentFragment: class extends oi {},
                        customElements: {
                            get: function() {},
                            define: function() {},
                            whenDefined: function() {}
                        },
                        localStorage: {
                            getItem(t) {
                                return null
                            },
                            setItem(t, s) {},
                            removeItem(t) {}
                        },
                        CustomEvent: function() {},
                        getComputedStyle: function() {},
                        navigator: {
                            languages: [],
                            get userAgent() {
                                return ""
                            }
                        },
                        matchMedia(t) {
                            return {
                                matches: !1,
                                media: t
                            }
                        }
                    },
                    Lr = typeof window == "undefined" || typeof window.customElements == "undefined",
                    Yt = Object.keys(mr).every(t => t in globalThis),
                    oe = Lr && !Yt ? mr : globalThis,
                    Ut = Lr && !Yt ? sr : globalThis.document,
                    yi = new WeakMap,
                    Ke = t => {
                        let s = yi.get(t);
                        return s || yi.set(t, s = new Set), s
                    },
                    ge = new oe.ResizeObserver(t => {
                        for (let s of t)
                            for (let d of Ke(s.target)) d(s)
                    });

                function Et(t, s) {
                    Ke(t).add(s), ge.observe(t)
                }

                function vr(t, s) {
                    let d = Ke(t);
                    d.delete(s), d.size || ge.unobserve(t)
                }

                function tr(t) {
                    let s = {};
                    for (let d of t) s[d.name] = d.value;
                    return s
                }

                function Tr(t) {
                    var s;
                    return (s = Vt(t)) != null ? s : Ri(t, "media-controller")
                }

                function Vt(t) {
                    var s;
                    let {
                        MEDIA_CONTROLLER: d
                    } = ht, g = t.getAttribute(d);
                    if (g) return (s = _n(t)) == null ? void 0 : s.getElementById(g)
                }
                var Si = (t, s, d = ".value") => {
                        let g = t.querySelector(d);
                        g && (g.textContent = s)
                    },
                    Qi = (t, s) => {
                        let d = `slot[name="${s}"]`,
                            g = t.shadowRoot.querySelector(d);
                        return g ? g.children : []
                    },
                    Ma = (t, s) => Qi(t, s)[0],
                    Ti = (t, s) => !t || !s ? !1 : t != null && t.contains(s) ? !0 : Ti(t, s.getRootNode().host),
                    Ri = (t, s) => t ? t.closest(s) || Ri(t.getRootNode().host, s) : null;

                function Lt(t = document) {
                    var s;
                    let d = t == null ? void 0 : t.activeElement;
                    return d ? (s = Lt(d.shadowRoot)) != null ? s : d : null
                }

                function _n(t) {
                    var s;
                    let d = (s = t == null ? void 0 : t.getRootNode) == null ? void 0 : s.call(t);
                    return d instanceof ShadowRoot || d instanceof Document ? d : null
                }

                function Qa(t, {
                    depth: s = 3,
                    checkOpacity: d = !0,
                    checkVisibilityCSS: g = !0
                } = {}) {
                    if (t.checkVisibility) return t.checkVisibility({
                        checkOpacity: d,
                        checkVisibilityCSS: g
                    });
                    let w = t;
                    for (; w && s > 0;) {
                        let N = getComputedStyle(w);
                        if (d && N.opacity === "0" || g && N.visibility === "hidden" || N.display === "none") return !1;
                        w = w.parentElement, s--
                    }
                    return !0
                }

                function Hn(t, s, d, g) {
                    let w = g.x - d.x,
                        N = g.y - d.y,
                        X = w * w + N * N;
                    if (X === 0) return 0;
                    let ue = ((t - d.x) * w + (s - d.y) * N) / X;
                    return Math.max(0, Math.min(1, ue))
                }

                function Pi(t, s) {
                    return ln(t, g => g === s) || Ja(t, s)
                }

                function ln(t, s) {
                    var d, g;
                    let w;
                    for (w of (d = t.querySelectorAll("style:not([media])")) != null ? d : []) {
                        let N;
                        try {
                            N = (g = w.sheet) == null ? void 0 : g.cssRules
                        } catch (X) {
                            continue
                        }
                        for (let X of N != null ? N : [])
                            if (s(X.selectorText)) return X
                    }
                }

                function Ja(t, s) {
                    var d, g;
                    let w = (d = t.querySelectorAll("style:not([media])")) != null ? d : [],
                        N = w == null ? void 0 : w[w.length - 1];
                    return N != null && N.sheet ? (N == null || N.sheet.insertRule(`${s}{}`, N.sheet.cssRules.length), (g = N.sheet.cssRules) == null ? void 0 : g[N.sheet.cssRules.length - 1]) : (console.warn("Media Chrome: No style sheet found on style tag of", t), {
                        style: {
                            setProperty: () => {},
                            removeProperty: () => "",
                            getPropertyValue: () => ""
                        }
                    })
                }

                function Qr(t, s, d = Number.NaN) {
                    let g = t.getAttribute(s);
                    return g != null ? +g : d
                }

                function Nr(t, s, d) {
                    let g = +d;
                    if (d == null || Number.isNaN(g)) {
                        t.hasAttribute(s) && t.removeAttribute(s);
                        return
                    }
                    Qr(t, s, void 0) !== g && t.setAttribute(s, `${g}`)
                }

                function xr(t, s) {
                    return t.hasAttribute(s)
                }

                function Vr(t, s, d) {
                    if (d == null) {
                        t.hasAttribute(s) && t.removeAttribute(s);
                        return
                    }
                    xr(t, s) != d && t.toggleAttribute(s, d)
                }

                function li(t, s, d = null) {
                    var g;
                    return (g = t.getAttribute(s)) != null ? g : d
                }

                function mi(t, s, d) {
                    if (d == null) {
                        t.hasAttribute(s) && t.removeAttribute(s);
                        return
                    }
                    let g = `${d}`;
                    li(t, s, void 0) !== g && t.setAttribute(s, g)
                }
                var Vn = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    vi = (t, s, d) => (Vn(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    la = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Ia = (t, s, d, g) => (Vn(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Oi, Ki = Ut.createElement("template");
                Ki.innerHTML = `
<style>
  :host {
    display: var(--media-control-display, var(--media-gesture-receiver-display, inline-block));
    box-sizing: border-box;
  }
</style>
`;
                var un = class extends oe.HTMLElement {
                    constructor(t = {}) {
                        if (super(), la(this, Oi, void 0), !this.shadowRoot) {
                            let s = this.attachShadow({
                                    mode: "open"
                                }),
                                d = Ki.content.cloneNode(!0);
                            this.nativeEl = d;
                            let g = t.slotTemplate;
                            g || (g = Ut.createElement("template"), g.innerHTML = `<slot>${t.defaultContent||""}</slot>`), this.nativeEl.appendChild(g.content.cloneNode(!0)), s.appendChild(d)
                        }
                    }
                    static get observedAttributes() {
                        return [ht.MEDIA_CONTROLLER, W.MEDIA_PAUSED]
                    }
                    attributeChangedCallback(t, s, d) {
                        var g, w, N, X, ue;
                        t === ht.MEDIA_CONTROLLER && (s && ((w = (g = vi(this, Oi)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), Ia(this, Oi, null)), d && this.isConnected && (Ia(this, Oi, (N = this.getRootNode()) == null ? void 0 : N.getElementById(d)), (ue = (X = vi(this, Oi)) == null ? void 0 : X.associateElement) == null || ue.call(X, this)))
                    }
                    connectedCallback() {
                        var t, s, d, g;
                        this.tabIndex = -1, this.setAttribute("aria-hidden", "true"), Ia(this, Oi, Ha(this)), this.getAttribute(ht.MEDIA_CONTROLLER) && ((s = (t = vi(this, Oi)) == null ? void 0 : t.associateElement) == null || s.call(t, this)), (d = vi(this, Oi)) == null || d.addEventListener("pointerdown", this), (g = vi(this, Oi)) == null || g.addEventListener("click", this)
                    }
                    disconnectedCallback() {
                        var t, s, d, g;
                        this.getAttribute(ht.MEDIA_CONTROLLER) && ((s = (t = vi(this, Oi)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this)), (d = vi(this, Oi)) == null || d.removeEventListener("pointerdown", this), (g = vi(this, Oi)) == null || g.removeEventListener("click", this), Ia(this, Oi, null)
                    }
                    handleEvent(t) {
                        var s;
                        let d = (s = t.composedPath()) == null ? void 0 : s[0];
                        if (["video", "media-controller"].includes(d == null ? void 0 : d.localName)) {
                            if (t.type === "pointerdown") this._pointerType = t.pointerType;
                            else if (t.type === "click") {
                                let {
                                    clientX: g,
                                    clientY: w
                                } = t, {
                                    left: N,
                                    top: X,
                                    width: ue,
                                    height: $e
                                } = this.getBoundingClientRect(), et = g - N, ur = w - X;
                                if (et < 0 || ur < 0 || et > ue || ur > $e || ue === 0 && $e === 0) return;
                                let {
                                    pointerType: gr = this._pointerType
                                } = t;
                                if (this._pointerType = void 0, gr === oa.TOUCH) {
                                    this.handleTap(t);
                                    return
                                } else if (gr === oa.MOUSE) {
                                    this.handleMouseClick(t);
                                    return
                                }
                            }
                        }
                    }
                    get mediaPaused() {
                        return xr(this, W.MEDIA_PAUSED)
                    }
                    set mediaPaused(t) {
                        Vr(this, W.MEDIA_PAUSED, t)
                    }
                    handleTap(t) {}
                    handleMouseClick(t) {
                        let s = this.mediaPaused ? Fe.MEDIA_PLAY_REQUEST : Fe.MEDIA_PAUSE_REQUEST;
                        this.dispatchEvent(new oe.CustomEvent(s, {
                            composed: !0,
                            bubbles: !0
                        }))
                    }
                };
                Oi = new WeakMap;

                function Ha(t) {
                    var s;
                    let d = t.getAttribute(ht.MEDIA_CONTROLLER);
                    return d ? (s = t.getRootNode()) == null ? void 0 : s.getElementById(d) : Ri(t, "media-controller")
                }
                oe.customElements.get("media-gesture-receiver") || oe.customElements.define("media-gesture-receiver", un);
                var Sn = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Yi = (t, s, d) => (Sn(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    xi = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Li = (t, s, d, g) => (Sn(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    _a = (t, s, d) => (Sn(t, s, "access private method"), d),
                    gn, Ji, Ni, ea, ma, Sa, Ca, en, Pr, qr, va, Kr, ta, ra, Vi, Da, tn, ia, Pa, or = {
                        AUDIO: "audio",
                        AUTOHIDE: "autohide",
                        BREAKPOINTS: "breakpoints",
                        GESTURES_DISABLED: "gesturesdisabled",
                        KEYBOARD_CONTROL: "keyboardcontrol",
                        NO_AUTOHIDE: "noautohide",
                        USER_INACTIVE: "userinactive",
                        AUTOHIDE_OVER_CONTROLS: "autohideovercontrols"
                    },
                    qa = Ut.createElement("template");
                qa.innerHTML = `
  <style>
    
    :host([${W.MEDIA_IS_FULLSCREEN}]) ::slotted([slot=media]) {
      outline: none;
    }

    :host {
      box-sizing: border-box;
      position: relative;
      display: inline-block;
      line-height: 0;
      background-color: var(--media-background-color, #000);
    }

    :host(:not([${or.AUDIO}])) [part~=layer]:not([part~=media-layer]) {
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      display: flex;
      flex-flow: column nowrap;
      align-items: start;
      pointer-events: none;
      background: none;
    }

    slot[name=media] {
      display: var(--media-slot-display, contents);
    }

    
    :host([${or.AUDIO}]) slot[name=media] {
      display: var(--media-slot-display, none);
    }

    
    :host([${or.AUDIO}]) [part~=layer][part~=gesture-layer] {
      height: 0;
      display: block;
    }

    
    :host(:not([${or.AUDIO}])[${or.GESTURES_DISABLED}]) ::slotted([slot=gestures-chrome]),
    :host(:not([${or.AUDIO}])[${or.GESTURES_DISABLED}]) media-gesture-receiver[slot=gestures-chrome] {
      display: none;
    }

    
    ::slotted(:not([slot=media]):not([slot=poster]):not(media-loading-indicator):not([role=dialog]):not([hidden])) {
      pointer-events: auto;
    }

    :host(:not([${or.AUDIO}])) *[part~=layer][part~=centered-layer] {
      align-items: center;
      justify-content: center;
    }

    :host(:not([${or.AUDIO}])) ::slotted(media-gesture-receiver[slot=gestures-chrome]),
    :host(:not([${or.AUDIO}])) media-gesture-receiver[slot=gestures-chrome] {
      align-self: stretch;
      flex-grow: 1;
    }

    slot[name=middle-chrome] {
      display: inline;
      flex-grow: 1;
      pointer-events: none;
      background: none;
    }

    
    ::slotted([slot=media]),
    ::slotted([slot=poster]) {
      width: 100%;
      height: 100%;
    }

    
    :host(:not([${or.AUDIO}])) .spacer {
      flex-grow: 1;
    }

    
    :host(:-webkit-full-screen) {
      
      width: 100% !important;
      height: 100% !important;
    }

    
    ::slotted(:not([slot=media]):not([slot=poster]):not([${or.NO_AUTOHIDE}]):not([hidden]):not([role=dialog])) {
      opacity: 1;
      transition: var(--media-control-transition-in, opacity 0.25s);
    }

    
    :host([${or.USER_INACTIVE}]:not([${W.MEDIA_PAUSED}]):not([${W.MEDIA_IS_AIRPLAYING}]):not([${W.MEDIA_IS_CASTING}]):not([${or.AUDIO}])) ::slotted(:not([slot=media]):not([slot=poster]):not([${or.NO_AUTOHIDE}]):not([role=dialog])) {
      opacity: 0;
      transition: var(--media-control-transition-out, opacity 1s);
    }

    :host([${or.USER_INACTIVE}]:not([${or.NO_AUTOHIDE}]):not([${W.MEDIA_PAUSED}]):not([${W.MEDIA_IS_CASTING}]):not([${or.AUDIO}])) ::slotted([slot=media]) {
      cursor: none;
    }

    :host([${or.USER_INACTIVE}][${or.AUTOHIDE_OVER_CONTROLS}]:not([${or.NO_AUTOHIDE}]):not([${W.MEDIA_PAUSED}]):not([${W.MEDIA_IS_CASTING}]):not([${or.AUDIO}])) * {
     --media-cursor: none;
     cursor: none;
    }


    ::slotted(media-control-bar)  {
      align-self: stretch;
    }

    
    :host(:not([${or.AUDIO}])[${W.MEDIA_HAS_PLAYED}]) slot[name=poster] {
      display: none;
    }

    ::slotted([role=dialog]) {
      width: 100%;
      height: 100%;
      align-self: center;
    }

    ::slotted([role=menu]) {
      align-self: end;
    }
  </style>

  <slot name="media" part="layer media-layer"></slot>
  <slot name="poster" part="layer poster-layer"></slot>
  <slot name="gestures-chrome" part="layer gesture-layer">
    <media-gesture-receiver slot="gestures-chrome"></media-gesture-receiver>
  </slot>
  <span part="layer vertical-layer">
    <slot name="top-chrome" part="top chrome"></slot>
    <slot name="middle-chrome" part="middle chrome"></slot>
    <slot name="centered-chrome" part="layer centered-layer center centered chrome"></slot>
    
    <slot part="bottom chrome"></slot>
  </span>
  <slot name="dialog" part="layer dialog-layer"></slot>
`;
                var En = Object.values(W),
                    pa = "sm:384 md:576 lg:768 xl:960";

                function Va(t) {
                    kn(t.target, t.contentRect.width)
                }

                function kn(t, s) {
                    var d;
                    if (!t.isConnected) return;
                    let g = (d = t.getAttribute(or.BREAKPOINTS)) != null ? d : pa,
                        w = Zn(g),
                        N = lt(w, s),
                        X = !1;
                    if (Object.keys(w).forEach(ue => {
                            if (N.includes(ue)) {
                                t.hasAttribute(`breakpoint${ue}`) || (t.setAttribute(`breakpoint${ue}`, ""), X = !0);
                                return
                            }
                            t.hasAttribute(`breakpoint${ue}`) && (t.removeAttribute(`breakpoint${ue}`), X = !0)
                        }), X) {
                        let ue = new CustomEvent(br.BREAKPOINTS_CHANGE, {
                            detail: N
                        });
                        t.dispatchEvent(ue)
                    }
                    t.breakpointsComputed || (t.breakpointsComputed = !0, t.dispatchEvent(new CustomEvent(br.BREAKPOINTS_COMPUTED, {
                        bubbles: !0,
                        composed: !0
                    })))
                }

                function Zn(t) {
                    let s = t.split(/\s+/);
                    return Object.fromEntries(s.map(d => d.split(":")))
                }

                function lt(t, s) {
                    return Object.keys(t).filter(d => s >= parseInt(t[d]))
                }
                var Oa = class extends oe.HTMLElement {
                    constructor() {
                        super(), xi(this, Sa), xi(this, qr), xi(this, Kr), xi(this, ra), xi(this, Da), xi(this, ia), xi(this, gn, 0), xi(this, Ji, null), xi(this, Ni, null), xi(this, ea, void 0), this.breakpointsComputed = !1, xi(this, ma, new MutationObserver(_a(this, Sa, Ca).bind(this))), xi(this, en, !1), xi(this, Pr, s => {
                            Yi(this, en) || (setTimeout(() => {
                                Va(s), Li(this, en, !1)
                            }, 0), Li(this, en, !0))
                        }), this.shadowRoot || (this.attachShadow({
                            mode: "open"
                        }), this.shadowRoot.appendChild(qa.content.cloneNode(!0)));
                        let t = this.querySelector(":scope > slot[slot=media]");
                        t && t.addEventListener("slotchange", () => {
                            if (!t.assignedElements({
                                    flatten: !0
                                }).length) {
                                Yi(this, Ji) && this.mediaUnsetCallback(Yi(this, Ji));
                                return
                            }
                            this.handleMediaUpdated(this.media)
                        })
                    }
                    static get observedAttributes() {
                        return [or.AUTOHIDE, or.GESTURES_DISABLED].concat(En).filter(t => ![W.MEDIA_RENDITION_LIST, W.MEDIA_AUDIO_TRACK_LIST, W.MEDIA_CHAPTERS_CUES, W.MEDIA_WIDTH, W.MEDIA_HEIGHT, W.MEDIA_ERROR, W.MEDIA_ERROR_MESSAGE].includes(t))
                    }
                    attributeChangedCallback(t, s, d) {
                        t.toLowerCase() == or.AUTOHIDE && (this.autohide = d)
                    }
                    get media() {
                        let t = this.querySelector(":scope > [slot=media]");
                        return (t == null ? void 0 : t.nodeName) == "SLOT" && (t = t.assignedElements({
                            flatten: !0
                        })[0]), t
                    }
                    handleMediaUpdated(t) {
                        return Q(this, null, function*() {
                            t && (Li(this, Ji, t), t.localName.includes("-") && (yield oe.customElements.whenDefined(t.localName)), this.mediaSetCallback(t))
                        })
                    }
                    connectedCallback() {
                        var t;
                        Yi(this, ma).observe(this, {
                            childList: !0,
                            subtree: !0
                        }), Et(this, Yi(this, Pr));
                        let s = this.getAttribute(or.AUDIO) != null ? vt("audio player") : vt("video player");
                        this.setAttribute("role", "region"), this.setAttribute("aria-label", s), this.handleMediaUpdated(this.media), this.setAttribute(or.USER_INACTIVE, ""), kn(this, this.getBoundingClientRect().width), this.addEventListener("pointerdown", this), this.addEventListener("pointermove", this), this.addEventListener("pointerup", this), this.addEventListener("mouseleave", this), this.addEventListener("keyup", this), (t = oe.window) == null || t.addEventListener("mouseup", this)
                    }
                    disconnectedCallback() {
                        var t;
                        Yi(this, ma).disconnect(), vr(this, Yi(this, Pr)), this.media && this.mediaUnsetCallback(this.media), (t = oe.window) == null || t.removeEventListener("mouseup", this)
                    }
                    mediaSetCallback(t) {}
                    mediaUnsetCallback(t) {
                        Li(this, Ji, null)
                    }
                    handleEvent(t) {
                        switch (t.type) {
                            case "pointerdown":
                                Li(this, gn, t.timeStamp);
                                break;
                            case "pointermove":
                                _a(this, qr, va).call(this, t);
                                break;
                            case "pointerup":
                                _a(this, Kr, ta).call(this, t);
                                break;
                            case "mouseleave":
                                _a(this, ra, Vi).call(this);
                                break;
                            case "mouseup":
                                this.removeAttribute(or.KEYBOARD_CONTROL);
                                break;
                            case "keyup":
                                _a(this, ia, Pa).call(this), this.setAttribute(or.KEYBOARD_CONTROL, "");
                                break
                        }
                    }
                    set autohide(t) {
                        let s = Number(t);
                        Li(this, ea, isNaN(s) ? 0 : s)
                    }
                    get autohide() {
                        return (Yi(this, ea) === void 0 ? 2 : Yi(this, ea)).toString()
                    }
                    get breakpoints() {
                        return li(this, or.BREAKPOINTS)
                    }
                    set breakpoints(t) {
                        mi(this, or.BREAKPOINTS, t)
                    }
                    get audio() {
                        return xr(this, or.AUDIO)
                    }
                    set audio(t) {
                        Vr(this, or.AUDIO, t)
                    }
                    get gesturesDisabled() {
                        return xr(this, or.GESTURES_DISABLED)
                    }
                    set gesturesDisabled(t) {
                        Vr(this, or.GESTURES_DISABLED, t)
                    }
                    get keyboardControl() {
                        return xr(this, or.KEYBOARD_CONTROL)
                    }
                    set keyboardControl(t) {
                        Vr(this, or.KEYBOARD_CONTROL, t)
                    }
                    get noAutohide() {
                        return xr(this, or.NO_AUTOHIDE)
                    }
                    set noAutohide(t) {
                        Vr(this, or.NO_AUTOHIDE, t)
                    }
                    get autohideOverControls() {
                        return xr(this, or.AUTOHIDE_OVER_CONTROLS)
                    }
                    set autohideOverControls(t) {
                        Vr(this, or.AUTOHIDE_OVER_CONTROLS, t)
                    }
                    get userInteractive() {
                        return xr(this, or.USER_INACTIVE)
                    }
                    set userInteractive(t) {
                        Vr(this, or.USER_INACTIVE, t)
                    }
                };
                gn = new WeakMap, Ji = new WeakMap, Ni = new WeakMap, ea = new WeakMap, ma = new WeakMap, Sa = new WeakSet, Ca = function(t) {
                    let s = this.media;
                    for (let d of t) {
                        if (d.type !== "childList") continue;
                        let g = d.removedNodes;
                        for (let w of g) {
                            if (w.slot != "media" || d.target != this) continue;
                            let N = d.previousSibling && d.previousSibling.previousElementSibling;
                            if (!N || !s) this.mediaUnsetCallback(w);
                            else {
                                let X = N.slot !== "media";
                                for (;
                                    (N = N.previousSibling) !== null;) N.slot == "media" && (X = !1);
                                X && this.mediaUnsetCallback(w)
                            }
                        }
                        if (s)
                            for (let w of d.addedNodes) w === s && this.handleMediaUpdated(s)
                    }
                }, en = new WeakMap, Pr = new WeakMap, qr = new WeakSet, va = function(t) {
                    if (t.pointerType !== "mouse" && t.timeStamp - Yi(this, gn) < 250) return;
                    _a(this, Da, tn).call(this), clearTimeout(Yi(this, Ni));
                    let s = this.hasAttribute(or.AUTOHIDE_OVER_CONTROLS);
                    ([this, this.media].includes(t.target) || s) && _a(this, ia, Pa).call(this)
                }, Kr = new WeakSet, ta = function(t) {
                    if (t.pointerType === "touch") {
                        let s = !this.hasAttribute(or.USER_INACTIVE);
                        [this, this.media].includes(t.target) && s ? _a(this, ra, Vi).call(this) : _a(this, ia, Pa).call(this)
                    } else t.composedPath().some(s => ["media-play-button", "media-fullscreen-button"].includes(s == null ? void 0 : s.localName)) && _a(this, ia, Pa).call(this)
                }, ra = new WeakSet, Vi = function() {
                    if (Yi(this, ea) < 0 || this.hasAttribute(or.USER_INACTIVE)) return;
                    this.setAttribute(or.USER_INACTIVE, "");
                    let t = new oe.CustomEvent(br.USER_INACTIVE_CHANGE, {
                        composed: !0,
                        bubbles: !0,
                        detail: !0
                    });
                    this.dispatchEvent(t)
                }, Da = new WeakSet, tn = function() {
                    if (!this.hasAttribute(or.USER_INACTIVE)) return;
                    this.removeAttribute(or.USER_INACTIVE);
                    let t = new oe.CustomEvent(br.USER_INACTIVE_CHANGE, {
                        composed: !0,
                        bubbles: !0,
                        detail: !1
                    });
                    this.dispatchEvent(t)
                }, ia = new WeakSet, Pa = function() {
                    _a(this, Da, tn).call(this), clearTimeout(Yi(this, Ni));
                    let t = parseInt(this.autohide);
                    t < 0 || Li(this, Ni, setTimeout(() => {
                        _a(this, ra, Vi).call(this)
                    }, t * 1e3))
                }, oe.customElements.get("media-container") || oe.customElements.define("media-container", Oa);
                var rn = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    di = (t, s, d) => (rn(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    D = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    C = (t, s, d, g) => (rn(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    H, re, se, Ce, He, Qe, ke = class {
                        constructor(t, s, {
                            defaultValue: d
                        } = {
                            defaultValue: void 0
                        }) {
                            D(this, He), D(this, H, void 0), D(this, re, void 0), D(this, se, void 0), D(this, Ce, new Set), C(this, H, t), C(this, re, s), C(this, se, new Set(d))
                        }[Symbol.iterator]() {
                            return di(this, He, Qe).values()
                        }
                        get length() {
                            return di(this, He, Qe).size
                        }
                        get value() {
                            var t;
                            return (t = [...di(this, He, Qe)].join(" ")) != null ? t : ""
                        }
                        set value(t) {
                            var s;
                            t !== this.value && (C(this, Ce, new Set), this.add(...(s = t == null ? void 0 : t.split(" ")) != null ? s : []))
                        }
                        toString() {
                            return this.value
                        }
                        item(t) {
                            return [...di(this, He, Qe)][t]
                        }
                        values() {
                            return di(this, He, Qe).values()
                        }
                        forEach(t, s) {
                            di(this, He, Qe).forEach(t, s)
                        }
                        add(...t) {
                            var s, d;
                            t.forEach(g => di(this, Ce).add(g)), !(this.value === "" && !((s = di(this, H)) != null && s.hasAttribute(`${di(this,re)}`))) && ((d = di(this, H)) == null || d.setAttribute(`${di(this,re)}`, `${this.value}`))
                        }
                        remove(...t) {
                            var s;
                            t.forEach(d => di(this, Ce).delete(d)), (s = di(this, H)) == null || s.setAttribute(`${di(this,re)}`, `${this.value}`)
                        }
                        contains(t) {
                            return di(this, He, Qe).has(t)
                        }
                        toggle(t, s) {
                            return typeof s != "undefined" ? s ? (this.add(t), !0) : (this.remove(t), !1) : this.contains(t) ? (this.remove(t), !1) : (this.add(t), !0)
                        }
                        replace(t, s) {
                            return this.remove(t), this.add(s), t === s
                        }
                    };
                H = new WeakMap, re = new WeakMap, se = new WeakMap, Ce = new WeakMap, He = new WeakSet, Qe = function() {
                    return di(this, Ce).size ? di(this, Ce) : di(this, se)
                };
                var We = (t = "") => t.split(/\s+/),
                    Xe = (t = "") => {
                        let [s, d, g] = t.split(":"), w = g ? decodeURIComponent(g) : void 0;
                        return {
                            kind: s === "cc" ? si.CAPTIONS : si.SUBTITLES,
                            language: d,
                            label: w
                        }
                    },
                    Ot = (t = "", s = {}) => We(t).map(d => {
                        let g = Xe(d);
                        return le(le({}, s), g)
                    }),
                    qt = t => t ? Array.isArray(t) ? t.map(s => typeof s == "string" ? Xe(s) : s) : typeof t == "string" ? Ot(t) : [t] : [],
                    fr = ({
                        kind: t,
                        label: s,
                        language: d
                    } = {
                        kind: "subtitles"
                    }) => s ? `${t==="captions"?"cc":"sb"}:${d}:${encodeURIComponent(s)}` : d,
                    rr = (t = []) => Array.prototype.map.call(t, fr).join(" "),
                    y = (t, s) => d => d[t] === s,
                    F = t => {
                        let s = Object.entries(t).map(([d, g]) => y(d, g));
                        return d => s.every(g => g(d))
                    },
                    z = (t, s = [], d = []) => {
                        let g = qt(d).map(F),
                            w = N => g.some(X => X(N));
                        Array.from(s).filter(w).forEach(N => {
                            N.mode = t
                        })
                    },
                    be = (t, s = () => !0) => {
                        if (!(t != null && t.textTracks)) return [];
                        let d = typeof s == "function" ? s : F(s);
                        return Array.from(t.textTracks).filter(d)
                    },
                    pt = t => {
                        var s;
                        return !!((s = t.mediaSubtitlesShowing) != null && s.length) || t.hasAttribute(W.MEDIA_SUBTITLES_SHOWING)
                    },
                    Gt = t => {
                        var s;
                        let {
                            media: d,
                            fullscreenElement: g
                        } = t, w = g && "requestFullscreen" in g ? "requestFullscreen" : g && "webkitRequestFullScreen" in g ? "webkitRequestFullScreen" : void 0;
                        if (w) {
                            let N = (s = g[w]) == null ? void 0 : s.call(g);
                            if (N instanceof Promise) return N.catch(() => {})
                        } else d != null && d.webkitEnterFullscreen ? d.webkitEnterFullscreen() : d != null && d.requestFullscreen && d.requestFullscreen()
                    },
                    pr = "exitFullscreen" in Ut ? "exitFullscreen" : "webkitExitFullscreen" in Ut ? "webkitExitFullscreen" : "webkitCancelFullScreen" in Ut ? "webkitCancelFullScreen" : void 0,
                    nr = t => {
                        var s;
                        let {
                            documentElement: d
                        } = t;
                        if (pr) {
                            let g = (s = d == null ? void 0 : d[pr]) == null ? void 0 : s.call(d);
                            if (g instanceof Promise) return g.catch(() => {})
                        }
                    },
                    Zt = "fullscreenElement" in Ut ? "fullscreenElement" : "webkitFullscreenElement" in Ut ? "webkitFullscreenElement" : void 0,
                    wi = t => {
                        let {
                            documentElement: s,
                            media: d
                        } = t, g = s == null ? void 0 : s[Zt];
                        return !g && "webkitDisplayingFullscreen" in d && "webkitPresentationMode" in d && d.webkitDisplayingFullscreen && d.webkitPresentationMode === La.FULLSCREEN ? d : g
                    },
                    qi = t => {
                        var s;
                        let {
                            media: d,
                            documentElement: g,
                            fullscreenElement: w = d
                        } = t;
                        if (!d || !g) return !1;
                        let N = wi(t);
                        if (!N) return !1;
                        if (N === w || N === d) return !0;
                        if (N.localName.includes("-")) {
                            let X = N.shadowRoot;
                            if (!(Zt in X)) return Ti(N, w);
                            for (; X != null && X[Zt];) {
                                if (X[Zt] === w) return !0;
                                X = (s = X[Zt]) == null ? void 0 : s.shadowRoot
                            }
                        }
                        return !1
                    },
                    _t = "fullscreenEnabled" in Ut ? "fullscreenEnabled" : "webkitFullscreenEnabled" in Ut ? "webkitFullscreenEnabled" : void 0,
                    Qt = t => {
                        let {
                            documentElement: s,
                            media: d
                        } = t;
                        return !!(s != null && s[_t]) || d && "webkitSupportsFullscreen" in d
                    },
                    yr, gi = () => {
                        var t, s;
                        return yr || (yr = (s = (t = Ut) == null ? void 0 : t.createElement) == null ? void 0 : s.call(t, "video"), yr)
                    },
                    $i = (...t) => Q(this, [...t], function*(s = gi()) {
                        if (!s) return !1;
                        let d = s.volume;
                        s.volume = d / 2 + .1;
                        let g = new AbortController,
                            w = yield Promise.race([dn(s, g.signal), ua(s, d)]);
                        return g.abort(), w
                    }),
                    dn = (t, s) => new Promise(d => {
                        t.addEventListener("volumechange", () => d(!0), {
                            signal: s
                        })
                    }),
                    ua = (t, s) => Q(this, null, function*() {
                        for (let d = 0; d < 10; d++) {
                            if (t.volume === s) return !1;
                            yield De(10)
                        }
                        return t.volume !== s
                    }),
                    da = /.*Version\/.*Safari\/.*/.test(oe.navigator.userAgent),
                    ga = (t = gi()) => oe.matchMedia("(display-mode: standalone)").matches && da ? !1 : typeof(t == null ? void 0 : t.requestPictureInPicture) == "function",
                    ji = (t = gi()) => Qt({
                        documentElement: Ut,
                        media: t
                    }),
                    ys = ji(),
                    Jt = ga(),
                    Dr = !!oe.WebKitPlaybackTargetAvailabilityEvent,
                    Ai = !!oe.chrome,
                    $r = t => be(t.media, s => [si.SUBTITLES, si.CAPTIONS].includes(s.kind)).sort((s, d) => s.kind >= d.kind ? 1 : -1),
                    _i = t => be(t.media, s => s.mode === ti.SHOWING && [si.SUBTITLES, si.CAPTIONS].includes(s.kind)),
                    ka = (t, s) => {
                        let d = $r(t),
                            g = _i(t),
                            w = !!g.length;
                        if (d.length) {
                            if (s === !1 || w && s !== !0) z(ti.DISABLED, d, g);
                            else if (s === !0 || !w && s !== !1) {
                                let N = d[0],
                                    {
                                        options: X
                                    } = t;
                                if (!(X != null && X.noSubtitlesLangPref)) {
                                    let ur = globalThis.localStorage.getItem("media-chrome-pref-subtitles-lang"),
                                        gr = ur ? [ur, ...globalThis.navigator.languages] : globalThis.navigator.languages,
                                        Sr = d.filter(_r => gr.some(Ei => _r.language.toLowerCase().startsWith(Ei.split("-")[0]))).sort((_r, Ei) => {
                                            let fi = gr.findIndex(Ba => _r.language.toLowerCase().startsWith(Ba.split("-")[0])),
                                                bi = gr.findIndex(Ba => Ei.language.toLowerCase().startsWith(Ba.split("-")[0]));
                                            return fi - bi
                                        });
                                    Sr[0] && (N = Sr[0])
                                }
                                let {
                                    language: ue,
                                    label: $e,
                                    kind: et
                                } = N;
                                z(ti.DISABLED, d, g), z(ti.SHOWING, d, [{
                                    language: ue,
                                    label: $e,
                                    kind: et
                                }])
                            }
                        }
                    },
                    $a = (t, s) => t === s ? !0 : t == null || s == null || typeof t != typeof s ? !1 : typeof t == "number" && Number.isNaN(t) && Number.isNaN(s) ? !0 : typeof t != "object" ? !1 : Array.isArray(t) ? wn(t, s) : Object.entries(t).every(([d, g]) => d in s && $a(g, s[d])),
                    wn = (t, s) => {
                        let d = Array.isArray(t),
                            g = Array.isArray(s);
                        return d !== g ? !1 : d || g ? t.length !== s.length ? !1 : t.every((w, N) => $a(w, s[N])) : !0
                    },
                    Eo = Object.values(Cr),
                    ci, ja = $i().then(t => (ci = t, ci)),
                    Wn = (...t) => Q(this, null, function*() {
                        yield Promise.all(t.filter(s => s).map(s => Q(this, null, function*() {
                            if (!("localName" in s && s instanceof oe.HTMLElement)) return;
                            let d = s.localName;
                            if (!d.includes("-")) return;
                            let g = oe.customElements.get(d);
                            g && s instanceof g || (yield oe.customElements.whenDefined(d), oe.customElements.upgrade(s))
                        })))
                    }),
                    Qn = {
                        mediaError: {
                            get(t, s) {
                                let {
                                    media: d
                                } = t;
                                if ((s == null ? void 0 : s.type) !== "playing") return d == null ? void 0 : d.error
                            },
                            mediaEvents: ["emptied", "error", "playing"]
                        },
                        mediaErrorCode: {
                            get(t, s) {
                                var d;
                                let {
                                    media: g
                                } = t;
                                if ((s == null ? void 0 : s.type) !== "playing") return (d = g == null ? void 0 : g.error) == null ? void 0 : d.code
                            },
                            mediaEvents: ["emptied", "error", "playing"]
                        },
                        mediaErrorMessage: {
                            get(t, s) {
                                var d, g;
                                let {
                                    media: w
                                } = t;
                                if ((s == null ? void 0 : s.type) !== "playing") return (g = (d = w == null ? void 0 : w.error) == null ? void 0 : d.message) != null ? g : ""
                            },
                            mediaEvents: ["emptied", "error", "playing"]
                        },
                        mediaWidth: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.videoWidth) != null ? s : 0
                            },
                            mediaEvents: ["resize"]
                        },
                        mediaHeight: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.videoHeight) != null ? s : 0
                            },
                            mediaEvents: ["resize"]
                        },
                        mediaPaused: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.paused) != null ? s : !0
                            },
                            set(t, s) {
                                var d;
                                let {
                                    media: g
                                } = s;
                                g && (t ? g.pause() : (d = g.play()) == null || d.catch(() => {}))
                            },
                            mediaEvents: ["play", "playing", "pause", "emptied"]
                        },
                        mediaHasPlayed: {
                            get(t, s) {
                                let {
                                    media: d
                                } = t;
                                return d ? s ? s.type === "playing" : !d.paused : !1
                            },
                            mediaEvents: ["playing", "emptied"]
                        },
                        mediaEnded: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.ended) != null ? s : !1
                            },
                            mediaEvents: ["seeked", "ended", "emptied"]
                        },
                        mediaPlaybackRate: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.playbackRate) != null ? s : 1
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                d && Number.isFinite(+t) && (d.playbackRate = +t)
                            },
                            mediaEvents: ["ratechange", "loadstart"]
                        },
                        mediaMuted: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.muted) != null ? s : !1
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                if (d) {
                                    try {
                                        oe.localStorage.setItem("media-chrome-pref-muted", t ? "true" : "false")
                                    } catch (g) {
                                        console.debug("Error setting muted pref", g)
                                    }
                                    d.muted = t
                                }
                            },
                            mediaEvents: ["volumechange"],
                            stateOwnersUpdateHandlers: [(t, s) => {
                                let {
                                    options: {
                                        noMutedPref: d
                                    }
                                } = s, {
                                    media: g
                                } = s;
                                if (!(!g || g.muted || d)) try {
                                    let w = oe.localStorage.getItem("media-chrome-pref-muted") === "true";
                                    Qn.mediaMuted.set(w, s), t(w)
                                } catch (w) {
                                    console.debug("Error getting muted pref", w)
                                }
                            }]
                        },
                        mediaVolume: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.volume) != null ? s : 1
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                if (d) {
                                    try {
                                        t == null ? oe.localStorage.removeItem("media-chrome-pref-volume") : oe.localStorage.setItem("media-chrome-pref-volume", t.toString())
                                    } catch (g) {
                                        console.debug("Error setting volume pref", g)
                                    }
                                    Number.isFinite(+t) && (d.volume = +t)
                                }
                            },
                            mediaEvents: ["volumechange"],
                            stateOwnersUpdateHandlers: [(t, s) => {
                                let {
                                    options: {
                                        noVolumePref: d
                                    }
                                } = s;
                                if (!d) try {
                                    let {
                                        media: g
                                    } = s;
                                    if (!g) return;
                                    let w = oe.localStorage.getItem("media-chrome-pref-volume");
                                    if (w == null) return;
                                    Qn.mediaVolume.set(+w, s), t(+w)
                                } catch (g) {
                                    console.debug("Error getting volume pref", g)
                                }
                            }]
                        },
                        mediaVolumeLevel: {
                            get(t) {
                                let {
                                    media: s
                                } = t;
                                return typeof(s == null ? void 0 : s.volume) == "undefined" ? "high" : s.muted || s.volume === 0 ? "off" : s.volume < .5 ? "low" : s.volume < .75 ? "medium" : "high"
                            },
                            mediaEvents: ["volumechange"]
                        },
                        mediaCurrentTime: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return (s = d == null ? void 0 : d.currentTime) != null ? s : 0
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                !d || !ne(t) || (d.currentTime = t)
                            },
                            mediaEvents: ["timeupdate", "loadedmetadata"]
                        },
                        mediaDuration: {
                            get(t) {
                                let {
                                    media: s,
                                    options: {
                                        defaultDuration: d
                                    } = {}
                                } = t;
                                return d && (!s || !s.duration || Number.isNaN(s.duration) || !Number.isFinite(s.duration)) ? d : Number.isFinite(s == null ? void 0 : s.duration) ? s.duration : Number.NaN
                            },
                            mediaEvents: ["durationchange", "loadedmetadata", "emptied"]
                        },
                        mediaLoading: {
                            get(t) {
                                let {
                                    media: s
                                } = t;
                                return (s == null ? void 0 : s.readyState) < 3
                            },
                            mediaEvents: ["waiting", "playing", "emptied"]
                        },
                        mediaSeekable: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                if (!((s = d == null ? void 0 : d.seekable) != null && s.length)) return;
                                let g = d.seekable.start(0),
                                    w = d.seekable.end(d.seekable.length - 1);
                                if (!(!g && !w)) return [Number(g.toFixed(3)), Number(w.toFixed(3))]
                            },
                            mediaEvents: ["loadedmetadata", "emptied", "progress", "seekablechange"]
                        },
                        mediaBuffered: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t, g = (s = d == null ? void 0 : d.buffered) != null ? s : [];
                                return Array.from(g).map((w, N) => [Number(g.start(N).toFixed(3)), Number(g.end(N).toFixed(3))])
                            },
                            mediaEvents: ["progress", "emptied"]
                        },
                        mediaStreamType: {
                            get(t) {
                                let {
                                    media: s,
                                    options: {
                                        defaultStreamType: d
                                    } = {}
                                } = t, g = [Cr.LIVE, Cr.ON_DEMAND].includes(d) ? d : void 0;
                                if (!s) return g;
                                let {
                                    streamType: w
                                } = s;
                                if (Eo.includes(w)) return w === Cr.UNKNOWN ? g : w;
                                let N = s.duration;
                                return N === 1 / 0 ? Cr.LIVE : Number.isFinite(N) ? Cr.ON_DEMAND : g
                            },
                            mediaEvents: ["emptied", "durationchange", "loadedmetadata", "streamtypechange"]
                        },
                        mediaTargetLiveWindow: {
                            get(t) {
                                let {
                                    media: s
                                } = t;
                                if (!s) return Number.NaN;
                                let {
                                    targetLiveWindow: d
                                } = s, g = Qn.mediaStreamType.get(t);
                                return (d == null || Number.isNaN(d)) && g === Cr.LIVE ? 0 : d
                            },
                            mediaEvents: ["emptied", "durationchange", "loadedmetadata", "streamtypechange", "targetlivewindowchange"]
                        },
                        mediaTimeIsLive: {
                            get(t) {
                                let {
                                    media: s,
                                    options: {
                                        liveEdgeOffset: d = 10
                                    } = {}
                                } = t;
                                if (!s) return !1;
                                if (typeof s.liveEdgeStart == "number") return Number.isNaN(s.liveEdgeStart) ? !1 : s.currentTime >= s.liveEdgeStart;
                                if (Qn.mediaStreamType.get(t) !== Cr.LIVE) return !1;
                                let g = s.seekable;
                                if (!g) return !0;
                                if (!g.length) return !1;
                                let w = g.end(g.length - 1) - d;
                                return s.currentTime >= w
                            },
                            mediaEvents: ["playing", "timeupdate", "progress", "waiting", "emptied"]
                        },
                        mediaSubtitlesList: {
                            get(t) {
                                return $r(t).map(({
                                    kind: s,
                                    label: d,
                                    language: g
                                }) => ({
                                    kind: s,
                                    label: d,
                                    language: g
                                }))
                            },
                            mediaEvents: ["loadstart"],
                            textTracksEvents: ["addtrack", "removetrack"]
                        },
                        mediaSubtitlesShowing: {
                            get(t) {
                                return _i(t).map(({
                                    kind: s,
                                    label: d,
                                    language: g
                                }) => ({
                                    kind: s,
                                    label: d,
                                    language: g
                                }))
                            },
                            mediaEvents: ["loadstart"],
                            textTracksEvents: ["addtrack", "removetrack", "change"],
                            stateOwnersUpdateHandlers: [(t, s) => {
                                var d, g;
                                let {
                                    media: w,
                                    options: N
                                } = s;
                                if (!w) return;
                                let X = ue => {
                                    var $e;
                                    !N.defaultSubtitles || ue && ![si.CAPTIONS, si.SUBTITLES].includes(($e = ue == null ? void 0 : ue.track) == null ? void 0 : $e.kind) || ka(s, !0)
                                };
                                return w.addEventListener("loadstart", X), (d = w.textTracks) == null || d.addEventListener("addtrack", X), (g = w.textTracks) == null || g.addEventListener("removetrack", X), () => {
                                    var ue, $e;
                                    w.removeEventListener("loadstart", X), (ue = w.textTracks) == null || ue.removeEventListener("addtrack", X), ($e = w.textTracks) == null || $e.removeEventListener("removetrack", X)
                                }
                            }]
                        },
                        mediaChaptersCues: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                if (!d) return [];
                                let [g] = be(d, {
                                    kind: si.CHAPTERS
                                });
                                return Array.from((s = g == null ? void 0 : g.cues) != null ? s : []).map(({
                                    text: w,
                                    startTime: N,
                                    endTime: X
                                }) => ({
                                    text: w,
                                    startTime: N,
                                    endTime: X
                                }))
                            },
                            mediaEvents: ["loadstart", "loadedmetadata"],
                            textTracksEvents: ["addtrack", "removetrack", "change"],
                            stateOwnersUpdateHandlers: [(t, s) => {
                                var d;
                                let {
                                    media: g
                                } = s;
                                if (!g) return;
                                let w = g.querySelector('track[kind="chapters"][default][src]'),
                                    N = (d = g.shadowRoot) == null ? void 0 : d.querySelector(':is(video,audio) > track[kind="chapters"][default][src]');
                                return w == null || w.addEventListener("load", t), N == null || N.addEventListener("load", t), () => {
                                    w == null || w.removeEventListener("load", t), N == null || N.removeEventListener("load", t)
                                }
                            }]
                        },
                        mediaIsPip: {
                            get(t) {
                                var s, d;
                                let {
                                    media: g,
                                    documentElement: w
                                } = t;
                                if (!g || !w || !w.pictureInPictureElement) return !1;
                                if (w.pictureInPictureElement === g) return !0;
                                if (w.pictureInPictureElement instanceof HTMLMediaElement) return (s = g.localName) != null && s.includes("-") ? Ti(g, w.pictureInPictureElement) : !1;
                                if (w.pictureInPictureElement.localName.includes("-")) {
                                    let N = w.pictureInPictureElement.shadowRoot;
                                    for (; N != null && N.pictureInPictureElement;) {
                                        if (N.pictureInPictureElement === g) return !0;
                                        N = (d = N.pictureInPictureElement) == null ? void 0 : d.shadowRoot
                                    }
                                }
                                return !1
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                if (d)
                                    if (t) {
                                        if (!Ut.pictureInPictureEnabled) {
                                            console.warn("MediaChrome: Picture-in-picture is not enabled");
                                            return
                                        }
                                        if (!d.requestPictureInPicture) {
                                            console.warn("MediaChrome: The current media does not support picture-in-picture");
                                            return
                                        }
                                        let g = () => {
                                            console.warn("MediaChrome: The media is not ready for picture-in-picture. It must have a readyState > 0.")
                                        };
                                        d.requestPictureInPicture().catch(w => {
                                            if (w.code === 11) {
                                                if (!d.src) {
                                                    console.warn("MediaChrome: The media is not ready for picture-in-picture. It must have a src set.");
                                                    return
                                                }
                                                if (d.readyState === 0 && d.preload === "none") {
                                                    let N = () => {
                                                            d.removeEventListener("loadedmetadata", X), d.preload = "none"
                                                        },
                                                        X = () => {
                                                            d.requestPictureInPicture().catch(g), N()
                                                        };
                                                    d.addEventListener("loadedmetadata", X), d.preload = "metadata", setTimeout(() => {
                                                        d.readyState === 0 && g(), N()
                                                    }, 1e3)
                                                } else throw w
                                            } else throw w
                                        })
                                    } else Ut.pictureInPictureElement && Ut.exitPictureInPicture()
                            },
                            mediaEvents: ["enterpictureinpicture", "leavepictureinpicture"]
                        },
                        mediaRenditionList: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return [...(s = d == null ? void 0 : d.videoRenditions) != null ? s : []].map(g => le({}, g))
                            },
                            mediaEvents: ["emptied", "loadstart"],
                            videoRenditionsEvents: ["addrendition", "removerendition"]
                        },
                        mediaRenditionSelected: {
                            get(t) {
                                var s, d, g;
                                let {
                                    media: w
                                } = t;
                                return (g = (d = w == null ? void 0 : w.videoRenditions) == null ? void 0 : d[(s = w.videoRenditions) == null ? void 0 : s.selectedIndex]) == null ? void 0 : g.id
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                if (!(d != null && d.videoRenditions)) {
                                    console.warn("MediaController: Rendition selection not supported by this media.");
                                    return
                                }
                                let g = t,
                                    w = Array.prototype.findIndex.call(d.videoRenditions, N => N.id == g);
                                d.videoRenditions.selectedIndex != w && (d.videoRenditions.selectedIndex = w)
                            },
                            mediaEvents: ["emptied"],
                            videoRenditionsEvents: ["addrendition", "removerendition", "change"]
                        },
                        mediaAudioTrackList: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return [...(s = d == null ? void 0 : d.audioTracks) != null ? s : []]
                            },
                            mediaEvents: ["emptied", "loadstart"],
                            audioTracksEvents: ["addtrack", "removetrack"]
                        },
                        mediaAudioTrackEnabled: {
                            get(t) {
                                var s, d;
                                let {
                                    media: g
                                } = t;
                                return (d = [...(s = g == null ? void 0 : g.audioTracks) != null ? s : []].find(w => w.enabled)) == null ? void 0 : d.id
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                if (!(d != null && d.audioTracks)) {
                                    console.warn("MediaChrome: Audio track selection not supported by this media.");
                                    return
                                }
                                let g = t;
                                for (let w of d.audioTracks) w.enabled = g == w.id
                            },
                            mediaEvents: ["emptied"],
                            audioTracksEvents: ["addtrack", "removetrack", "change"]
                        },
                        mediaIsFullscreen: {
                            get(t) {
                                return qi(t)
                            },
                            set(t, s) {
                                t ? Gt(s) : nr(s)
                            },
                            rootEvents: ["fullscreenchange", "webkitfullscreenchange"],
                            mediaEvents: ["webkitbeginfullscreen", "webkitendfullscreen", "webkitpresentationmodechanged"]
                        },
                        mediaIsCasting: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                return !(d != null && d.remote) || ((s = d.remote) == null ? void 0 : s.state) === "disconnected" ? !1 : !!d.remote.state
                            },
                            set(t, s) {
                                var d, g;
                                let {
                                    media: w
                                } = s;
                                if (w && !(t && ((d = w.remote) == null ? void 0 : d.state) !== "disconnected") && !(!t && ((g = w.remote) == null ? void 0 : g.state) !== "connected")) {
                                    if (typeof w.remote.prompt != "function") {
                                        console.warn("MediaChrome: Casting is not supported in this environment");
                                        return
                                    }
                                    w.remote.prompt().catch(() => {})
                                }
                            },
                            remoteEvents: ["connect", "connecting", "disconnect"]
                        },
                        mediaIsAirplaying: {
                            get() {
                                return !1
                            },
                            set(t, s) {
                                let {
                                    media: d
                                } = s;
                                if (d) {
                                    if (!(d.webkitShowPlaybackTargetPicker && oe.WebKitPlaybackTargetAvailabilityEvent)) {
                                        console.warn("MediaChrome: received a request to select AirPlay but AirPlay is not supported in this environment");
                                        return
                                    }
                                    d.webkitShowPlaybackTargetPicker()
                                }
                            },
                            mediaEvents: ["webkitcurrentplaybacktargetiswirelesschanged"]
                        },
                        mediaFullscreenUnavailable: {
                            get(t) {
                                let {
                                    media: s
                                } = t;
                                if (!ys || !ji(s)) return Wr.UNSUPPORTED
                            }
                        },
                        mediaPipUnavailable: {
                            get(t) {
                                let {
                                    media: s
                                } = t;
                                if (!Jt || !ga(s)) return Wr.UNSUPPORTED
                            }
                        },
                        mediaVolumeUnavailable: {
                            get(t) {
                                let {
                                    media: s
                                } = t;
                                if (ci === !1 || (s == null ? void 0 : s.volume) == null) return Wr.UNSUPPORTED
                            },
                            stateOwnersUpdateHandlers: [t => {
                                ci == null && ja.then(s => t(s ? void 0 : Wr.UNSUPPORTED))
                            }]
                        },
                        mediaCastUnavailable: {
                            get(t, {
                                availability: s = "not-available"
                            } = {}) {
                                var d;
                                let {
                                    media: g
                                } = t;
                                if (!Ai || !((d = g == null ? void 0 : g.remote) != null && d.state)) return Wr.UNSUPPORTED;
                                if (!(s == null || s === "available")) return Wr.UNAVAILABLE
                            },
                            stateOwnersUpdateHandlers: [(t, s) => {
                                var d;
                                let {
                                    media: g
                                } = s;
                                return g ? (g.disableRemotePlayback || g.hasAttribute("disableremoteplayback") || (d = g == null ? void 0 : g.remote) == null || d.watchAvailability(w => {
                                    t({
                                        availability: w ? "available" : "not-available"
                                    })
                                }).catch(w => {
                                    w.name === "NotSupportedError" ? t({
                                        availability: null
                                    }) : t({
                                        availability: "not-available"
                                    })
                                }), () => {
                                    var w;
                                    (w = g == null ? void 0 : g.remote) == null || w.cancelWatchAvailability().catch(() => {})
                                }) : void 0
                            }]
                        },
                        mediaAirplayUnavailable: {
                            get(t, s) {
                                if (!Dr) return Wr.UNSUPPORTED;
                                if ((s == null ? void 0 : s.availability) === "not-available") return Wr.UNAVAILABLE
                            },
                            mediaEvents: ["webkitplaybacktargetavailabilitychanged"],
                            stateOwnersUpdateHandlers: [(t, s) => {
                                var d;
                                let {
                                    media: g
                                } = s;
                                return g ? (g.disableRemotePlayback || g.hasAttribute("disableremoteplayback") || (d = g == null ? void 0 : g.remote) == null || d.watchAvailability(w => {
                                    t({
                                        availability: w ? "available" : "not-available"
                                    })
                                }).catch(w => {
                                    w.name === "NotSupportedError" ? t({
                                        availability: null
                                    }) : t({
                                        availability: "not-available"
                                    })
                                }), () => {
                                    var w;
                                    (w = g == null ? void 0 : g.remote) == null || w.cancelWatchAvailability().catch(() => {})
                                }) : void 0
                            }]
                        },
                        mediaRenditionUnavailable: {
                            get(t) {
                                var s;
                                let {
                                    media: d
                                } = t;
                                if (!(d != null && d.videoRenditions)) return Wr.UNSUPPORTED;
                                if (!((s = d.videoRenditions) != null && s.length)) return Wr.UNAVAILABLE
                            },
                            mediaEvents: ["emptied", "loadstart"],
                            videoRenditionsEvents: ["addrendition", "removerendition"]
                        },
                        mediaAudioTrackUnavailable: {
                            get(t) {
                                var s, d;
                                let {
                                    media: g
                                } = t;
                                if (!(g != null && g.audioTracks)) return Wr.UNSUPPORTED;
                                if (((d = (s = g.audioTracks) == null ? void 0 : s.length) != null ? d : 0) <= 1) return Wr.UNAVAILABLE
                            },
                            mediaEvents: ["emptied", "loadstart"],
                            audioTracksEvents: ["addtrack", "removetrack"]
                        }
                    },
                    k = {
                        [Fe.MEDIA_PREVIEW_REQUEST](t, s, {
                            detail: d
                        }) {
                            var g, w, N;
                            let {
                                media: X
                            } = s, ue = d != null ? d : void 0, $e, et;
                            if (X && ue != null) {
                                let [Sr] = be(X, {
                                    kind: si.METADATA,
                                    label: "thumbnails"
                                }), _r = Array.prototype.find.call((g = Sr == null ? void 0 : Sr.cues) != null ? g : [], (Ei, fi, bi) => fi === 0 ? Ei.endTime > ue : fi === bi.length - 1 ? Ei.startTime <= ue : Ei.startTime <= ue && Ei.endTime > ue);
                                if (_r) {
                                    let Ei = /'^(?:[a-z]+:)?\/\//i.test(_r.text) || (w = X == null ? void 0 : X.querySelector('track[label="thumbnails"]')) == null ? void 0 : w.src,
                                        fi = new URL(_r.text, Ei);
                                    et = new URLSearchParams(fi.hash).get("#xywh").split(",").map(bi => +bi), $e = fi.href
                                }
                            }
                            let ur = t.mediaDuration.get(s),
                                gr = (N = t.mediaChaptersCues.get(s).find((Sr, _r, Ei) => _r === Ei.length - 1 && ur === Sr.endTime ? Sr.startTime <= ue && Sr.endTime >= ue : Sr.startTime <= ue && Sr.endTime > ue)) == null ? void 0 : N.text;
                            return d != null && gr == null && (gr = ""), {
                                mediaPreviewTime: ue,
                                mediaPreviewImage: $e,
                                mediaPreviewCoords: et,
                                mediaPreviewChapter: gr
                            }
                        },
                        [Fe.MEDIA_PAUSE_REQUEST](t, s) {
                            t.mediaPaused.set(!0, s)
                        },
                        [Fe.MEDIA_PLAY_REQUEST](t, s) {
                            var d, g, w, N;
                            let X = "mediaPaused",
                                ue = t.mediaStreamType.get(s) === Cr.LIVE,
                                $e = !((d = s.options) != null && d.noAutoSeekToLive),
                                et = t.mediaTargetLiveWindow.get(s) > 0;
                            if (ue && $e && !et) {
                                let ur = (g = t.mediaSeekable.get(s)) == null ? void 0 : g[1];
                                if (ur) {
                                    let gr = (N = (w = s.options) == null ? void 0 : w.seekToLiveOffset) != null ? N : 0,
                                        Sr = ur - gr;
                                    t.mediaCurrentTime.set(Sr, s)
                                }
                            }
                            t[X].set(!1, s)
                        },
                        [Fe.MEDIA_PLAYBACK_RATE_REQUEST](t, s, {
                            detail: d
                        }) {
                            let g = "mediaPlaybackRate",
                                w = d;
                            t[g].set(w, s)
                        },
                        [Fe.MEDIA_MUTE_REQUEST](t, s) {
                            t.mediaMuted.set(!0, s)
                        },
                        [Fe.MEDIA_UNMUTE_REQUEST](t, s) {
                            t.mediaVolume.get(s) || t.mediaVolume.set(.25, s), t["mediaMuted"].set(!1, s)
                        },
                        [Fe.MEDIA_VOLUME_REQUEST](t, s, {
                            detail: d
                        }) {
                            let g = "mediaVolume",
                                w = d;
                            w && t.mediaMuted.get(s) && t.mediaMuted.set(!1, s), t[g].set(w, s)
                        },
                        [Fe.MEDIA_SEEK_REQUEST](t, s, {
                            detail: d
                        }) {
                            let g = "mediaCurrentTime",
                                w = d;
                            t[g].set(w, s)
                        },
                        [Fe.MEDIA_SEEK_TO_LIVE_REQUEST](t, s) {
                            var d, g, w;
                            let N = "mediaCurrentTime",
                                X = (d = t.mediaSeekable.get(s)) == null ? void 0 : d[1];
                            if (Number.isNaN(Number(X))) return;
                            let ue = (w = (g = s.options) == null ? void 0 : g.seekToLiveOffset) != null ? w : 0,
                                $e = X - ue;
                            t[N].set($e, s)
                        },
                        [Fe.MEDIA_SHOW_SUBTITLES_REQUEST](t, s, {
                            detail: d
                        }) {
                            var g;
                            let {
                                options: w
                            } = s, N = $r(s), X = qt(d), ue = (g = X[0]) == null ? void 0 : g.language;
                            ue && !w.noSubtitlesLangPref && oe.localStorage.setItem("media-chrome-pref-subtitles-lang", ue), z(ti.SHOWING, N, X)
                        },
                        [Fe.MEDIA_DISABLE_SUBTITLES_REQUEST](t, s, {
                            detail: d
                        }) {
                            let g = $r(s),
                                w = d != null ? d : [];
                            z(ti.DISABLED, g, w)
                        },
                        [Fe.MEDIA_TOGGLE_SUBTITLES_REQUEST](t, s, {
                            detail: d
                        }) {
                            ka(s, d)
                        },
                        [Fe.MEDIA_RENDITION_REQUEST](t, s, {
                            detail: d
                        }) {
                            let g = "mediaRenditionSelected",
                                w = d;
                            t[g].set(w, s)
                        },
                        [Fe.MEDIA_AUDIO_TRACK_REQUEST](t, s, {
                            detail: d
                        }) {
                            let g = "mediaAudioTrackEnabled",
                                w = d;
                            t[g].set(w, s)
                        },
                        [Fe.MEDIA_ENTER_PIP_REQUEST](t, s) {
                            t.mediaIsFullscreen.get(s) && t.mediaIsFullscreen.set(!1, s), t["mediaIsPip"].set(!0, s)
                        },
                        [Fe.MEDIA_EXIT_PIP_REQUEST](t, s) {
                            t.mediaIsPip.set(!1, s)
                        },
                        [Fe.MEDIA_ENTER_FULLSCREEN_REQUEST](t, s) {
                            t.mediaIsPip.get(s) && t.mediaIsPip.set(!1, s), t["mediaIsFullscreen"].set(!0, s)
                        },
                        [Fe.MEDIA_EXIT_FULLSCREEN_REQUEST](t, s) {
                            t.mediaIsFullscreen.set(!1, s)
                        },
                        [Fe.MEDIA_ENTER_CAST_REQUEST](t, s) {
                            t.mediaIsFullscreen.get(s) && t.mediaIsFullscreen.set(!1, s), t["mediaIsCasting"].set(!0, s)
                        },
                        [Fe.MEDIA_EXIT_CAST_REQUEST](t, s) {
                            t.mediaIsCasting.set(!1, s)
                        },
                        [Fe.MEDIA_AIRPLAY_REQUEST](t, s) {
                            t.mediaIsAirplaying.set(!0, s)
                        }
                    },
                    b = ({
                        media: t,
                        fullscreenElement: s,
                        documentElement: d,
                        stateMediator: g = Qn,
                        requestMap: w = k,
                        options: N = {},
                        monitorStateOwnersOnlyWithSubscriptions: X = !0
                    }) => {
                        let ue = [],
                            $e = {
                                options: le({}, N)
                            },
                            et = Object.freeze({
                                mediaPreviewTime: void 0,
                                mediaPreviewImage: void 0,
                                mediaPreviewCoords: void 0,
                                mediaPreviewChapter: void 0
                            }),
                            ur = fi => {
                                fi != null && ($a(fi, et) || (et = Object.freeze(le(le({}, et), fi)), ue.forEach(bi => bi(et))))
                            },
                            gr = () => {
                                let fi = Object.entries(g).reduce((bi, [Ba, {
                                    get: Bn
                                }]) => (bi[Ba] = Bn($e), bi), {});
                                ur(fi)
                            },
                            Sr = {},
                            _r, Ei = (fi, bi) => Q(this, null, function*() {
                                var Ba, Bn, go, Vo, Md, Pd, Od, xd, Nd, Ud, Fd, Bd, Hd, Vd, Wd, Gd;
                                let uh = !!_r;
                                if (_r = le(le(le({}, $e), _r != null ? _r : {}), fi), uh) return;
                                yield Wn(...Object.values(fi));
                                let Wo = ue.length > 0 && bi === 0 && X,
                                    Jm = $e.media !== _r.media,
                                    ev = ((Ba = $e.media) == null ? void 0 : Ba.textTracks) !== ((Bn = _r.media) == null ? void 0 : Bn.textTracks),
                                    tv = ((go = $e.media) == null ? void 0 : go.videoRenditions) !== ((Vo = _r.media) == null ? void 0 : Vo.videoRenditions),
                                    rv = ((Md = $e.media) == null ? void 0 : Md.audioTracks) !== ((Pd = _r.media) == null ? void 0 : Pd.audioTracks),
                                    iv = ((Od = $e.media) == null ? void 0 : Od.remote) !== ((xd = _r.media) == null ? void 0 : xd.remote),
                                    av = $e.documentElement !== _r.documentElement,
                                    nv = !!$e.media && (Jm || Wo),
                                    sv = !!((Nd = $e.media) != null && Nd.textTracks) && (ev || Wo),
                                    ov = !!((Ud = $e.media) != null && Ud.videoRenditions) && (tv || Wo),
                                    lv = !!((Fd = $e.media) != null && Fd.audioTracks) && (rv || Wo),
                                    uv = !!((Bd = $e.media) != null && Bd.remote) && (iv || Wo),
                                    dv = !!$e.documentElement && (av || Wo),
                                    cv = nv || sv || ov || lv || uv || dv,
                                    Wu = ue.length === 0 && bi === 1 && X,
                                    hv = !!_r.media && (Jm || Wu),
                                    fv = !!((Hd = _r.media) != null && Hd.textTracks) && (ev || Wu),
                                    mv = !!((Vd = _r.media) != null && Vd.videoRenditions) && (tv || Wu),
                                    vv = !!((Wd = _r.media) != null && Wd.audioTracks) && (rv || Wu),
                                    pv = !!((Gd = _r.media) != null && Gd.remote) && (iv || Wu),
                                    gv = !!_r.documentElement && (av || Wu),
                                    Ev = hv || fv || mv || vv || pv || gv;
                                if (!(cv || Ev)) {
                                    Object.entries(_r).forEach(([sa, Kd]) => {
                                        $e[sa] = Kd
                                    }), gr(), _r = void 0;
                                    return
                                }
                                Object.entries(g).forEach(([sa, {
                                    get: Kd,
                                    mediaEvents: xp = [],
                                    textTracksEvents: Np = [],
                                    videoRenditionsEvents: Up = [],
                                    audioTracksEvents: Fp = [],
                                    remoteEvents: Bp = [],
                                    rootEvents: Hp = [],
                                    stateOwnersUpdateHandlers: Vp = []
                                }]) => {
                                    Sr[sa] || (Sr[sa] = {});
                                    let gs = Ya => {
                                            let Es = Kd($e, Ya);
                                            ur({
                                                [sa]: Es
                                            })
                                        },
                                        pn;
                                    pn = Sr[sa].mediaEvents, xp.forEach(Ya => {
                                        pn && nv && ($e.media.removeEventListener(Ya, pn), Sr[sa].mediaEvents = void 0), hv && (_r.media.addEventListener(Ya, gs), Sr[sa].mediaEvents = gs)
                                    }), pn = Sr[sa].textTracksEvents, Np.forEach(Ya => {
                                        var Es, js;
                                        pn && sv && ((Es = $e.media.textTracks) == null || Es.removeEventListener(Ya, pn), Sr[sa].textTracksEvents = void 0), fv && ((js = _r.media.textTracks) == null || js.addEventListener(Ya, gs), Sr[sa].textTracksEvents = gs)
                                    }), pn = Sr[sa].videoRenditionsEvents, Up.forEach(Ya => {
                                        var Es, js;
                                        pn && ov && ((Es = $e.media.videoRenditions) == null || Es.removeEventListener(Ya, pn), Sr[sa].videoRenditionsEvents = void 0), mv && ((js = _r.media.videoRenditions) == null || js.addEventListener(Ya, gs), Sr[sa].videoRenditionsEvents = gs)
                                    }), pn = Sr[sa].audioTracksEvents, Fp.forEach(Ya => {
                                        var Es, js;
                                        pn && lv && ((Es = $e.media.audioTracks) == null || Es.removeEventListener(Ya, pn), Sr[sa].audioTracksEvents = void 0), vv && ((js = _r.media.audioTracks) == null || js.addEventListener(Ya, gs), Sr[sa].audioTracksEvents = gs)
                                    }), pn = Sr[sa].remoteEvents, Bp.forEach(Ya => {
                                        var Es, js;
                                        pn && uv && ((Es = $e.media.remote) == null || Es.removeEventListener(Ya, pn), Sr[sa].remoteEvents = void 0), pv && ((js = _r.media.remote) == null || js.addEventListener(Ya, gs), Sr[sa].remoteEvents = gs)
                                    }), pn = Sr[sa].rootEvents, Hp.forEach(Ya => {
                                        pn && dv && ($e.documentElement.removeEventListener(Ya, pn), Sr[sa].rootEvents = void 0), gv && (_r.documentElement.addEventListener(Ya, gs), Sr[sa].rootEvents = gs)
                                    });
                                    let yv = Sr[sa].stateOwnersUpdateHandlers;
                                    Vp.forEach(Ya => {
                                        yv && cv && yv(), Ev && (Sr[sa].stateOwnersUpdateHandlers = Ya(gs, _r))
                                    })
                                }), Object.entries(_r).forEach(([sa, Kd]) => {
                                    $e[sa] = Kd
                                }), gr(), _r = void 0
                            });
                        return Ei({
                            media: t,
                            fullscreenElement: s,
                            documentElement: d,
                            options: N
                        }), {
                            dispatch(fi) {
                                let {
                                    type: bi,
                                    detail: Ba
                                } = fi;
                                if (w[bi] && et.mediaErrorCode == null) {
                                    ur(w[bi](g, $e, fi));
                                    return
                                }
                                bi === "mediaelementchangerequest" ? Ei({
                                    media: Ba
                                }) : bi === "fullscreenelementchangerequest" ? Ei({
                                    fullscreenElement: Ba
                                }) : bi === "documentelementchangerequest" ? Ei({
                                    documentElement: Ba
                                }) : bi === "optionschangerequest" && Object.entries(Ba != null ? Ba : {}).forEach(([Bn, go]) => {
                                    $e.options[Bn] = go
                                })
                            },
                            getState() {
                                return et
                            },
                            subscribe(fi) {
                                return Ei({}, ue.length + 1), ue.push(fi), fi(et), () => {
                                    let bi = ue.indexOf(fi);
                                    bi >= 0 && (Ei({}, ue.length - 1), ue.splice(bi, 1))
                                }
                            }
                        }
                    },
                    A = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    P = (t, s, d) => (A(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    M = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    q = (t, s, d, g) => (A(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    $ = (t, s, d) => (A(t, s, "access private method"), d),
                    Te, Le, Re, It, xt, xe, Ae, Ue, Bt, cr, Ur, Pt, St = ["ArrowLeft", "ArrowRight", "Enter", " ", "f", "m", "k", "c"],
                    ut = 10,
                    Oe = {
                        DEFAULT_SUBTITLES: "defaultsubtitles",
                        DEFAULT_STREAM_TYPE: "defaultstreamtype",
                        DEFAULT_DURATION: "defaultduration",
                        FULLSCREEN_ELEMENT: "fullscreenelement",
                        HOTKEYS: "hotkeys",
                        KEYS_USED: "keysused",
                        LIVE_EDGE_OFFSET: "liveedgeoffset",
                        SEEK_TO_LIVE_OFFSET: "seektoliveoffset",
                        NO_AUTO_SEEK_TO_LIVE: "noautoseektolive",
                        NO_HOTKEYS: "nohotkeys",
                        NO_VOLUME_PREF: "novolumepref",
                        NO_SUBTITLES_LANG_PREF: "nosubtitleslangpref",
                        NO_DEFAULT_STORE: "nodefaultstore",
                        KEYBOARD_FORWARD_SEEK_OFFSET: "keyboardforwardseekoffset",
                        KEYBOARD_BACKWARD_SEEK_OFFSET: "keyboardbackwardseekoffset",
                        LANG: "lang"
                    },
                    Mr = class extends Oa {
                        constructor() {
                            super(), M(this, Ae), M(this, Bt), M(this, Ur), this.mediaStateReceivers = [], this.associatedElementSubscriptions = new Map, M(this, Te, new ke(this, Oe.HOTKEYS)), M(this, Le, void 0), M(this, Re, void 0), M(this, It, void 0), M(this, xt, void 0), M(this, xe, s => {
                                var d;
                                (d = P(this, Re)) == null || d.dispatch(s)
                            }), this.associateElement(this);
                            let t = {};
                            q(this, It, s => {
                                Object.entries(s).forEach(([d, g]) => {
                                    if (d in t && t[d] === g) return;
                                    this.propagateMediaState(d, g);
                                    let w = d.toLowerCase(),
                                        N = new oe.CustomEvent(Mi[w], {
                                            composed: !0,
                                            detail: g
                                        });
                                    this.dispatchEvent(N)
                                }), t = s
                            }), this.enableHotkeys()
                        }
                        static get observedAttributes() {
                            return super.observedAttributes.concat(Oe.NO_HOTKEYS, Oe.HOTKEYS, Oe.DEFAULT_STREAM_TYPE, Oe.DEFAULT_SUBTITLES, Oe.DEFAULT_DURATION, Oe.LANG)
                        }
                        get mediaStore() {
                            return P(this, Re)
                        }
                        set mediaStore(t) {
                            var s, d;
                            if (P(this, Re) && ((s = P(this, xt)) == null || s.call(this), q(this, xt, void 0)), q(this, Re, t), !P(this, Re) && !this.hasAttribute(Oe.NO_DEFAULT_STORE)) {
                                $(this, Ae, Ue).call(this);
                                return
                            }
                            q(this, xt, (d = P(this, Re)) == null ? void 0 : d.subscribe(P(this, It)))
                        }
                        get fullscreenElement() {
                            var t;
                            return (t = P(this, Le)) != null ? t : this
                        }
                        set fullscreenElement(t) {
                            var s;
                            this.hasAttribute(Oe.FULLSCREEN_ELEMENT) && this.removeAttribute(Oe.FULLSCREEN_ELEMENT), q(this, Le, t), (s = P(this, Re)) == null || s.dispatch({
                                type: "fullscreenelementchangerequest",
                                detail: this.fullscreenElement
                            })
                        }
                        get defaultSubtitles() {
                            return xr(this, Oe.DEFAULT_SUBTITLES)
                        }
                        set defaultSubtitles(t) {
                            Vr(this, Oe.DEFAULT_SUBTITLES, t)
                        }
                        get defaultStreamType() {
                            return li(this, Oe.DEFAULT_STREAM_TYPE)
                        }
                        set defaultStreamType(t) {
                            mi(this, Oe.DEFAULT_STREAM_TYPE, t)
                        }
                        get defaultDuration() {
                            return Qr(this, Oe.DEFAULT_DURATION)
                        }
                        set defaultDuration(t) {
                            Nr(this, Oe.DEFAULT_DURATION, t)
                        }
                        get noHotkeys() {
                            return xr(this, Oe.NO_HOTKEYS)
                        }
                        set noHotkeys(t) {
                            Vr(this, Oe.NO_HOTKEYS, t)
                        }
                        get keysUsed() {
                            return li(this, Oe.KEYS_USED)
                        }
                        set keysUsed(t) {
                            mi(this, Oe.KEYS_USED, t)
                        }
                        get liveEdgeOffset() {
                            return Qr(this, Oe.LIVE_EDGE_OFFSET)
                        }
                        set liveEdgeOffset(t) {
                            Nr(this, Oe.LIVE_EDGE_OFFSET, t)
                        }
                        get noAutoSeekToLive() {
                            return xr(this, Oe.NO_AUTO_SEEK_TO_LIVE)
                        }
                        set noAutoSeekToLive(t) {
                            Vr(this, Oe.NO_AUTO_SEEK_TO_LIVE, t)
                        }
                        get noVolumePref() {
                            return xr(this, Oe.NO_VOLUME_PREF)
                        }
                        set noVolumePref(t) {
                            Vr(this, Oe.NO_VOLUME_PREF, t)
                        }
                        get noSubtitlesLangPref() {
                            return xr(this, Oe.NO_SUBTITLES_LANG_PREF)
                        }
                        set noSubtitlesLangPref(t) {
                            Vr(this, Oe.NO_SUBTITLES_LANG_PREF, t)
                        }
                        get noDefaultStore() {
                            return xr(this, Oe.NO_DEFAULT_STORE)
                        }
                        set noDefaultStore(t) {
                            Vr(this, Oe.NO_DEFAULT_STORE, t)
                        }
                        attributeChangedCallback(t, s, d) {
                            var g, w, N, X, ue, $e, et, ur;
                            if (super.attributeChangedCallback(t, s, d), t === Oe.NO_HOTKEYS) d !== s && d === "" ? (this.hasAttribute(Oe.HOTKEYS) && console.warn("Media Chrome: Both `hotkeys` and `nohotkeys` have been set. All hotkeys will be disabled."), this.disableHotkeys()) : d !== s && d === null && this.enableHotkeys();
                            else if (t === Oe.HOTKEYS) P(this, Te).value = d;
                            else if (t === Oe.DEFAULT_SUBTITLES && d !== s)(g = P(this, Re)) == null || g.dispatch({
                                type: "optionschangerequest",
                                detail: {
                                    defaultSubtitles: this.hasAttribute(Oe.DEFAULT_SUBTITLES)
                                }
                            });
                            else if (t === Oe.DEFAULT_STREAM_TYPE)(N = P(this, Re)) == null || N.dispatch({
                                type: "optionschangerequest",
                                detail: {
                                    defaultStreamType: (w = this.getAttribute(Oe.DEFAULT_STREAM_TYPE)) != null ? w : void 0
                                }
                            });
                            else if (t === Oe.LIVE_EDGE_OFFSET)(X = P(this, Re)) == null || X.dispatch({
                                type: "optionschangerequest",
                                detail: {
                                    liveEdgeOffset: this.hasAttribute(Oe.LIVE_EDGE_OFFSET) ? +this.getAttribute(Oe.LIVE_EDGE_OFFSET) : void 0,
                                    seekToLiveOffset: this.hasAttribute(Oe.SEEK_TO_LIVE_OFFSET) ? void 0 : +this.getAttribute(Oe.LIVE_EDGE_OFFSET)
                                }
                            });
                            else if (t === Oe.SEEK_TO_LIVE_OFFSET)(ue = P(this, Re)) == null || ue.dispatch({
                                type: "optionschangerequest",
                                detail: {
                                    seekToLiveOffset: this.hasAttribute(Oe.SEEK_TO_LIVE_OFFSET) ? +this.getAttribute(Oe.SEEK_TO_LIVE_OFFSET) : void 0
                                }
                            });
                            else if (t === Oe.NO_AUTO_SEEK_TO_LIVE)($e = P(this, Re)) == null || $e.dispatch({
                                type: "optionschangerequest",
                                detail: {
                                    noAutoSeekToLive: this.hasAttribute(Oe.NO_AUTO_SEEK_TO_LIVE)
                                }
                            });
                            else if (t === Oe.FULLSCREEN_ELEMENT) {
                                let gr = d ? (et = this.getRootNode()) == null ? void 0 : et.getElementById(d) : void 0;
                                q(this, Le, gr), (ur = P(this, Re)) == null || ur.dispatch({
                                    type: "fullscreenelementchangerequest",
                                    detail: this.fullscreenElement
                                })
                            } else t === Oe.LANG && d !== s && Gi(d)
                        }
                        connectedCallback() {
                            var t, s;
                            !P(this, Re) && !this.hasAttribute(Oe.NO_DEFAULT_STORE) && $(this, Ae, Ue).call(this), (t = P(this, Re)) == null || t.dispatch({
                                type: "documentelementchangerequest",
                                detail: Ut
                            }), super.connectedCallback(), P(this, Re) && !P(this, xt) && q(this, xt, (s = P(this, Re)) == null ? void 0 : s.subscribe(P(this, It))), this.enableHotkeys()
                        }
                        disconnectedCallback() {
                            var t, s, d, g;
                            (t = super.disconnectedCallback) == null || t.call(this), P(this, Re) && ((s = P(this, Re)) == null || s.dispatch({
                                type: "documentelementchangerequest",
                                detail: void 0
                            }), (d = P(this, Re)) == null || d.dispatch({
                                type: Fe.MEDIA_TOGGLE_SUBTITLES_REQUEST,
                                detail: !1
                            })), P(this, xt) && ((g = P(this, xt)) == null || g.call(this), q(this, xt, void 0))
                        }
                        mediaSetCallback(t) {
                            var s;
                            super.mediaSetCallback(t), (s = P(this, Re)) == null || s.dispatch({
                                type: "mediaelementchangerequest",
                                detail: t
                            }), t.hasAttribute("tabindex") || (t.tabIndex = -1)
                        }
                        mediaUnsetCallback(t) {
                            var s;
                            super.mediaUnsetCallback(t), (s = P(this, Re)) == null || s.dispatch({
                                type: "mediaelementchangerequest",
                                detail: void 0
                            })
                        }
                        propagateMediaState(t, s) {
                            Ea(this.mediaStateReceivers, t, s)
                        }
                        associateElement(t) {
                            if (!t) return;
                            let {
                                associatedElementSubscriptions: s
                            } = this;
                            if (s.has(t)) return;
                            let d = this.registerMediaStateReceiver.bind(this),
                                g = this.unregisterMediaStateReceiver.bind(this),
                                w = Jn(t, d, g);
                            Object.values(Fe).forEach(N => {
                                t.addEventListener(N, P(this, xe))
                            }), s.set(t, w)
                        }
                        unassociateElement(t) {
                            if (!t) return;
                            let {
                                associatedElementSubscriptions: s
                            } = this;
                            s.has(t) && (s.get(t)(), s.delete(t), Object.values(Fe).forEach(d => {
                                t.removeEventListener(d, P(this, xe))
                            }))
                        }
                        registerMediaStateReceiver(t) {
                            if (!t) return;
                            let s = this.mediaStateReceivers;
                            s.indexOf(t) > -1 || (s.push(t), P(this, Re) && Object.entries(P(this, Re).getState()).forEach(([d, g]) => {
                                Ea([t], d, g)
                            }))
                        }
                        unregisterMediaStateReceiver(t) {
                            let s = this.mediaStateReceivers,
                                d = s.indexOf(t);
                            d < 0 || s.splice(d, 1)
                        }
                        enableHotkeys() {
                            this.addEventListener("keydown", $(this, Ur, Pt))
                        }
                        disableHotkeys() {
                            this.removeEventListener("keydown", $(this, Ur, Pt)), this.removeEventListener("keyup", $(this, Bt, cr))
                        }
                        get hotkeys() {
                            return li(this, Oe.HOTKEYS)
                        }
                        set hotkeys(t) {
                            mi(this, Oe.HOTKEYS, t)
                        }
                        keyboardShortcutHandler(t) {
                            var s, d, g, w, N;
                            let X = t.target;
                            if (((g = (d = (s = X.getAttribute(Oe.KEYS_USED)) == null ? void 0 : s.split(" ")) != null ? d : X == null ? void 0 : X.keysUsed) != null ? g : []).map(ur => ur === "Space" ? " " : ur).filter(Boolean).includes(t.key)) return;
                            let ue, $e, et;
                            if (!P(this, Te).contains(`no${t.key.toLowerCase()}`) && !(t.key === " " && P(this, Te).contains("nospace"))) switch (t.key) {
                                case " ":
                                case "k":
                                    ue = P(this, Re).getState().mediaPaused ? Fe.MEDIA_PLAY_REQUEST : Fe.MEDIA_PAUSE_REQUEST, this.dispatchEvent(new oe.CustomEvent(ue, {
                                        composed: !0,
                                        bubbles: !0
                                    }));
                                    break;
                                case "m":
                                    ue = this.mediaStore.getState().mediaVolumeLevel === "off" ? Fe.MEDIA_UNMUTE_REQUEST : Fe.MEDIA_MUTE_REQUEST, this.dispatchEvent(new oe.CustomEvent(ue, {
                                        composed: !0,
                                        bubbles: !0
                                    }));
                                    break;
                                case "f":
                                    ue = this.mediaStore.getState().mediaIsFullscreen ? Fe.MEDIA_EXIT_FULLSCREEN_REQUEST : Fe.MEDIA_ENTER_FULLSCREEN_REQUEST, this.dispatchEvent(new oe.CustomEvent(ue, {
                                        composed: !0,
                                        bubbles: !0
                                    }));
                                    break;
                                case "c":
                                    this.dispatchEvent(new oe.CustomEvent(Fe.MEDIA_TOGGLE_SUBTITLES_REQUEST, {
                                        composed: !0,
                                        bubbles: !0
                                    }));
                                    break;
                                case "ArrowLeft":
                                    {
                                        let ur = this.hasAttribute(Oe.KEYBOARD_BACKWARD_SEEK_OFFSET) ? +this.getAttribute(Oe.KEYBOARD_BACKWARD_SEEK_OFFSET) : ut;$e = Math.max(((w = this.mediaStore.getState().mediaCurrentTime) != null ? w : 0) - ur, 0),
                                        et = new oe.CustomEvent(Fe.MEDIA_SEEK_REQUEST, {
                                            composed: !0,
                                            bubbles: !0,
                                            detail: $e
                                        }),
                                        this.dispatchEvent(et);
                                        break
                                    }
                                case "ArrowRight":
                                    {
                                        let ur = this.hasAttribute(Oe.KEYBOARD_FORWARD_SEEK_OFFSET) ? +this.getAttribute(Oe.KEYBOARD_FORWARD_SEEK_OFFSET) : ut;$e = Math.max(((N = this.mediaStore.getState().mediaCurrentTime) != null ? N : 0) + ur, 0),
                                        et = new oe.CustomEvent(Fe.MEDIA_SEEK_REQUEST, {
                                            composed: !0,
                                            bubbles: !0,
                                            detail: $e
                                        }),
                                        this.dispatchEvent(et);
                                        break
                                    }
                                default:
                                    break
                            }
                        }
                    };
                Te = new WeakMap, Le = new WeakMap, Re = new WeakMap, It = new WeakMap, xt = new WeakMap, xe = new WeakMap, Ae = new WeakSet, Ue = function() {
                    var t;
                    this.mediaStore = b({
                        media: this.media,
                        fullscreenElement: this.fullscreenElement,
                        options: {
                            defaultSubtitles: this.hasAttribute(Oe.DEFAULT_SUBTITLES),
                            defaultDuration: this.hasAttribute(Oe.DEFAULT_DURATION) ? +this.getAttribute(Oe.DEFAULT_DURATION) : void 0,
                            defaultStreamType: (t = this.getAttribute(Oe.DEFAULT_STREAM_TYPE)) != null ? t : void 0,
                            liveEdgeOffset: this.hasAttribute(Oe.LIVE_EDGE_OFFSET) ? +this.getAttribute(Oe.LIVE_EDGE_OFFSET) : void 0,
                            seekToLiveOffset: this.hasAttribute(Oe.SEEK_TO_LIVE_OFFSET) ? +this.getAttribute(Oe.SEEK_TO_LIVE_OFFSET) : this.hasAttribute(Oe.LIVE_EDGE_OFFSET) ? +this.getAttribute(Oe.LIVE_EDGE_OFFSET) : void 0,
                            noAutoSeekToLive: this.hasAttribute(Oe.NO_AUTO_SEEK_TO_LIVE),
                            noVolumePref: this.hasAttribute(Oe.NO_VOLUME_PREF),
                            noSubtitlesLangPref: this.hasAttribute(Oe.NO_SUBTITLES_LANG_PREF)
                        }
                    })
                }, Bt = new WeakSet, cr = function(t) {
                    let {
                        key: s
                    } = t;
                    if (!St.includes(s)) {
                        this.removeEventListener("keyup", $(this, Bt, cr));
                        return
                    }
                    this.keyboardShortcutHandler(t)
                }, Ur = new WeakSet, Pt = function(t) {
                    let {
                        metaKey: s,
                        altKey: d,
                        key: g
                    } = t;
                    if (s || d || !St.includes(g)) {
                        this.removeEventListener("keyup", $(this, Bt, cr));
                        return
                    }[" ", "ArrowLeft", "ArrowRight"].includes(g) && !(P(this, Te).contains(`no${g.toLowerCase()}`) || g === " " && P(this, Te).contains("nospace")) && t.preventDefault(), this.addEventListener("keyup", $(this, Bt, cr), {
                        once: !0
                    })
                };
                var Yr = Object.values(W),
                    jr = Object.values(Er),
                    Jr = t => {
                        var s, d, g, w;
                        let {
                            observedAttributes: N
                        } = t.constructor;
                        !N && (s = t.nodeName) != null && s.includes("-") && (oe.customElements.upgrade(t), {
                            observedAttributes: N
                        } = t.constructor);
                        let X = (w = (g = (d = t == null ? void 0 : t.getAttribute) == null ? void 0 : d.call(t, ht.MEDIA_CHROME_ATTRIBUTES)) == null ? void 0 : g.split) == null ? void 0 : w.call(g, /\s+/);
                        return Array.isArray(N || X) ? (N || X).filter(ue => Yr.includes(ue)) : []
                    },
                    ca = t => {
                        var s, d;
                        return (s = t.nodeName) != null && s.includes("-") && oe.customElements.get((d = t.nodeName) == null ? void 0 : d.toLowerCase()) && !(t instanceof oe.customElements.get(t.nodeName.toLowerCase())) && oe.customElements.upgrade(t), jr.some(g => g in t)
                    },
                    ii = t => ca(t) || !!Jr(t).length,
                    zr = t => {
                        var s;
                        return (s = t == null ? void 0 : t.join) == null ? void 0 : s.call(t, ":")
                    },
                    yn = {
                        [W.MEDIA_SUBTITLES_LIST]: rr,
                        [W.MEDIA_SUBTITLES_SHOWING]: rr,
                        [W.MEDIA_SEEKABLE]: zr,
                        [W.MEDIA_BUFFERED]: t => t == null ? void 0 : t.map(zr).join(" "),
                        [W.MEDIA_PREVIEW_COORDS]: t => t == null ? void 0 : t.join(" "),
                        [W.MEDIA_RENDITION_LIST]: Gr,
                        [W.MEDIA_AUDIO_TRACK_LIST]: aa
                    },
                    bs = (t, s, d) => Q(this, null, function*() {
                        var g, w;
                        if (t.isConnected || (yield De(0)), typeof d == "boolean" || d == null) return Vr(t, s, d);
                        if (typeof d == "number") return Nr(t, s, d);
                        if (typeof d == "string") return mi(t, s, d);
                        if (Array.isArray(d) && !d.length) return t.removeAttribute(s);
                        let N = (w = (g = yn[s]) == null ? void 0 : g.call(yn, d)) != null ? w : d;
                        return t.setAttribute(s, N)
                    }),
                    Ls = t => {
                        var s;
                        return !!((s = t.closest) != null && s.call(t, '*[slot="media"]'))
                    },
                    ui = (t, s) => {
                        if (Ls(t)) return;
                        let d = (w, N) => {
                                var X, ue;
                                ii(w) && N(w);
                                let {
                                    children: $e = []
                                } = w != null ? w : {}, et = (ue = (X = w == null ? void 0 : w.shadowRoot) == null ? void 0 : X.children) != null ? ue : [];
                                [...$e, ...et].forEach(ur => ui(ur, N))
                            },
                            g = t == null ? void 0 : t.nodeName.toLowerCase();
                        if (g.includes("-") && !ii(t)) {
                            oe.customElements.whenDefined(g).then(() => {
                                d(t, s)
                            });
                            return
                        }
                        d(t, s)
                    },
                    Ea = (t, s, d) => {
                        t.forEach(g => {
                            if (s in g) {
                                g[s] = d;
                                return
                            }
                            let w = Jr(g),
                                N = s.toLowerCase();
                            w.includes(N) && bs(g, N, d)
                        })
                    },
                    Jn = (t, s, d) => {
                        ui(t, s);
                        let g = et => {
                                var ur;
                                let gr = (ur = et == null ? void 0 : et.composedPath()[0]) != null ? ur : et.target;
                                s(gr)
                            },
                            w = et => {
                                var ur;
                                let gr = (ur = et == null ? void 0 : et.composedPath()[0]) != null ? ur : et.target;
                                d(gr)
                            };
                        t.addEventListener(Fe.REGISTER_MEDIA_STATE_RECEIVER, g), t.addEventListener(Fe.UNREGISTER_MEDIA_STATE_RECEIVER, w);
                        let N = et => {
                                et.forEach(ur => {
                                    let {
                                        addedNodes: gr = [],
                                        removedNodes: Sr = [],
                                        type: _r,
                                        target: Ei,
                                        attributeName: fi
                                    } = ur;
                                    _r === "childList" ? (Array.prototype.forEach.call(gr, bi => ui(bi, s)), Array.prototype.forEach.call(Sr, bi => ui(bi, d))) : _r === "attributes" && fi === ht.MEDIA_CHROME_ATTRIBUTES && (ii(Ei) ? s(Ei) : d(Ei))
                                })
                            },
                            X = [],
                            ue = et => {
                                let ur = et.target;
                                ur.name !== "media" && (X.forEach(gr => ui(gr, d)), X = [...ur.assignedElements({
                                    flatten: !0
                                })], X.forEach(gr => ui(gr, s)))
                            };
                        t.addEventListener("slotchange", ue);
                        let $e = new MutationObserver(N);
                        return $e.observe(t, {
                            childList: !0,
                            attributes: !0,
                            subtree: !0
                        }), () => {
                            ui(t, d), t.removeEventListener("slotchange", ue), $e.disconnect(), t.removeEventListener(Fe.REGISTER_MEDIA_STATE_RECEIVER, g), t.removeEventListener(Fe.UNREGISTER_MEDIA_STATE_RECEIVER, w)
                        }
                    };
                oe.customElements.get("media-controller") || oe.customElements.define("media-controller", Mr);
                var Gn = Mr,
                    es = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Or = (t, s, d) => (es(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    ha = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Pn = (t, s, d, g) => (es(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    ts = (t, s, d) => (es(t, s, "access private method"), d),
                    za, On, Rn, rs, Is, yo, bo, is = {
                        TOOLTIP_PLACEMENT: "tooltipplacement",
                        DISABLED: "disabled",
                        NO_TOOLTIP: "notooltip"
                    },
                    El = Ut.createElement("template");
                El.innerHTML = `
<style>
  :host {
    position: relative;
    font: var(--media-font,
      var(--media-font-weight, bold)
      var(--media-font-size, 14px) /
      var(--media-text-content-height, var(--media-control-height, 24px))
      var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));
    color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
    background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));
    padding: var(--media-button-padding, var(--media-control-padding, 10px));
    justify-content: var(--media-button-justify-content, center);
    display: inline-flex;
    align-items: center;
    vertical-align: middle;
    box-sizing: border-box;
    transition: background .15s linear;
    pointer-events: auto;
    cursor: var(--media-cursor, pointer);
    -webkit-tap-highlight-color: transparent;
  }

  
  :host(:focus-visible) {
    box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);
    outline: 0;
  }
  
  :host(:where(:focus)) {
    box-shadow: none;
    outline: 0;
  }

  :host(:hover) {
    background: var(--media-control-hover-background, rgba(50 50 70 / .7));
  }

  svg, img, ::slotted(svg), ::slotted(img) {
    width: var(--media-button-icon-width);
    height: var(--media-button-icon-height, var(--media-control-height, 24px));
    transform: var(--media-button-icon-transform);
    transition: var(--media-button-icon-transition);
    fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));
    vertical-align: middle;
    max-width: 100%;
    max-height: 100%;
    min-width: 100%;
  }

  media-tooltip {
    
    max-width: 0;
    overflow-x: clip;
    opacity: 0;
    transition: opacity .3s, max-width 0s 9s;
  }

  :host(:hover) media-tooltip,
  :host(:focus-visible) media-tooltip {
    max-width: 100vw;
    opacity: 1;
    transition: opacity .3s;
  }

  :host([notooltip]) slot[name="tooltip"] {
    display: none;
  }
</style>

<slot name="tooltip">
  <media-tooltip part="tooltip" aria-hidden="true">
    <slot name="tooltip-content"></slot>
  </media-tooltip>
</slot>
`;
                var cn = class extends oe.HTMLElement {
                    constructor(t = {}) {
                        var s;
                        if (super(), ha(this, yo), ha(this, za, void 0), this.preventClick = !1, this.tooltipEl = null, this.tooltipContent = "", ha(this, On, d => {
                                this.preventClick || this.handleClick(d), setTimeout(Or(this, Rn), 0)
                            }), ha(this, Rn, () => {
                                var d, g;
                                (g = (d = this.tooltipEl) == null ? void 0 : d.updateXOffset) == null || g.call(d)
                            }), ha(this, rs, d => {
                                let {
                                    key: g
                                } = d;
                                if (!this.keysUsed.includes(g)) {
                                    this.removeEventListener("keyup", Or(this, rs));
                                    return
                                }
                                this.preventClick || this.handleClick(d)
                            }), ha(this, Is, d => {
                                let {
                                    metaKey: g,
                                    altKey: w,
                                    key: N
                                } = d;
                                if (g || w || !this.keysUsed.includes(N)) {
                                    this.removeEventListener("keyup", Or(this, rs));
                                    return
                                }
                                this.addEventListener("keyup", Or(this, rs), {
                                    once: !0
                                })
                            }), !this.shadowRoot) {
                            this.attachShadow({
                                mode: "open"
                            });
                            let d = El.content.cloneNode(!0);
                            this.nativeEl = d;
                            let g = t.slotTemplate;
                            g || (g = Ut.createElement("template"), g.innerHTML = `<slot>${t.defaultContent||""}</slot>`), t.tooltipContent && (d.querySelector('slot[name="tooltip-content"]').innerHTML = (s = t.tooltipContent) != null ? s : "", this.tooltipContent = t.tooltipContent), this.nativeEl.appendChild(g.content.cloneNode(!0)), this.shadowRoot.appendChild(d)
                        }
                        this.tooltipEl = this.shadowRoot.querySelector("media-tooltip")
                    }
                    static get observedAttributes() {
                        return ["disabled", is.TOOLTIP_PLACEMENT, ht.MEDIA_CONTROLLER]
                    }
                    enable() {
                        this.addEventListener("click", Or(this, On)), this.addEventListener("keydown", Or(this, Is)), this.tabIndex = 0
                    }
                    disable() {
                        this.removeEventListener("click", Or(this, On)), this.removeEventListener("keydown", Or(this, Is)), this.removeEventListener("keyup", Or(this, rs)), this.tabIndex = -1
                    }
                    attributeChangedCallback(t, s, d) {
                        var g, w, N, X, ue;
                        t === ht.MEDIA_CONTROLLER ? (s && ((w = (g = Or(this, za)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), Pn(this, za, null)), d && this.isConnected && (Pn(this, za, (N = this.getRootNode()) == null ? void 0 : N.getElementById(d)), (ue = (X = Or(this, za)) == null ? void 0 : X.associateElement) == null || ue.call(X, this))) : t === "disabled" && d !== s ? d == null ? this.enable() : this.disable() : t === is.TOOLTIP_PLACEMENT && this.tooltipEl && d !== s && (this.tooltipEl.placement = d), Or(this, Rn).call(this)
                    }
                    connectedCallback() {
                        var t, s, d;
                        let {
                            style: g
                        } = Pi(this.shadowRoot, ":host");
                        g.setProperty("display", `var(--media-control-display, var(--${this.localName}-display, inline-flex))`), this.hasAttribute("disabled") ? this.disable() : this.enable(), this.setAttribute("role", "button");
                        let w = this.getAttribute(ht.MEDIA_CONTROLLER);
                        w && (Pn(this, za, (t = this.getRootNode()) == null ? void 0 : t.getElementById(w)), (d = (s = Or(this, za)) == null ? void 0 : s.associateElement) == null || d.call(s, this)), oe.customElements.whenDefined("media-tooltip").then(() => ts(this, yo, bo).call(this))
                    }
                    disconnectedCallback() {
                        var t, s;
                        this.disable(), (s = (t = Or(this, za)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this), Pn(this, za, null), this.removeEventListener("mouseenter", Or(this, Rn)), this.removeEventListener("focus", Or(this, Rn)), this.removeEventListener("click", Or(this, On))
                    }
                    get keysUsed() {
                        return ["Enter", " "]
                    }
                    get tooltipPlacement() {
                        return li(this, is.TOOLTIP_PLACEMENT)
                    }
                    set tooltipPlacement(t) {
                        mi(this, is.TOOLTIP_PLACEMENT, t)
                    }
                    get mediaController() {
                        return li(this, ht.MEDIA_CONTROLLER)
                    }
                    set mediaController(t) {
                        mi(this, ht.MEDIA_CONTROLLER, t)
                    }
                    get disabled() {
                        return xr(this, is.DISABLED)
                    }
                    set disabled(t) {
                        Vr(this, is.DISABLED, t)
                    }
                    get noTooltip() {
                        return xr(this, is.NO_TOOLTIP)
                    }
                    set noTooltip(t) {
                        Vr(this, is.NO_TOOLTIP, t)
                    }
                    handleClick(t) {}
                };
                za = new WeakMap, On = new WeakMap, Rn = new WeakMap, rs = new WeakMap, Is = new WeakMap, yo = new WeakSet, bo = function() {
                    this.addEventListener("mouseenter", Or(this, Rn)), this.addEventListener("focus", Or(this, Rn)), this.addEventListener("click", Or(this, On));
                    let t = this.tooltipPlacement;
                    t && this.tooltipEl && (this.tooltipEl.placement = t)
                }, oe.customElements.get("media-chrome-button") || oe.customElements.define("media-chrome-button", cn);
                var yl = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M22.13 3H3.87a.87.87 0 0 0-.87.87v13.26a.87.87 0 0 0 .87.87h3.4L9 16H5V5h16v11h-4l1.72 2h3.4a.87.87 0 0 0 .87-.87V3.87a.87.87 0 0 0-.86-.87Zm-8.75 11.44a.5.5 0 0 0-.76 0l-4.91 5.73a.5.5 0 0 0 .38.83h9.82a.501.501 0 0 0 .38-.83l-4.91-5.73Z"/>
</svg>
`,
                    Kn = Ut.createElement("template");
                Kn.innerHTML = `
  <style>
    :host([${W.MEDIA_IS_AIRPLAYING}]) slot[name=icon] slot:not([name=exit]) {
      display: none !important;
    }

    
    :host(:not([${W.MEDIA_IS_AIRPLAYING}])) slot[name=icon] slot:not([name=enter]) {
      display: none !important;
    }

    :host([${W.MEDIA_IS_AIRPLAYING}]) slot[name=tooltip-enter],
    :host(:not([${W.MEDIA_IS_AIRPLAYING}])) slot[name=tooltip-exit] {
      display: none;
    }
  </style>

  <slot name="icon">
    <slot name="enter">${yl}</slot>
    <slot name="exit">${yl}</slot>
  </slot>
`;
                var Jl = `
  <slot name="tooltip-enter">${vt("start airplay")}</slot>
  <slot name="tooltip-exit">${vt("stop airplay")}</slot>
`,
                    Go = t => {
                        let s = t.mediaIsAirplaying ? vt("stop airplay") : vt("start airplay");
                        t.setAttribute("aria-label", s)
                    },
                    eu = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_IS_AIRPLAYING, W.MEDIA_AIRPLAY_UNAVAILABLE]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: Kn,
                                tooltipContent: Jl
                            }, t))
                        }
                        connectedCallback() {
                            super.connectedCallback(), Go(this)
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_IS_AIRPLAYING && Go(this)
                        }
                        get mediaIsAirplaying() {
                            return xr(this, W.MEDIA_IS_AIRPLAYING)
                        }
                        set mediaIsAirplaying(t) {
                            Vr(this, W.MEDIA_IS_AIRPLAYING, t)
                        }
                        get mediaAirplayUnavailable() {
                            return li(this, W.MEDIA_AIRPLAY_UNAVAILABLE)
                        }
                        set mediaAirplayUnavailable(t) {
                            mi(this, W.MEDIA_AIRPLAY_UNAVAILABLE, t)
                        }
                        handleClick() {
                            let t = new oe.CustomEvent(Fe.MEDIA_AIRPLAY_REQUEST, {
                                composed: !0,
                                bubbles: !0
                            });
                            this.dispatchEvent(t)
                        }
                    };
                oe.customElements.get("media-airplay-button") || oe.customElements.define("media-airplay-button", eu);
                var Gu = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z"/>
</svg>`,
                    bl = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z"/>
</svg>`,
                    Ko = Ut.createElement("template");
                Ko.innerHTML = `
  <style>
    :host([aria-checked="true"]) slot[name=off] {
      display: none !important;
    }

    
    :host(:not([aria-checked="true"])) slot[name=on] {
      display: none !important;
    }

    :host([aria-checked="true"]) slot[name=tooltip-enable],
    :host(:not([aria-checked="true"])) slot[name=tooltip-disable] {
      display: none;
    }
  </style>

  <slot name="icon">
    <slot name="on">${Gu}</slot>
    <slot name="off">${bl}</slot>
  </slot>
`;
                var Tl = `
  <slot name="tooltip-enable">${vt("Enable captions")}</slot>
  <slot name="tooltip-disable">${vt("Disable captions")}</slot>
`,
                    rt = t => {
                        t.setAttribute("aria-checked", pt(t).toString())
                    },
                    To = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_SUBTITLES_LIST, W.MEDIA_SUBTITLES_SHOWING]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: Ko,
                                tooltipContent: Tl
                            }, t)), this._captionsReady = !1
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.setAttribute("role", "switch"), this.setAttribute("aria-label", vt("closed captions")), rt(this)
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_SUBTITLES_SHOWING && rt(this)
                        }
                        get mediaSubtitlesList() {
                            return zs(this, W.MEDIA_SUBTITLES_LIST)
                        }
                        set mediaSubtitlesList(t) {
                            Yo(this, W.MEDIA_SUBTITLES_LIST, t)
                        }
                        get mediaSubtitlesShowing() {
                            return zs(this, W.MEDIA_SUBTITLES_SHOWING)
                        }
                        set mediaSubtitlesShowing(t) {
                            Yo(this, W.MEDIA_SUBTITLES_SHOWING, t)
                        }
                        handleClick() {
                            this.dispatchEvent(new oe.CustomEvent(Fe.MEDIA_TOGGLE_SUBTITLES_REQUEST, {
                                composed: !0,
                                bubbles: !0
                            }))
                        }
                    },
                    zs = (t, s) => {
                        let d = t.getAttribute(s);
                        return d ? Ot(d) : []
                    },
                    Yo = (t, s, d) => {
                        if (!(d != null && d.length)) {
                            t.removeAttribute(s);
                            return
                        }
                        let g = rr(d);
                        t.getAttribute(s) !== g && t.setAttribute(s, g)
                    };
                oe.customElements.get("media-captions-button") || oe.customElements.define("media-captions-button", To);
                var xn = '<svg aria-hidden="true" viewBox="0 0 24 24"><g><path class="cast_caf_icon_arch0" d="M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z"/><path class="cast_caf_icon_arch1" d="M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z"/><path class="cast_caf_icon_arch2" d="M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z"/><path class="cast_caf_icon_box" d="M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z"/></g></svg>',
                    Xs = '<svg aria-hidden="true" viewBox="0 0 24 24"><g><path class="cast_caf_icon_arch0" d="M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z"/><path class="cast_caf_icon_arch1" d="M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z"/><path class="cast_caf_icon_arch2" d="M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z"/><path class="cast_caf_icon_box" d="M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z"/><path class="cast_caf_icon_boxfill" d="M5,7 L5,8.63 C8,8.6 13.37,14 13.37,17 L19,17 L19,7 Z"/></g></svg>',
                    qo = Ut.createElement("template");
                qo.innerHTML = `
  <style>
  :host([${W.MEDIA_IS_CASTING}]) slot[name=icon] slot:not([name=exit]) {
    display: none !important;
  }

  
  :host(:not([${W.MEDIA_IS_CASTING}])) slot[name=icon] slot:not([name=enter]) {
    display: none !important;
  }

  :host([${W.MEDIA_IS_CASTING}]) slot[name=tooltip-enter],
    :host(:not([${W.MEDIA_IS_CASTING}])) slot[name=tooltip-exit] {
      display: none;
    }
  </style>

  <slot name="icon">
    <slot name="enter">${xn}</slot>
    <slot name="exit">${Xs}</slot>
  </slot>
`;
                var Ku = `
  <slot name="tooltip-enter">${vt("Start casting")}</slot>
  <slot name="tooltip-exit">${vt("Stop casting")}</slot>
`,
                    $o = t => {
                        let s = t.mediaIsCasting ? vt("stop casting") : vt("start casting");
                        t.setAttribute("aria-label", s)
                    },
                    Al = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_IS_CASTING, W.MEDIA_CAST_UNAVAILABLE]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: qo,
                                tooltipContent: Ku
                            }, t))
                        }
                        connectedCallback() {
                            super.connectedCallback(), $o(this)
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_IS_CASTING && $o(this)
                        }
                        get mediaIsCasting() {
                            return xr(this, W.MEDIA_IS_CASTING)
                        }
                        set mediaIsCasting(t) {
                            Vr(this, W.MEDIA_IS_CASTING, t)
                        }
                        get mediaCastUnavailable() {
                            return li(this, W.MEDIA_CAST_UNAVAILABLE)
                        }
                        set mediaCastUnavailable(t) {
                            mi(this, W.MEDIA_CAST_UNAVAILABLE, t)
                        }
                        handleClick() {
                            let t = this.mediaIsCasting ? Fe.MEDIA_EXIT_CAST_REQUEST : Fe.MEDIA_ENTER_CAST_REQUEST;
                            this.dispatchEvent(new oe.CustomEvent(t, {
                                composed: !0,
                                bubbles: !0
                            }))
                        }
                    };
                oe.customElements.get("media-cast-button") || oe.customElements.define("media-cast-button", Al);
                var Zs = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Ts = (t, s, d) => (Zs(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Ln = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    _l = (t, s, d, g) => (Zs(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Cs = (t, s, d) => (Zs(t, s, "access private method"), d),
                    Ds, Qs, Ms, Js, Ps, Sl, kl, jo, wl, ya, Os, As, _s, Ss, eo;

                function xs(t) {
                    return `
    <style>
      :host {
        font: var(--media-font,
          var(--media-font-weight, normal)
          var(--media-font-size, 14px) /
          var(--media-text-content-height, var(--media-control-height, 24px))
          var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));
        color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
        display: var(--media-dialog-display, inline-flex);
        justify-content: center;
        align-items: center;
        
        transition-behavior: allow-discrete;
        visibility: hidden;
        opacity: 0;
        transform: translateY(2px) scale(.99);
        pointer-events: none;
      }

      :host([open]) {
        transition: display .2s, visibility 0s, opacity .2s ease-out, transform .15s ease-out;
        visibility: visible;
        opacity: 1;
        transform: translateY(0) scale(1);
        pointer-events: auto;
      }

      #content {
        display: flex;
        position: relative;
        box-sizing: border-box;
        width: min(320px, 100%);
        word-wrap: break-word;
        max-height: 100%;
        overflow: auto;
        text-align: center;
        line-height: 1.4;
      }
    </style>
    ${this.getSlotTemplateHTML(t)}
  `
                }

                function as(t) {
                    return `
    <slot id="content"></slot>
  `
                }
                var In = {
                        OPEN: "open",
                        ANCHOR: "anchor"
                    },
                    Ns = class extends oe.HTMLElement {
                        constructor() {
                            super(), Ln(this, Js), Ln(this, Sl), Ln(this, jo), Ln(this, ya), Ln(this, As), Ln(this, Ss), Ln(this, Ds, !1), Ln(this, Qs, null), Ln(this, Ms, null), this.addEventListener("invoke", this), this.addEventListener("focusout", this), this.addEventListener("keydown", this)
                        }
                        static get observedAttributes() {
                            return [In.OPEN, In.ANCHOR]
                        }
                        get open() {
                            return xr(this, In.OPEN)
                        }
                        set open(t) {
                            Vr(this, In.OPEN, t)
                        }
                        handleEvent(t) {
                            switch (t.type) {
                                case "invoke":
                                    Cs(this, ya, Os).call(this, t);
                                    break;
                                case "focusout":
                                    Cs(this, As, _s).call(this, t);
                                    break;
                                case "keydown":
                                    Cs(this, Ss, eo).call(this, t);
                                    break
                            }
                        }
                        connectedCallback() {
                            Cs(this, Js, Ps).call(this), this.role || (this.role = "dialog")
                        }
                        attributeChangedCallback(t, s, d) {
                            Cs(this, Js, Ps).call(this), t === In.OPEN && d !== s && (this.open ? Cs(this, Sl, kl).call(this) : Cs(this, jo, wl).call(this))
                        }
                        focus() {
                            _l(this, Qs, Lt());
                            let t = !this.dispatchEvent(new Event("focus", {
                                    composed: !0,
                                    cancelable: !0
                                })),
                                s = !this.dispatchEvent(new Event("focusin", {
                                    composed: !0,
                                    bubbles: !0,
                                    cancelable: !0
                                }));
                            if (t || s) return;
                            let d = this.querySelector('[autofocus], [tabindex]:not([tabindex="-1"]), [role="menu"]');
                            d == null || d.focus()
                        }
                        get keysUsed() {
                            return ["Escape", "Tab"]
                        }
                    };
                Ds = new WeakMap, Qs = new WeakMap, Ms = new WeakMap, Js = new WeakSet, Ps = function() {
                    if (!Ts(this, Ds) && (_l(this, Ds, !0), !this.shadowRoot)) {
                        this.attachShadow({
                            mode: "open"
                        });
                        let t = tr(this.attributes);
                        this.shadowRoot.innerHTML = `
        ${this.constructor.getTemplateHTML(t)}
      `, queueMicrotask(() => {
                            let {
                                style: s
                            } = Pi(this.shadowRoot, ":host");
                            s.setProperty("transition", "display .15s, visibility .15s, opacity .15s ease-in, transform .15s ease-in")
                        })
                    }
                }, Sl = new WeakSet, kl = function() {
                    var t;
                    (t = Ts(this, Ms)) == null || t.setAttribute("aria-expanded", "true"), this.dispatchEvent(new Event("open", {
                        composed: !0,
                        bubbles: !0
                    })), this.addEventListener("transitionend", () => this.focus(), {
                        once: !0
                    })
                }, jo = new WeakSet, wl = function() {
                    var t;
                    (t = Ts(this, Ms)) == null || t.setAttribute("aria-expanded", "false"), this.dispatchEvent(new Event("close", {
                        composed: !0,
                        bubbles: !0
                    }))
                }, ya = new WeakSet, Os = function(t) {
                    _l(this, Ms, t.relatedTarget), Ti(this, t.relatedTarget) || (this.open = !this.open)
                }, As = new WeakSet, _s = function(t) {
                    var s;
                    Ti(this, t.relatedTarget) || ((s = Ts(this, Qs)) == null || s.focus(), Ts(this, Ms) && Ts(this, Ms) !== t.relatedTarget && this.open && (this.open = !1))
                }, Ss = new WeakSet, eo = function(t) {
                    var s, d, g, w, N;
                    let {
                        key: X,
                        ctrlKey: ue,
                        altKey: $e,
                        metaKey: et
                    } = t;
                    ue || $e || et || this.keysUsed.includes(X) && (t.preventDefault(), t.stopPropagation(), X === "Tab" ? (t.shiftKey ? (d = (s = this.previousElementSibling) == null ? void 0 : s.focus) == null || d.call(s) : (w = (g = this.nextElementSibling) == null ? void 0 : g.focus) == null || w.call(g), this.blur()) : X === "Escape" && ((N = Ts(this, Qs)) == null || N.focus(), this.open = !1))
                }, Ns.getTemplateHTML = xs, Ns.getSlotTemplateHTML = as, oe.customElements.get("media-chrome-dialog") || oe.customElements.define("media-chrome-dialog", Ns);
                var Rl = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Ui = (t, s, d) => (Rl(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Wa = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    hn = (t, s, d, g) => (Rl(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    bn = (t, s, d) => (Rl(t, s, "access private method"), d),
                    Nn, zi, Ao, to, Cn, Us, ns, Yn, fn, Fs, ro, mn, ba, Bs, _o, zo, qn, Ll, Hs, io, tu, So, ks, ko, Vs, Ga = Ut.createElement("template");
                Ga.innerHTML = `
  <style>
    :host {
      --_focus-box-shadow: var(--media-focus-box-shadow, inset 0 0 0 2px rgb(27 127 204 / .9));
      --_media-range-padding: var(--media-range-padding, var(--media-control-padding, 10px));

      box-shadow: var(--_focus-visible-box-shadow, none);
      background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));
      height: calc(var(--media-control-height, 24px) + 2 * var(--_media-range-padding));
      display: inline-flex;
      align-items: center;
      
      vertical-align: middle;
      box-sizing: border-box;
      position: relative;
      width: 100px;
      transition: background .15s linear;
      cursor: var(--media-cursor, pointer);
      pointer-events: auto;
      touch-action: none; 
    }

    
    input[type=range]:focus {
      outline: 0;
    }
    input[type=range]:focus::-webkit-slider-runnable-track {
      outline: 0;
    }

    :host(:hover) {
      background: var(--media-control-hover-background, rgb(50 50 70 / .7));
    }

    #leftgap {
      padding-left: var(--media-range-padding-left, var(--_media-range-padding));
    }

    #rightgap {
      padding-right: var(--media-range-padding-right, var(--_media-range-padding));
    }

    #startpoint,
    #endpoint {
      position: absolute;
    }

    #endpoint {
      right: 0;
    }

    #container {
      
      width: var(--media-range-track-width, 100%);
      transform: translate(var(--media-range-track-translate-x, 0px), var(--media-range-track-translate-y, 0px));
      position: relative;
      height: 100%;
      display: flex;
      align-items: center;
      min-width: 40px;
    }

    #range {
      
      display: var(--media-time-range-hover-display, block);
      bottom: var(--media-time-range-hover-bottom, -7px);
      height: var(--media-time-range-hover-height, max(100% + 7px, 25px));
      width: 100%;
      position: absolute;
      cursor: var(--media-cursor, pointer);

      -webkit-appearance: none; 
      -webkit-tap-highlight-color: transparent;
      background: transparent; 
      margin: 0;
      z-index: 1;
    }

    @media (hover: hover) {
      #range {
        bottom: var(--media-time-range-hover-bottom, -5px);
        height: var(--media-time-range-hover-height, max(100% + 5px, 20px));
      }
    }

    
    
    #range::-webkit-slider-thumb {
      -webkit-appearance: none;
      background: transparent;
      width: .1px;
      height: .1px;
    }

    
    #range::-moz-range-thumb {
      background: transparent;
      border: transparent;
      width: .1px;
      height: .1px;
    }

    #appearance {
      height: var(--media-range-track-height, 4px);
      display: flex;
      flex-direction: column;
      justify-content: center;
      width: 100%;
      position: absolute;
      
      will-change: transform;
    }

    #track {
      background: var(--media-range-track-background, rgb(255 255 255 / .2));
      border-radius: var(--media-range-track-border-radius, 1px);
      border: var(--media-range-track-border, none);
      outline: var(--media-range-track-outline);
      outline-offset: var(--media-range-track-outline-offset);
      backdrop-filter: var(--media-range-track-backdrop-filter);
      -webkit-backdrop-filter: var(--media-range-track-backdrop-filter);
      box-shadow: var(--media-range-track-box-shadow, none);
      position: absolute;
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    #progress,
    #pointer {
      position: absolute;
      height: 100%;
      will-change: width;
    }

    #progress {
      background: var(--media-range-bar-color, var(--media-primary-color, rgb(238 238 238)));
      transition: var(--media-range-track-transition);
    }

    #pointer {
      background: var(--media-range-track-pointer-background);
      border-right: var(--media-range-track-pointer-border-right);
      transition: visibility .25s, opacity .25s;
      visibility: hidden;
      opacity: 0;
    }

    @media (hover: hover) {
      :host(:hover) #pointer {
        transition: visibility .5s, opacity .5s;
        visibility: visible;
        opacity: 1;
      }
    }

    #thumb,
    ::slotted([slot=thumb]) {
      width: var(--media-range-thumb-width, 10px);
      height: var(--media-range-thumb-height, 10px);
      transition: var(--media-range-thumb-transition);
      transform: var(--media-range-thumb-transform, none);
      opacity: var(--media-range-thumb-opacity, 1);
      translate: -50%;
      position: absolute;
      left: 0;
      cursor: var(--media-cursor, pointer);
    }

    #thumb {
      border-radius: var(--media-range-thumb-border-radius, 10px);
      background: var(--media-range-thumb-background, var(--media-primary-color, rgb(238 238 238)));
      box-shadow: var(--media-range-thumb-box-shadow, 1px 1px 1px transparent);
      border: var(--media-range-thumb-border, none);
    }

    :host([disabled]) #thumb {
      background-color: #777;
    }

    .segments #appearance {
      height: var(--media-range-segment-hover-height, 7px);
    }

    #track {
      clip-path: url(#segments-clipping);
    }

    #segments {
      --segments-gap: var(--media-range-segments-gap, 2px);
      position: absolute;
      width: 100%;
      height: 100%;
    }

    #segments-clipping {
      transform: translateX(calc(var(--segments-gap) / 2));
    }

    #segments-clipping:empty {
      display: none;
    }

    #segments-clipping rect {
      height: var(--media-range-track-height, 4px);
      y: calc((var(--media-range-segment-hover-height, 7px) - var(--media-range-track-height, 4px)) / 2);
      transition: var(--media-range-segment-transition, transform .1s ease-in-out);
      transform: var(--media-range-segment-transform, scaleY(1));
      transform-origin: center;
    }
  </style>
  <div id="leftgap"></div>
  <div id="container">
    <div id="startpoint"></div>
    <div id="endpoint"></div>
    <div id="appearance">
      <div id="track" part="track">
        <div id="pointer"></div>
        <div id="progress" part="progress"></div>
      </div>
      <slot name="thumb">
        <div id="thumb" part="thumb"></div>
      </slot>
      <svg id="segments"><clipPath id="segments-clipping"></clipPath></svg>
    </div>
    <input id="range" type="range" min="0" max="1" step="any" value="0">
  </div>
  <div id="rightgap"></div>
`;
                var ao = class extends oe.HTMLElement {
                    constructor() {
                        super(), Wa(this, Fs), Wa(this, mn), Wa(this, Bs), Wa(this, zo), Wa(this, Ll), Wa(this, io), Wa(this, So), Wa(this, ko), Wa(this, Nn, void 0), Wa(this, zi, void 0), Wa(this, Ao, void 0), Wa(this, to, void 0), Wa(this, Cn, {}), Wa(this, Us, []), Wa(this, ns, () => {
                            if (this.range.matches(":focus-visible")) {
                                let {
                                    style: t
                                } = Pi(this.shadowRoot, ":host");
                                t.setProperty("--_focus-visible-box-shadow", "var(--_focus-box-shadow)")
                            }
                        }), Wa(this, Yn, () => {
                            let {
                                style: t
                            } = Pi(this.shadowRoot, ":host");
                            t.removeProperty("--_focus-visible-box-shadow")
                        }), Wa(this, fn, () => {
                            let t = this.shadowRoot.querySelector("#segments-clipping");
                            t && t.parentNode.append(t)
                        }), this.shadowRoot || (this.attachShadow({
                            mode: "open"
                        }), this.shadowRoot.appendChild(Ga.content.cloneNode(!0))), this.container = this.shadowRoot.querySelector("#container"), hn(this, Ao, this.shadowRoot.querySelector("#startpoint")), hn(this, to, this.shadowRoot.querySelector("#endpoint")), this.range = this.shadowRoot.querySelector("#range"), this.appearance = this.shadowRoot.querySelector("#appearance")
                    }
                    static get observedAttributes() {
                        return ["disabled", "aria-disabled", ht.MEDIA_CONTROLLER]
                    }
                    attributeChangedCallback(t, s, d) {
                        var g, w, N, X, ue;
                        t === ht.MEDIA_CONTROLLER ? (s && ((w = (g = Ui(this, Nn)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), hn(this, Nn, null)), d && this.isConnected && (hn(this, Nn, (N = this.getRootNode()) == null ? void 0 : N.getElementById(d)), (ue = (X = Ui(this, Nn)) == null ? void 0 : X.associateElement) == null || ue.call(X, this))) : (t === "disabled" || t === "aria-disabled" && s !== d) && (d == null ? (this.range.removeAttribute(t), bn(this, mn, ba).call(this)) : (this.range.setAttribute(t, d), bn(this, Bs, _o).call(this)))
                    }
                    connectedCallback() {
                        var t, s, d;
                        let {
                            style: g
                        } = Pi(this.shadowRoot, ":host");
                        g.setProperty("display", `var(--media-control-display, var(--${this.localName}-display, inline-flex))`), Ui(this, Cn).pointer = Pi(this.shadowRoot, "#pointer"), Ui(this, Cn).progress = Pi(this.shadowRoot, "#progress"), Ui(this, Cn).thumb = Pi(this.shadowRoot, '#thumb, ::slotted([slot="thumb"])'), Ui(this, Cn).activeSegment = Pi(this.shadowRoot, "#segments-clipping rect:nth-child(0)");
                        let w = this.getAttribute(ht.MEDIA_CONTROLLER);
                        w && (hn(this, Nn, (t = this.getRootNode()) == null ? void 0 : t.getElementById(w)), (d = (s = Ui(this, Nn)) == null ? void 0 : s.associateElement) == null || d.call(s, this)), this.updateBar(), this.shadowRoot.addEventListener("focusin", Ui(this, ns)), this.shadowRoot.addEventListener("focusout", Ui(this, Yn)), bn(this, mn, ba).call(this), Et(this.container, Ui(this, fn))
                    }
                    disconnectedCallback() {
                        var t, s;
                        bn(this, Bs, _o).call(this), (s = (t = Ui(this, Nn)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this), hn(this, Nn, null), this.shadowRoot.removeEventListener("focusin", Ui(this, ns)), this.shadowRoot.removeEventListener("focusout", Ui(this, Yn)), vr(this.container, Ui(this, fn))
                    }
                    updatePointerBar(t) {
                        var s;
                        (s = Ui(this, Cn).pointer) == null || s.style.setProperty("width", `${this.getPointerRatio(t)*100}%`)
                    }
                    updateBar() {
                        var t, s;
                        let d = this.range.valueAsNumber * 100;
                        (t = Ui(this, Cn).progress) == null || t.style.setProperty("width", `${d}%`), (s = Ui(this, Cn).thumb) == null || s.style.setProperty("left", `${d}%`)
                    }
                    updateSegments(t) {
                        let s = this.shadowRoot.querySelector("#segments-clipping");
                        if (s.textContent = "", this.container.classList.toggle("segments", !!(t != null && t.length)), !(t != null && t.length)) return;
                        let d = [...new Set([+this.range.min, ...t.flatMap(w => [w.start, w.end]), +this.range.max])];
                        hn(this, Us, [...d]);
                        let g = d.pop();
                        for (let [w, N] of d.entries()) {
                            let [X, ue] = [w === 0, w === d.length - 1], $e = X ? "calc(var(--segments-gap) / -1)" : `${N*100}%`, et = `calc(${((ue?g:d[w+1])-N)*100}%${X||ue?"":" - var(--segments-gap)"})`, ur = Ut.createElementNS("http://www.w3.org/2000/svg", "rect"), gr = Pi(this.shadowRoot, `#segments-clipping rect:nth-child(${w+1})`);
                            gr.style.setProperty("x", $e), gr.style.setProperty("width", et), s.append(ur)
                        }
                    }
                    getPointerRatio(t) {
                        return Hn(t.clientX, t.clientY, Ui(this, Ao).getBoundingClientRect(), Ui(this, to).getBoundingClientRect())
                    }
                    get dragging() {
                        return this.hasAttribute("dragging")
                    }
                    handleEvent(t) {
                        switch (t.type) {
                            case "pointermove":
                                bn(this, ko, Vs).call(this, t);
                                break;
                            case "input":
                                this.updateBar();
                                break;
                            case "pointerenter":
                                bn(this, Ll, Hs).call(this, t);
                                break;
                            case "pointerdown":
                                bn(this, zo, qn).call(this, t);
                                break;
                            case "pointerup":
                                bn(this, io, tu).call(this);
                                break;
                            case "pointerleave":
                                bn(this, So, ks).call(this);
                                break
                        }
                    }
                    get keysUsed() {
                        return ["ArrowUp", "ArrowRight", "ArrowDown", "ArrowLeft"]
                    }
                };
                Nn = new WeakMap, zi = new WeakMap, Ao = new WeakMap, to = new WeakMap, Cn = new WeakMap, Us = new WeakMap, ns = new WeakMap, Yn = new WeakMap, fn = new WeakMap, Fs = new WeakSet, ro = function(t) {
                    let s = Ui(this, Cn).activeSegment;
                    if (!s) return;
                    let d = this.getPointerRatio(t),
                        g = `#segments-clipping rect:nth-child(${Ui(this,Us).findIndex((w,N,X)=>{let ue=X[N+1];return ue!=null&&d>=w&&d<=ue})+1})`;
                    (s.selectorText != g || !s.style.transform) && (s.selectorText = g, s.style.setProperty("transform", "var(--media-range-segment-hover-transform, scaleY(2))"))
                }, mn = new WeakSet, ba = function() {
                    this.hasAttribute("disabled") || (this.addEventListener("input", this), this.addEventListener("pointerdown", this), this.addEventListener("pointerenter", this))
                }, Bs = new WeakSet, _o = function() {
                    var t, s;
                    this.removeEventListener("input", this), this.removeEventListener("pointerdown", this), this.removeEventListener("pointerenter", this), (t = oe.window) == null || t.removeEventListener("pointerup", this), (s = oe.window) == null || s.removeEventListener("pointermove", this)
                }, zo = new WeakSet, qn = function(t) {
                    var s;
                    hn(this, zi, t.composedPath().includes(this.range)), (s = oe.window) == null || s.addEventListener("pointerup", this)
                }, Ll = new WeakSet, Hs = function(t) {
                    var s;
                    t.pointerType !== "mouse" && bn(this, zo, qn).call(this, t), this.addEventListener("pointerleave", this), (s = oe.window) == null || s.addEventListener("pointermove", this)
                }, io = new WeakSet, tu = function() {
                    var t;
                    (t = oe.window) == null || t.removeEventListener("pointerup", this), this.toggleAttribute("dragging", !1), this.range.disabled = this.hasAttribute("disabled")
                }, So = new WeakSet, ks = function() {
                    var t, s;
                    this.removeEventListener("pointerleave", this), (t = oe.window) == null || t.removeEventListener("pointermove", this), this.toggleAttribute("dragging", !1), this.range.disabled = this.hasAttribute("disabled"), (s = Ui(this, Cn).activeSegment) == null || s.style.removeProperty("transform")
                }, ko = new WeakSet, Vs = function(t) {
                    this.toggleAttribute("dragging", t.buttons === 1 || t.pointerType !== "mouse"), this.updatePointerBar(t), bn(this, Fs, ro).call(this, t), this.dragging && (t.pointerType !== "mouse" || !Ui(this, zi)) && (this.range.disabled = !0, this.range.valueAsNumber = this.getPointerRatio(t), this.range.dispatchEvent(new Event("input", {
                        bubbles: !0,
                        composed: !0
                    })))
                }, oe.customElements.get("media-chrome-range") || oe.customElements.define("media-chrome-range", ao);
                var Xo = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    $n = (t, s, d) => (Xo(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    no = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    ss = (t, s, d, g) => (Xo(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    an, Ws = Ut.createElement("template");
                Ws.innerHTML = `
  <style>
    :host {
      
      box-sizing: border-box;
      display: var(--media-control-display, var(--media-control-bar-display, inline-flex));
      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
      --media-loading-indicator-icon-height: 44px;
    }

    ::slotted(media-time-range),
    ::slotted(media-volume-range) {
      min-height: 100%;
    }

    ::slotted(media-time-range),
    ::slotted(media-clip-selector) {
      flex-grow: 1;
    }

    ::slotted([role="menu"]) {
      position: absolute;
    }
  </style>

  <slot></slot>
`;
                var Dn = class extends oe.HTMLElement {
                    constructor() {
                        super(), no(this, an, void 0), this.shadowRoot || (this.attachShadow({
                            mode: "open"
                        }), this.shadowRoot.appendChild(Ws.content.cloneNode(!0)))
                    }
                    static get observedAttributes() {
                        return [ht.MEDIA_CONTROLLER]
                    }
                    attributeChangedCallback(t, s, d) {
                        var g, w, N, X, ue;
                        t === ht.MEDIA_CONTROLLER && (s && ((w = (g = $n(this, an)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), ss(this, an, null)), d && this.isConnected && (ss(this, an, (N = this.getRootNode()) == null ? void 0 : N.getElementById(d)), (ue = (X = $n(this, an)) == null ? void 0 : X.associateElement) == null || ue.call(X, this)))
                    }
                    connectedCallback() {
                        var t, s, d;
                        let g = this.getAttribute(ht.MEDIA_CONTROLLER);
                        g && (ss(this, an, (t = this.getRootNode()) == null ? void 0 : t.getElementById(g)), (d = (s = $n(this, an)) == null ? void 0 : s.associateElement) == null || d.call(s, this))
                    }
                    disconnectedCallback() {
                        var t, s;
                        (s = (t = $n(this, an)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this), ss(this, an, null)
                    }
                };
                an = new WeakMap, oe.customElements.get("media-control-bar") || oe.customElements.define("media-control-bar", Dn);
                var Gs = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    so = (t, s, d) => (Gs(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Yu = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Ks = (t, s, d, g) => (Gs(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Xa, Zo = Ut.createElement("template");
                Zo.innerHTML = `
  <style>
    :host {
      font: var(--media-font,
        var(--media-font-weight, normal)
        var(--media-font-size, 14px) /
        var(--media-text-content-height, var(--media-control-height, 24px))
        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));
      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
      background: var(--media-text-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7))));
      padding: var(--media-control-padding, 10px);
      display: inline-flex;
      justify-content: center;
      align-items: center;
      vertical-align: middle;
      box-sizing: border-box;
      text-align: center;
      pointer-events: auto;
    }

    
    :host(:focus-visible) {
      box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);
      outline: 0;
    }

    
    :host(:where(:focus)) {
      box-shadow: none;
      outline: 0;
    }
  </style>
  <slot></slot>
`;
                var oo = class extends oe.HTMLElement {
                    constructor() {
                        super(), Yu(this, Xa, void 0), this.shadowRoot || (this.attachShadow({
                            mode: "open"
                        }), this.shadowRoot.appendChild(Zo.content.cloneNode(!0)))
                    }
                    static get observedAttributes() {
                        return [ht.MEDIA_CONTROLLER]
                    }
                    attributeChangedCallback(t, s, d) {
                        var g, w, N, X, ue;
                        t === ht.MEDIA_CONTROLLER && (s && ((w = (g = so(this, Xa)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), Ks(this, Xa, null)), d && this.isConnected && (Ks(this, Xa, (N = this.getRootNode()) == null ? void 0 : N.getElementById(d)), (ue = (X = so(this, Xa)) == null ? void 0 : X.associateElement) == null || ue.call(X, this)))
                    }
                    connectedCallback() {
                        var t, s, d;
                        let {
                            style: g
                        } = Pi(this.shadowRoot, ":host");
                        g.setProperty("display", `var(--media-control-display, var(--${this.localName}-display, inline-flex))`);
                        let w = this.getAttribute(ht.MEDIA_CONTROLLER);
                        w && (Ks(this, Xa, (t = this.getRootNode()) == null ? void 0 : t.getElementById(w)), (d = (s = so(this, Xa)) == null ? void 0 : s.associateElement) == null || d.call(s, this))
                    }
                    disconnectedCallback() {
                        var t, s;
                        (s = (t = so(this, Xa)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this), Ks(this, Xa, null)
                    }
                };
                Xa = new WeakMap, oe.customElements.get("media-text-display") || oe.customElements.define("media-text-display", oo);
                var Qo = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Jo = (t, s, d) => (Qo(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    el = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    v = (t, s, d, g) => (Qo(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    T, R = class extends oo {
                        constructor() {
                            super(), el(this, T, void 0), v(this, T, this.shadowRoot.querySelector("slot")), Jo(this, T).textContent = qe(0)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_DURATION]
                        }
                        attributeChangedCallback(t, s, d) {
                            t === W.MEDIA_DURATION && (Jo(this, T).textContent = qe(+d)), super.attributeChangedCallback(t, s, d)
                        }
                        get mediaDuration() {
                            return Qr(this, W.MEDIA_DURATION)
                        }
                        set mediaDuration(t) {
                            Nr(this, W.MEDIA_DURATION, t)
                        }
                    };
                T = new WeakMap, oe.customElements.get("media-duration-display") || oe.customElements.define("media-duration-display", R);
                var J = {
                        2: vt("Network Error"),
                        3: vt("Decode Error"),
                        4: vt("Source Not Supported"),
                        5: vt("Encryption Error")
                    },
                    ye = {
                        2: vt("A network error caused the media download to fail."),
                        3: vt("A media error caused playback to be aborted. The media could be corrupt or your browser does not support this format."),
                        4: vt("An unsupported error occurred. The server or network failed, or your browser does not support this format."),
                        5: vt("The media is encrypted and there are no keys to decrypt it.")
                    },
                    Ye = t => {
                        var s, d;
                        return t.code === 1 ? null : {
                            title: (s = J[t.code]) != null ? s : `Error ${t.code}`,
                            message: (d = ye[t.code]) != null ? d : t.message
                        }
                    },
                    Nt = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    jt = (t, s, d) => (Nt(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Xi = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Xr = (t, s, d, g) => (Nt(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    nn;

                function Mn(t) {
                    return `
    <style>
      :host {
        background: rgb(20 20 30 / .8);
      }

      #content {
        display: block;
        padding: 1.2em 1.5em;
      }

      h3,
      p {
        margin-block: 0 .3em;
      }
    </style>
    <slot name="error-${t.mediaerrorcode}" id="content">
      ${jn({code:+t.mediaerrorcode,message:t.mediaerrormessage})}
    </slot>
  `
                }

                function Tn(t) {
                    return t.code && Ye(t) !== null
                }

                function jn(t) {
                    var s;
                    let {
                        title: d,
                        message: g
                    } = (s = Ye(t)) != null ? s : {}, w = "";
                    return d && (w += `<slot name="error-${t.code}-title"><h3>${d}</h3></slot>`), g && (w += `<slot name="error-${t.code}-message"><p>${g}</p></slot>`), w
                }
                var Il = [W.MEDIA_ERROR_CODE, W.MEDIA_ERROR_MESSAGE],
                    wo = class extends Ns {
                        constructor() {
                            super(...arguments), Xi(this, nn, null)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, ...Il]
                        }
                        formatErrorMessage(t) {
                            return this.constructor.formatErrorMessage(t)
                        }
                        attributeChangedCallback(t, s, d) {
                            var g;
                            if (super.attributeChangedCallback(t, s, d), !Il.includes(t)) return;
                            let w = (g = this.mediaError) != null ? g : {
                                code: this.mediaErrorCode,
                                message: this.mediaErrorMessage
                            };
                            this.open = Tn(w), this.open && (this.shadowRoot.querySelector("slot").name = `error-${this.mediaErrorCode}`, this.shadowRoot.querySelector("#content").innerHTML = this.formatErrorMessage(w))
                        }
                        get mediaError() {
                            return jt(this, nn)
                        }
                        set mediaError(t) {
                            Xr(this, nn, t)
                        }
                        get mediaErrorCode() {
                            return Qr(this, "mediaerrorcode")
                        }
                        set mediaErrorCode(t) {
                            Nr(this, "mediaerrorcode", t)
                        }
                        get mediaErrorMessage() {
                            return li(this, "mediaerrormessage")
                        }
                        set mediaErrorMessage(t) {
                            mi(this, "mediaerrormessage", t)
                        }
                    };
                nn = new WeakMap, wo.getSlotTemplateHTML = Mn, wo.formatErrorMessage = jn, oe.customElements.get("media-error-dialog") || oe.customElements.define("media-error-dialog", wo);
                var ru = wo,
                    ch = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M16 3v2.5h3.5V9H22V3h-6ZM4 9h2.5V5.5H10V3H4v6Zm15.5 9.5H16V21h6v-6h-2.5v3.5ZM6.5 15H4v6h6v-2.5H6.5V15Z"/>
</svg>`,
                    hh = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M18.5 6.5V3H16v6h6V6.5h-3.5ZM16 21h2.5v-3.5H22V15h-6v6ZM4 17.5h3.5V21H10v-6H4v2.5Zm3.5-11H4V9h6V3H7.5v3.5Z"/>
</svg>`,
                    qd = Ut.createElement("template");
                qd.innerHTML = `
  <style>
    :host([${W.MEDIA_IS_FULLSCREEN}]) slot[name=icon] slot:not([name=exit]) {
      display: none !important;
    }

    
    :host(:not([${W.MEDIA_IS_FULLSCREEN}])) slot[name=icon] slot:not([name=enter]) {
      display: none !important;
    }

    :host([${W.MEDIA_IS_FULLSCREEN}]) slot[name=tooltip-enter],
    :host(:not([${W.MEDIA_IS_FULLSCREEN}])) slot[name=tooltip-exit] {
      display: none;
    }
  </style>

  <slot name="icon">
    <slot name="enter">${ch}</slot>
    <slot name="exit">${hh}</slot>
  </slot>
`;
                var $d = `
  <slot name="tooltip-enter">${vt("Enter fullscreen mode")}</slot>
  <slot name="tooltip-exit">${vt("Exit fullscreen mode")}</slot>
`,
                    jd = t => {
                        let s = t.mediaIsFullscreen ? vt("exit fullscreen mode") : vt("enter fullscreen mode");
                        t.setAttribute("aria-label", s)
                    },
                    zd = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_IS_FULLSCREEN, W.MEDIA_FULLSCREEN_UNAVAILABLE]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: qd,
                                tooltipContent: $d
                            }, t))
                        }
                        connectedCallback() {
                            super.connectedCallback(), jd(this)
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_IS_FULLSCREEN && jd(this)
                        }
                        get mediaFullscreenUnavailable() {
                            return li(this, W.MEDIA_FULLSCREEN_UNAVAILABLE)
                        }
                        set mediaFullscreenUnavailable(t) {
                            mi(this, W.MEDIA_FULLSCREEN_UNAVAILABLE, t)
                        }
                        get mediaIsFullscreen() {
                            return xr(this, W.MEDIA_IS_FULLSCREEN)
                        }
                        set mediaIsFullscreen(t) {
                            Vr(this, W.MEDIA_IS_FULLSCREEN, t)
                        }
                        handleClick() {
                            let t = this.mediaIsFullscreen ? Fe.MEDIA_EXIT_FULLSCREEN_REQUEST : Fe.MEDIA_ENTER_FULLSCREEN_REQUEST;
                            this.dispatchEvent(new oe.CustomEvent(t, {
                                composed: !0,
                                bubbles: !0
                            }))
                        }
                    };
                oe.customElements.get("media-fullscreen-button") || oe.customElements.define("media-fullscreen-button", zd);
                var {
                    MEDIA_TIME_IS_LIVE: iu,
                    MEDIA_PAUSED: Cl
                } = W, {
                    MEDIA_SEEK_TO_LIVE_REQUEST: Xd,
                    MEDIA_PLAY_REQUEST: os
                } = Fe, Ys = '<svg viewBox="0 0 6 12"><circle cx="3" cy="6" r="2"></circle></svg>', Zd = Ut.createElement("template");
                Zd.innerHTML = `
  <style>
  :host { --media-tooltip-display: none; }
  
  slot[name=indicator] > *,
  :host ::slotted([slot=indicator]) {
    
    min-width: auto;
    fill: var(--media-live-button-icon-color, rgb(140, 140, 140));
    color: var(--media-live-button-icon-color, rgb(140, 140, 140));
  }

  :host([${iu}]:not([${Cl}])) slot[name=indicator] > *,
  :host([${iu}]:not([${Cl}])) ::slotted([slot=indicator]) {
    fill: var(--media-live-button-indicator-color, rgb(255, 0, 0));
    color: var(--media-live-button-indicator-color, rgb(255, 0, 0));
  }

  :host([${iu}]:not([${Cl}])) {
    cursor: var(--media-cursor, not-allowed);
  }

  slot[name=text]{
    text-transform: uppercase;
  }

  </style>

  <slot name="indicator">${Ys}</slot>
  
  <slot name="spacer">&nbsp;</slot><slot name="text">${vt("live")}</slot>
`;
                var Qd = t => {
                        let s = t.mediaPaused || !t.mediaTimeIsLive,
                            d = vt(s ? "seek to live" : "playing live");
                        t.setAttribute("aria-label", d), s ? t.removeAttribute("aria-disabled") : t.setAttribute("aria-disabled", "true")
                    },
                    fh = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, Cl, iu]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: Zd
                            }, t))
                        }
                        connectedCallback() {
                            Qd(this), super.connectedCallback()
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), Qd(this)
                        }
                        get mediaPaused() {
                            return xr(this, W.MEDIA_PAUSED)
                        }
                        set mediaPaused(t) {
                            Vr(this, W.MEDIA_PAUSED, t)
                        }
                        get mediaTimeIsLive() {
                            return xr(this, W.MEDIA_TIME_IS_LIVE)
                        }
                        set mediaTimeIsLive(t) {
                            Vr(this, W.MEDIA_TIME_IS_LIVE, t)
                        }
                        handleClick() {
                            !this.mediaPaused && this.mediaTimeIsLive || (this.dispatchEvent(new oe.CustomEvent(Xd, {
                                composed: !0,
                                bubbles: !0
                            })), this.hasAttribute(Cl) && this.dispatchEvent(new oe.CustomEvent(os, {
                                composed: !0,
                                bubbles: !0
                            })))
                        }
                    };
                oe.customElements.get("media-live-button") || oe.customElements.define("media-live-button", fh);
                var Jd = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Dl = (t, s, d) => (Jd(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    ec = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    ls = (t, s, d, g) => (Jd(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    us, au, nu = {
                        LOADING_DELAY: "loadingdelay",
                        NO_AUTOHIDE: "noautohide"
                    },
                    su = 500,
                    qu = Ut.createElement("template"),
                    tc = `
<svg aria-hidden="true" viewBox="0 0 100 100">
  <path d="M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50">
    <animateTransform
       attributeName="transform"
       attributeType="XML"
       type="rotate"
       dur="1s"
       from="0 50 50"
       to="360 50 50"
       repeatCount="indefinite" />
  </path>
</svg>
`;
                qu.innerHTML = `
<style>
:host {
  display: var(--media-control-display, var(--media-loading-indicator-display, inline-block));
  vertical-align: middle;
  box-sizing: border-box;
  --_loading-indicator-delay: var(--media-loading-indicator-transition-delay, ${su}ms);
}

#status {
  color: rgba(0,0,0,0);
  width: 0px;
  height: 0px;
}

:host slot[name=icon] > *,
:host ::slotted([slot=icon]) {
  opacity: var(--media-loading-indicator-opacity, 0);
  transition: opacity 0.15s;
}

:host([${W.MEDIA_LOADING}]:not([${W.MEDIA_PAUSED}])) slot[name=icon] > *,
:host([${W.MEDIA_LOADING}]:not([${W.MEDIA_PAUSED}])) ::slotted([slot=icon]) {
  opacity: var(--media-loading-indicator-opacity, 1);
  transition: opacity 0.15s var(--_loading-indicator-delay);
}

:host #status {
  visibility: var(--media-loading-indicator-opacity, hidden);
  transition: visibility 0.15s;
}

:host([${W.MEDIA_LOADING}]:not([${W.MEDIA_PAUSED}])) #status {
  visibility: var(--media-loading-indicator-opacity, visible);
  transition: visibility 0.15s var(--_loading-indicator-delay);
}

svg, img, ::slotted(svg), ::slotted(img) {
  width: var(--media-loading-indicator-icon-width);
  height: var(--media-loading-indicator-icon-height, 100px);
  fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));
  vertical-align: middle;
}
</style>

<slot name="icon">${tc}</slot>
<div id="status" role="status" aria-live="polite">${vt("media loading")}</div>
`;
                var ou = class extends oe.HTMLElement {
                    constructor() {
                        if (super(), ec(this, us, void 0), ec(this, au, su), !this.shadowRoot) {
                            let t = this.attachShadow({
                                    mode: "open"
                                }),
                                s = qu.content.cloneNode(!0);
                            t.appendChild(s)
                        }
                    }
                    static get observedAttributes() {
                        return [ht.MEDIA_CONTROLLER, W.MEDIA_PAUSED, W.MEDIA_LOADING, nu.LOADING_DELAY]
                    }
                    attributeChangedCallback(t, s, d) {
                        var g, w, N, X, ue;
                        t === nu.LOADING_DELAY && s !== d ? this.loadingDelay = Number(d) : t === ht.MEDIA_CONTROLLER && (s && ((w = (g = Dl(this, us)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), ls(this, us, null)), d && this.isConnected && (ls(this, us, (N = this.getRootNode()) == null ? void 0 : N.getElementById(d)), (ue = (X = Dl(this, us)) == null ? void 0 : X.associateElement) == null || ue.call(X, this)))
                    }
                    connectedCallback() {
                        var t, s, d;
                        let g = this.getAttribute(ht.MEDIA_CONTROLLER);
                        g && (ls(this, us, (t = this.getRootNode()) == null ? void 0 : t.getElementById(g)), (d = (s = Dl(this, us)) == null ? void 0 : s.associateElement) == null || d.call(s, this))
                    }
                    disconnectedCallback() {
                        var t, s;
                        (s = (t = Dl(this, us)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this), ls(this, us, null)
                    }
                    get loadingDelay() {
                        return Dl(this, au)
                    }
                    set loadingDelay(t) {
                        ls(this, au, t);
                        let {
                            style: s
                        } = Pi(this.shadowRoot, ":host");
                        s.setProperty("--_loading-indicator-delay", `var(--media-loading-indicator-transition-delay, ${t}ms)`)
                    }
                    get mediaPaused() {
                        return xr(this, W.MEDIA_PAUSED)
                    }
                    set mediaPaused(t) {
                        Vr(this, W.MEDIA_PAUSED, t)
                    }
                    get mediaLoading() {
                        return xr(this, W.MEDIA_LOADING)
                    }
                    set mediaLoading(t) {
                        Vr(this, W.MEDIA_LOADING, t)
                    }
                    get mediaController() {
                        return li(this, ht.MEDIA_CONTROLLER)
                    }
                    set mediaController(t) {
                        mi(this, ht.MEDIA_CONTROLLER, t)
                    }
                    get noAutohide() {
                        return xr(this, nu.NO_AUTOHIDE)
                    }
                    set noAutohide(t) {
                        Vr(this, nu.NO_AUTOHIDE, t)
                    }
                };
                us = new WeakMap, au = new WeakMap, oe.customElements.get("media-loading-indicator") || oe.customElements.define("media-loading-indicator", ou);
                var {
                    MEDIA_VOLUME_LEVEL: Ro
                } = W, mh = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M16.5 12A4.5 4.5 0 0 0 14 8v2.18l2.45 2.45a4.22 4.22 0 0 0 .05-.63Zm2.5 0a6.84 6.84 0 0 1-.54 2.64L20 16.15A8.8 8.8 0 0 0 21 12a9 9 0 0 0-7-8.77v2.06A7 7 0 0 1 19 12ZM4.27 3 3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25A6.92 6.92 0 0 1 14 18.7v2.06A9 9 0 0 0 17.69 19l2 2.05L21 19.73l-9-9L4.27 3ZM12 4 9.91 6.09 12 8.18V4Z"/>
</svg>`, Ml = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4Z"/>
</svg>`, $u = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4ZM14 3.23v2.06a7 7 0 0 1 0 13.42v2.06a9 9 0 0 0 0-17.54Z"/>
</svg>`, rc = Ut.createElement("template");
                rc.innerHTML = `
  <style>
  
  :host(:not([${Ro}])) slot[name=icon] slot:not([name=high]), 
  :host([${Ro}=high]) slot[name=icon] slot:not([name=high]) {
    display: none !important;
  }

  :host([${Ro}=off]) slot[name=icon] slot:not([name=off]) {
    display: none !important;
  }

  :host([${Ro}=low]) slot[name=icon] slot:not([name=low]) {
    display: none !important;
  }

  :host([${Ro}=medium]) slot[name=icon] slot:not([name=medium]) {
    display: none !important;
  }

  :host(:not([${Ro}=off])) slot[name=tooltip-unmute],
  :host([${Ro}=off]) slot[name=tooltip-mute] {
    display: none;
  }
  </style>

  <slot name="icon">
    <slot name="off">${mh}</slot>
    <slot name="low">${Ml}</slot>
    <slot name="medium">${Ml}</slot>
    <slot name="high">${$u}</slot>
  </slot>
`;
                var ic = `
  <slot name="tooltip-mute">${vt("Mute")}</slot>
  <slot name="tooltip-unmute">${vt("Unmute")}</slot>
`,
                    ac = t => {
                        let s = t.mediaVolumeLevel === "off" ? vt("unmute") : vt("mute");
                        t.setAttribute("aria-label", s)
                    },
                    nc = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_VOLUME_LEVEL]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: rc,
                                tooltipContent: ic
                            }, t))
                        }
                        connectedCallback() {
                            ac(this), super.connectedCallback()
                        }
                        attributeChangedCallback(t, s, d) {
                            t === W.MEDIA_VOLUME_LEVEL && ac(this), super.attributeChangedCallback(t, s, d)
                        }
                        get mediaVolumeLevel() {
                            return li(this, W.MEDIA_VOLUME_LEVEL)
                        }
                        set mediaVolumeLevel(t) {
                            mi(this, W.MEDIA_VOLUME_LEVEL, t)
                        }
                        handleClick() {
                            let t = this.mediaVolumeLevel === "off" ? Fe.MEDIA_UNMUTE_REQUEST : Fe.MEDIA_MUTE_REQUEST;
                            this.dispatchEvent(new oe.CustomEvent(t, {
                                composed: !0,
                                bubbles: !0
                            }))
                        }
                    };
                oe.customElements.get("media-mute-button") || oe.customElements.define("media-mute-button", nc);
                var lu = `<svg aria-hidden="true" viewBox="0 0 28 24">
  <path d="M24 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Zm-1 16H5V5h18v14Zm-3-8h-7v5h7v-5Z"/>
</svg>`,
                    Pl = Ut.createElement("template");
                Pl.innerHTML = `
  <style>
  :host([${W.MEDIA_IS_PIP}]) slot[name=icon] slot:not([name=exit]) {
    display: none !important;
  }

  
  :host(:not([${W.MEDIA_IS_PIP}])) slot[name=icon] slot:not([name=enter]) {
    display: none !important;
  }

  :host([${W.MEDIA_IS_PIP}]) slot[name=tooltip-enter],
  :host(:not([${W.MEDIA_IS_PIP}])) slot[name=tooltip-exit] {
    display: none;
  }
  </style>

  <slot name="icon">
    <slot name="enter">${lu}</slot>
    <slot name="exit">${lu}</slot>
  </slot>
`;
                var vh = `
  <slot name="tooltip-enter">${vt("Enter picture in picture mode")}</slot>
  <slot name="tooltip-exit">${vt("Exit picture in picture mode")}</slot>
`,
                    ju = t => {
                        let s = t.mediaIsPip ? vt("exit picture in picture mode") : vt("enter picture in picture mode");
                        t.setAttribute("aria-label", s)
                    },
                    ph = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_IS_PIP, W.MEDIA_PIP_UNAVAILABLE]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: Pl,
                                tooltipContent: vh
                            }, t))
                        }
                        connectedCallback() {
                            ju(this), super.connectedCallback()
                        }
                        attributeChangedCallback(t, s, d) {
                            t === W.MEDIA_IS_PIP && ju(this), super.attributeChangedCallback(t, s, d)
                        }
                        get mediaPipUnavailable() {
                            return li(this, W.MEDIA_PIP_UNAVAILABLE)
                        }
                        set mediaPipUnavailable(t) {
                            mi(this, W.MEDIA_PIP_UNAVAILABLE, t)
                        }
                        get mediaIsPip() {
                            return xr(this, W.MEDIA_IS_PIP)
                        }
                        set mediaIsPip(t) {
                            Vr(this, W.MEDIA_IS_PIP, t)
                        }
                        handleClick() {
                            let t = this.mediaIsPip ? Fe.MEDIA_EXIT_PIP_REQUEST : Fe.MEDIA_ENTER_PIP_REQUEST;
                            this.dispatchEvent(new oe.CustomEvent(t, {
                                composed: !0,
                                bubbles: !0
                            }))
                        }
                    };
                oe.customElements.get("media-pip-button") || oe.customElements.define("media-pip-button", ph);
                var gh = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    tl = (t, s, d) => (gh(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Eh = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    lo, Ol = {
                        RATES: "rates"
                    },
                    sc = [1, 1.2, 1.5, 1.7, 2],
                    xl = 1,
                    uu = Ut.createElement("template");
                uu.innerHTML = `
  <style>
    :host {
      min-width: 5ch;
      padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));
    }
  </style>
  <slot name="icon"></slot>
`;
                var oc = class extends cn {
                    constructor(t = {}) {
                        super(le({
                            slotTemplate: uu,
                            tooltipContent: vt("Playback rate")
                        }, t)), Eh(this, lo, new ke(this, Ol.RATES, {
                            defaultValue: sc
                        })), this.container = this.shadowRoot.querySelector('slot[name="icon"]'), this.container.innerHTML = `${xl}x`
                    }
                    static get observedAttributes() {
                        return [...super.observedAttributes, W.MEDIA_PLAYBACK_RATE, Ol.RATES]
                    }
                    attributeChangedCallback(t, s, d) {
                        if (super.attributeChangedCallback(t, s, d), t === Ol.RATES && (tl(this, lo).value = d), t === W.MEDIA_PLAYBACK_RATE) {
                            let g = d ? +d : Number.NaN,
                                w = Number.isNaN(g) ? xl : g;
                            this.container.innerHTML = `${w}x`, this.setAttribute("aria-label", vt("Playback rate {playbackRate}", {
                                playbackRate: w
                            }))
                        }
                    }
                    get rates() {
                        return tl(this, lo)
                    }
                    set rates(t) {
                        t ? Array.isArray(t) && (tl(this, lo).value = t.join(" ")) : tl(this, lo).value = ""
                    }
                    get mediaPlaybackRate() {
                        return Qr(this, W.MEDIA_PLAYBACK_RATE, xl)
                    }
                    set mediaPlaybackRate(t) {
                        Nr(this, W.MEDIA_PLAYBACK_RATE, t)
                    }
                    handleClick() {
                        var t, s;
                        let d = Array.from(this.rates.values(), N => +N).sort((N, X) => N - X),
                            g = (s = (t = d.find(N => N > this.mediaPlaybackRate)) != null ? t : d[0]) != null ? s : xl,
                            w = new oe.CustomEvent(Fe.MEDIA_PLAYBACK_RATE_REQUEST, {
                                composed: !0,
                                bubbles: !0,
                                detail: g
                            });
                        this.dispatchEvent(w)
                    }
                };
                lo = new WeakMap, oe.customElements.get("media-playback-rate-button") || oe.customElements.define("media-playback-rate-button", oc);
                var lc = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="m6 21 15-9L6 3v18Z"/>
</svg>`,
                    yh = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M6 20h4V4H6v16Zm8-16v16h4V4h-4Z"/>
</svg>`,
                    zu = Ut.createElement("template");
                zu.innerHTML = `
  <style>
    :host([${W.MEDIA_PAUSED}]) slot[name=pause],
    :host(:not([${W.MEDIA_PAUSED}])) slot[name=play] {
      display: none !important;
    }

    :host([${W.MEDIA_PAUSED}]) slot[name=tooltip-pause],
    :host(:not([${W.MEDIA_PAUSED}])) slot[name=tooltip-play] {
      display: none;
    }
  </style>

  <slot name="icon">
    <slot name="play">${lc}</slot>
    <slot name="pause">${yh}</slot>
  </slot>
`;
                var bh = `
  <slot name="tooltip-play">${vt("Play")}</slot>
  <slot name="tooltip-pause">${vt("Pause")}</slot>
`,
                    du = t => {
                        let s = t.mediaPaused ? vt("play") : vt("pause");
                        t.setAttribute("aria-label", s)
                    },
                    uc = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_PAUSED, W.MEDIA_ENDED]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: zu,
                                tooltipContent: bh
                            }, t))
                        }
                        connectedCallback() {
                            du(this), super.connectedCallback()
                        }
                        attributeChangedCallback(t, s, d) {
                            t === W.MEDIA_PAUSED && du(this), super.attributeChangedCallback(t, s, d)
                        }
                        get mediaPaused() {
                            return xr(this, W.MEDIA_PAUSED)
                        }
                        set mediaPaused(t) {
                            Vr(this, W.MEDIA_PAUSED, t)
                        }
                        handleClick() {
                            let t = this.mediaPaused ? Fe.MEDIA_PLAY_REQUEST : Fe.MEDIA_PAUSE_REQUEST;
                            this.dispatchEvent(new oe.CustomEvent(t, {
                                composed: !0,
                                bubbles: !0
                            }))
                        }
                    };
                oe.customElements.get("media-play-button") || oe.customElements.define("media-play-button", uc);
                var ds = {
                        PLACEHOLDER_SRC: "placeholdersrc",
                        SRC: "src"
                    },
                    dc = Ut.createElement("template");
                dc.innerHTML = `
  <style>
    :host {
      pointer-events: none;
      display: var(--media-poster-image-display, inline-block);
      box-sizing: border-box;
    }

    img {
      max-width: 100%;
      max-height: 100%;
      min-width: 100%;
      min-height: 100%;
      background-repeat: no-repeat;
      background-position: var(--media-poster-image-background-position, var(--media-object-position, center));
      background-size: var(--media-poster-image-background-size, var(--media-object-fit, contain));
      object-fit: var(--media-object-fit, contain);
      object-position: var(--media-object-position, center);
    }
  </style>

  <img part="poster img" aria-hidden="true" id="image"/>
`;
                var Xu = t => {
                        t.style.removeProperty("background-image")
                    },
                    cc = (t, s) => {
                        t.style["background-image"] = `url('${s}')`
                    },
                    Zu = class extends oe.HTMLElement {
                        static get observedAttributes() {
                            return [ds.PLACEHOLDER_SRC, ds.SRC]
                        }
                        constructor() {
                            super(), this.shadowRoot || (this.attachShadow({
                                mode: "open"
                            }), this.shadowRoot.appendChild(dc.content.cloneNode(!0))), this.image = this.shadowRoot.querySelector("#image")
                        }
                        attributeChangedCallback(t, s, d) {
                            t === ds.SRC && (d == null ? this.image.removeAttribute(ds.SRC) : this.image.setAttribute(ds.SRC, d)), t === ds.PLACEHOLDER_SRC && (d == null ? Xu(this.image) : cc(this.image, d))
                        }
                        get placeholderSrc() {
                            return li(this, ds.PLACEHOLDER_SRC)
                        }
                        set placeholderSrc(t) {
                            mi(this, ds.SRC, t)
                        }
                        get src() {
                            return li(this, ds.SRC)
                        }
                        set src(t) {
                            mi(this, ds.SRC, t)
                        }
                    };
                oe.customElements.get("media-poster-image") || oe.customElements.define("media-poster-image", Zu);
                var hc = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Th = (t, s, d) => (hc(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Ah = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    fc = (t, s, d, g) => (hc(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Nl, _h = class extends oo {
                        constructor() {
                            super(), Ah(this, Nl, void 0), fc(this, Nl, this.shadowRoot.querySelector("slot"))
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_PREVIEW_CHAPTER]
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_PREVIEW_CHAPTER && d !== s && d != null && (Th(this, Nl).textContent = d, d !== "" ? this.setAttribute("aria-valuetext", `chapter: ${d}`) : this.removeAttribute("aria-valuetext"))
                        }
                        get mediaPreviewChapter() {
                            return li(this, W.MEDIA_PREVIEW_CHAPTER)
                        }
                        set mediaPreviewChapter(t) {
                            mi(this, W.MEDIA_PREVIEW_CHAPTER, t)
                        }
                    };
                Nl = new WeakMap, oe.customElements.get("media-preview-chapter-display") || oe.customElements.define("media-preview-chapter-display", _h);
                var Qu = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    cu = (t, s, d) => (Qu(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Sh = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Lo = (t, s, d, g) => (Qu(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    cs, Un = Ut.createElement("template");
                Un.innerHTML = `
  <style>
    :host {
      box-sizing: border-box;
      display: var(--media-control-display, var(--media-preview-thumbnail-display, inline-block));
      overflow: hidden;
    }

    img {
      display: none;
      position: relative;
    }
  </style>
  <img crossorigin loading="eager" decoding="async">
`;
                var vn = class extends oe.HTMLElement {
                    constructor() {
                        super(), Sh(this, cs, void 0), this.shadowRoot || (this.attachShadow({
                            mode: "open"
                        }), this.shadowRoot.appendChild(Un.content.cloneNode(!0)))
                    }
                    static get observedAttributes() {
                        return [ht.MEDIA_CONTROLLER, W.MEDIA_PREVIEW_IMAGE, W.MEDIA_PREVIEW_COORDS]
                    }
                    connectedCallback() {
                        var t, s, d;
                        let g = this.getAttribute(ht.MEDIA_CONTROLLER);
                        g && (Lo(this, cs, (t = this.getRootNode()) == null ? void 0 : t.getElementById(g)), (d = (s = cu(this, cs)) == null ? void 0 : s.associateElement) == null || d.call(s, this))
                    }
                    disconnectedCallback() {
                        var t, s;
                        (s = (t = cu(this, cs)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this), Lo(this, cs, null)
                    }
                    attributeChangedCallback(t, s, d) {
                        var g, w, N, X, ue;
                        [W.MEDIA_PREVIEW_IMAGE, W.MEDIA_PREVIEW_COORDS].includes(t) && this.update(), t === ht.MEDIA_CONTROLLER && (s && ((w = (g = cu(this, cs)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), Lo(this, cs, null)), d && this.isConnected && (Lo(this, cs, (N = this.getRootNode()) == null ? void 0 : N.getElementById(d)), (ue = (X = cu(this, cs)) == null ? void 0 : X.associateElement) == null || ue.call(X, this)))
                    }
                    get mediaPreviewImage() {
                        return li(this, W.MEDIA_PREVIEW_IMAGE)
                    }
                    set mediaPreviewImage(t) {
                        mi(this, W.MEDIA_PREVIEW_IMAGE, t)
                    }
                    get mediaPreviewCoords() {
                        let t = this.getAttribute(W.MEDIA_PREVIEW_COORDS);
                        if (t) return t.split(/\s+/).map(s => +s)
                    }
                    set mediaPreviewCoords(t) {
                        if (!t) {
                            this.removeAttribute(W.MEDIA_PREVIEW_COORDS);
                            return
                        }
                        this.setAttribute(W.MEDIA_PREVIEW_COORDS, t.join(" "))
                    }
                    update() {
                        let t = this.mediaPreviewCoords,
                            s = this.mediaPreviewImage;
                        if (!(t && s)) return;
                        let [d, g, w, N] = t, X = s.split("#")[0], ue = getComputedStyle(this), {
                            maxWidth: $e,
                            maxHeight: et,
                            minWidth: ur,
                            minHeight: gr
                        } = ue, Sr = Math.min(parseInt($e) / w, parseInt(et) / N), _r = Math.max(parseInt(ur) / w, parseInt(gr) / N), Ei = Sr < 1, fi = Ei ? Sr : _r > 1 ? _r : 1, {
                            style: bi
                        } = Pi(this.shadowRoot, ":host"), Ba = Pi(this.shadowRoot, "img").style, Bn = this.shadowRoot.querySelector("img"), go = Ei ? "min" : "max";
                        bi.setProperty(`${go}-width`, "initial", "important"), bi.setProperty(`${go}-height`, "initial", "important"), bi.width = `${w*fi}px`, bi.height = `${N*fi}px`;
                        let Vo = () => {
                            Ba.width = `${this.imgWidth*fi}px`, Ba.height = `${this.imgHeight*fi}px`, Ba.display = "block"
                        };
                        Bn.src !== X && (Bn.onload = () => {
                            this.imgWidth = Bn.naturalWidth, this.imgHeight = Bn.naturalHeight, Vo()
                        }, Bn.src = X, Vo()), Vo(), Ba.transform = `translate(-${d*fi}px, -${g*fi}px)`
                    }
                };
                cs = new WeakMap, oe.customElements.get("media-preview-thumbnail") || oe.customElements.define("media-preview-thumbnail", vn);
                var hu = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    uo = (t, s, d) => (hu(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    rl = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    kh = (t, s, d, g) => (hu(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Io, mc = class extends oo {
                        constructor() {
                            super(), rl(this, Io, void 0), kh(this, Io, this.shadowRoot.querySelector("slot")), uo(this, Io).textContent = qe(0)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_PREVIEW_TIME]
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_PREVIEW_TIME && d != null && (uo(this, Io).textContent = qe(parseFloat(d)))
                        }
                        get mediaPreviewTime() {
                            return Qr(this, W.MEDIA_PREVIEW_TIME)
                        }
                        set mediaPreviewTime(t) {
                            Nr(this, W.MEDIA_PREVIEW_TIME, t)
                        }
                    };
                Io = new WeakMap, oe.customElements.get("media-preview-time-display") || oe.customElements.define("media-preview-time-display", mc);
                var il = {
                        SEEK_OFFSET: "seekoffset"
                    },
                    fu = 30,
                    wh = `<svg aria-hidden="true" viewBox="0 0 20 24"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class="text value" transform="translate(2.18 19.87)">${fu}</text><path d="M10 6V3L4.37 7 10 10.94V8a5.54 5.54 0 0 1 1.9 10.48v2.12A7.5 7.5 0 0 0 10 6Z"/></svg>`,
                    Ju = Ut.createElement("template");
                Ju.innerHTML = `
  <slot name="icon">${wh}</slot>
`;
                var Rh = 0,
                    Lh = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_CURRENT_TIME, il.SEEK_OFFSET]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: Ju,
                                tooltipContent: vt("Seek backward")
                            }, t))
                        }
                        connectedCallback() {
                            this.seekOffset = Qr(this, il.SEEK_OFFSET, fu), super.connectedCallback()
                        }
                        attributeChangedCallback(t, s, d) {
                            t === il.SEEK_OFFSET && (this.seekOffset = Qr(this, il.SEEK_OFFSET, fu)), super.attributeChangedCallback(t, s, d)
                        }
                        get seekOffset() {
                            return Qr(this, il.SEEK_OFFSET, fu)
                        }
                        set seekOffset(t) {
                            Nr(this, il.SEEK_OFFSET, t), this.setAttribute("aria-label", vt("seek back {seekOffset} seconds", {
                                seekOffset: this.seekOffset
                            })), Si(Ma(this, "icon"), this.seekOffset)
                        }
                        get mediaCurrentTime() {
                            return Qr(this, W.MEDIA_CURRENT_TIME, Rh)
                        }
                        set mediaCurrentTime(t) {
                            Nr(this, W.MEDIA_CURRENT_TIME, t)
                        }
                        handleClick() {
                            let t = Math.max(this.mediaCurrentTime - this.seekOffset, 0),
                                s = new oe.CustomEvent(Fe.MEDIA_SEEK_REQUEST, {
                                    composed: !0,
                                    bubbles: !0,
                                    detail: t
                                });
                            this.dispatchEvent(s)
                        }
                    };
                oe.customElements.get("media-seek-backward-button") || oe.customElements.define("media-seek-backward-button", Lh);
                var al = {
                        SEEK_OFFSET: "seekoffset"
                    },
                    mu = 30,
                    Ih = `<svg aria-hidden="true" viewBox="0 0 20 24"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class="text value" transform="translate(8.9 19.87)">${mu}</text><path d="M10 6V3l5.61 4L10 10.94V8a5.54 5.54 0 0 0-1.9 10.48v2.12A7.5 7.5 0 0 1 10 6Z"/></svg>`,
                    vc = Ut.createElement("template");
                vc.innerHTML = `
  <slot name="icon">${Ih}</slot>
`;
                var Ch = 0,
                    Dh = class extends cn {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_CURRENT_TIME, al.SEEK_OFFSET]
                        }
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: vc,
                                tooltipContent: vt("Seek forward")
                            }, t))
                        }
                        connectedCallback() {
                            this.seekOffset = Qr(this, al.SEEK_OFFSET, mu), super.connectedCallback()
                        }
                        attributeChangedCallback(t, s, d) {
                            t === al.SEEK_OFFSET && (this.seekOffset = Qr(this, al.SEEK_OFFSET, mu)), super.attributeChangedCallback(t, s, d)
                        }
                        get seekOffset() {
                            return Qr(this, al.SEEK_OFFSET, mu)
                        }
                        set seekOffset(t) {
                            Nr(this, al.SEEK_OFFSET, t), this.setAttribute("aria-label", vt("seek forward {seekOffset} seconds", {
                                seekOffset: this.seekOffset
                            })), Si(Ma(this, "icon"), this.seekOffset)
                        }
                        get mediaCurrentTime() {
                            return Qr(this, W.MEDIA_CURRENT_TIME, Ch)
                        }
                        set mediaCurrentTime(t) {
                            Nr(this, W.MEDIA_CURRENT_TIME, t)
                        }
                        handleClick() {
                            let t = this.mediaCurrentTime + this.seekOffset,
                                s = new oe.CustomEvent(Fe.MEDIA_SEEK_REQUEST, {
                                    composed: !0,
                                    bubbles: !0,
                                    detail: t
                                });
                            this.dispatchEvent(s)
                        }
                    };
                oe.customElements.get("media-seek-forward-button") || oe.customElements.define("media-seek-forward-button", Dh);
                var hs = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    ed = (t, s, d) => (hs(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Mh = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Ph = (t, s, d, g) => (hs(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Co, fs = {
                        REMAINING: "remaining",
                        SHOW_DURATION: "showduration",
                        NO_TOGGLE: "notoggle"
                    },
                    td = [...Object.values(fs), W.MEDIA_CURRENT_TIME, W.MEDIA_DURATION, W.MEDIA_SEEKABLE],
                    pc = ["Enter", " "],
                    Oh = "&nbsp;/&nbsp;",
                    gc = (t, {
                        timesSep: s = Oh
                    } = {}) => {
                        var d, g;
                        let w = t.hasAttribute(fs.REMAINING),
                            N = t.hasAttribute(fs.SHOW_DURATION),
                            X = (d = t.mediaCurrentTime) != null ? d : 0,
                            [, ue] = (g = t.mediaSeekable) != null ? g : [],
                            $e = 0;
                        Number.isFinite(t.mediaDuration) ? $e = t.mediaDuration : Number.isFinite(ue) && ($e = ue);
                        let et = qe(w ? 0 - ($e - X) : X);
                        return N ? `${et}${s}${qe($e)}` : et
                    },
                    xh = "video not loaded, unknown time.",
                    Ec = t => {
                        var s;
                        let d = t.mediaCurrentTime,
                            [, g] = (s = t.mediaSeekable) != null ? s : [],
                            w = null;
                        if (Number.isFinite(t.mediaDuration) ? w = t.mediaDuration : Number.isFinite(g) && (w = g), d == null || w === null) {
                            t.setAttribute("aria-valuetext", xh);
                            return
                        }
                        let N = t.hasAttribute(fs.REMAINING),
                            X = t.hasAttribute(fs.SHOW_DURATION),
                            ue = gt(N ? 0 - (w - d) : d);
                        if (!X) {
                            t.setAttribute("aria-valuetext", ue);
                            return
                        }
                        let $e = gt(w),
                            et = `${ue} of ${$e}`;
                        t.setAttribute("aria-valuetext", et)
                    },
                    rd = class extends oo {
                        constructor() {
                            super(), Mh(this, Co, void 0), Ph(this, Co, this.shadowRoot.querySelector("slot")), ed(this, Co).innerHTML = `${gc(this)}`
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, ...td, "disabled"]
                        }
                        connectedCallback() {
                            let {
                                style: t
                            } = Pi(this.shadowRoot, ":host(:hover:not([notoggle]))");
                            t.setProperty("cursor", "var(--media-cursor, pointer)"), t.setProperty("background", "var(--media-control-hover-background, rgba(50 50 70 / .7))"), this.hasAttribute("disabled") || this.enable(), this.setAttribute("role", "progressbar"), this.setAttribute("aria-label", vt("playback time"));
                            let s = d => {
                                let {
                                    key: g
                                } = d;
                                if (!pc.includes(g)) {
                                    this.removeEventListener("keyup", s);
                                    return
                                }
                                this.toggleTimeDisplay()
                            };
                            this.addEventListener("keydown", d => {
                                let {
                                    metaKey: g,
                                    altKey: w,
                                    key: N
                                } = d;
                                if (g || w || !pc.includes(N)) {
                                    this.removeEventListener("keyup", s);
                                    return
                                }
                                this.addEventListener("keyup", s)
                            }), this.addEventListener("click", this.toggleTimeDisplay), super.connectedCallback()
                        }
                        toggleTimeDisplay() {
                            this.noToggle || (this.hasAttribute("remaining") ? this.removeAttribute("remaining") : this.setAttribute("remaining", ""))
                        }
                        disconnectedCallback() {
                            this.disable(), super.disconnectedCallback()
                        }
                        attributeChangedCallback(t, s, d) {
                            td.includes(t) ? this.update() : t === "disabled" && d !== s && (d == null ? this.enable() : this.disable()), super.attributeChangedCallback(t, s, d)
                        }
                        enable() {
                            this.tabIndex = 0
                        }
                        disable() {
                            this.tabIndex = -1
                        }
                        get remaining() {
                            return xr(this, fs.REMAINING)
                        }
                        set remaining(t) {
                            Vr(this, fs.REMAINING, t)
                        }
                        get showDuration() {
                            return xr(this, fs.SHOW_DURATION)
                        }
                        set showDuration(t) {
                            Vr(this, fs.SHOW_DURATION, t)
                        }
                        get noToggle() {
                            return xr(this, fs.NO_TOGGLE)
                        }
                        set noToggle(t) {
                            Vr(this, fs.NO_TOGGLE, t)
                        }
                        get mediaDuration() {
                            return Qr(this, W.MEDIA_DURATION)
                        }
                        set mediaDuration(t) {
                            Nr(this, W.MEDIA_DURATION, t)
                        }
                        get mediaCurrentTime() {
                            return Qr(this, W.MEDIA_CURRENT_TIME)
                        }
                        set mediaCurrentTime(t) {
                            Nr(this, W.MEDIA_CURRENT_TIME, t)
                        }
                        get mediaSeekable() {
                            let t = this.getAttribute(W.MEDIA_SEEKABLE);
                            if (t) return t.split(":").map(s => +s)
                        }
                        set mediaSeekable(t) {
                            if (t == null) {
                                this.removeAttribute(W.MEDIA_SEEKABLE);
                                return
                            }
                            this.setAttribute(W.MEDIA_SEEKABLE, t.join(":"))
                        }
                        update() {
                            let t = gc(this);
                            Ec(this), t !== ed(this, Co).innerHTML && (ed(this, Co).innerHTML = t)
                        }
                    };
                Co = new WeakMap, oe.customElements.get("media-time-display") || oe.customElements.define("media-time-display", rd);
                var vu = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    xa = (t, s, d) => (vu(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    ms = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Fn = (t, s, d, g) => (vu(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Nh = (t, s, d, g) => ({
                        set _(w) {
                            Fn(t, s, w, d)
                        },
                        get _() {
                            return xa(t, s, g)
                        }
                    }),
                    nl, pu, sl, Ul, gu, Do, Eu, qs, Mo, yu, yc = class {
                        constructor(t, s, d) {
                            ms(this, nl, void 0), ms(this, pu, void 0), ms(this, sl, void 0), ms(this, Ul, void 0), ms(this, gu, void 0), ms(this, Do, void 0), ms(this, Eu, void 0), ms(this, qs, void 0), ms(this, Mo, 0), ms(this, yu, (g = performance.now()) => {
                                Fn(this, Mo, requestAnimationFrame(xa(this, yu))), Fn(this, Ul, performance.now() - xa(this, sl));
                                let w = 1e3 / this.fps;
                                if (xa(this, Ul) > w) {
                                    Fn(this, sl, g - xa(this, Ul) % w);
                                    let N = 1e3 / ((g - xa(this, pu)) / ++Nh(this, gu)._),
                                        X = (g - xa(this, Do)) / 1e3 / this.duration,
                                        ue = xa(this, Eu) + X * this.playbackRate;
                                    ue - xa(this, nl).valueAsNumber > 0 ? Fn(this, qs, this.playbackRate / this.duration / N) : (Fn(this, qs, .995 * xa(this, qs)), ue = xa(this, nl).valueAsNumber + xa(this, qs)), this.callback(ue)
                                }
                            }), Fn(this, nl, t), this.callback = s, this.fps = d
                        }
                        start() {
                            xa(this, Mo) === 0 && (Fn(this, sl, performance.now()), Fn(this, pu, xa(this, sl)), Fn(this, gu, 0), xa(this, yu).call(this))
                        }
                        stop() {
                            xa(this, Mo) !== 0 && (cancelAnimationFrame(xa(this, Mo)), Fn(this, Mo, 0))
                        }
                        update({
                            start: t,
                            duration: s,
                            playbackRate: d
                        }) {
                            let g = t - xa(this, nl).valueAsNumber,
                                w = Math.abs(s - this.duration);
                            (g > 0 || g < -.03 || w >= .5) && this.callback(t), Fn(this, Eu, t), Fn(this, Do, performance.now()), this.duration = s, this.playbackRate = d
                        }
                    };
                nl = new WeakMap, pu = new WeakMap, sl = new WeakMap, Ul = new WeakMap, gu = new WeakMap, Do = new WeakMap, Eu = new WeakMap, qs = new WeakMap, Mo = new WeakMap, yu = new WeakMap;
                var id = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Ka = (t, s, d) => (id(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Za = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    ws = (t, s, d, g) => (id(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    sn = (t, s, d) => (id(t, s, "access private method"), d),
                    ol, Po, bu, Fl, Bl, Hl, Vl, ll, ul, dl, cl, ad, bc, nd, Tu, sd, Au, od, _u, Su, ld, Tc, Oo, ku, Wl, Ac, _c = "video not loaded, unknown time.",
                    Uh = t => {
                        let s = t.range,
                            d = gt(+Sc(t)),
                            g = gt(+t.mediaSeekableEnd),
                            w = d && g ? `${d} of ${g}` : _c;
                        s.setAttribute("aria-valuetext", w)
                    },
                    ud = Ut.createElement("template");
                ud.innerHTML = `
  <style>
    :host {
      --media-box-border-radius: 4px;
      --media-box-padding-left: 10px;
      --media-box-padding-right: 10px;
      --media-preview-border-radius: var(--media-box-border-radius);
      --media-box-arrow-offset: var(--media-box-border-radius);
      --_control-background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));
      --_preview-background: var(--media-preview-background, var(--_control-background));

      
      contain: layout;
    }

    #buffered {
      background: var(--media-time-range-buffered-color, rgb(255 255 255 / .4));
      position: absolute;
      height: 100%;
      will-change: width;
    }

    #preview-rail,
    #current-rail {
      width: 100%;
      position: absolute;
      left: 0;
      bottom: 100%;
      pointer-events: none;
      will-change: transform;
    }

    [part~="box"] {
      width: min-content;
      
      position: absolute;
      bottom: 100%;
      flex-direction: column;
      align-items: center;
      transform: translateX(-50%);
    }

    [part~="current-box"] {
      display: var(--media-current-box-display, var(--media-box-display, flex));
      margin: var(--media-current-box-margin, var(--media-box-margin, 0 0 5px));
      visibility: hidden;
    }

    [part~="preview-box"] {
      display: var(--media-preview-box-display, var(--media-box-display, flex));
      margin: var(--media-preview-box-margin, var(--media-box-margin, 0 0 5px));
      transition-property: var(--media-preview-transition-property, visibility, opacity);
      transition-duration: var(--media-preview-transition-duration-out, .25s);
      transition-delay: var(--media-preview-transition-delay-out, 0s);
      visibility: hidden;
      opacity: 0;
    }

    :host(:is([${W.MEDIA_PREVIEW_IMAGE}], [${W.MEDIA_PREVIEW_TIME}])[dragging]) [part~="preview-box"] {
      transition-duration: var(--media-preview-transition-duration-in, .5s);
      transition-delay: var(--media-preview-transition-delay-in, .25s);
      visibility: visible;
      opacity: 1;
    }

    @media (hover: hover) {
      :host(:is([${W.MEDIA_PREVIEW_IMAGE}], [${W.MEDIA_PREVIEW_TIME}]):hover) [part~="preview-box"] {
        transition-duration: var(--media-preview-transition-duration-in, .5s);
        transition-delay: var(--media-preview-transition-delay-in, .25s);
        visibility: visible;
        opacity: 1;
      }
    }

    media-preview-thumbnail,
    ::slotted(media-preview-thumbnail) {
      visibility: hidden;
      
      transition: visibility 0s .25s;
      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));
      background: var(--media-preview-thumbnail-background, var(--_preview-background));
      box-shadow: var(--media-preview-thumbnail-box-shadow, 0 0 4px rgb(0 0 0 / .2));
      max-width: var(--media-preview-thumbnail-max-width, 180px);
      max-height: var(--media-preview-thumbnail-max-height, 160px);
      min-width: var(--media-preview-thumbnail-min-width, 120px);
      min-height: var(--media-preview-thumbnail-min-height, 80px);
      border: var(--media-preview-thumbnail-border);
      border-radius: var(--media-preview-thumbnail-border-radius,
        var(--media-preview-border-radius) var(--media-preview-border-radius) 0 0);
    }

    :host([${W.MEDIA_PREVIEW_IMAGE}][dragging]) media-preview-thumbnail,
    :host([${W.MEDIA_PREVIEW_IMAGE}][dragging]) ::slotted(media-preview-thumbnail) {
      transition-delay: var(--media-preview-transition-delay-in, .25s);
      visibility: visible;
    }

    @media (hover: hover) {
      :host([${W.MEDIA_PREVIEW_IMAGE}]:hover) media-preview-thumbnail,
      :host([${W.MEDIA_PREVIEW_IMAGE}]:hover) ::slotted(media-preview-thumbnail) {
        transition-delay: var(--media-preview-transition-delay-in, .25s);
        visibility: visible;
      }

      :host([${W.MEDIA_PREVIEW_TIME}]:hover) {
        --media-time-range-hover-display: block;
      }
    }

    media-preview-chapter-display,
    ::slotted(media-preview-chapter-display) {
      font-size: var(--media-font-size, 13px);
      line-height: 17px;
      min-width: 0;
      visibility: hidden;
      
      transition: min-width 0s, border-radius 0s, margin 0s, padding 0s, visibility 0s;
      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));
      background: var(--media-preview-chapter-background, var(--_preview-background));
      border-radius: var(--media-preview-chapter-border-radius,
        var(--media-preview-border-radius) var(--media-preview-border-radius)
        var(--media-preview-border-radius) var(--media-preview-border-radius));
      padding: var(--media-preview-chapter-padding, 3.5px 9px);
      margin: var(--media-preview-chapter-margin, 0 0 5px);
      text-shadow: var(--media-preview-chapter-text-shadow, 0 0 4px rgb(0 0 0 / .75));
    }

    :host([${W.MEDIA_PREVIEW_IMAGE}]) media-preview-chapter-display,
    :host([${W.MEDIA_PREVIEW_IMAGE}]) ::slotted(media-preview-chapter-display) {
      transition-delay: var(--media-preview-transition-delay-in, .25s);
      border-radius: var(--media-preview-chapter-border-radius, 0);
      padding: var(--media-preview-chapter-padding, 3.5px 9px 0);
      margin: var(--media-preview-chapter-margin, 0);
      min-width: 100%;
    }

    media-preview-chapter-display[${W.MEDIA_PREVIEW_CHAPTER}],
    ::slotted(media-preview-chapter-display[${W.MEDIA_PREVIEW_CHAPTER}]) {
      visibility: visible;
    }

    media-preview-chapter-display:not([aria-valuetext]),
    ::slotted(media-preview-chapter-display:not([aria-valuetext])) {
      display: none;
    }

    media-preview-time-display,
    ::slotted(media-preview-time-display),
    media-time-display,
    ::slotted(media-time-display) {
      font-size: var(--media-font-size, 13px);
      line-height: 17px;
      min-width: 0;
      
      transition: min-width 0s, border-radius 0s;
      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));
      background: var(--media-preview-time-background, var(--_preview-background));
      border-radius: var(--media-preview-time-border-radius,
        var(--media-preview-border-radius) var(--media-preview-border-radius)
        var(--media-preview-border-radius) var(--media-preview-border-radius));
      padding: var(--media-preview-time-padding, 3.5px 9px);
      margin: var(--media-preview-time-margin, 0);
      text-shadow: var(--media-preview-time-text-shadow, 0 0 4px rgb(0 0 0 / .75));
      transform: translateX(min(
        max(calc(50% - var(--_box-width) / 2),
        calc(var(--_box-shift, 0))),
        calc(var(--_box-width) / 2 - 50%)
      ));
    }

    :host([${W.MEDIA_PREVIEW_IMAGE}]) media-preview-time-display,
    :host([${W.MEDIA_PREVIEW_IMAGE}]) ::slotted(media-preview-time-display) {
      transition-delay: var(--media-preview-transition-delay-in, .25s);
      border-radius: var(--media-preview-time-border-radius,
        0 0 var(--media-preview-border-radius) var(--media-preview-border-radius));
      min-width: 100%;
    }

    :host([${W.MEDIA_PREVIEW_TIME}]:hover) {
      --media-time-range-hover-display: block;
    }

    [part~="arrow"],
    ::slotted([part~="arrow"]) {
      display: var(--media-box-arrow-display, inline-block);
      transform: translateX(min(
        max(calc(50% - var(--_box-width) / 2 + var(--media-box-arrow-offset)),
        calc(var(--_box-shift, 0))),
        calc(var(--_box-width) / 2 - 50% - var(--media-box-arrow-offset))
      ));
      
      border-color: transparent;
      border-top-color: var(--media-box-arrow-background, var(--_control-background));
      border-width: var(--media-box-arrow-border-width,
        var(--media-box-arrow-height, 5px) var(--media-box-arrow-width, 6px) 0);
      border-style: solid;
      justify-content: center;
      height: 0;
    }
  </style>
  <div id="preview-rail">
    <slot name="preview" part="box preview-box">
      <media-preview-thumbnail></media-preview-thumbnail>
      <media-preview-chapter-display></media-preview-chapter-display>
      <media-preview-time-display></media-preview-time-display>
      <slot name="preview-arrow"><div part="arrow"></div></slot>
    </slot>
  </div>
  <div id="current-rail">
    <slot name="current" part="box current-box">
      
    </slot>
  </div>
`;
                var Gl = (t, s = t.mediaCurrentTime) => {
                        let d = Number.isFinite(t.mediaSeekableStart) ? t.mediaSeekableStart : 0,
                            g = Number.isFinite(t.mediaDuration) ? t.mediaDuration : t.mediaSeekableEnd;
                        if (Number.isNaN(g)) return 0;
                        let w = (s - d) / (g - d);
                        return Math.max(0, Math.min(w, 1))
                    },
                    Sc = (t, s = t.range.valueAsNumber) => {
                        let d = Number.isFinite(t.mediaSeekableStart) ? t.mediaSeekableStart : 0,
                            g = Number.isFinite(t.mediaDuration) ? t.mediaDuration : t.mediaSeekableEnd;
                        return Number.isNaN(g) ? 0 : s * (g - d) + d
                    },
                    Fh = class extends ao {
                        constructor() {
                            super(), Za(this, dl), Za(this, ad), Za(this, Tu), Za(this, Au), Za(this, _u), Za(this, ld), Za(this, Oo), Za(this, Wl), Za(this, ol, void 0), Za(this, Po, void 0), Za(this, bu, void 0), Za(this, Fl, void 0), Za(this, Bl, void 0), Za(this, Hl, void 0), Za(this, Vl, void 0), Za(this, ll, void 0), Za(this, ul, void 0), Za(this, nd, s => {
                                this.dragging || (ne(s) && (this.range.valueAsNumber = s), this.updateBar())
                            }), this.container.appendChild(ud.content.cloneNode(!0)), this.shadowRoot.querySelector("#track").insertAdjacentHTML("afterbegin", '<div id="buffered" part="buffered"></div>'), ws(this, bu, this.shadowRoot.querySelectorAll('[part~="box"]')), ws(this, Bl, this.shadowRoot.querySelector('[part~="preview-box"]')), ws(this, Hl, this.shadowRoot.querySelector('[part~="current-box"]'));
                            let t = getComputedStyle(this);
                            ws(this, Vl, parseInt(t.getPropertyValue("--media-box-padding-left"))), ws(this, ll, parseInt(t.getPropertyValue("--media-box-padding-right"))), ws(this, Po, new yc(this.range, Ka(this, nd), 60))
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_PAUSED, W.MEDIA_DURATION, W.MEDIA_SEEKABLE, W.MEDIA_CURRENT_TIME, W.MEDIA_PREVIEW_IMAGE, W.MEDIA_PREVIEW_TIME, W.MEDIA_PREVIEW_CHAPTER, W.MEDIA_BUFFERED, W.MEDIA_PLAYBACK_RATE, W.MEDIA_LOADING, W.MEDIA_ENDED]
                        }
                        connectedCallback() {
                            var t;
                            super.connectedCallback(), this.range.setAttribute("aria-label", vt("seek")), sn(this, dl, cl).call(this), ws(this, ol, this.getRootNode()), (t = Ka(this, ol)) == null || t.addEventListener("transitionstart", this)
                        }
                        disconnectedCallback() {
                            var t;
                            super.disconnectedCallback(), sn(this, dl, cl).call(this), (t = Ka(this, ol)) == null || t.removeEventListener("transitionstart", this), ws(this, ol, null)
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), s != d && (t === W.MEDIA_CURRENT_TIME || t === W.MEDIA_PAUSED || t === W.MEDIA_ENDED || t === W.MEDIA_LOADING || t === W.MEDIA_DURATION || t === W.MEDIA_SEEKABLE ? (Ka(this, Po).update({
                                start: Gl(this),
                                duration: this.mediaSeekableEnd - this.mediaSeekableStart,
                                playbackRate: this.mediaPlaybackRate
                            }), sn(this, dl, cl).call(this), Uh(this)) : t === W.MEDIA_BUFFERED && this.updateBufferedBar(), (t === W.MEDIA_DURATION || t === W.MEDIA_SEEKABLE) && (this.mediaChaptersCues = Ka(this, ul), this.updateBar()))
                        }
                        get mediaChaptersCues() {
                            return Ka(this, ul)
                        }
                        set mediaChaptersCues(t) {
                            var s;
                            ws(this, ul, t), this.updateSegments((s = Ka(this, ul)) == null ? void 0 : s.map(d => ({
                                start: Gl(this, d.startTime),
                                end: Gl(this, d.endTime)
                            })))
                        }
                        get mediaPaused() {
                            return xr(this, W.MEDIA_PAUSED)
                        }
                        set mediaPaused(t) {
                            Vr(this, W.MEDIA_PAUSED, t)
                        }
                        get mediaLoading() {
                            return xr(this, W.MEDIA_LOADING)
                        }
                        set mediaLoading(t) {
                            Vr(this, W.MEDIA_LOADING, t)
                        }
                        get mediaDuration() {
                            return Qr(this, W.MEDIA_DURATION)
                        }
                        set mediaDuration(t) {
                            Nr(this, W.MEDIA_DURATION, t)
                        }
                        get mediaCurrentTime() {
                            return Qr(this, W.MEDIA_CURRENT_TIME)
                        }
                        set mediaCurrentTime(t) {
                            Nr(this, W.MEDIA_CURRENT_TIME, t)
                        }
                        get mediaPlaybackRate() {
                            return Qr(this, W.MEDIA_PLAYBACK_RATE, 1)
                        }
                        set mediaPlaybackRate(t) {
                            Nr(this, W.MEDIA_PLAYBACK_RATE, t)
                        }
                        get mediaBuffered() {
                            let t = this.getAttribute(W.MEDIA_BUFFERED);
                            return t ? t.split(" ").map(s => s.split(":").map(d => +d)) : []
                        }
                        set mediaBuffered(t) {
                            if (!t) {
                                this.removeAttribute(W.MEDIA_BUFFERED);
                                return
                            }
                            let s = t.map(d => d.join(":")).join(" ");
                            this.setAttribute(W.MEDIA_BUFFERED, s)
                        }
                        get mediaSeekable() {
                            let t = this.getAttribute(W.MEDIA_SEEKABLE);
                            if (t) return t.split(":").map(s => +s)
                        }
                        set mediaSeekable(t) {
                            if (t == null) {
                                this.removeAttribute(W.MEDIA_SEEKABLE);
                                return
                            }
                            this.setAttribute(W.MEDIA_SEEKABLE, t.join(":"))
                        }
                        get mediaSeekableEnd() {
                            var t;
                            let [, s = this.mediaDuration] = (t = this.mediaSeekable) != null ? t : [];
                            return s
                        }
                        get mediaSeekableStart() {
                            var t;
                            let [s = 0] = (t = this.mediaSeekable) != null ? t : [];
                            return s
                        }
                        get mediaPreviewImage() {
                            return li(this, W.MEDIA_PREVIEW_IMAGE)
                        }
                        set mediaPreviewImage(t) {
                            mi(this, W.MEDIA_PREVIEW_IMAGE, t)
                        }
                        get mediaPreviewTime() {
                            return Qr(this, W.MEDIA_PREVIEW_TIME)
                        }
                        set mediaPreviewTime(t) {
                            Nr(this, W.MEDIA_PREVIEW_TIME, t)
                        }
                        get mediaEnded() {
                            return xr(this, W.MEDIA_ENDED)
                        }
                        set mediaEnded(t) {
                            Vr(this, W.MEDIA_ENDED, t)
                        }
                        updateBar() {
                            super.updateBar(), this.updateBufferedBar(), this.updateCurrentBox()
                        }
                        updateBufferedBar() {
                            var t;
                            let s = this.mediaBuffered;
                            if (!s.length) return;
                            let d;
                            if (this.mediaEnded) d = 1;
                            else {
                                let w = this.mediaCurrentTime,
                                    [, N = this.mediaSeekableStart] = (t = s.find(([X, ue]) => X <= w && w <= ue)) != null ? t : [];
                                d = Gl(this, N)
                            }
                            let {
                                style: g
                            } = Pi(this.shadowRoot, "#buffered");
                            g.setProperty("width", `${d*100}%`)
                        }
                        updateCurrentBox() {
                            if (!this.shadowRoot.querySelector('slot[name="current"]').assignedElements().length) return;
                            let t = Pi(this.shadowRoot, "#current-rail"),
                                s = Pi(this.shadowRoot, '[part~="current-box"]'),
                                d = sn(this, Tu, sd).call(this, Ka(this, Hl)),
                                g = sn(this, Au, od).call(this, d, this.range.valueAsNumber),
                                w = sn(this, _u, Su).call(this, d, this.range.valueAsNumber);
                            t.style.transform = `translateX(${g})`, t.style.setProperty("--_range-width", `${d.range.width}`), s.style.setProperty("--_box-shift", `${w}`), s.style.setProperty("--_box-width", `${d.box.width}px`), s.style.setProperty("visibility", "initial")
                        }
                        handleEvent(t) {
                            switch (super.handleEvent(t), t.type) {
                                case "input":
                                    sn(this, Wl, Ac).call(this);
                                    break;
                                case "pointermove":
                                    sn(this, ld, Tc).call(this, t);
                                    break;
                                case "pointerup":
                                case "pointerleave":
                                    sn(this, Oo, ku).call(this, null);
                                    break;
                                case "transitionstart":
                                    Ti(t.target, this) && setTimeout(() => sn(this, dl, cl).call(this), 0);
                                    break
                            }
                        }
                    };
                ol = new WeakMap, Po = new WeakMap, bu = new WeakMap, Fl = new WeakMap, Bl = new WeakMap, Hl = new WeakMap, Vl = new WeakMap, ll = new WeakMap, ul = new WeakMap, dl = new WeakSet, cl = function() {
                    sn(this, ad, bc).call(this) ? Ka(this, Po).start() : Ka(this, Po).stop()
                }, ad = new WeakSet, bc = function() {
                    return this.isConnected && !this.mediaPaused && !this.mediaLoading && !this.mediaEnded && this.mediaSeekableEnd > 0 && Qa(this)
                }, nd = new WeakMap, Tu = new WeakSet, sd = function(t) {
                    var s;
                    let d = ((s = this.getAttribute("bounds") ? Ri(this, `#${this.getAttribute("bounds")}`) : this.parentElement) != null ? s : this).getBoundingClientRect(),
                        g = this.range.getBoundingClientRect(),
                        w = t.offsetWidth,
                        N = -(g.left - d.left - w / 2),
                        X = d.right - g.left - w / 2;
                    return {
                        box: {
                            width: w,
                            min: N,
                            max: X
                        },
                        bounds: d,
                        range: g
                    }
                }, Au = new WeakSet, od = function(t, s) {
                    let d = `${s*100}%`,
                        {
                            width: g,
                            min: w,
                            max: N
                        } = t.box;
                    if (!g) return d;
                    if (Number.isNaN(w) || (d = `max(${`calc(1 / var(--_range-width) * 100 * ${w}% + var(--media-box-padding-left))`}, ${d})`), !Number.isNaN(N)) {
                        let X = `calc(1 / var(--_range-width) * 100 * ${N}% - var(--media-box-padding-right))`;
                        d = `min(${d}, ${X})`
                    }
                    return d
                }, _u = new WeakSet, Su = function(t, s) {
                    let {
                        width: d,
                        min: g,
                        max: w
                    } = t.box, N = s * t.range.width;
                    if (N < g + Ka(this, Vl)) {
                        let X = t.range.left - t.bounds.left - Ka(this, Vl);
                        return `${N-d/2+X}px`
                    }
                    if (N > w - Ka(this, ll)) {
                        let X = t.bounds.right - t.range.right - Ka(this, ll);
                        return `${N+d/2-X-t.range.width}px`
                    }
                    return 0
                }, ld = new WeakSet, Tc = function(t) {
                    let s = [...Ka(this, bu)].some(ur => t.composedPath().includes(ur));
                    if (!this.dragging && (s || !t.composedPath().includes(this))) {
                        sn(this, Oo, ku).call(this, null);
                        return
                    }
                    let d = this.mediaSeekableEnd;
                    if (!d) return;
                    let g = Pi(this.shadowRoot, "#preview-rail"),
                        w = Pi(this.shadowRoot, '[part~="preview-box"]'),
                        N = sn(this, Tu, sd).call(this, Ka(this, Bl)),
                        X = (t.clientX - N.range.left) / N.range.width;
                    X = Math.max(0, Math.min(1, X));
                    let ue = sn(this, Au, od).call(this, N, X),
                        $e = sn(this, _u, Su).call(this, N, X);
                    g.style.transform = `translateX(${ue})`, g.style.setProperty("--_range-width", `${N.range.width}`), w.style.setProperty("--_box-shift", `${$e}`), w.style.setProperty("--_box-width", `${N.box.width}px`);
                    let et = Math.round(Ka(this, Fl)) - Math.round(X * d);
                    Math.abs(et) < 1 && X > .01 && X < .99 || (ws(this, Fl, X * d), sn(this, Oo, ku).call(this, Ka(this, Fl)))
                }, Oo = new WeakSet, ku = function(t) {
                    this.dispatchEvent(new oe.CustomEvent(Fe.MEDIA_PREVIEW_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: t
                    }))
                }, Wl = new WeakSet, Ac = function() {
                    Ka(this, Po).stop();
                    let t = Sc(this);
                    this.dispatchEvent(new oe.CustomEvent(Fe.MEDIA_SEEK_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: t
                    }))
                }, oe.customElements.get("media-time-range") || oe.customElements.define("media-time-range", Fh);
                var hl = {
                        PLACEMENT: "placement",
                        BOUNDS: "bounds"
                    },
                    Kl = Ut.createElement("template");
                Kl.innerHTML = `
  <style>
    :host {
      --_tooltip-background-color: var(--media-tooltip-background-color, var(--media-secondary-color, rgba(20, 20, 30, .7)));
      --_tooltip-background: var(--media-tooltip-background, var(--_tooltip-background-color));
      --_tooltip-arrow-half-width: calc(var(--media-tooltip-arrow-width, 12px) / 2);
      --_tooltip-arrow-height: var(--media-tooltip-arrow-height, 5px);
      --_tooltip-arrow-background: var(--media-tooltip-arrow-color, var(--_tooltip-background-color));
      position: relative;
      pointer-events: none;
      display: var(--media-tooltip-display, inline-flex);
      justify-content: center;
      align-items: center;
      box-sizing: border-box;
      z-index: var(--media-tooltip-z-index, 1);
      background: var(--_tooltip-background);
      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
      font: var(--media-font,
        var(--media-font-weight, 400)
        var(--media-font-size, 13px) /
        var(--media-text-content-height, var(--media-control-height, 18px))
        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));
      padding: var(--media-tooltip-padding, .35em .7em);
      border: var(--media-tooltip-border, none);
      border-radius: var(--media-tooltip-border-radius, 5px);
      filter: var(--media-tooltip-filter, drop-shadow(0 0 4px rgba(0, 0, 0, .2)));
      white-space: var(--media-tooltip-white-space, nowrap);
    }

    :host([hidden]) {
      display: none;
    }

    img, svg {
      display: inline-block;
    }

    #arrow {
      position: absolute;
      width: 0px;
      height: 0px;
      border-style: solid;
      display: var(--media-tooltip-arrow-display, block);
    }

    :host(:not([placement])),
    :host([placement="top"]) {
      position: absolute;
      bottom: calc(100% + var(--media-tooltip-distance, 12px));
      left: 50%;
      transform: translate(calc(-50% - var(--media-tooltip-offset-x, 0px)), 0);
    }
    :host(:not([placement])) #arrow,
    :host([placement="top"]) #arrow {
      top: 100%;
      left: 50%;
      border-width: var(--_tooltip-arrow-height) var(--_tooltip-arrow-half-width) 0 var(--_tooltip-arrow-half-width);
      border-color: var(--_tooltip-arrow-background) transparent transparent transparent;
      transform: translate(calc(-50% + var(--media-tooltip-offset-x, 0px)), 0);
    }

    :host([placement="right"]) {
      position: absolute;
      left: calc(100% + var(--media-tooltip-distance, 12px));
      top: 50%;
      transform: translate(0, -50%);
    }
    :host([placement="right"]) #arrow {
      top: 50%;
      right: 100%;
      border-width: var(--_tooltip-arrow-half-width) var(--_tooltip-arrow-height) var(--_tooltip-arrow-half-width) 0;
      border-color: transparent var(--_tooltip-arrow-background) transparent transparent;
      transform: translate(0, -50%);
    }

    :host([placement="bottom"]) {
      position: absolute;
      top: calc(100% + var(--media-tooltip-distance, 12px));
      left: 50%;
      transform: translate(calc(-50% - var(--media-tooltip-offset-x, 0px)), 0);
    }
    :host([placement="bottom"]) #arrow {
      bottom: 100%;
      left: 50%;
      border-width: 0 var(--_tooltip-arrow-half-width) var(--_tooltip-arrow-height) var(--_tooltip-arrow-half-width);
      border-color: transparent transparent var(--_tooltip-arrow-background) transparent;
      transform: translate(calc(-50% + var(--media-tooltip-offset-x, 0px)), 0);
    }

    :host([placement="left"]) {
      position: absolute;
      right: calc(100% + var(--media-tooltip-distance, 12px));
      top: 50%;
      transform: translate(0, -50%);
    }
    :host([placement="left"]) #arrow {
      top: 50%;
      left: 100%;
      border-width: var(--_tooltip-arrow-half-width) 0 var(--_tooltip-arrow-half-width) var(--_tooltip-arrow-height);
      border-color: transparent transparent transparent var(--_tooltip-arrow-background);
      transform: translate(0, -50%);
    }
    
    :host([placement="none"]) #arrow {
      display: none;
    }

  </style>
  <slot></slot>
  <div id="arrow"></div>
`;
                var Bh = class extends oe.HTMLElement {
                    constructor() {
                        if (super(), this.updateXOffset = () => {
                                var t;
                                if (!Qa(this, {
                                        checkOpacity: !1,
                                        checkVisibilityCSS: !1
                                    })) return;
                                let s = this.placement;
                                if (s === "left" || s === "right") {
                                    this.style.removeProperty("--media-tooltip-offset-x");
                                    return
                                }
                                let d = getComputedStyle(this),
                                    g = (t = Ri(this, "#" + this.bounds)) != null ? t : Tr(this);
                                if (!g) return;
                                let {
                                    x: w,
                                    width: N
                                } = g.getBoundingClientRect(), {
                                    x: X,
                                    width: ue
                                } = this.getBoundingClientRect(), $e = X + ue, et = w + N, ur = d.getPropertyValue("--media-tooltip-offset-x"), gr = ur ? parseFloat(ur.replace("px", "")) : 0, Sr = d.getPropertyValue("--media-tooltip-container-margin"), _r = Sr ? parseFloat(Sr.replace("px", "")) : 0, Ei = X - w + gr - _r, fi = $e - et + gr + _r;
                                if (Ei < 0) {
                                    this.style.setProperty("--media-tooltip-offset-x", `${Ei}px`);
                                    return
                                }
                                if (fi > 0) {
                                    this.style.setProperty("--media-tooltip-offset-x", `${fi}px`);
                                    return
                                }
                                this.style.removeProperty("--media-tooltip-offset-x")
                            }, this.shadowRoot || (this.attachShadow({
                                mode: "open"
                            }), this.shadowRoot.appendChild(Kl.content.cloneNode(!0))), this.arrowEl = this.shadowRoot.querySelector("#arrow"), Object.prototype.hasOwnProperty.call(this, "placement")) {
                            let t = this.placement;
                            delete this.placement, this.placement = t
                        }
                    }
                    static get observedAttributes() {
                        return [hl.PLACEMENT, hl.BOUNDS]
                    }
                    get placement() {
                        return li(this, hl.PLACEMENT)
                    }
                    set placement(t) {
                        mi(this, hl.PLACEMENT, t)
                    }
                    get bounds() {
                        return li(this, hl.BOUNDS)
                    }
                    set bounds(t) {
                        mi(this, hl.BOUNDS, t)
                    }
                };
                oe.customElements.get("media-tooltip") || oe.customElements.define("media-tooltip", Bh);
                var Hh = 1,
                    Vh = t => t.mediaMuted ? 0 : t.mediaVolume,
                    Wh = t => `${Math.round(t*100)}%`,
                    Gh = class extends ao {
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_VOLUME, W.MEDIA_MUTED, W.MEDIA_VOLUME_UNAVAILABLE]
                        }
                        constructor() {
                            super(), this.range.addEventListener("input", () => {
                                let t = this.range.value,
                                    s = new oe.CustomEvent(Fe.MEDIA_VOLUME_REQUEST, {
                                        composed: !0,
                                        bubbles: !0,
                                        detail: t
                                    });
                                this.dispatchEvent(s)
                            })
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.range.setAttribute("aria-label", vt("volume"))
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), (t === W.MEDIA_VOLUME || t === W.MEDIA_MUTED) && (this.range.valueAsNumber = Vh(this), this.range.setAttribute("aria-valuetext", Wh(this.range.valueAsNumber)), this.updateBar())
                        }
                        get mediaVolume() {
                            return Qr(this, W.MEDIA_VOLUME, Hh)
                        }
                        set mediaVolume(t) {
                            Nr(this, W.MEDIA_VOLUME, t)
                        }
                        get mediaMuted() {
                            return xr(this, W.MEDIA_MUTED)
                        }
                        set mediaMuted(t) {
                            Vr(this, W.MEDIA_MUTED, t)
                        }
                        get mediaVolumeUnavailable() {
                            return li(this, W.MEDIA_VOLUME_UNAVAILABLE)
                        }
                        set mediaVolumeUnavailable(t) {
                            mi(this, W.MEDIA_VOLUME_UNAVAILABLE, t)
                        }
                    };
                oe.customElements.get("media-volume-range") || oe.customElements.define("media-volume-range", Gh);
                var er = Wt(we(91842)),
                    l = we(56543),
                    n = we(91842),
                    a = we(56543),
                    e = we(56543);

                function r(t) {
                    let s = "";
                    return Object.entries(t).forEach(([d, g]) => {
                        g != null && (s += `${i(d)}: ${g}; `)
                    }), s ? s.trim() : void 0
                }

                function i(t) {
                    return t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
                }

                function o(t) {
                    return t.replace(/[-_]([a-z])/g, (s, d) => d.toUpperCase())
                }

                function u(t) {
                    if (t == null) return;
                    let s = +t;
                    return Number.isNaN(s) ? void 0 : s
                }

                function c(t) {
                    let s = h(t).toString();
                    return s ? "?" + s : ""
                }

                function h(t) {
                    let s = {};
                    for (let d in t) t[d] != null && (s[d] = t[d]);
                    return new URLSearchParams(s)
                }
                var f = (t, s) => !t || !s ? !1 : t.contains(s) ? !0 : f(t, s.getRootNode().host),
                    m = "mux.com",
                    p = () => {
                        try {
                            return "3.3.3"
                        } catch (t) {}
                        return "UNKNOWN"
                    },
                    E = p(),
                    S = () => E,
                    L = (t, {
                        token: s,
                        customDomain: d = m,
                        thumbnailTime: g,
                        programTime: w
                    } = {}) => {
                        var N;
                        let X = s == null ? g : void 0,
                            {
                                aud: ue
                            } = (N = (0, e.parseJwt)(s)) != null ? N : {};
                        if (!(s && ue !== "t")) return `https://image.${d}/${t}/thumbnail.webp${c({token:s,time:X,program_time:w})}`
                    },
                    I = (t, {
                        token: s,
                        customDomain: d = m,
                        programStartTime: g,
                        programEndTime: w
                    } = {}) => {
                        var N;
                        let {
                            aud: X
                        } = (N = (0, e.parseJwt)(s)) != null ? N : {};
                        if (!(s && X !== "s")) return `https://image.${d}/${t}/storyboard.vtt${c({token:s,format:"webp",program_start_time:g,program_end_time:w})}`
                    },
                    O = t => {
                        if (t) {
                            if ([e.StreamTypes.LIVE, e.StreamTypes.ON_DEMAND].includes(t)) return t;
                            if (t != null && t.includes("live")) return e.StreamTypes.LIVE
                        }
                    },
                    U = {
                        crossorigin: "crossOrigin",
                        playsinline: "playsInline"
                    };

                function G(t) {
                    var s;
                    return (s = U[t]) != null ? s : o(t)
                }
                var ee, te, _e, me = class {
                    constructor(t, s) {
                        Be(this, ee), Be(this, te), Be(this, _e, []), _(this, ee, t), _(this, te, s)
                    }[Symbol.iterator]() {
                        return B(this, _e).values()
                    }
                    get length() {
                        return B(this, _e).length
                    }
                    get value() {
                        var t;
                        return (t = B(this, _e).join(" ")) != null ? t : ""
                    }
                    set value(t) {
                        var s;
                        t !== this.value && (_(this, _e, []), this.add(...(s = t == null ? void 0 : t.split(" ")) != null ? s : []))
                    }
                    toString() {
                        return this.value
                    }
                    item(t) {
                        return B(this, _e)[t]
                    }
                    values() {
                        return B(this, _e).values()
                    }
                    keys() {
                        return B(this, _e).keys()
                    }
                    forEach(t) {
                        B(this, _e).forEach(t)
                    }
                    add(...t) {
                        var s, d;
                        t.forEach(g => {
                            this.contains(g) || B(this, _e).push(g)
                        }), !(this.value === "" && !((s = B(this, ee)) != null && s.hasAttribute(`${B(this,te)}`))) && ((d = B(this, ee)) == null || d.setAttribute(`${B(this,te)}`, `${this.value}`))
                    }
                    remove(...t) {
                        var s;
                        t.forEach(d => {
                            B(this, _e).splice(B(this, _e).indexOf(d), 1)
                        }), (s = B(this, ee)) == null || s.setAttribute(`${B(this,te)}`, `${this.value}`)
                    }
                    contains(t) {
                        return B(this, _e).includes(t)
                    }
                    toggle(t, s) {
                        return typeof s != "undefined" ? s ? (this.add(t), !0) : (this.remove(t), !1) : this.contains(t) ? (this.remove(t), !1) : (this.add(t), !0)
                    }
                    replace(t, s) {
                        this.remove(t), this.add(s)
                    }
                };
                ee = new WeakMap, te = new WeakMap, _e = new WeakMap;
                var ae = `[mux-player ${S()}]`;

                function Se(...t) {
                    console.warn(ae, ...t)
                }

                function ve(...t) {
                    console.error(ae, ...t)
                }

                function Ne(t) {
                    var s;
                    let d = (s = t.message) != null ? s : "";
                    t.context && (d += ` ${t.context}`), t.file && (d += ` ${(0,a.i18n)("Read more: ")}
https://github.com/muxinc/elements/blob/main/errors/${t.file}`), Se(d)
                }
                var Ie = {
                        AUTOPLAY: "autoplay",
                        CROSSORIGIN: "crossorigin",
                        LOOP: "loop",
                        MUTED: "muted",
                        PLAYSINLINE: "playsinline",
                        PRELOAD: "preload"
                    },
                    kt = {
                        VOLUME: "volume",
                        PLAYBACKRATE: "playbackrate",
                        MUTED: "muted"
                    },
                    zt = Object.freeze({
                        length: 0,
                        start(t) {
                            let s = t >>> 0;
                            if (s >= this.length) throw new DOMException(`Failed to execute 'start' on 'TimeRanges': The index provided (${s}) is greater than or equal to the maximum bound (${this.length}).`);
                            return 0
                        },
                        end(t) {
                            let s = t >>> 0;
                            if (s >= this.length) throw new DOMException(`Failed to execute 'end' on 'TimeRanges': The index provided (${s}) is greater than or equal to the maximum bound (${this.length}).`);
                            return 0
                        }
                    }),
                    lr = n.VideoEvents.filter(t => t !== "error"),
                    Fr = Object.values(Ie).filter(t => ![Ie.PLAYSINLINE].includes(t)),
                    Br = Object.values(kt),
                    hi = class extends st.HTMLElement {
                        static get observedAttributes() {
                            return [...Fr, ...Br]
                        }
                        constructor() {
                            super()
                        }
                        init() {
                            lr.forEach(t => {
                                var s;
                                (s = this.media) == null || s.addEventListener(t, d => {
                                    this.dispatchEvent(new Event(d.type))
                                })
                            })
                        }
                        attributeChangedCallback(t, s, d) {
                            var g, w;
                            switch (t) {
                                case kt.MUTED:
                                    {
                                        this.media && (this.media.muted = d != null, this.media.defaultMuted = d != null);
                                        return
                                    }
                                case kt.VOLUME:
                                    {
                                        let N = (g = u(d)) != null ? g : 1;this.media && (this.media.volume = N);
                                        return
                                    }
                                case kt.PLAYBACKRATE:
                                    {
                                        let N = (w = u(d)) != null ? w : 1;this.media && (this.media.playbackRate = N, this.media.defaultPlaybackRate = N);
                                        return
                                    }
                            }
                        }
                        play() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.play()) != null ? s : Promise.reject()
                        }
                        pause() {
                            var t;
                            (t = this.media) == null || t.pause()
                        }
                        load() {
                            var t;
                            (t = this.media) == null || t.load()
                        }
                        requestCast(t) {
                            var s;
                            return (s = this.media) == null ? void 0 : s.requestCast(t)
                        }
                        get media() {
                            var t;
                            return (t = this.shadowRoot) == null ? void 0 : t.querySelector("mux-video")
                        }
                        get audioTracks() {
                            return this.media.audioTracks
                        }
                        get videoTracks() {
                            return this.media.videoTracks
                        }
                        get audioRenditions() {
                            return this.media.audioRenditions
                        }
                        get videoRenditions() {
                            return this.media.videoRenditions
                        }
                        get paused() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.paused) != null ? s : !0
                        }
                        get duration() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.duration) != null ? s : NaN
                        }
                        get ended() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.ended) != null ? s : !1
                        }
                        get buffered() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.buffered) != null ? s : zt
                        }
                        get seekable() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.seekable) != null ? s : zt
                        }
                        get readyState() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.readyState) != null ? s : 0
                        }
                        get videoWidth() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.videoWidth) != null ? s : 0
                        }
                        get videoHeight() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.videoHeight) != null ? s : 0
                        }
                        get currentSrc() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.currentSrc) != null ? s : ""
                        }
                        get currentTime() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.currentTime) != null ? s : 0
                        }
                        set currentTime(t) {
                            this.media && (this.media.currentTime = Number(t))
                        }
                        get volume() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.volume) != null ? s : 1
                        }
                        set volume(t) {
                            this.media && (this.media.volume = Number(t))
                        }
                        get playbackRate() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.playbackRate) != null ? s : 1
                        }
                        set playbackRate(t) {
                            this.media && (this.media.playbackRate = Number(t))
                        }
                        get defaultPlaybackRate() {
                            var t;
                            return (t = u(this.getAttribute(kt.PLAYBACKRATE))) != null ? t : 1
                        }
                        set defaultPlaybackRate(t) {
                            t != null ? this.setAttribute(kt.PLAYBACKRATE, `${t}`) : this.removeAttribute(kt.PLAYBACKRATE)
                        }
                        get crossOrigin() {
                            return ei(this, Ie.CROSSORIGIN)
                        }
                        set crossOrigin(t) {
                            this.setAttribute(Ie.CROSSORIGIN, `${t}`)
                        }
                        get autoplay() {
                            return ei(this, Ie.AUTOPLAY) != null
                        }
                        set autoplay(t) {
                            t ? this.setAttribute(Ie.AUTOPLAY, typeof t == "string" ? t : "") : this.removeAttribute(Ie.AUTOPLAY)
                        }
                        get loop() {
                            return ei(this, Ie.LOOP) != null
                        }
                        set loop(t) {
                            t ? this.setAttribute(Ie.LOOP, "") : this.removeAttribute(Ie.LOOP)
                        }
                        get muted() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.muted) != null ? s : !1
                        }
                        set muted(t) {
                            this.media && (this.media.muted = !!t)
                        }
                        get defaultMuted() {
                            return ei(this, Ie.MUTED) != null
                        }
                        set defaultMuted(t) {
                            t ? this.setAttribute(Ie.MUTED, "") : this.removeAttribute(Ie.MUTED)
                        }
                        get playsInline() {
                            return ei(this, Ie.PLAYSINLINE) != null
                        }
                        set playsInline(t) {
                            ve("playsInline is set to true by default and is not currently supported as a setter.")
                        }
                        get preload() {
                            return this.media ? this.media.preload : this.getAttribute("preload")
                        }
                        set preload(t) {
                            ["", "none", "metadata", "auto"].includes(t) ? this.setAttribute(Ie.PRELOAD, t) : this.removeAttribute(Ie.PRELOAD)
                        }
                    };

                function ei(t, s) {
                    return t.media ? t.media.getAttribute(s) : t.getAttribute(s)
                }
                var Hr = hi,
                    Zi = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    ir = (t, s, d) => (Zi(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Ii = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Fi = (t, s, d, g) => (Zi(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    wa, Ci, Bi, on, Na, pi, Ra, Ua, Hi, Ta, Wi, An = 1,
                    Aa = 0,
                    $s = 1,
                    Yl = {
                        processCallback(t, s, d) {
                            if (d) {
                                for (let [g, w] of s)
                                    if (g in d) {
                                        let N = d[g];
                                        typeof N == "boolean" && w instanceof zn && typeof w.element[w.attributeName] == "boolean" ? w.booleanValue = N : typeof N == "function" && w instanceof zn ? w.element[w.attributeName] = N : w.value = N
                                    }
                            }
                        }
                    },
                    vs = class extends oe.DocumentFragment {
                        constructor(t, s, d = Yl) {
                            var g;
                            super(), Ii(this, wa, void 0), Ii(this, Ci, void 0), this.append(t.content.cloneNode(!0)), Fi(this, wa, xo(this)), Fi(this, Ci, d), (g = d.createCallback) == null || g.call(d, this, ir(this, wa), s), d.processCallback(this, ir(this, wa), s)
                        }
                        update(t) {
                            ir(this, Ci).processCallback(this, ir(this, wa), t)
                        }
                    };
                wa = new WeakMap, Ci = new WeakMap;
                var xo = (t, s = []) => {
                        let d, g;
                        for (let w of t.attributes || [])
                            if (w.value.includes("{{")) {
                                let N = new Kh;
                                for ([d, g] of dd(w.value))
                                    if (!d) N.append(g);
                                    else {
                                        let X = new zn(t, w.name, w.namespaceURI);
                                        N.append(X), s.push([g, X])
                                    }
                                w.value = N.toString()
                            }
                        for (let w of t.childNodes)
                            if (w.nodeType === An && !(w instanceof HTMLTemplateElement)) xo(w, s);
                            else {
                                let N = w.data;
                                if (w.nodeType === An || N.includes("{{")) {
                                    let X = [];
                                    if (N)
                                        for ([d, g] of dd(N))
                                            if (!d) X.push(new Text(g));
                                            else {
                                                let ue = new co(t);
                                                X.push(ue), s.push([g, ue])
                                            }
                                    else if (w instanceof HTMLTemplateElement) {
                                        let ue = new Xn(t, w);
                                        X.push(ue), s.push([ue.expression, ue])
                                    }
                                    w.replaceWith(...X.flatMap(ue => ue.replacementNodes || [ue]))
                                }
                            }
                        return s
                    },
                    ps = {},
                    dd = t => {
                        let s = "",
                            d = 0,
                            g = ps[t],
                            w = 0,
                            N;
                        if (g) return g;
                        for (g = []; N = t[w]; w++) N === "{" && t[w + 1] === "{" && t[w - 1] !== "\\" && t[w + 2] && ++d == 1 ? (s && g.push([Aa, s]), s = "", w++) : N === "}" && t[w + 1] === "}" && t[w - 1] !== "\\" && !--d ? (g.push([$s, s.trim()]), s = "", w++) : s += N || "";
                        return s && g.push([Aa, (d > 0 ? "{{" : "") + s]), ps[t] = g
                    },
                    wu = 11,
                    kc = class {
                        get value() {
                            return ""
                        }
                        set value(t) {}
                        toString() {
                            return this.value
                        }
                    },
                    Ru = new WeakMap,
                    Kh = class {
                        constructor() {
                            Ii(this, Bi, [])
                        }[Symbol.iterator]() {
                            return ir(this, Bi).values()
                        }
                        get length() {
                            return ir(this, Bi).length
                        }
                        item(t) {
                            return ir(this, Bi)[t]
                        }
                        append(...t) {
                            for (let s of t) s instanceof zn && Ru.set(s, this), ir(this, Bi).push(s)
                        }
                        toString() {
                            return ir(this, Bi).join("")
                        }
                    };
                Bi = new WeakMap;
                var zn = class extends kc {
                    constructor(t, s, d) {
                        super(), Ii(this, Ua), Ii(this, on, ""), Ii(this, Na, void 0), Ii(this, pi, void 0), Ii(this, Ra, void 0), Fi(this, Na, t), Fi(this, pi, s), Fi(this, Ra, d)
                    }
                    get attributeName() {
                        return ir(this, pi)
                    }
                    get attributeNamespace() {
                        return ir(this, Ra)
                    }
                    get element() {
                        return ir(this, Na)
                    }
                    get value() {
                        return ir(this, on)
                    }
                    set value(t) {
                        ir(this, on) !== t && (Fi(this, on, t), !ir(this, Ua, Hi) || ir(this, Ua, Hi).length === 1 ? t == null ? ir(this, Na).removeAttributeNS(ir(this, Ra), ir(this, pi)) : ir(this, Na).setAttributeNS(ir(this, Ra), ir(this, pi), t) : ir(this, Na).setAttributeNS(ir(this, Ra), ir(this, pi), ir(this, Ua, Hi).toString()))
                    }
                    get booleanValue() {
                        return ir(this, Na).hasAttributeNS(ir(this, Ra), ir(this, pi))
                    }
                    set booleanValue(t) {
                        if (!ir(this, Ua, Hi) || ir(this, Ua, Hi).length === 1) this.value = t ? "" : null;
                        else throw new DOMException("Value is not fully templatized")
                    }
                };
                on = new WeakMap, Na = new WeakMap, pi = new WeakMap, Ra = new WeakMap, Ua = new WeakSet, Hi = function() {
                    return Ru.get(this)
                };
                var co = class extends kc {
                    constructor(t, s) {
                        super(), Ii(this, Ta, void 0), Ii(this, Wi, void 0), Fi(this, Ta, t), Fi(this, Wi, s ? [...s] : [new Text])
                    }
                    get replacementNodes() {
                        return ir(this, Wi)
                    }
                    get parentNode() {
                        return ir(this, Ta)
                    }
                    get nextSibling() {
                        return ir(this, Wi)[ir(this, Wi).length - 1].nextSibling
                    }
                    get previousSibling() {
                        return ir(this, Wi)[0].previousSibling
                    }
                    get value() {
                        return ir(this, Wi).map(t => t.textContent).join("")
                    }
                    set value(t) {
                        this.replace(t)
                    }
                    replace(...t) {
                        let s = t.flat().flatMap(d => d == null ? [new Text] : d.forEach ? [...d] : d.nodeType === wu ? [...d.childNodes] : d.nodeType ? [d] : [new Text(d)]);
                        s.length || s.push(new Text), Fi(this, Wi, wc(ir(this, Wi)[0].parentNode, ir(this, Wi), s, this.nextSibling))
                    }
                };
                Ta = new WeakMap, Wi = new WeakMap;
                var Xn = class extends co {
                    constructor(t, s) {
                        let d = s.getAttribute("directive") || s.getAttribute("type"),
                            g = s.getAttribute("expression") || s.getAttribute(d) || "";
                        g.startsWith("{{") && (g = g.trim().slice(2, -2).trim()), super(t), this.expression = g, this.template = s, this.directive = d
                    }
                };

                function wc(t, s, d, g = null) {
                    let w = 0,
                        N, X, ue, $e = d.length,
                        et = s.length;
                    for (; w < $e && w < et && s[w] == d[w];) w++;
                    for (; w < $e && w < et && d[$e - 1] == s[et - 1];) g = d[--et, --$e];
                    if (w == et)
                        for (; w < $e;) t.insertBefore(d[w++], g);
                    if (w == $e)
                        for (; w < et;) t.removeChild(s[w++]);
                    else {
                        for (N = s[w]; w < $e;) ue = d[w++], X = N ? N.nextSibling : g, N == ue ? N = X : w < $e && d[w] == X ? (t.replaceChild(ue, N), N = X) : t.insertBefore(ue, N);
                        for (; N != g;) X = N.nextSibling, t.removeChild(N), N = X
                    }
                    return d
                }
                var cd = {
                        string: t => String(t)
                    },
                    Rc = class {
                        constructor(t) {
                            this.template = t, this.state = void 0
                        }
                    },
                    No = new WeakMap,
                    Uo = new WeakMap,
                    hd = {
                        partial: (t, s) => {
                            s[t.expression] = new Rc(t.template)
                        },
                        if: (t, s) => {
                            var d;
                            if (Lc(t.expression, s))
                                if (No.get(t) !== t.template) {
                                    No.set(t, t.template);
                                    let g = new vs(t.template, s, fl);
                                    t.replace(g), Uo.set(t, g)
                                } else(d = Uo.get(t)) == null || d.update(s);
                            else t.replace(""), No.delete(t), Uo.delete(t)
                        }
                    },
                    Yh = Object.keys(hd),
                    fl = {
                        processCallback(t, s, d) {
                            var g, w;
                            if (d)
                                for (let [N, X] of s) {
                                    if (X instanceof Xn) {
                                        if (!X.directive) {
                                            let $e = Yh.find(et => X.template.hasAttribute(et));
                                            $e && (X.directive = $e, X.expression = X.template.getAttribute($e))
                                        }(g = hd[X.directive]) == null || g.call(hd, X, d);
                                        continue
                                    }
                                    let ue = Lc(N, d);
                                    if (ue instanceof Rc) {
                                        No.get(X) !== ue.template ? (No.set(X, ue.template), ue = new vs(ue.template, ue.state, fl), X.value = ue, Uo.set(X, ue)) : (w = Uo.get(X)) == null || w.update(ue.state);
                                        continue
                                    }
                                    ue ? (X instanceof zn && X.attributeName.startsWith("aria-") && (ue = String(ue)), X instanceof zn ? typeof ue == "boolean" ? X.booleanValue = ue : typeof ue == "function" ? X.element[X.attributeName] = ue : X.value = ue : (X.value = ue, No.delete(X), Uo.delete(X))) : X instanceof zn ? X.value = void 0 : (X.value = void 0, No.delete(X), Uo.delete(X))
                                }
                        }
                    },
                    fd = {
                        "!": t => !t,
                        "!!": t => !!t,
                        "==": (t, s) => t == s,
                        "!=": (t, s) => t != s,
                        ">": (t, s) => t > s,
                        ">=": (t, s) => t >= s,
                        "<": (t, s) => t < s,
                        "<=": (t, s) => t <= s,
                        "??": (t, s) => t != null ? t : s,
                        "|": (t, s) => {
                            var d;
                            return (d = cd[s]) == null ? void 0 : d.call(cd, t)
                        }
                    };

                function qh(t) {
                    return kv(t, {
                        boolean: /true|false/,
                        number: /-?\d+\.?\d*/,
                        string: /(["'])((?:\\.|[^\\])*?)\1/,
                        operator: /[!=><][=!]?|\?\?|\|/,
                        ws: /\s+/,
                        param: /[$a-z_][$\w]*/i
                    }).filter(({
                        type: s
                    }) => s !== "ws")
                }

                function Lc(t, s = {}) {
                    var d, g, w, N, X, ue, $e;
                    let et = qh(t);
                    if (et.length === 0 || et.some(({
                            type: ur
                        }) => !ur)) return md(t);
                    if (((d = et[0]) == null ? void 0 : d.token) === ">") {
                        let ur = s[(g = et[1]) == null ? void 0 : g.token];
                        if (!ur) return md(t);
                        let gr = le({}, s);
                        ur.state = gr;
                        let Sr = et.slice(2);
                        for (let _r = 0; _r < Sr.length; _r += 3) {
                            let Ei = (w = Sr[_r]) == null ? void 0 : w.token,
                                fi = (N = Sr[_r + 1]) == null ? void 0 : N.token,
                                bi = (X = Sr[_r + 2]) == null ? void 0 : X.token;
                            Ei && fi === "=" && (gr[Ei] = vd(bi, s))
                        }
                        return ur
                    }
                    if (et.length === 1) return Ic(et[0]) ? vd(et[0].token, s) : md(t);
                    if (et.length === 2) {
                        let ur = (ue = et[0]) == null ? void 0 : ue.token,
                            gr = fd[ur];
                        if (!gr || !Ic(et[1])) return md(t);
                        let Sr = vd(et[1].token, s);
                        return gr(Sr)
                    }
                    if (et.length === 3) {
                        let ur = ($e = et[1]) == null ? void 0 : $e.token,
                            gr = fd[ur];
                        if (!gr || !Ic(et[0]) || !Ic(et[2])) return md(t);
                        let Sr = vd(et[0].token, s);
                        if (ur === "|") return gr(Sr, et[2].token);
                        let _r = vd(et[2].token, s);
                        return gr(Sr, _r)
                    }
                }

                function md(t) {
                    return console.warn(`Warning: invalid expression \`${t}\``), !1
                }

                function Ic({
                    type: t
                }) {
                    return ["number", "boolean", "string", "param"].includes(t)
                }

                function vd(t, s) {
                    let d = t[0],
                        g = t.slice(-1);
                    return t === "true" || t === "false" ? t === "true" : d === g && ["'", '"'].includes(d) ? t.slice(1, -1) : pe(t) ? parseFloat(t) : s[t]
                }

                function kv(t, s) {
                    let d, g, w, N = [];
                    for (; t;) {
                        w = null, d = t.length;
                        for (let X in s) g = s[X].exec(t), g && g.index < d && (w = {
                            token: g[0],
                            type: X,
                            matches: g.slice(1)
                        }, d = g.index);
                        d && N.push({
                            token: t.substr(0, d),
                            type: void 0
                        }), w && N.push(w), t = t.substr(d + (w ? w.token.length : 0))
                    }
                    return N
                }
                var $h = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    jh = (t, s, d) => ($h(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    pd = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    ql = (t, s, d, g) => ($h(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    zh = (t, s, d) => ($h(t, s, "access private method"), d),
                    Lu, Cc, Iu, Xh, Qf, Dc, Zh, Qh = {
                        mediatargetlivewindow: "targetlivewindow",
                        mediastreamtype: "streamtype"
                    },
                    Jf = Ut.createElement("template");
                Jf.innerHTML = `
  <style>
    :host {
      display: inline-block;
      line-height: 0;
    }

    media-controller {
      width: 100%;
      height: 100%;
    }

    media-captions-button:not([mediasubtitleslist]),
    media-captions-menu:not([mediasubtitleslist]),
    media-captions-menu-button:not([mediasubtitleslist]),
    media-audio-track-menu[mediaaudiotrackunavailable],
    media-audio-track-menu-button[mediaaudiotrackunavailable],
    media-rendition-menu[mediarenditionunavailable],
    media-rendition-menu-button[mediarenditionunavailable],
    media-volume-range[mediavolumeunavailable],
    media-airplay-button[mediaairplayunavailable],
    media-fullscreen-button[mediafullscreenunavailable],
    media-cast-button[mediacastunavailable],
    media-pip-button[mediapipunavailable] {
      display: none;
    }
  </style>
`;
                var Mc = class extends oe.HTMLElement {
                    constructor() {
                        super(), pd(this, Xh), pd(this, Dc), pd(this, Lu, void 0), pd(this, Cc, void 0), pd(this, Iu, void 0), this.shadowRoot ? this.renderRoot = this.shadowRoot : (this.renderRoot = this.attachShadow({
                            mode: "open"
                        }), this.createRenderer());
                        let t = new MutationObserver(s => {
                            var d;
                            this.mediaController && !((d = this.mediaController) != null && d.breakpointsComputed) || s.some(g => {
                                let w = g.target;
                                return w === this ? !0 : w.localName !== "media-controller" ? !1 : !!(Qh[g.attributeName] || g.attributeName.startsWith("breakpoint"))
                            }) && this.render()
                        });
                        t.observe(this, {
                            attributes: !0
                        }), t.observe(this.renderRoot, {
                            attributes: !0,
                            subtree: !0
                        }), this.addEventListener(br.BREAKPOINTS_COMPUTED, this.render), zh(this, Xh, Qf).call(this, "template")
                    }
                    get mediaController() {
                        return this.renderRoot.querySelector("media-controller")
                    }
                    get template() {
                        var t;
                        return (t = jh(this, Lu)) != null ? t : this.constructor.template
                    }
                    set template(t) {
                        ql(this, Iu, null), ql(this, Lu, t), this.createRenderer()
                    }
                    get props() {
                        var t, s, d;
                        let g = [...Array.from((s = (t = this.mediaController) == null ? void 0 : t.attributes) != null ? s : []).filter(({
                                name: N
                            }) => Qh[N] || N.startsWith("breakpoint")), ...Array.from(this.attributes)],
                            w = {};
                        for (let N of g) {
                            let X = (d = Qh[N.name]) != null ? d : Z(N.name),
                                {
                                    value: ue
                                } = N;
                            ue != null ? (pe(ue) && (ue = parseFloat(ue)), w[X] = ue === "" ? !0 : ue) : w[X] = !1
                        }
                        return w
                    }
                    attributeChangedCallback(t, s, d) {
                        t === "template" && s != d && zh(this, Dc, Zh).call(this)
                    }
                    connectedCallback() {
                        zh(this, Dc, Zh).call(this)
                    }
                    createRenderer() {
                        this.template && this.template !== jh(this, Cc) && (ql(this, Cc, this.template), this.renderer = new vs(this.template, this.props, this.constructor.processor), this.renderRoot.textContent = "", this.renderRoot.append(Jf.content.cloneNode(!0), this.renderer))
                    }
                    render() {
                        var t;
                        (t = this.renderer) == null || t.update(this.props)
                    }
                };
                Lu = new WeakMap, Cc = new WeakMap, Iu = new WeakMap, Xh = new WeakSet, Qf = function(t) {
                    if (Object.prototype.hasOwnProperty.call(this, t)) {
                        let s = this[t];
                        delete this[t], this[t] = s
                    }
                }, Dc = new WeakSet, Zh = function() {
                    var t;
                    let s = this.getAttribute("template");
                    if (!s || s === jh(this, Iu)) return;
                    let d = this.getRootNode(),
                        g = (t = d == null ? void 0 : d.getElementById) == null ? void 0 : t.call(d, s);
                    if (g) {
                        ql(this, Iu, s), ql(this, Lu, g), this.createRenderer();
                        return
                    }
                    wv(s) && (ql(this, Iu, s), Rv(s).then(w => {
                        let N = Ut.createElement("template");
                        N.innerHTML = w, ql(this, Lu, N), this.createRenderer()
                    }).catch(console.error))
                }, Mc.observedAttributes = ["template"], Mc.processor = fl;

                function wv(t) {
                    if (!/^(\/|\.\/|https?:\/\/)/.test(t)) return !1;
                    let s = /^https?:\/\//.test(t) ? void 0 : location.origin;
                    try {
                        new URL(t, s)
                    } catch (d) {
                        return !1
                    }
                    return !0
                }

                function Rv(t) {
                    return Q(this, null, function*() {
                        let s = yield fetch(t);
                        if (s.status !== 200) throw new Error(`Failed to load resource: the server responded with a status of ${s.status}`);
                        return s.text()
                    })
                }
                oe.customElements.get("media-theme") || oe.customElements.define("media-theme", Mc);
                var Lv = `:host {
  --media-control-display: var(--controls);
  --media-loading-indicator-display: var(--loading-indicator);
  --media-dialog-display: var(--dialog);
  --media-play-button-display: var(--play-button);
  --media-live-button-display: var(--live-button);
  --media-seek-backward-button-display: var(--seek-backward-button);
  --media-seek-forward-button-display: var(--seek-forward-button);
  --media-mute-button-display: var(--mute-button);
  --media-captions-button-display: var(--captions-button);
  --media-captions-menu-button-display: var(--captions-menu-button, var(--media-captions-button-display));
  --media-rendition-menu-button-display: var(--rendition-menu-button);
  --media-audio-track-menu-button-display: var(--audio-track-menu-button);
  --media-airplay-button-display: var(--airplay-button);
  --media-pip-button-display: var(--pip-button);
  --media-fullscreen-button-display: var(--fullscreen-button);
  --media-cast-button-display: var(--cast-button, var(--_cast-button-drm-display));
  --media-playback-rate-button-display: var(--playback-rate-button);
  --media-playback-rate-menu-button-display: var(--playback-rate-menu-button);
  --media-volume-range-display: var(--volume-range);
  --media-time-range-display: var(--time-range);
  --media-time-display-display: var(--time-display);
  --media-duration-display-display: var(--duration-display);
  --media-title-display-display: var(--title-display);

  display: inline-block;
  line-height: 0;
  width: 100%;
}

a {
  color: #fff;
  font-size: 0.9em;
  text-decoration: underline;
}

media-theme {
  display: inline-block;
  line-height: 0;
  width: 100%;
  height: 100%;
  direction: ltr;
}

media-poster-image {
  display: inline-block;
  line-height: 0;
  width: 100%;
  height: 100%;
}

media-poster-image:not([src]):not([placeholdersrc]) {
  display: none;
}

::part(top),
[part~='top'] {
  --media-control-display: var(--controls, var(--top-controls));
  --media-play-button-display: var(--play-button, var(--top-play-button));
  --media-live-button-display: var(--live-button, var(--top-live-button));
  --media-seek-backward-button-display: var(--seek-backward-button, var(--top-seek-backward-button));
  --media-seek-forward-button-display: var(--seek-forward-button, var(--top-seek-forward-button));
  --media-mute-button-display: var(--mute-button, var(--top-mute-button));
  --media-captions-button-display: var(--captions-button, var(--top-captions-button));
  --media-captions-menu-button-display: var(
    --captions-menu-button,
    var(--media-captions-button-display, var(--top-captions-menu-button))
  );
  --media-rendition-menu-button-display: var(--rendition-menu-button, var(--top-rendition-menu-button));
  --media-audio-track-menu-button-display: var(--audio-track-menu-button, var(--top-audio-track-menu-button));
  --media-airplay-button-display: var(--airplay-button, var(--top-airplay-button));
  --media-pip-button-display: var(--pip-button, var(--top-pip-button));
  --media-fullscreen-button-display: var(--fullscreen-button, var(--top-fullscreen-button));
  --media-cast-button-display: var(--cast-button, var(--top-cast-button, var(--_cast-button-drm-display)));
  --media-playback-rate-button-display: var(--playback-rate-button, var(--top-playback-rate-button));
  --media-playback-rate-menu-button-display: var(
    --captions-menu-button,
    var(--media-playback-rate-button-display, var(--top-playback-rate-menu-button))
  );
  --media-volume-range-display: var(--volume-range, var(--top-volume-range));
  --media-time-range-display: var(--time-range, var(--top-time-range));
  --media-time-display-display: var(--time-display, var(--top-time-display));
  --media-duration-display-display: var(--duration-display, var(--top-duration-display));
  --media-title-display-display: var(--title-display, var(--top-title-display));
}

::part(center),
[part~='center'] {
  --media-control-display: var(--controls, var(--center-controls));
  --media-play-button-display: var(--play-button, var(--center-play-button));
  --media-live-button-display: var(--live-button, var(--center-live-button));
  --media-seek-backward-button-display: var(--seek-backward-button, var(--center-seek-backward-button));
  --media-seek-forward-button-display: var(--seek-forward-button, var(--center-seek-forward-button));
  --media-mute-button-display: var(--mute-button, var(--center-mute-button));
  --media-captions-button-display: var(--captions-button, var(--center-captions-button));
  --media-captions-menu-button-display: var(
    --captions-menu-button,
    var(--media-captions-button-display, var(--center-captions-menu-button))
  );
  --media-rendition-menu-button-display: var(--rendition-menu-button, var(--center-rendition-menu-button));
  --media-audio-track-menu-button-display: var(--audio-track-menu-button, var(--center-audio-track-menu-button));
  --media-airplay-button-display: var(--airplay-button, var(--center-airplay-button));
  --media-pip-button-display: var(--pip-button, var(--center-pip-button));
  --media-fullscreen-button-display: var(--fullscreen-button, var(--center-fullscreen-button));
  --media-cast-button-display: var(--cast-button, var(--center-cast-button, var(--_cast-button-drm-display)));
  --media-playback-rate-button-display: var(--playback-rate-button, var(--center-playback-rate-button));
  --media-playback-rate-menu-button-display: var(
    --playback-rate-menu-button,
    var(--media-playback-rate-button-display, var(--center-playback-rate-menu-button))
  );
  --media-volume-range-display: var(--volume-range, var(--center-volume-range));
  --media-time-range-display: var(--time-range, var(--center-time-range));
  --media-time-display-display: var(--time-display, var(--center-time-display));
  --media-duration-display-display: var(--duration-display, var(--center-duration-display));
}

::part(bottom),
[part~='bottom'] {
  --media-control-display: var(--controls, var(--bottom-controls));
  --media-play-button-display: var(--play-button, var(--bottom-play-button));
  --media-live-button-display: var(--live-button, var(--bottom-live-button));
  --media-seek-backward-button-display: var(--seek-backward-button, var(--bottom-seek-backward-button));
  --media-seek-forward-button-display: var(--seek-forward-button, var(--bottom-seek-forward-button));
  --media-mute-button-display: var(--mute-button, var(--bottom-mute-button));
  --media-captions-button-display: var(--captions-button, var(--bottom-captions-button));
  --media-captions-menu-button-display: var(
    --captions-menu-button,
    var(--media-captions-button-display, var(--bottom-captions-menu-button))
  );
  --media-rendition-menu-button-display: var(--rendition-menu-button, var(--bottom-rendition-menu-button));
  --media-audio-track-menu-button-display: var(--audio-track-menu-button, var(--bottom-audio-track-menu-button));
  --media-airplay-button-display: var(--airplay-button, var(--bottom-airplay-button));
  --media-pip-button-display: var(--pip-button, var(--bottom-pip-button));
  --media-fullscreen-button-display: var(--fullscreen-button, var(--bottom-fullscreen-button));
  --media-cast-button-display: var(--cast-button, var(--bottom-cast-button, var(--_cast-button-drm-display)));
  --media-playback-rate-button-display: var(--playback-rate-button, var(--bottom-playback-rate-button));
  --media-playback-rate-menu-button-display: var(
    --playback-rate-menu-button,
    var(--media-playback-rate-button-display, var(--bottom-playback-rate-menu-button))
  );
  --media-volume-range-display: var(--volume-range, var(--bottom-volume-range));
  --media-time-range-display: var(--time-range, var(--bottom-time-range));
  --media-time-display-display: var(--time-display, var(--bottom-time-display));
  --media-duration-display-display: var(--duration-display, var(--bottom-duration-display));
  --media-title-display-display: var(--title-display, var(--bottom-title-display));
}

:host([no-tooltips]) {
  --media-tooltip-display: none;
}
`,
                    gd = new WeakMap,
                    Iv = class Sv {
                        constructor(s, d) {
                            this.element = s, this.type = d, this.element.addEventListener(this.type, this);
                            let g = gd.get(this.element);
                            g && g.set(this.type, this)
                        }
                        set(s) {
                            if (typeof s == "function") this.handleEvent = s.bind(this.element);
                            else if (typeof s == "object" && typeof s.handleEvent == "function") this.handleEvent = s.handleEvent.bind(s);
                            else {
                                this.element.removeEventListener(this.type, this);
                                let d = gd.get(this.element);
                                d && d.delete(this.type)
                            }
                        }
                        static
                        for (s) {
                            gd.has(s.element) || gd.set(s.element, new Map);
                            let d = s.attributeName.slice(2),
                                g = gd.get(s.element);
                            return g && g.has(d) ? g.get(d) : new Sv(s.element, d)
                        }
                    };

                function Cv(t, s) {
                    return t instanceof zn && t.attributeName.startsWith("on") ? (Iv.for(t).set(s), t.element.removeAttributeNS(t.attributeNamespace, t.attributeName), !0) : !1
                }

                function Dv(t, s) {
                    return s instanceof rm && t instanceof co ? (s.renderInto(t), !0) : !1
                }

                function Mv(t, s) {
                    return s instanceof DocumentFragment && t instanceof co ? (s.childNodes.length && t.replace(...s.childNodes), !0) : !1
                }

                function Pv(t, s) {
                    if (t instanceof zn) {
                        let d = t.attributeNamespace,
                            g = t.element.getAttributeNS(d, t.attributeName);
                        return String(s) !== g && (t.value = String(s)), !0
                    }
                    return t.value = String(s), !0
                }

                function Ov(t, s) {
                    if (t instanceof zn && s instanceof Element) {
                        let d = t.element;
                        return d[t.attributeName] !== s && (t.element.removeAttributeNS(t.attributeNamespace, t.attributeName), d[t.attributeName] = s), !0
                    }
                    return !1
                }

                function xv(t, s) {
                    if (typeof s == "boolean" && t instanceof zn) {
                        let d = t.attributeNamespace,
                            g = t.element.hasAttributeNS(d, t.attributeName);
                        return s !== g && (t.booleanValue = s), !0
                    }
                    return !1
                }

                function Nv(t, s) {
                    return s === !1 && t instanceof co ? (t.replace(""), !0) : !1
                }

                function Uv(t, s) {
                    Ov(t, s) || xv(t, s) || Cv(t, s) || Nv(t, s) || Dv(t, s) || Mv(t, s) || Pv(t, s)
                }
                var Jh = new Map,
                    em = new WeakMap,
                    tm = new WeakMap,
                    rm = class {
                        constructor(t, s, d) {
                            this.strings = t, this.values = s, this.processor = d, this.stringsKey = this.strings.join("")
                        }
                        get template() {
                            if (Jh.has(this.stringsKey)) return Jh.get(this.stringsKey); {
                                let t = ct.createElement("template"),
                                    s = this.strings.length - 1;
                                return t.innerHTML = this.strings.reduce((d, g, w) => d + g + (w < s ? `{{ ${w} }}` : ""), ""), Jh.set(this.stringsKey, t), t
                            }
                        }
                        renderInto(t) {
                            var s;
                            let d = this.template;
                            if (em.get(t) !== d) {
                                em.set(t, d);
                                let w = new vs(d, this.values, this.processor);
                                tm.set(t, w), t instanceof co ? t.replace(...w.children) : t.appendChild(w);
                                return
                            }
                            let g = tm.get(t);
                            (s = g == null ? void 0 : g.update) == null || s.call(g, this.values)
                        }
                    },
                    Fv = {
                        processCallback(t, s, d) {
                            var g;
                            if (d) {
                                for (let [w, N] of s)
                                    if (w in d) {
                                        let X = (g = d[w]) != null ? g : "";
                                        Uv(N, X)
                                    }
                            }
                        }
                    };

                function Pc(t, ...s) {
                    return new rm(t, s, Fv)
                }

                function Bv(t, s) {
                    t.renderInto(s)
                }
                var ef = we(56543),
                    Hv = t => {
                        let {
                            tokens: s
                        } = t;
                        return s.drm ? ":host { --_cast-button-drm-display: none; }" : ""
                    },
                    Vv = t => Pc `
  <style>
    ${Hv(t)}
    ${Lv}
  </style>
  ${Yv(t)}
`,
                    Wv = t => {
                        let s = t.hotKeys ? `${t.hotKeys}` : "";
                        return O(t.streamType) === "live" && (s += " noarrowleft noarrowright"), s
                    },
                    Gv = {
                        TOP: "top",
                        CENTER: "center",
                        BOTTOM: "bottom",
                        LAYER: "layer",
                        MEDIA_LAYER: "media-layer",
                        POSTER_LAYER: "poster-layer",
                        VERTICAL_LAYER: "vertical-layer",
                        CENTERED_LAYER: "centered-layer",
                        GESTURE_LAYER: "gesture-layer",
                        CONTROLLER_LAYER: "controller",
                        BUTTON: "button",
                        RANGE: "range",
                        DISPLAY: "display",
                        CONTROL_BAR: "control-bar",
                        MENU_BUTTON: "menu-button",
                        MENU: "menu",
                        OPTION: "option",
                        POSTER: "poster",
                        LIVE: "live",
                        PLAY: "play",
                        PRE_PLAY: "pre-play",
                        SEEK_BACKWARD: "seek-backward",
                        SEEK_FORWARD: "seek-forward",
                        MUTE: "mute",
                        CAPTIONS: "captions",
                        AIRPLAY: "airplay",
                        PIP: "pip",
                        FULLSCREEN: "fullscreen",
                        CAST: "cast",
                        PLAYBACK_RATE: "playback-rate",
                        VOLUME: "volume",
                        TIME: "time",
                        TITLE: "title",
                        AUDIO_TRACK: "audio-track",
                        RENDITION: "rendition"
                    },
                    Kv = Object.values(Gv).join(", "),
                    Yv = t => {
                        var s, d, g, w, N, X, ue, $e, et, ur, gr, Sr, _r, Ei, fi, bi, Ba, Bn, go, Vo, Md, Pd, Od, xd, Nd, Ud, Fd, Bd, Hd, Vd, Wd, Gd, uh, Wo;
                        return Pc `
  <media-theme
    template="${t.themeTemplate||!1}"
    defaultstreamtype="${(s=t.defaultStreamType)!=null?s:!1}"
    hotkeys="${Wv(t)||!1}"
    nohotkeys="${t.noHotKeys||!t.hasSrc||!1}"
    noautoseektolive="${!!((d=t.streamType)!=null&&d.includes(ef.StreamTypes.LIVE))&&t.targetLiveWindow!==0}"
    novolumepref="${t.novolumepref||!1}"
    disabled="${!t.hasSrc||t.isDialogOpen}"
    audio="${(g=t.audio)!=null?g:!1}"
    style="${(w=r({"--media-primary-color":t.primaryColor,"--media-secondary-color":t.secondaryColor,"--media-accent-color":t.accentColor}))!=null?w:!1}"
    defaultsubtitles="${!t.defaultHiddenCaptions}"
    forwardseekoffset="${(N=t.forwardSeekOffset)!=null?N:!1}"
    backwardseekoffset="${(X=t.backwardSeekOffset)!=null?X:!1}"
    playbackrates="${(ue=t.playbackRates)!=null?ue:!1}"
    defaultshowremainingtime="${($e=t.defaultShowRemainingTime)!=null?$e:!1}"
    defaultduration="${(et=t.defaultDuration)!=null?et:!1}"
    hideduration="${(ur=t.hideDuration)!=null?ur:!1}"
    title="${(gr=t.title)!=null?gr:!1}"
    proudlydisplaymuxbadge="${(Sr=t.proudlyDisplayMuxBadge)!=null?Sr:!1}"
    exportparts="${Kv}"
    onclose="${t.onCloseErrorDialog}"
    onfocusin="${t.onFocusInErrorDialog}"
  >
    <mux-video
      slot="media"
      target-live-window="${(_r=t.targetLiveWindow)!=null?_r:!1}"
      stream-type="${(Ei=O(t.streamType))!=null?Ei:!1}"
      crossorigin="${(fi=t.crossOrigin)!=null?fi:""}"
      playsinline
      autoplay="${(bi=t.autoplay)!=null?bi:!1}"
      muted="${(Ba=t.muted)!=null?Ba:!1}"
      loop="${(Bn=t.loop)!=null?Bn:!1}"
      preload="${(go=t.preload)!=null?go:!1}"
      debug="${(Vo=t.debug)!=null?Vo:!1}"
      prefer-cmcd="${(Md=t.preferCmcd)!=null?Md:!1}"
      disable-tracking="${(Pd=t.disableTracking)!=null?Pd:!1}"
      disable-cookies="${(Od=t.disableCookies)!=null?Od:!1}"
      prefer-playback="${(xd=t.preferPlayback)!=null?xd:!1}"
      start-time="${t.startTime!=null?t.startTime:!1}"
      beacon-collection-domain="${(Nd=t.beaconCollectionDomain)!=null?Nd:!1}"
      player-init-time="${(Ud=t.playerInitTime)!=null?Ud:!1}"
      player-software-name="${(Fd=t.playerSoftwareName)!=null?Fd:!1}"
      player-software-version="${(Bd=t.playerSoftwareVersion)!=null?Bd:!1}"
      env-key="${(Hd=t.envKey)!=null?Hd:!1}"
      custom-domain="${(Vd=t.customDomain)!=null?Vd:!1}"
      src="${t.src?t.src:t.playbackId?(0,ef.toMuxVideoURL)(t):!1}"
      cast-src="${t.src?t.src:t.playbackId?(0,ef.toMuxVideoURL)(t):!1}"
      cast-receiver="${(Wd=t.castReceiver)!=null?Wd:!1}"
      drm-token="${(uh=(Gd=t.tokens)==null?void 0:Gd.drm)!=null?uh:!1}"
      exportparts="video"
    >
      ${t.storyboard?Pc`<track label="thumbnails" default kind="metadata" src="${t.storyboard}" />`:Pc``}
      <slot></slot>
    </mux-video>
    <slot name="poster" slot="poster">
      <media-poster-image
        part="poster"
        exportparts="poster, img"
        src="${t.poster?t.poster:!1}"
        placeholdersrc="${(Wo=t.placeholder)!=null?Wo:!1}"
      ></media-poster-image>
    </slot>
  </media-theme>
`
                    },
                    Rr = we(56543),
                    im = t => t.charAt(0).toUpperCase() + t.slice(1),
                    qv = (t, s = !1) => {
                        var d, g;
                        if (t.muxCode) {
                            let w = im((d = t.errorCategory) != null ? d : "video"),
                                N = (0, Rr.errorCategoryToTokenNameOrPrefix)((g = t.errorCategory) != null ? g : Rr.MuxErrorCategory.VIDEO);
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_OFFLINE) return (0, Rr.i18n)("Your device appears to be offline", s);
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_EXPIRED) return (0, Rr.i18n)("{category} URL has expired", s).format({
                                category: w
                            });
                            if ([Rr.MuxErrorCode.NETWORK_TOKEN_SUB_MISMATCH, Rr.MuxErrorCode.NETWORK_TOKEN_AUD_MISMATCH, Rr.MuxErrorCode.NETWORK_TOKEN_AUD_MISSING, Rr.MuxErrorCode.NETWORK_TOKEN_MALFORMED].includes(t.muxCode)) return (0, Rr.i18n)("{category} URL is formatted incorrectly", s).format({
                                category: w
                            });
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_MISSING) return (0, Rr.i18n)("Invalid {categoryName} URL", s).format({
                                categoryName: N
                            });
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_NOT_FOUND) return (0, Rr.i18n)("{category} does not exist", s).format({
                                category: w
                            });
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_NOT_READY) return (0, Rr.i18n)("{category} is not currently available", s).format({
                                category: w
                            })
                        }
                        if (t.code) {
                            if (t.code === Rr.MediaError.MEDIA_ERR_NETWORK) return (0, Rr.i18n)("Network Error", s);
                            if (t.code === Rr.MediaError.MEDIA_ERR_DECODE) return (0, Rr.i18n)("Media Error", s);
                            if (t.code === Rr.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED) return (0, Rr.i18n)("Source Not Supported", s)
                        }
                        return (0, Rr.i18n)("Error", s)
                    },
                    $v = (t, s = !1) => {
                        var d, g;
                        if (t.muxCode) {
                            let w = im((d = t.errorCategory) != null ? d : "video"),
                                N = (0, Rr.errorCategoryToTokenNameOrPrefix)((g = t.errorCategory) != null ? g : Rr.MuxErrorCategory.VIDEO);
                            return t.muxCode === Rr.MuxErrorCode.NETWORK_OFFLINE ? (0, Rr.i18n)("Check your internet connection and try reloading this video.", s) : t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_EXPIRED ? (0, Rr.i18n)("The video\u2019s secured {tokenNamePrefix}-token has expired.", s).format({
                                tokenNamePrefix: N
                            }) : t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_SUB_MISMATCH ? (0, Rr.i18n)("The video\u2019s playback ID does not match the one encoded in the {tokenNamePrefix}-token.", s).format({
                                tokenNamePrefix: N
                            }) : t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_MALFORMED ? (0, Rr.i18n)("{category} URL is formatted incorrectly", s).format({
                                category: w
                            }) : [Rr.MuxErrorCode.NETWORK_TOKEN_AUD_MISMATCH, Rr.MuxErrorCode.NETWORK_TOKEN_AUD_MISSING].includes(t.muxCode) ? (0, Rr.i18n)("The {tokenNamePrefix}-token is formatted with incorrect information.", s).format({
                                tokenNamePrefix: N
                            }) : [Rr.MuxErrorCode.NETWORK_TOKEN_MISSING, Rr.MuxErrorCode.NETWORK_INVALID_URL].includes(t.muxCode) ? (0, Rr.i18n)("The video URL or {tokenNamePrefix}-token are formatted with incorrect or incomplete information.", s).format({
                                tokenNamePrefix: N
                            }) : t.muxCode === Rr.MuxErrorCode.NETWORK_NOT_FOUND ? "" : t.muxCode === Rr.MuxErrorCode.NETWORK_NOT_READY ? (0, Rr.i18n)("The live stream or video file are not yet ready.", s) : t.message
                        }
                        return t.code && (t.code === Rr.MediaError.MEDIA_ERR_NETWORK || t.code === Rr.MediaError.MEDIA_ERR_DECODE || (t.code, Rr.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED)), t.message
                    },
                    jv = (t, s = !1) => {
                        let d = qv(t, s),
                            g = $v(t, s);
                        return {
                            title: d,
                            message: g
                        }
                    },
                    zv = t => {
                        if (t.muxCode) {
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_EXPIRED) return "403-expired-token.md";
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_MALFORMED) return "403-malformatted-token.md";
                            if ([Rr.MuxErrorCode.NETWORK_TOKEN_AUD_MISMATCH, Rr.MuxErrorCode.NETWORK_TOKEN_AUD_MISSING].includes(t.muxCode)) return "403-incorrect-aud-value.md";
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_SUB_MISMATCH) return "403-playback-id-mismatch.md";
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_TOKEN_MISSING) return "missing-signed-tokens.md";
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_NOT_FOUND) return "404-not-found.md";
                            if (t.muxCode === Rr.MuxErrorCode.NETWORK_NOT_READY) return "412-not-playable.md"
                        }
                        if (t.code) {
                            if (t.code === Rr.MediaError.MEDIA_ERR_NETWORK) return "";
                            if (t.code === Rr.MediaError.MEDIA_ERR_DECODE) return "media-decode-error.md";
                            if (t.code === Rr.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED) return "media-src-not-supported.md"
                        }
                        return ""
                    },
                    am = (t, s) => {
                        let d = zv(t);
                        return {
                            message: t.message,
                            context: t.context,
                            file: d
                        }
                    },
                    Xv = `<template id="media-theme-gerwig">
  <style>
    @keyframes pre-play-hide {
      0% {
        transform: scale(1);
        opacity: 1;
      }

      30% {
        transform: scale(0.7);
      }

      100% {
        transform: scale(1.5);
        opacity: 0;
      }
    }

    :host {
      --_primary-color: var(--media-primary-color, #fff);
      --_secondary-color: var(--media-secondary-color, transparent);
      --_accent-color: var(--media-accent-color, #fa50b5);
      --_text-color: var(--media-text-color, #000);

      --media-icon-color: var(--_primary-color);
      --media-control-background: var(--_secondary-color);
      --media-control-hover-background: var(--_accent-color);
      --media-time-buffered-color: rgba(255, 255, 255, 0.4);
      --media-preview-time-text-shadow: none;
      --media-control-height: 14px;
      --media-control-padding: 6px;
      --media-tooltip-container-margin: 6px;
      --media-tooltip-distance: 18px;

      color: var(--_primary-color);
      display: inline-block;
      width: 100%;
      height: 100%;
    }

    :host([audio]) {
      --_secondary-color: var(--media-secondary-color, black);
      --media-preview-time-text-shadow: none;
    }

    :host([audio]) ::slotted([slot='media']) {
      height: 0px;
    }

    :host([audio]) media-loading-indicator {
      display: none;
    }

    :host([audio]) media-controller {
      background: transparent;
    }

    :host([audio]) media-controller::part(vertical-layer) {
      background: transparent;
    }

    :host([audio]) media-control-bar {
      width: 100%;
      background-color: var(--media-control-background);
    }

    /*
     * 0.433s is the transition duration for VTT Regions.
     * Borrowed here, so the captions don't move too fast.
     */
    media-controller {
      --media-webkit-text-track-transform: translateY(0) scale(0.98);
      --media-webkit-text-track-transition: transform 0.433s ease-out 0.3s;
    }
    media-controller:is([mediapaused], :not([userinactive])) {
      --media-webkit-text-track-transform: translateY(-50px) scale(0.98);
      --media-webkit-text-track-transition: transform 0.15s ease;
    }

    /*
     * CSS specific to iOS devices.
     * See: https://stackoverflow.com/questions/30102792/css-media-query-to-target-only-ios-devices/60220757#60220757
     */
    @supports (-webkit-touch-callout: none) {
      /* Disable subtitle adjusting for iOS Safari */
      media-controller[mediaisfullscreen] {
        --media-webkit-text-track-transform: unset;
        --media-webkit-text-track-transition: unset;
      }
    }

    media-time-range {
      --media-box-padding-left: 6px;
      --media-box-padding-right: 6px;
      --media-range-bar-color: var(--_accent-color);
      --media-time-range-buffered-color: var(--_primary-color);
      --media-range-track-color: transparent;
      --media-range-track-background: rgba(255, 255, 255, 0.4);
      --media-range-thumb-background: radial-gradient(
        circle,
        #000 0%,
        #000 25%,
        var(--_accent-color) 25%,
        var(--_accent-color)
      );
      --media-range-thumb-width: 12px;
      --media-range-thumb-height: 12px;
      --media-range-thumb-transform: scale(0);
      --media-range-thumb-transition: transform 0.3s;
      --media-range-thumb-opacity: 1;
      --media-preview-background: var(--_primary-color);
      --media-box-arrow-background: var(--_primary-color);
      --media-preview-thumbnail-border: 5px solid var(--_primary-color);
      --media-preview-border-radius: 5px;
      --media-text-color: var(--_text-color);
      --media-control-hover-background: transparent;
      --media-preview-chapter-text-shadow: none;
      color: var(--_accent-color);
      padding: 0 6px;
    }

    :host([audio]) media-time-range {
      --media-preview-time-padding: 1.5px 6px;
      --media-preview-box-margin: 0 0 -5px;
    }

    media-time-range:hover {
      --media-range-thumb-transform: scale(1);
    }

    media-preview-thumbnail {
      border-bottom-width: 0;
    }

    [part~='menu'] {
      border-radius: 2px;
      border: 1px solid rgba(0, 0, 0, 0.1);
      bottom: 50px;
      padding: 2.5px 10px;
    }

    [part~='menu']::part(indicator) {
      fill: var(--_accent-color);
    }

    [part~='menu']::part(menu-item) {
      box-sizing: border-box;
      display: flex;
      align-items: center;
      padding: 6px 10px;
      min-height: 34px;
    }

    [part~='menu']::part(checked) {
      font-weight: 700;
    }

    media-captions-menu,
    media-rendition-menu,
    media-audio-track-menu,
    media-playback-rate-menu {
      position: absolute; /* ensure they don't take up space in DOM on load */
      --media-menu-background: var(--_primary-color);
      --media-menu-item-checked-background: transparent;
      --media-text-color: var(--_text-color);
      --media-menu-item-hover-background: transparent;
      --media-menu-item-hover-outline: var(--_accent-color) solid 1px;
    }

    /* The icon is a circle so make it 16px high instead of 14px for more balance. */
    media-audio-track-menu-button {
      --media-control-padding: 5px;
      --media-control-height: 16px;
    }

    media-playback-rate-menu-button {
      --media-control-padding: 6px 3px;
      min-width: 4.4ch;
    }

    media-playback-rate-menu {
      --media-menu-flex-direction: row;
      --media-menu-item-checked-background: var(--_accent-color);
      --media-menu-item-checked-indicator-display: none;
      margin-right: 6px;
      padding: 0;
      --media-menu-gap: 0.25em;
    }

    media-playback-rate-menu[part~='menu']::part(menu-item) {
      padding: 6px 6px 6px 8px;
    }

    media-playback-rate-menu[part~='menu']::part(checked) {
      color: #fff;
    }

    :host(:not([audio])) media-time-range {
      /* Adding px is required here for calc() */
      --media-range-padding: 0px;
      background: transparent;
      z-index: 10;
      height: 10px;
      bottom: -3px;
      width: 100%;
    }

    media-control-bar :is([role='button'], [role='switch'], button) {
      line-height: 0;
    }

    media-control-bar :is([part*='button'], [part*='range'], [part*='display']) {
      border-radius: 3px;
    }

    .spacer {
      flex-grow: 1;
      background-color: var(--media-control-background, rgba(20, 20, 30, 0.7));
    }

    media-control-bar[slot~='top-chrome'] {
      min-height: 42px;
      pointer-events: none;
    }

    media-control-bar {
      --gradient-steps: hsl(0 0% 0% / 0) 0%, hsl(0 0% 0% / 0.013) 8.1%, hsl(0 0% 0% / 0.049) 15.5%,
        hsl(0 0% 0% / 0.104) 22.5%, hsl(0 0% 0% / 0.175) 29%, hsl(0 0% 0% / 0.259) 35.3%, hsl(0 0% 0% / 0.352) 41.2%,
        hsl(0 0% 0% / 0.45) 47.1%, hsl(0 0% 0% / 0.55) 52.9%, hsl(0 0% 0% / 0.648) 58.8%, hsl(0 0% 0% / 0.741) 64.7%,
        hsl(0 0% 0% / 0.825) 71%, hsl(0 0% 0% / 0.896) 77.5%, hsl(0 0% 0% / 0.951) 84.5%, hsl(0 0% 0% / 0.987) 91.9%,
        hsl(0 0% 0%) 100%;
    }

    :host([title]:not([audio])) media-control-bar[slot='top-chrome']::before {
      content: '';
      position: absolute;
      width: 100%;
      padding-bottom: min(100px, 25%);
      background: linear-gradient(to top, var(--gradient-steps));
      opacity: 0.8;
      pointer-events: none;
    }

    :host(:not([audio])) media-control-bar[part~='bottom']::before {
      content: '';
      position: absolute;
      width: 100%;
      bottom: 0;
      left: 0;
      padding-bottom: min(100px, 25%);
      background: linear-gradient(to bottom, var(--gradient-steps));
      opacity: 0.8;
      z-index: 1;
      pointer-events: none;
    }

    media-control-bar[part~='bottom'] > * {
      z-index: 20;
    }

    media-control-bar[part~='bottom'] {
      padding: 6px 6px;
    }

    media-control-bar[slot~='top-chrome'] > * {
      --media-control-background: transparent;
      --media-control-hover-background: transparent;
      position: relative;
    }

    media-controller::part(vertical-layer) {
      transition: background-color 1s;
    }

    media-controller:is([mediapaused], :not([userinactive]))::part(vertical-layer) {
      background-color: var(--controls-backdrop-color, var(--controls, transparent));
      transition: background-color 0.25s;
    }

    .center-controls {
      --media-button-icon-width: 100%;
      --media-button-icon-height: auto;
      --media-tooltip-display: none;
      pointer-events: none;
      width: 100%;
      display: flex;
      flex-flow: row;
      align-items: center;
      justify-content: center;
      filter: drop-shadow(0 0 2px rgb(0 0 0 / 0.25)) drop-shadow(0 0 6px rgb(0 0 0 / 0.25));
      paint-order: stroke;
      stroke: rgba(102, 102, 102, 1);
      stroke-width: 0.3px;
      text-shadow:
        0 0 2px rgb(0 0 0 / 0.25),
        0 0 6px rgb(0 0 0 / 0.25);
    }

    .center-controls media-play-button {
      --media-control-background: transparent;
      --media-control-hover-background: transparent;
      --media-control-padding: 0;
      width: 40px;
    }

    [breakpointsm] .center-controls media-play-button {
      width: 90px;
      height: 90px;
      border-radius: 50%;
      transition: background 0.4s;
      padding: 24px;
      --media-control-background: #000;
      --media-control-hover-background: var(--_accent-color);
    }

    .center-controls media-seek-backward-button,
    .center-controls media-seek-forward-button {
      --media-control-background: transparent;
      --media-control-hover-background: transparent;
      padding: 0;
      margin: 0 20px;
      width: max(33px, min(8%, 40px));
    }

    [breakpointsm]:not([audio]) .center-controls.pre-playback {
      display: grid;
      align-items: initial;
      justify-content: initial;
      height: 100%;
      overflow: hidden;
    }

    [breakpointsm]:not([audio]) .center-controls.pre-playback media-play-button {
      place-self: var(--_pre-playback-place, center);
      grid-area: 1 / 1;
      margin: 16px;
    }

    /* Show and hide controls or pre-playback state */

    [breakpointsm]:is([mediahasplayed], :not([mediapaused])):not([audio])
      .center-controls.pre-playback
      media-play-button {
      /* Using \`forwards\` would lead to a laggy UI after the animation got in the end state */
      animation: 0.3s linear pre-play-hide;
      opacity: 0;
      pointer-events: none;
    }

    .autoplay-unmute {
      --media-control-hover-background: transparent;
      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      filter: drop-shadow(0 0 2px rgb(0 0 0 / 0.25)) drop-shadow(0 0 6px rgb(0 0 0 / 0.25));
    }

    .autoplay-unmute-btn {
      --media-control-height: 16px;
      border-radius: 8px;
      background: #000;
      color: var(--_primary-color);
      display: flex;
      align-items: center;
      padding: 8px 16px;
      font-size: 18px;
      font-weight: 500;
      cursor: pointer;
    }

    .autoplay-unmute-btn:hover {
      background: var(--_accent-color);
    }

    [breakpointsm] .autoplay-unmute-btn {
      --media-control-height: 30px;
      padding: 14px 24px;
      font-size: 26px;
    }

    .autoplay-unmute-btn svg {
      margin: 0 6px 0 0;
    }

    [breakpointsm] .autoplay-unmute-btn svg {
      margin: 0 10px 0 0;
    }

    media-controller:not([audio]):not([mediahasplayed]) *:is(media-control-bar, media-time-range) {
      display: none;
    }

    media-error-dialog:not([mediaerrorcode]) {
      opacity: 0;
    }

    media-loading-indicator {
      --media-loading-icon-width: 100%;
      --media-button-icon-height: auto;
      display: var(--media-control-display, var(--media-loading-indicator-display, flex));
      pointer-events: none;
      position: absolute;
      width: min(15%, 150px);
      flex-flow: row;
      align-items: center;
      justify-content: center;
    }

    /* Intentionally don't target the div for transition but the children
     of the div. Prevents messing with media-chrome's autohide feature. */
    media-loading-indicator + div * {
      transition: opacity 0.15s;
      opacity: 1;
    }

    media-loading-indicator[medialoading]:not([mediapaused]) ~ div > * {
      opacity: 0;
      transition-delay: 400ms;
    }

    media-volume-range {
      width: min(100%, 100px);
      --media-range-padding-left: 10px;
      --media-range-padding-right: 10px;
      --media-range-thumb-width: 12px;
      --media-range-thumb-height: 12px;
      --media-range-thumb-background: radial-gradient(
        circle,
        #000 0%,
        #000 25%,
        var(--_primary-color) 25%,
        var(--_primary-color)
      );
      --media-control-hover-background: none;
    }

    media-time-display {
      white-space: nowrap;
    }

    /* Generic style for explicitly disabled controls */
    media-control-bar[part~='bottom'] [disabled],
    media-control-bar[part~='bottom'] [aria-disabled='true'] {
      opacity: 60%;
      cursor: not-allowed;
    }

    media-text-display {
      --media-font-size: 16px;
      --media-control-padding: 14px;
      font-weight: 500;
    }

    media-play-button.animated *:is(g, path) {
      transition: all 0.3s;
    }

    media-play-button.animated[mediapaused] .pause-icon-pt1 {
      opacity: 0;
    }

    media-play-button.animated[mediapaused] .pause-icon-pt2 {
      transform-origin: center center;
      transform: scaleY(0);
    }

    media-play-button.animated[mediapaused] .play-icon {
      clip-path: inset(0 0 0 0);
    }

    media-play-button.animated:not([mediapaused]) .play-icon {
      clip-path: inset(0 0 0 100%);
    }

    media-seek-forward-button,
    media-seek-backward-button {
      --media-font-weight: 400;
    }

    .mute-icon {
      display: inline-block;
    }

    .mute-icon :is(path, g) {
      transition: opacity 0.5s;
    }

    .muted {
      opacity: 0;
    }

    media-mute-button[mediavolumelevel='low'] :is(.volume-medium, .volume-high),
    media-mute-button[mediavolumelevel='medium'] :is(.volume-high) {
      opacity: 0;
    }

    media-mute-button[mediavolumelevel='off'] .unmuted {
      opacity: 0;
    }

    media-mute-button[mediavolumelevel='off'] .muted {
      opacity: 1;
    }

    /**
     * Our defaults for these buttons are to hide them at small sizes
     * users can override this with CSS
     */
    media-controller:not([breakpointsm]):not([audio]) {
      --bottom-play-button: none;
      --bottom-seek-backward-button: none;
      --bottom-seek-forward-button: none;
      --bottom-time-display: none;
      --bottom-playback-rate-menu-button: none;
      --bottom-pip-button: none;
    }

    [part='mux-badge'] {
      position: absolute;
      bottom: 10px;
      right: 10px;
      z-index: 2;
      opacity: 0.6;
      transition:
        opacity 0.2s ease-in-out,
        bottom 0.2s ease-in-out;
    }

    [part='mux-badge']:hover {
      opacity: 1;
    }

    [part='mux-badge'] a {
      font-size: 14px;
      font-family: var(--_font-family);
      color: var(--_primary-color);
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    [part='mux-badge'] .mux-badge-text {
      transition: opacity 0.5s ease-in-out;
      opacity: 0;
    }

    [part='mux-badge'] .mux-badge-logo {
      width: 40px;
      height: auto;
      display: inline-block;
    }

    [part='mux-badge'] .mux-badge-logo svg {
      width: 100%;
      height: 100%;
      fill: white;
    }

    media-controller:not([userinactive]):not([mediahasplayed]) [part='mux-badge'],
    media-controller:not([userinactive]) [part='mux-badge'],
    media-controller[mediahasplayed][mediapaused] [part='mux-badge'] {
      transition: bottom 0.1s ease-in-out;
    }

    media-controller[userinactive]:not([mediapaused]) [part='mux-badge'] {
      transition: bottom 0.2s ease-in-out 0.62s;
    }

    media-controller:not([userinactive]) [part='mux-badge'] .mux-badge-text,
    media-controller[mediahasplayed][mediapaused] [part='mux-badge'] .mux-badge-text {
      opacity: 1;
    }

    media-controller[userinactive]:not([mediapaused]) [part='mux-badge'] .mux-badge-text {
      opacity: 0;
    }

    media-controller[userinactive]:not([mediapaused]) [part='mux-badge'] {
      bottom: 10px;
    }

    media-controller:not([userinactive]):not([mediahasplayed]) [part='mux-badge'] {
      bottom: 10px;
    }

    media-controller:not([userinactive])[mediahasplayed] [part='mux-badge'],
    media-controller[mediahasplayed][mediapaused] [part='mux-badge'] {
      bottom: calc(28px + var(--media-control-height, 0px) + var(--media-control-padding, 0px) * 2);
    }
  </style>

  <template partial="TitleDisplay">
    <template if="title">
      <media-text-display part="top title display" class="title-display">{{title}}</media-text-display>
    </template>
  </template>

  <template partial="PlayButton">
    <media-play-button
      part="{{section ?? 'bottom'}} play button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
      class="animated"
    >
      <svg aria-hidden="true" viewBox="0 0 18 14" slot="icon">
        <g class="play-icon">
          <path
            d="M15.5987 6.2911L3.45577 0.110898C2.83667 -0.204202 2.06287 0.189698 2.06287 0.819798V13.1802C2.06287 13.8103 2.83667 14.2042 3.45577 13.8891L15.5987 7.7089C16.2178 7.3938 16.2178 6.6061 15.5987 6.2911Z"
          />
        </g>
        <g class="pause-icon">
          <path
            class="pause-icon-pt1"
            d="M5.90709 0H2.96889C2.46857 0 2.06299 0.405585 2.06299 0.9059V13.0941C2.06299 13.5944 2.46857 14 2.96889 14H5.90709C6.4074 14 6.81299 13.5944 6.81299 13.0941V0.9059C6.81299 0.405585 6.4074 0 5.90709 0Z"
          />
          <path
            class="pause-icon-pt2"
            d="M15.1571 0H12.2189C11.7186 0 11.313 0.405585 11.313 0.9059V13.0941C11.313 13.5944 11.7186 14 12.2189 14H15.1571C15.6574 14 16.063 13.5944 16.063 13.0941V0.9059C16.063 0.405585 15.6574 0 15.1571 0Z"
          />
        </g>
      </svg>
    </media-play-button>
  </template>

  <template partial="PrePlayButton">
    <media-play-button
      part="{{section ?? 'center'}} play button pre-play"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <svg aria-hidden="true" viewBox="0 0 18 14" slot="icon" style="transform: translate(3px, 0)">
        <path
          d="M15.5987 6.2911L3.45577 0.110898C2.83667 -0.204202 2.06287 0.189698 2.06287 0.819798V13.1802C2.06287 13.8103 2.83667 14.2042 3.45577 13.8891L15.5987 7.7089C16.2178 7.3938 16.2178 6.6061 15.5987 6.2911Z"
        />
      </svg>
    </media-play-button>
  </template>

  <template partial="SeekBackwardButton">
    <media-seek-backward-button
      seekoffset="{{backwardseekoffset}}"
      part="{{section ?? 'bottom'}} seek-backward button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <svg viewBox="0 0 22 14" aria-hidden="true" slot="icon">
        <path
          d="M3.65 2.07888L0.0864 6.7279C-0.0288 6.87812 -0.0288 7.12188 0.0864 7.2721L3.65 11.9211C3.7792 12.0896 4 11.9703 4 11.7321V2.26787C4 2.02968 3.7792 1.9104 3.65 2.07888Z"
        />
        <text transform="translate(6 12)" style="font-size: 14px; font-family: 'ArialMT', 'Arial'">
          {{backwardseekoffset}}
        </text>
      </svg>
    </media-seek-backward-button>
  </template>

  <template partial="SeekForwardButton">
    <media-seek-forward-button
      seekoffset="{{forwardseekoffset}}"
      part="{{section ?? 'bottom'}} seek-forward button"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <svg viewBox="0 0 22 14" aria-hidden="true" slot="icon">
        <g>
          <text transform="translate(-1 12)" style="font-size: 14px; font-family: 'ArialMT', 'Arial'">
            {{forwardseekoffset}}
          </text>
          <path
            d="M18.35 11.9211L21.9136 7.2721C22.0288 7.12188 22.0288 6.87812 21.9136 6.7279L18.35 2.07888C18.2208 1.91041 18 2.02968 18 2.26787V11.7321C18 11.9703 18.2208 12.0896 18.35 11.9211Z"
          />
        </g>
      </svg>
    </media-seek-forward-button>
  </template>

  <template partial="MuteButton">
    <media-mute-button part="bottom mute button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg viewBox="0 0 18 14" slot="icon" class="mute-icon" aria-hidden="true">
        <g class="unmuted">
          <path
            d="M6.76786 1.21233L3.98606 3.98924H1.19937C0.593146 3.98924 0.101743 4.51375 0.101743 5.1607V6.96412L0 6.99998L0.101743 7.03583V8.83926C0.101743 9.48633 0.593146 10.0108 1.19937 10.0108H3.98606L6.76773 12.7877C7.23561 13.2547 8 12.9007 8 12.2171V1.78301C8 1.09925 7.23574 0.745258 6.76786 1.21233Z"
          />
          <path
            class="volume-low"
            d="M10 3.54781C10.7452 4.55141 11.1393 5.74511 11.1393 6.99991C11.1393 8.25471 10.7453 9.44791 10 10.4515L10.7988 11.0496C11.6734 9.87201 12.1356 8.47161 12.1356 6.99991C12.1356 5.52821 11.6735 4.12731 10.7988 2.94971L10 3.54781Z"
          />
          <path
            class="volume-medium"
            d="M12.3778 2.40086C13.2709 3.76756 13.7428 5.35806 13.7428 7.00026C13.7428 8.64246 13.2709 10.233 12.3778 11.5992L13.2106 12.1484C14.2107 10.6185 14.739 8.83796 14.739 7.00016C14.739 5.16236 14.2107 3.38236 13.2106 1.85156L12.3778 2.40086Z"
          />
          <path
            class="volume-high"
            d="M15.5981 0.75L14.7478 1.2719C15.7937 2.9919 16.3468 4.9723 16.3468 7C16.3468 9.0277 15.7937 11.0082 14.7478 12.7281L15.5981 13.25C16.7398 11.3722 17.343 9.211 17.343 7C17.343 4.789 16.7398 2.6268 15.5981 0.75Z"
          />
        </g>
        <g class="muted">
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M4.39976 4.98924H1.19937C1.19429 4.98924 1.17777 4.98961 1.15296 5.01609C1.1271 5.04369 1.10174 5.09245 1.10174 5.1607V8.83926C1.10174 8.90761 1.12714 8.95641 1.15299 8.984C1.17779 9.01047 1.1943 9.01084 1.19937 9.01084H4.39977L7 11.6066V2.39357L4.39976 4.98924ZM7.47434 1.92006C7.4743 1.9201 7.47439 1.92002 7.47434 1.92006V1.92006ZM6.76773 12.7877L3.98606 10.0108H1.19937C0.593146 10.0108 0.101743 9.48633 0.101743 8.83926V7.03583L0 6.99998L0.101743 6.96412V5.1607C0.101743 4.51375 0.593146 3.98924 1.19937 3.98924H3.98606L6.76786 1.21233C7.23574 0.745258 8 1.09925 8 1.78301V12.2171C8 12.9007 7.23561 13.2547 6.76773 12.7877Z"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M15.2677 9.30323C15.463 9.49849 15.7796 9.49849 15.9749 9.30323C16.1701 9.10796 16.1701 8.79138 15.9749 8.59612L14.2071 6.82841L15.9749 5.06066C16.1702 4.8654 16.1702 4.54882 15.9749 4.35355C15.7796 4.15829 15.4631 4.15829 15.2678 4.35355L13.5 6.1213L11.7322 4.35348C11.537 4.15822 11.2204 4.15822 11.0251 4.35348C10.8298 4.54874 10.8298 4.86532 11.0251 5.06058L12.7929 6.82841L11.0251 8.59619C10.8299 8.79146 10.8299 9.10804 11.0251 9.3033C11.2204 9.49856 11.537 9.49856 11.7323 9.3033L13.5 7.53552L15.2677 9.30323Z"
          />
        </g>
      </svg>
    </media-mute-button>
  </template>

  <template partial="PipButton">
    <media-pip-button part="bottom pip button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg viewBox="0 0 18 14" aria-hidden="true" slot="icon">
        <path
          d="M15.9891 0H2.011C0.9004 0 0 0.9003 0 2.0109V11.989C0 13.0996 0.9004 14 2.011 14H15.9891C17.0997 14 18 13.0997 18 11.9891V2.0109C18 0.9003 17.0997 0 15.9891 0ZM17 11.9891C17 12.5465 16.5465 13 15.9891 13H2.011C1.4536 13 1.0001 12.5465 1.0001 11.9891V2.0109C1.0001 1.4535 1.4536 0.9999 2.011 0.9999H15.9891C16.5465 0.9999 17 1.4535 17 2.0109V11.9891Z"
        />
        <path
          d="M15.356 5.67822H8.19523C8.03253 5.67822 7.90063 5.81012 7.90063 5.97282V11.3836C7.90063 11.5463 8.03253 11.6782 8.19523 11.6782H15.356C15.5187 11.6782 15.6506 11.5463 15.6506 11.3836V5.97282C15.6506 5.81012 15.5187 5.67822 15.356 5.67822Z"
        />
      </svg>
    </media-pip-button>
  </template>

  <template partial="CaptionsMenu">
    <media-captions-menu-button part="bottom captions button">
      <svg aria-hidden="true" viewBox="0 0 18 14" slot="on">
        <path
          d="M15.989 0H2.011C0.9004 0 0 0.9003 0 2.0109V11.9891C0 13.0997 0.9004 14 2.011 14H15.989C17.0997 14 18 13.0997 18 11.9891V2.0109C18 0.9003 17.0997 0 15.989 0ZM4.2292 8.7639C4.5954 9.1902 5.0935 9.4031 5.7233 9.4031C6.1852 9.4031 6.5544 9.301 6.8302 9.0969C7.1061 8.8933 7.2863 8.614 7.3702 8.26H8.4322C8.3062 8.884 8.0093 9.3733 7.5411 9.7273C7.0733 10.0813 6.4703 10.2581 5.732 10.2581C5.108 10.2581 4.5699 10.1219 4.1168 9.8489C3.6637 9.5759 3.3141 9.1946 3.0685 8.7058C2.8224 8.2165 2.6994 7.6511 2.6994 7.009C2.6994 6.3611 2.8224 5.7927 3.0685 5.3034C3.3141 4.8146 3.6637 4.4323 4.1168 4.1559C4.5699 3.88 5.108 3.7418 5.732 3.7418C6.4703 3.7418 7.0733 3.922 7.5411 4.2818C8.0094 4.6422 8.3062 5.1461 8.4322 5.794H7.3702C7.2862 5.4283 7.106 5.1368 6.8302 4.921C6.5544 4.7052 6.1852 4.5968 5.7233 4.5968C5.0934 4.5968 4.5954 4.8116 4.2292 5.2404C3.8635 5.6696 3.6804 6.259 3.6804 7.009C3.6804 7.7531 3.8635 8.3381 4.2292 8.7639ZM11.0974 8.7639C11.4636 9.1902 11.9617 9.4031 12.5915 9.4031C13.0534 9.4031 13.4226 9.301 13.6984 9.0969C13.9743 8.8933 14.1545 8.614 14.2384 8.26H15.3004C15.1744 8.884 14.8775 9.3733 14.4093 9.7273C13.9415 10.0813 13.3385 10.2581 12.6002 10.2581C11.9762 10.2581 11.4381 10.1219 10.985 9.8489C10.5319 9.5759 10.1823 9.1946 9.9367 8.7058C9.6906 8.2165 9.5676 7.6511 9.5676 7.009C9.5676 6.3611 9.6906 5.7927 9.9367 5.3034C10.1823 4.8146 10.5319 4.4323 10.985 4.1559C11.4381 3.88 11.9762 3.7418 12.6002 3.7418C13.3385 3.7418 13.9415 3.922 14.4093 4.2818C14.8776 4.6422 15.1744 5.1461 15.3004 5.794H14.2384C14.1544 5.4283 13.9742 5.1368 13.6984 4.921C13.4226 4.7052 13.0534 4.5968 12.5915 4.5968C11.9616 4.5968 11.4636 4.8116 11.0974 5.2404C10.7317 5.6696 10.5486 6.259 10.5486 7.009C10.5486 7.7531 10.7317 8.3381 11.0974 8.7639Z"
        />
      </svg>
      <svg aria-hidden="true" viewBox="0 0 18 14" slot="off">
        <path
          d="M5.73219 10.258C5.10819 10.258 4.57009 10.1218 4.11699 9.8488C3.66389 9.5758 3.31429 9.1945 3.06869 8.7057C2.82259 8.2164 2.69958 7.651 2.69958 7.0089C2.69958 6.361 2.82259 5.7926 3.06869 5.3033C3.31429 4.8145 3.66389 4.4322 4.11699 4.1558C4.57009 3.8799 5.10819 3.7417 5.73219 3.7417C6.47049 3.7417 7.07348 3.9219 7.54128 4.2817C8.00958 4.6421 8.30638 5.146 8.43238 5.7939H7.37039C7.28639 5.4282 7.10618 5.1367 6.83039 4.9209C6.55459 4.7051 6.18538 4.5967 5.72348 4.5967C5.09358 4.5967 4.59559 4.8115 4.22939 5.2403C3.86369 5.6695 3.68058 6.2589 3.68058 7.0089C3.68058 7.753 3.86369 8.338 4.22939 8.7638C4.59559 9.1901 5.09368 9.403 5.72348 9.403C6.18538 9.403 6.55459 9.3009 6.83039 9.0968C7.10629 8.8932 7.28649 8.6139 7.37039 8.2599H8.43238C8.30638 8.8839 8.00948 9.3732 7.54128 9.7272C7.07348 10.0812 6.47049 10.258 5.73219 10.258Z"
        />
        <path
          d="M12.6003 10.258C11.9763 10.258 11.4382 10.1218 10.9851 9.8488C10.532 9.5758 10.1824 9.1945 9.93685 8.7057C9.69075 8.2164 9.56775 7.651 9.56775 7.0089C9.56775 6.361 9.69075 5.7926 9.93685 5.3033C10.1824 4.8145 10.532 4.4322 10.9851 4.1558C11.4382 3.8799 11.9763 3.7417 12.6003 3.7417C13.3386 3.7417 13.9416 3.9219 14.4094 4.2817C14.8777 4.6421 15.1745 5.146 15.3005 5.7939H14.2385C14.1545 5.4282 13.9743 5.1367 13.6985 4.9209C13.4227 4.7051 13.0535 4.5967 12.5916 4.5967C11.9617 4.5967 11.4637 4.8115 11.0975 5.2403C10.7318 5.6695 10.5487 6.2589 10.5487 7.0089C10.5487 7.753 10.7318 8.338 11.0975 8.7638C11.4637 9.1901 11.9618 9.403 12.5916 9.403C13.0535 9.403 13.4227 9.3009 13.6985 9.0968C13.9744 8.8932 14.1546 8.6139 14.2385 8.2599H15.3005C15.1745 8.8839 14.8776 9.3732 14.4094 9.7272C13.9416 10.0812 13.3386 10.258 12.6003 10.258Z"
        />
        <path
          d="M15.9891 1C16.5465 1 17 1.4535 17 2.011V11.9891C17 12.5465 16.5465 13 15.9891 13H2.0109C1.4535 13 1 12.5465 1 11.9891V2.0109C1 1.4535 1.4535 0.9999 2.0109 0.9999L15.9891 1ZM15.9891 0H2.0109C0.9003 0 0 0.9003 0 2.0109V11.9891C0 13.0997 0.9003 14 2.0109 14H15.9891C17.0997 14 18 13.0997 18 11.9891V2.0109C18 0.9003 17.0997 0 15.9891 0Z"
        />
      </svg>
    </media-captions-menu-button>
    <media-captions-menu
      hidden
      anchor="auto"
      part="bottom captions menu"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
      exportparts="menu-item"
    >
      <div slot="checked-indicator">
        <style>
          .indicator {
            position: relative;
            top: 1px;
            width: 0.9em;
            height: auto;
            fill: var(--_accent-color);
            margin-right: 5px;
          }

          [aria-checked='false'] .indicator {
            display: none;
          }
        </style>
        <svg viewBox="0 0 14 18" class="indicator">
          <path
            d="M12.252 3.48c-.115.033-.301.161-.425.291-.059.063-1.407 1.815-2.995 3.894s-2.897 3.79-2.908 3.802c-.013.014-.661-.616-1.672-1.624-.908-.905-1.702-1.681-1.765-1.723-.401-.27-.783-.211-1.176.183a1.285 1.285 0 0 0-.261.342.582.582 0 0 0-.082.35c0 .165.01.205.08.35.075.153.213.296 2.182 2.271 1.156 1.159 2.17 2.159 2.253 2.222.189.143.338.196.539.194.203-.003.412-.104.618-.299.205-.193 6.7-8.693 6.804-8.903a.716.716 0 0 0 .085-.345c.01-.179.005-.203-.062-.339-.124-.252-.45-.531-.746-.639a.784.784 0 0 0-.469-.027"
            fill-rule="evenodd"
          />
        </svg></div
    ></media-captions-menu>
  </template>

  <template partial="AirplayButton">
    <media-airplay-button part="bottom airplay button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg viewBox="0 0 18 14" aria-hidden="true" slot="icon">
        <path
          d="M16.1383 0H1.8618C0.8335 0 0 0.8335 0 1.8617V10.1382C0 11.1664 0.8335 12 1.8618 12H3.076C3.1204 11.9433 3.1503 11.8785 3.2012 11.826L4.004 11H1.8618C1.3866 11 1 10.6134 1 10.1382V1.8617C1 1.3865 1.3866 0.9999 1.8618 0.9999H16.1383C16.6135 0.9999 17.0001 1.3865 17.0001 1.8617V10.1382C17.0001 10.6134 16.6135 11 16.1383 11H13.9961L14.7989 11.826C14.8499 11.8785 14.8798 11.9432 14.9241 12H16.1383C17.1665 12 18.0001 11.1664 18.0001 10.1382V1.8617C18 0.8335 17.1665 0 16.1383 0Z"
        />
        <path
          d="M9.55061 8.21903C9.39981 8.06383 9.20001 7.98633 9.00011 7.98633C8.80021 7.98633 8.60031 8.06383 8.44951 8.21903L4.09771 12.697C3.62471 13.1838 3.96961 13.9998 4.64831 13.9998H13.3518C14.0304 13.9998 14.3754 13.1838 13.9023 12.697L9.55061 8.21903Z"
        />
      </svg>
    </media-airplay-button>
  </template>

  <template partial="FullscreenButton">
    <media-fullscreen-button part="bottom fullscreen button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg viewBox="0 0 18 14" aria-hidden="true" slot="enter">
        <path
          d="M1.00745 4.39539L1.01445 1.98789C1.01605 1.43049 1.47085 0.978289 2.02835 0.979989L6.39375 0.992589L6.39665 -0.007411L2.03125 -0.020011C0.920646 -0.023211 0.0176463 0.874489 0.0144463 1.98509L0.00744629 4.39539H1.00745Z"
        />
        <path
          d="M17.0144 2.03431L17.0076 4.39541H18.0076L18.0144 2.03721C18.0176 0.926712 17.1199 0.0237125 16.0093 0.0205125L11.6439 0.0078125L11.641 1.00781L16.0064 1.02041C16.5638 1.02201 17.016 1.47681 17.0144 2.03431Z"
        />
        <path
          d="M16.9925 9.60498L16.9855 12.0124C16.9839 12.5698 16.5291 13.022 15.9717 13.0204L11.6063 13.0078L11.6034 14.0078L15.9688 14.0204C17.0794 14.0236 17.9823 13.1259 17.9855 12.0153L17.9925 9.60498H16.9925Z"
        />
        <path
          d="M0.985626 11.9661L0.992426 9.60498H-0.0074737L-0.0142737 11.9632C-0.0174737 13.0738 0.880226 13.9767 1.99083 13.98L6.35623 13.9926L6.35913 12.9926L1.99373 12.98C1.43633 12.9784 0.983926 12.5236 0.985626 11.9661Z"
        />
      </svg>
      <svg viewBox="0 0 18 14" aria-hidden="true" slot="exit">
        <path
          d="M5.39655 -0.0200195L5.38955 2.38748C5.38795 2.94488 4.93315 3.39708 4.37565 3.39538L0.0103463 3.38278L0.00744629 4.38278L4.37285 4.39538C5.48345 4.39858 6.38635 3.50088 6.38965 2.39028L6.39665 -0.0200195H5.39655Z"
        />
        <path
          d="M12.6411 2.36891L12.6479 0.0078125H11.6479L11.6411 2.36601C11.6379 3.47651 12.5356 4.37951 13.6462 4.38271L18.0116 4.39531L18.0145 3.39531L13.6491 3.38271C13.0917 3.38111 12.6395 2.92641 12.6411 2.36891Z"
        />
        <path
          d="M12.6034 14.0204L12.6104 11.613C12.612 11.0556 13.0668 10.6034 13.6242 10.605L17.9896 10.6176L17.9925 9.61759L13.6271 9.60499C12.5165 9.60179 11.6136 10.4995 11.6104 11.6101L11.6034 14.0204H12.6034Z"
        />
        <path
          d="M5.359 11.6315L5.3522 13.9926H6.3522L6.359 11.6344C6.3622 10.5238 5.4645 9.62088 4.3539 9.61758L-0.0115043 9.60498L-0.0144043 10.605L4.351 10.6176C4.9084 10.6192 5.3607 11.074 5.359 11.6315Z"
        />
      </svg>
    </media-fullscreen-button>
  </template>

  <template partial="CastButton">
    <media-cast-button part="bottom cast button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <svg viewBox="0 0 18 14" aria-hidden="true" slot="enter">
        <path
          d="M16.0072 0H2.0291C0.9185 0 0.0181 0.9003 0.0181 2.011V5.5009C0.357 5.5016 0.6895 5.5275 1.0181 5.5669V2.011C1.0181 1.4536 1.4716 1 2.029 1H16.0072C16.5646 1 17.0181 1.4536 17.0181 2.011V11.9891C17.0181 12.5465 16.5646 13 16.0072 13H8.4358C8.4746 13.3286 8.4999 13.6611 8.4999 13.9999H16.0071C17.1177 13.9999 18.018 13.0996 18.018 11.989V2.011C18.0181 0.9003 17.1178 0 16.0072 0ZM0 6.4999V7.4999C3.584 7.4999 6.5 10.4159 6.5 13.9999H7.5C7.5 9.8642 4.1357 6.4999 0 6.4999ZM0 8.7499V9.7499C2.3433 9.7499 4.25 11.6566 4.25 13.9999H5.25C5.25 11.1049 2.895 8.7499 0 8.7499ZM0.0181 11V14H3.0181C3.0181 12.3431 1.675 11 0.0181 11Z"
        />
      </svg>
      <svg viewBox="0 0 18 14" aria-hidden="true" slot="exit">
        <path
          d="M15.9891 0H2.01103C0.900434 0 3.35947e-05 0.9003 3.35947e-05 2.011V5.5009C0.338934 5.5016 0.671434 5.5275 1.00003 5.5669V2.011C1.00003 1.4536 1.45353 1 2.01093 1H15.9891C16.5465 1 17 1.4536 17 2.011V11.9891C17 12.5465 16.5465 13 15.9891 13H8.41773C8.45653 13.3286 8.48183 13.6611 8.48183 13.9999H15.989C17.0996 13.9999 17.9999 13.0996 17.9999 11.989V2.011C18 0.9003 17.0997 0 15.9891 0ZM-0.0180664 6.4999V7.4999C3.56593 7.4999 6.48193 10.4159 6.48193 13.9999H7.48193C7.48193 9.8642 4.11763 6.4999 -0.0180664 6.4999ZM-0.0180664 8.7499V9.7499C2.32523 9.7499 4.23193 11.6566 4.23193 13.9999H5.23193C5.23193 11.1049 2.87693 8.7499 -0.0180664 8.7499ZM3.35947e-05 11V14H3.00003C3.00003 12.3431 1.65693 11 3.35947e-05 11Z"
        />
        <path d="M2.15002 5.634C5.18352 6.4207 7.57252 8.8151 8.35282 11.8499H15.8501V2.1499H2.15002V5.634Z" />
      </svg>
    </media-cast-button>
  </template>

  <template partial="LiveButton">
    <media-live-button part="{{section ?? 'top'}} live button" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <span slot="text">Live</span>
    </media-live-button>
  </template>

  <template partial="PlaybackRateMenu">
    <media-playback-rate-menu-button part="bottom playback-rate button"></media-playback-rate-menu-button>
    <media-playback-rate-menu
      hidden
      anchor="auto"
      rates="{{playbackrates}}"
      exportparts="menu-item"
      part="bottom playback-rate menu"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-playback-rate-menu>
  </template>

  <template partial="VolumeRange">
    <media-volume-range
      part="bottom volume range"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-volume-range>
  </template>

  <template partial="TimeDisplay">
    <media-time-display
      remaining="{{defaultshowremainingtime}}"
      showduration="{{!hideduration}}"
      part="bottom time display"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    ></media-time-display>
  </template>

  <template partial="TimeRange">
    <media-time-range part="bottom time range" disabled="{{disabled}}" aria-disabled="{{disabled}}">
      <media-preview-thumbnail slot="preview"></media-preview-thumbnail>
      <media-preview-chapter-display slot="preview"></media-preview-chapter-display>
      <media-preview-time-display slot="preview"></media-preview-time-display>
      <div slot="preview" part="arrow"></div>
    </media-time-range>
  </template>

  <template partial="AudioTrackMenu">
    <media-audio-track-menu-button part="bottom audio-track button">
      <svg aria-hidden="true" slot="icon" viewBox="0 0 18 16">
        <path d="M9 15A7 7 0 1 1 9 1a7 7 0 0 1 0 14Zm0 1A8 8 0 1 0 9 0a8 8 0 0 0 0 16Z" />
        <path
          d="M5.2 6.3a.5.5 0 0 1 .5.5v2.4a.5.5 0 1 1-1 0V6.8a.5.5 0 0 1 .5-.5Zm2.4-2.4a.5.5 0 0 1 .5.5v7.2a.5.5 0 0 1-1 0V4.4a.5.5 0 0 1 .5-.5ZM10 5.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.4-.8a.5.5 0 0 1 .5.5v5.6a.5.5 0 0 1-1 0V5.2a.5.5 0 0 1 .5-.5Z"
        />
      </svg>
    </media-audio-track-menu-button>
    <media-audio-track-menu
      hidden
      anchor="auto"
      part="bottom audio-track menu"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
      exportparts="menu-item"
    >
      <div slot="checked-indicator">
        <style>
          .indicator {
            position: relative;
            top: 1px;
            width: 0.9em;
            height: auto;
            fill: var(--_accent-color);
            margin-right: 5px;
          }

          [aria-checked='false'] .indicator {
            display: none;
          }
        </style>
        <svg viewBox="0 0 14 18" class="indicator">
          <path
            d="M12.252 3.48c-.115.033-.301.161-.425.291-.059.063-1.407 1.815-2.995 3.894s-2.897 3.79-2.908 3.802c-.013.014-.661-.616-1.672-1.624-.908-.905-1.702-1.681-1.765-1.723-.401-.27-.783-.211-1.176.183a1.285 1.285 0 0 0-.261.342.582.582 0 0 0-.082.35c0 .165.01.205.08.35.075.153.213.296 2.182 2.271 1.156 1.159 2.17 2.159 2.253 2.222.189.143.338.196.539.194.203-.003.412-.104.618-.299.205-.193 6.7-8.693 6.804-8.903a.716.716 0 0 0 .085-.345c.01-.179.005-.203-.062-.339-.124-.252-.45-.531-.746-.639a.784.784 0 0 0-.469-.027"
            fill-rule="evenodd"
          />
        </svg>
      </div>
    </media-audio-track-menu>
  </template>

  <template partial="RenditionMenu">
    <media-rendition-menu-button part="bottom rendition button">
      <svg aria-hidden="true" slot="icon" viewBox="0 0 18 14">
        <path
          d="M2.25 9a2 2 0 1 0 0-4 2 2 0 0 0 0 4ZM9 9a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm6.75 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"
        />
      </svg>
    </media-rendition-menu-button>
    <media-rendition-menu
      hidden
      anchor="auto"
      part="bottom rendition menu"
      disabled="{{disabled}}"
      aria-disabled="{{disabled}}"
    >
      <div slot="checked-indicator">
        <style>
          .indicator {
            position: relative;
            top: 1px;
            width: 0.9em;
            height: auto;
            fill: var(--_accent-color);
            margin-right: 5px;
          }

          [aria-checked='false'] .indicator {
            display: none;
          }
        </style>
        <svg viewBox="0 0 14 18" class="indicator">
          <path
            d="M12.252 3.48c-.115.033-.301.161-.425.291-.059.063-1.407 1.815-2.995 3.894s-2.897 3.79-2.908 3.802c-.013.014-.661-.616-1.672-1.624-.908-.905-1.702-1.681-1.765-1.723-.401-.27-.783-.211-1.176.183a1.285 1.285 0 0 0-.261.342.582.582 0 0 0-.082.35c0 .165.01.205.08.35.075.153.213.296 2.182 2.271 1.156 1.159 2.17 2.159 2.253 2.222.189.143.338.196.539.194.203-.003.412-.104.618-.299.205-.193 6.7-8.693 6.804-8.903a.716.716 0 0 0 .085-.345c.01-.179.005-.203-.062-.339-.124-.252-.45-.531-.746-.639a.784.784 0 0 0-.469-.027"
            fill-rule="evenodd"
          />
        </svg>
      </div>
    </media-rendition-menu>
  </template>

  <template partial="MuxBadge">
    <div part="mux-badge">
      <a href="https://www.mux.com/player" target="_blank">
        <span class="mux-badge-text">Powered by</span>
        <div class="mux-badge-logo">
          <svg
            viewBox="0 0 1600 500"
            style="fill-rule: evenodd; clip-rule: evenodd; stroke-linejoin: round; stroke-miterlimit: 2"
          >
            <g>
              <path
                d="M994.287,93.486c-17.121,-0 -31,-13.879 -31,-31c0,-17.121 13.879,-31 31,-31c17.121,-0 31,13.879 31,31c0,17.121 -13.879,31 -31,31m0,-93.486c-34.509,-0 -62.484,27.976 -62.484,62.486l0,187.511c0,68.943 -56.09,125.033 -125.032,125.033c-68.942,-0 -125.03,-56.09 -125.03,-125.033l0,-187.511c0,-34.51 -27.976,-62.486 -62.485,-62.486c-34.509,-0 -62.484,27.976 -62.484,62.486l0,187.511c0,137.853 112.149,250.003 249.999,250.003c137.851,-0 250.001,-112.15 250.001,-250.003l0,-187.511c0,-34.51 -27.976,-62.486 -62.485,-62.486"
                style="fill-rule: nonzero"
              ></path>
              <path
                d="M1537.51,468.511c-17.121,-0 -31,-13.879 -31,-31c0,-17.121 13.879,-31 31,-31c17.121,-0 31,13.879 31,31c0,17.121 -13.879,31 -31,31m-275.883,-218.509l-143.33,143.329c-24.402,24.402 -24.402,63.966 0,88.368c24.402,24.402 63.967,24.402 88.369,-0l143.33,-143.329l143.328,143.329c24.402,24.4 63.967,24.402 88.369,-0c24.403,-24.402 24.403,-63.966 0.001,-88.368l-143.33,-143.329l0.001,-0.004l143.329,-143.329c24.402,-24.402 24.402,-63.965 0,-88.367c-24.402,-24.402 -63.967,-24.402 -88.369,-0l-143.329,143.328l-143.329,-143.328c-24.402,-24.401 -63.967,-24.402 -88.369,-0c-24.402,24.402 -24.402,63.965 0,88.367l143.329,143.329l0,0.004Z"
                style="fill-rule: nonzero"
              ></path>
              <path
                d="M437.511,468.521c-17.121,-0 -31,-13.879 -31,-31c0,-17.121 13.879,-31 31,-31c17.121,-0 31,13.879 31,31c0,17.121 -13.879,31 -31,31m23.915,-463.762c-23.348,-9.672 -50.226,-4.327 -68.096,13.544l-143.331,143.329l-143.33,-143.329c-17.871,-17.871 -44.747,-23.216 -68.096,-13.544c-23.349,9.671 -38.574,32.455 -38.574,57.729l0,375.026c0,34.51 27.977,62.486 62.487,62.486c34.51,-0 62.486,-27.976 62.486,-62.486l0,-224.173l80.843,80.844c24.404,24.402 63.965,24.402 88.369,-0l80.843,-80.844l0,224.173c0,34.51 27.976,62.486 62.486,62.486c34.51,-0 62.486,-27.976 62.486,-62.486l0,-375.026c0,-25.274 -15.224,-48.058 -38.573,-57.729"
                style="fill-rule: nonzero"
              ></path>
            </g>
          </svg>
        </div>
      </a>
    </div>
  </template>

  <media-controller
    part="controller"
    defaultstreamtype="{{defaultstreamtype ?? 'on-demand'}}"
    breakpoints="sm:470"
    gesturesdisabled="{{disabled}}"
    hotkeys="{{hotkeys}}"
    nohotkeys="{{nohotkeys}}"
    novolumepref="{{novolumepref}}"
    audio="{{audio}}"
    noautoseektolive="{{noautoseektolive}}"
    defaultsubtitles="{{defaultsubtitles}}"
    defaultduration="{{defaultduration ?? false}}"
    keyboardforwardseekoffset="{{forwardseekoffset}}"
    keyboardbackwardseekoffset="{{backwardseekoffset}}"
    exportparts="layer, media-layer, poster-layer, vertical-layer, centered-layer, gesture-layer"
    style="--_pre-playback-place:{{preplaybackplace ?? 'center'}}"
  >
    <slot name="media" slot="media"></slot>
    <slot name="poster" slot="poster"></slot>

    <media-loading-indicator slot="centered-chrome" noautohide></media-loading-indicator>
    <media-error-dialog slot="dialog" noautohide></media-error-dialog>

    <template if="!audio">
      <!-- Pre-playback UI -->
      <!-- same for both on-demand and live -->
      <div slot="centered-chrome" class="center-controls pre-playback">
        <template if="!breakpointsm">{{>PlayButton section="center"}}</template>
        <template if="breakpointsm">{{>PrePlayButton section="center"}}</template>
      </div>

      <!-- Mux Badge -->
      <template if="proudlydisplaymuxbadge"> {{>MuxBadge}} </template>

      <!-- Autoplay centered unmute button -->
      <!--
        todo: figure out how show this with available state variables
        needs to show when:
        - autoplay is enabled
        - playback has been successful
        - audio is muted
        - in place / instead of the pre-plaback play button
        - not to show again after user has interacted with this button
          - OR user has interacted with the mute button in the control bar
      -->
      <!--
        There should be a >MuteButton to the left of the "Unmute" text, but a templating bug
        makes it appear even if commented out in the markup, add it back when code is un-commented
      -->
      <!-- <div slot="centered-chrome" class="autoplay-unmute">
        <div role="button" class="autoplay-unmute-btn">Unmute</div>
      </div> -->

      <template if="streamtype == 'on-demand'">
        <template if="breakpointsm">
          <media-control-bar part="control-bar top" slot="top-chrome">{{>TitleDisplay}} </media-control-bar>
        </template>
        {{>TimeRange}}
        <media-control-bar part="control-bar bottom">
          {{>PlayButton}} {{>SeekBackwardButton}} {{>SeekForwardButton}} {{>TimeDisplay}} {{>MuteButton}}
          {{>VolumeRange}}
          <div class="spacer"></div>
          {{>RenditionMenu}} {{>PlaybackRateMenu}} {{>AudioTrackMenu}} {{>CaptionsMenu}} {{>AirplayButton}}
          {{>CastButton}} {{>PipButton}} {{>FullscreenButton}}
        </media-control-bar>
      </template>

      <template if="streamtype == 'live'">
        <media-control-bar part="control-bar top" slot="top-chrome">
          {{>LiveButton}}
          <template if="breakpointsm"> {{>TitleDisplay}} </template>
        </media-control-bar>
        <template if="targetlivewindow > 0">{{>TimeRange}}</template>
        <media-control-bar part="control-bar bottom">
          {{>PlayButton}}
          <template if="targetlivewindow > 0">{{>SeekBackwardButton}} {{>SeekForwardButton}}</template>
          {{>MuteButton}} {{>VolumeRange}}
          <div class="spacer"></div>
          {{>RenditionMenu}} {{>AudioTrackMenu}} {{>CaptionsMenu}} {{>AirplayButton}} {{>CastButton}} {{>PipButton}}
          {{>FullscreenButton}}
        </media-control-bar>
      </template>
    </template>

    <template if="audio">
      <template if="streamtype == 'on-demand'">
        <template if="title">
          <media-control-bar part="control-bar top">{{>TitleDisplay}}</media-control-bar>
        </template>
        <media-control-bar part="control-bar bottom">
          {{>PlayButton}}
          <template if="breakpointsm"> {{>SeekBackwardButton}} {{>SeekForwardButton}} </template>
          {{>MuteButton}}
          <template if="breakpointsm">{{>VolumeRange}}</template>
          {{>TimeDisplay}} {{>TimeRange}}
          <template if="breakpointsm">{{>PlaybackRateMenu}}</template>
          {{>AirplayButton}} {{>CastButton}}
        </media-control-bar>
      </template>

      <template if="streamtype == 'live'">
        <template if="title">
          <media-control-bar part="control-bar top">{{>TitleDisplay}}</media-control-bar>
        </template>
        <media-control-bar part="control-bar bottom">
          {{>PlayButton}} {{>LiveButton section="bottom"}} {{>MuteButton}}
          <template if="breakpointsm">
            {{>VolumeRange}}
            <template if="targetlivewindow > 0"> {{>SeekBackwardButton}} {{>SeekForwardButton}} </template>
          </template>
          <template if="targetlivewindow > 0"> {{>TimeDisplay}} {{>TimeRange}} </template>
          <template if="!targetlivewindow"><div class="spacer"></div></template>
          {{>AirplayButton}} {{>CastButton}}
        </media-control-bar>
      </template>
    </template>

    <slot></slot>
  </media-controller>
</template>
`;

                function Zv({
                    anchor: t,
                    floating: s,
                    placement: d
                }) {
                    let g = Qv({
                            anchor: t,
                            floating: s
                        }),
                        {
                            x: w,
                            y: N
                        } = ep(g, d);
                    return {
                        x: w,
                        y: N
                    }
                }

                function Qv({
                    anchor: t,
                    floating: s
                }) {
                    return {
                        anchor: Jv(t, s.offsetParent),
                        floating: {
                            x: 0,
                            y: 0,
                            width: s.offsetWidth,
                            height: s.offsetHeight
                        }
                    }
                }

                function Jv(t, s) {
                    var d;
                    let g = t.getBoundingClientRect(),
                        w = (d = s == null ? void 0 : s.getBoundingClientRect()) != null ? d : {
                            x: 0,
                            y: 0
                        };
                    return {
                        x: g.x - w.x,
                        y: g.y - w.y,
                        width: g.width,
                        height: g.height
                    }
                }

                function ep({
                    anchor: t,
                    floating: s
                }, d) {
                    let g = tp(d) === "x" ? "y" : "x",
                        w = g === "y" ? "height" : "width",
                        N = nm(d),
                        X = t.x + t.width / 2 - s.width / 2,
                        ue = t.y + t.height / 2 - s.height / 2,
                        $e = t[w] / 2 - s[w] / 2,
                        et;
                    switch (N) {
                        case "top":
                            et = {
                                x: X,
                                y: t.y - s.height
                            };
                            break;
                        case "bottom":
                            et = {
                                x: X,
                                y: t.y + t.height
                            };
                            break;
                        case "right":
                            et = {
                                x: t.x + t.width,
                                y: ue
                            };
                            break;
                        case "left":
                            et = {
                                x: t.x - s.width,
                                y: ue
                            };
                            break;
                        default:
                            et = {
                                x: t.x,
                                y: t.y
                            }
                    }
                    switch (d.split("-")[1]) {
                        case "start":
                            et[g] -= $e;
                            break;
                        case "end":
                            et[g] += $e;
                            break
                    }
                    return et
                }

                function nm(t) {
                    return t.split("-")[0]
                }

                function tp(t) {
                    return ["top", "bottom"].includes(nm(t)) ? "y" : "x"
                }
                var tf = class extends Event {
                        constructor(t) {
                            var s = t,
                                {
                                    action: d = "auto",
                                    relatedTarget: g
                                } = s,
                                w = K(s, ["action", "relatedTarget"]);
                            super("invoke", w), this.action = d, this.relatedTarget = g
                        }
                    },
                    rp = class extends Event {
                        constructor(t) {
                            var s = t,
                                {
                                    newState: d,
                                    oldState: g
                                } = s,
                                w = K(s, ["newState", "oldState"]);
                            super("toggle", w), this.newState = d, this.oldState = g
                        }
                    },
                    rf = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Di = (t, s, d) => (rf(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    na = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    ho = (t, s, d, g) => (rf(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    fa = (t, s, d) => (rf(t, s, "access private method"), d),
                    fo, $l, ml, Oc, xc, jl, Ed, af, sm, Nc, Uc, nf, sf, om, of , lm, lf, um, Cu, Du, Mu, yd, Fc, uf, df, dm, cf, cm, hf, hm, ff, fm, mf, mm, vf, vm, bd, Bc, pf, pm, Td, Hc, Vc, gf;

                function Pu({
                    type: t,
                    text: s,
                    value: d,
                    checked: g
                }) {
                    let w = Ut.createElement("media-chrome-menu-item");
                    w.type = t != null ? t : "", w.part.add("menu-item"), t && w.part.add(t), w.value = d, w.checked = g;
                    let N = Ut.createElement("span");
                    return N.textContent = s, w.append(N), w
                }

                function zl(t, s) {
                    let d = t.querySelector(`:scope > [slot="${s}"]`);
                    if ((d == null ? void 0 : d.nodeName) == "SLOT" && (d = d.assignedElements({
                            flatten: !0
                        })[0]), d) return d = d.cloneNode(!0), d;
                    let g = t.shadowRoot.querySelector(`[name="${s}"] > svg`);
                    return g ? g.cloneNode(!0) : ""
                }
                var gm = Ut.createElement("template");
                gm.innerHTML = `
  <style>
    :host {
      font: var(--media-font,
        var(--media-font-weight, normal)
        var(--media-font-size, 14px) /
        var(--media-text-content-height, var(--media-control-height, 24px))
        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));
      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));
      --_menu-bg: rgb(20 20 30 / .8);
      background: var(--media-menu-background, var(--media-control-background, var(--media-secondary-color, var(--_menu-bg))));
      border-radius: var(--media-menu-border-radius);
      border: var(--media-menu-border, none);
      display: var(--media-menu-display, inline-flex);
      transition: var(--media-menu-transition-in,
        visibility 0s,
        opacity .2s ease-out,
        transform .15s ease-out,
        left .2s ease-in-out,
        min-width .2s ease-in-out,
        min-height .2s ease-in-out
      ) !important;
      
      visibility: var(--media-menu-visibility, visible);
      opacity: var(--media-menu-opacity, 1);
      max-height: var(--media-menu-max-height, var(--_menu-max-height, 300px));
      transform: var(--media-menu-transform-in, translateY(0) scale(1));
      flex-direction: column;
      
      min-height: 0;
      position: relative;
      bottom: var(--_menu-bottom);
      box-sizing: border-box;
    } 

    @-moz-document url-prefix() {
      :host{
        --_menu-bg: rgb(20 20 30);
      }
    }

    :host([hidden]) {
      transition: var(--media-menu-transition-out,
        visibility .15s ease-in,
        opacity .15s ease-in,
        transform .15s ease-in
      ) !important;
      visibility: var(--media-menu-hidden-visibility, hidden);
      opacity: var(--media-menu-hidden-opacity, 0);
      max-height: var(--media-menu-hidden-max-height,
        var(--media-menu-max-height, var(--_menu-max-height, 300px)));
      transform: var(--media-menu-transform-out, translateY(2px) scale(.99));
      pointer-events: none;
    }

    :host([slot="submenu"]) {
      background: none;
      width: 100%;
      min-height: 100%;
      position: absolute;
      bottom: 0;
      right: -100%;
    }

    #container {
      display: flex;
      flex-direction: column;
      min-height: 0;
      transition: transform .2s ease-out;
      transform: translate(0, 0);
    }

    #container.has-expanded {
      transition: transform .2s ease-in;
      transform: translate(-100%, 0);
    }

    button {
      background: none;
      color: inherit;
      border: none;
      padding: 0;
      font: inherit;
      outline: inherit;
      display: inline-flex;
      align-items: center;
    }

    slot[name="header"][hidden] {
      display: none;
    }

    slot[name="header"] > *,
    slot[name="header"]::slotted(*) {
      padding: .4em .7em;
      border-bottom: 1px solid rgb(255 255 255 / .25);
      cursor: var(--media-cursor, default);
    }

    slot[name="header"] > button[part~="back"],
    slot[name="header"]::slotted(button[part~="back"]) {
      cursor: var(--media-cursor, pointer);
    }

    svg[part~="back"] {
      height: var(--media-menu-icon-height, var(--media-control-height, 24px));
      fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));
      display: block;
      margin-right: .5ch;
    }

    slot:not([name]) {
      gap: var(--media-menu-gap);
      flex-direction: var(--media-menu-flex-direction, column);
      overflow: var(--media-menu-overflow, hidden auto);
      display: flex;
      min-height: 0;
    }

    :host([role="menu"]) slot:not([name]) {
      padding-block: .4em;
    }

    slot:not([name])::slotted([role="menu"]) {
      background: none;
    }

    media-chrome-menu-item > span {
      margin-right: .5ch;
      max-width: var(--media-menu-item-max-width);
      text-overflow: ellipsis;
      overflow: hidden;
    }
  </style>
  <style id="layout-row" media="width:0">

    slot[name="header"] > *,
    slot[name="header"]::slotted(*) {
      padding: .4em .5em;
    }

    slot:not([name]) {
      gap: var(--media-menu-gap, .25em);
      flex-direction: var(--media-menu-flex-direction, row);
      padding-inline: .5em;
    }

    media-chrome-menu-item {
      padding: .3em .5em;
    }

    media-chrome-menu-item[aria-checked="true"] {
      background: var(--media-menu-item-checked-background, rgb(255 255 255 / .2));
    }

    
    media-chrome-menu-item::part(checked-indicator) {
      display: var(--media-menu-item-checked-indicator-display, none);
    }
  </style>
  <div id="container">
    <slot name="header" hidden>
      <button part="back button" aria-label="Back to previous menu">
        <slot name="back-icon">
          <svg aria-hidden="true" viewBox="0 0 20 24" part="back indicator">
            <path d="m11.88 17.585.742-.669-4.2-4.665 4.2-4.666-.743-.669-4.803 5.335 4.803 5.334Z"/>
          </svg>
        </slot>
        <slot name="title"></slot>
      </button>
    </slot>
    <slot></slot>
  </div>
  <slot name="checked-indicator" hidden></slot>
`;
                var Xl = {
                        STYLE: "style",
                        HIDDEN: "hidden",
                        DISABLED: "disabled",
                        ANCHOR: "anchor"
                    },
                    Fo = class extends oe.HTMLElement {
                        constructor() {
                            super(), na(this, af), na(this, Uc), na(this, sf), na(this, of ), na(this, lf), na(this, Mu), na(this, Fc), na(this, df), na(this, cf), na(this, hf), na(this, ff), na(this, mf), na(this, vf), na(this, bd), na(this, pf), na(this, Td), na(this, Vc), na(this, fo, null), na(this, $l, null), na(this, ml, null), na(this, Oc, new Set), na(this, xc, void 0), na(this, jl, !1), na(this, Ed, null), na(this, Nc, () => {
                                let t = Di(this, Oc),
                                    s = new Set(this.items);
                                for (let d of t) s.has(d) || this.dispatchEvent(new CustomEvent("removemenuitem", {
                                    detail: d
                                }));
                                for (let d of s) t.has(d) || this.dispatchEvent(new CustomEvent("addmenuitem", {
                                    detail: d
                                }));
                                ho(this, Oc, s)
                            }), na(this, Cu, () => {
                                fa(this, Mu, yd).call(this), fa(this, Fc, uf).call(this, !1)
                            }), na(this, Du, () => {
                                fa(this, Mu, yd).call(this)
                            }), this.shadowRoot || (this.attachShadow({
                                mode: "open"
                            }), this.nativeEl = this.constructor.template.content.cloneNode(!0), this.shadowRoot.append(this.nativeEl)), this.container = this.shadowRoot.querySelector("#container"), this.defaultSlot = this.shadowRoot.querySelector("slot:not([name])"), this.shadowRoot.addEventListener("slotchange", this), ho(this, xc, new MutationObserver(Di(this, Nc))), Di(this, xc).observe(this.defaultSlot, {
                                childList: !0
                            })
                        }
                        static get observedAttributes() {
                            return [Xl.DISABLED, Xl.HIDDEN, Xl.STYLE, Xl.ANCHOR, ht.MEDIA_CONTROLLER]
                        }
                        static formatMenuItemText(t, s) {
                            return t
                        }
                        enable() {
                            this.addEventListener("click", this), this.addEventListener("focusout", this), this.addEventListener("keydown", this), this.addEventListener("invoke", this), this.addEventListener("toggle", this)
                        }
                        disable() {
                            this.removeEventListener("click", this), this.removeEventListener("focusout", this), this.removeEventListener("keyup", this), this.removeEventListener("invoke", this), this.removeEventListener("toggle", this)
                        }
                        handleEvent(t) {
                            switch (t.type) {
                                case "slotchange":
                                    fa(this, af, sm).call(this, t);
                                    break;
                                case "invoke":
                                    fa(this, sf, om).call(this, t);
                                    break;
                                case "click":
                                    fa(this, df, dm).call(this, t);
                                    break;
                                case "toggle":
                                    fa(this, hf, hm).call(this, t);
                                    break;
                                case "focusout":
                                    fa(this, mf, mm).call(this, t);
                                    break;
                                case "keydown":
                                    fa(this, vf, vm).call(this, t);
                                    break
                            }
                        }
                        connectedCallback() {
                            var t, s;
                            ho(this, Ed, Ja(this.shadowRoot, ":host")), fa(this, Uc, nf).call(this), this.hasAttribute("disabled") || this.enable(), this.role || (this.role = "menu"), ho(this, fo, Vt(this)), (s = (t = Di(this, fo)) == null ? void 0 : t.associateElement) == null || s.call(t, this), this.hidden || (Et(Ad(this), Di(this, Cu)), Et(this, Di(this, Du)))
                        }
                        disconnectedCallback() {
                            var t, s;
                            vr(Ad(this), Di(this, Cu)), vr(this, Di(this, Du)), this.disable(), (s = (t = Di(this, fo)) == null ? void 0 : t.unassociateElement) == null || s.call(t, this), ho(this, fo, null)
                        }
                        attributeChangedCallback(t, s, d) {
                            var g, w, N, X;
                            t === Xl.HIDDEN && d !== s ? (Di(this, jl) || ho(this, jl, !0), this.hidden ? fa(this, lf, um).call(this) : fa(this, of , lm).call(this), this.dispatchEvent(new rp({
                                oldState: this.hidden ? "open" : "closed",
                                newState: this.hidden ? "closed" : "open",
                                bubbles: !0
                            }))) : t === ht.MEDIA_CONTROLLER ? (s && ((w = (g = Di(this, fo)) == null ? void 0 : g.unassociateElement) == null || w.call(g, this), ho(this, fo, null)), d && this.isConnected && (ho(this, fo, Vt(this)), (X = (N = Di(this, fo)) == null ? void 0 : N.associateElement) == null || X.call(N, this))) : t === Xl.DISABLED && d !== s ? d == null ? this.enable() : this.disable() : t === Xl.STYLE && d !== s && fa(this, Uc, nf).call(this)
                        }
                        formatMenuItemText(t, s) {
                            return this.constructor.formatMenuItemText(t, s)
                        }
                        get anchor() {
                            return this.getAttribute("anchor")
                        }
                        set anchor(t) {
                            this.setAttribute("anchor", `${t}`)
                        }
                        get anchorElement() {
                            var t;
                            return this.anchor ? (t = _n(this)) == null ? void 0 : t.querySelector(`#${this.anchor}`) : null
                        }
                        get items() {
                            return this.defaultSlot.assignedElements({
                                flatten: !0
                            }).filter(ip)
                        }
                        get radioGroupItems() {
                            return this.items.filter(t => t.role === "menuitemradio")
                        }
                        get checkedItems() {
                            return this.items.filter(t => t.checked)
                        }
                        get value() {
                            var t, s;
                            return (s = (t = this.checkedItems[0]) == null ? void 0 : t.value) != null ? s : ""
                        }
                        set value(t) {
                            let s = this.items.find(d => d.value === t);
                            s && fa(this, Vc, gf).call(this, s)
                        }
                        focus() {
                            if (ho(this, $l, Lt()), this.items.length) {
                                fa(this, Td, Hc).call(this, this.items[0]), this.items[0].focus();
                                return
                            }
                            let t = this.querySelector('[autofocus], [tabindex]:not([tabindex="-1"]), [role="menu"]');
                            t == null || t.focus()
                        }
                        handleSelect(t) {
                            var s;
                            let d = fa(this, bd, Bc).call(this, t);
                            d && (fa(this, Vc, gf).call(this, d, d.type === "checkbox"), Di(this, ml) && !this.hidden && ((s = Di(this, $l)) == null || s.focus(), this.hidden = !0))
                        }
                        get keysUsed() {
                            return ["Enter", "Escape", "Tab", " ", "ArrowDown", "ArrowUp", "Home", "End"]
                        }
                        handleMove(t) {
                            var s, d;
                            let {
                                key: g
                            } = t, w = this.items, N = (d = (s = fa(this, bd, Bc).call(this, t)) != null ? s : fa(this, pf, pm).call(this)) != null ? d : w[0], X = w.indexOf(N), ue = Math.max(0, X);
                            g === "ArrowDown" ? ue++ : g === "ArrowUp" ? ue-- : t.key === "Home" ? ue = 0 : t.key === "End" && (ue = w.length - 1), ue < 0 && (ue = w.length - 1), ue > w.length - 1 && (ue = 0), fa(this, Td, Hc).call(this, w[ue]), w[ue].focus()
                        }
                    };
                fo = new WeakMap, $l = new WeakMap, ml = new WeakMap, Oc = new WeakMap, xc = new WeakMap, jl = new WeakMap, Ed = new WeakMap, af = new WeakSet, sm = function(t) {
                    let s = t.target;
                    for (let d of s.assignedNodes({
                            flatten: !0
                        })) d.nodeType === 3 && d.textContent.trim() === "" && d.remove();
                    if (["header", "title"].includes(s.name)) {
                        let d = this.shadowRoot.querySelector('slot[name="header"]');
                        d.hidden = s.assignedNodes().length === 0
                    }
                    s.name || Di(this, Nc).call(this)
                }, Nc = new WeakMap, Uc = new WeakSet, nf = function() {
                    var t;
                    let s = this.shadowRoot.querySelector("#layout-row"),
                        d = (t = getComputedStyle(this).getPropertyValue("--media-menu-layout")) == null ? void 0 : t.trim();
                    s.setAttribute("media", d === "row" ? "" : "width:0")
                }, sf = new WeakSet, om = function(t) {
                    ho(this, ml, t.relatedTarget), Ti(this, t.relatedTarget) || (this.hidden = !this.hidden)
                }, of = new WeakSet, lm = function() {
                    var t;
                    (t = Di(this, ml)) == null || t.setAttribute("aria-expanded", "true"), this.addEventListener("transitionend", () => this.focus(), {
                        once: !0
                    }), Et(Ad(this), Di(this, Cu)), Et(this, Di(this, Du))
                }, lf = new WeakSet, um = function() {
                    var t;
                    (t = Di(this, ml)) == null || t.setAttribute("aria-expanded", "false"), vr(Ad(this), Di(this, Cu)), vr(this, Di(this, Du))
                }, Cu = new WeakMap, Du = new WeakMap, Mu = new WeakSet, yd = function(t) {
                    if (this.hasAttribute("mediacontroller") && !this.anchor || this.hidden || !this.anchorElement) return;
                    let {
                        x: s,
                        y: d
                    } = Zv({
                        anchor: this.anchorElement,
                        floating: this,
                        placement: "top-start"
                    });
                    t != null || (t = this.offsetWidth);
                    let g = Ad(this).getBoundingClientRect(),
                        w = g.width - s - t,
                        N = g.height - d - this.offsetHeight,
                        {
                            style: X
                        } = Di(this, Ed);
                    X.setProperty("position", "absolute"), X.setProperty("right", `${Math.max(0,w)}px`), X.setProperty("--_menu-bottom", `${N}px`);
                    let ue = getComputedStyle(this),
                        $e = X.getPropertyValue("--_menu-bottom") === ue.bottom ? N : parseFloat(ue.bottom),
                        et = g.height - $e - parseFloat(ue.marginBottom);
                    this.style.setProperty("--_menu-max-height", `${et}px`)
                }, Fc = new WeakSet, uf = function(t) {
                    let s = this.querySelector('[role="menuitem"][aria-haspopup][aria-expanded="true"]'),
                        d = s == null ? void 0 : s.querySelector('[role="menu"]'),
                        {
                            style: g
                        } = Di(this, Ed);
                    if (t || g.setProperty("--media-menu-transition-in", "none"), d) {
                        let w = d.offsetHeight,
                            N = Math.max(d.offsetWidth, s.offsetWidth);
                        this.style.setProperty("min-width", `${N}px`), this.style.setProperty("min-height", `${w}px`), fa(this, Mu, yd).call(this, N)
                    } else this.style.removeProperty("min-width"), this.style.removeProperty("min-height"), fa(this, Mu, yd).call(this);
                    g.removeProperty("--media-menu-transition-in")
                }, df = new WeakSet, dm = function(t) {
                    var s;
                    if (t.stopPropagation(), t.composedPath().includes(Di(this, cf, cm))) {
                        (s = Di(this, $l)) == null || s.focus(), this.hidden = !0;
                        return
                    }
                    let d = fa(this, bd, Bc).call(this, t);
                    !d || d.hasAttribute("disabled") || (fa(this, Td, Hc).call(this, d), this.handleSelect(t))
                }, cf = new WeakSet, cm = function() {
                    var t;
                    return (t = this.shadowRoot.querySelector('slot[name="header"]').assignedElements({
                        flatten: !0
                    })) == null ? void 0 : t.find(s => s.matches('button[part~="back"]'))
                }, hf = new WeakSet, hm = function(t) {
                    if (t.target === this) return;
                    fa(this, ff, fm).call(this);
                    let s = Array.from(this.querySelectorAll('[role="menuitem"][aria-haspopup]'));
                    for (let d of s) d.invokeTargetElement != t.target && t.newState == "open" && d.getAttribute("aria-expanded") == "true" && !d.invokeTargetElement.hidden && d.invokeTargetElement.dispatchEvent(new tf({
                        relatedTarget: d
                    }));
                    for (let d of s) d.setAttribute("aria-expanded", `${!d.submenuElement.hidden}`);
                    fa(this, Fc, uf).call(this, !0)
                }, ff = new WeakSet, fm = function() {
                    let t = this.querySelector('[role="menuitem"] > [role="menu"]:not([hidden])');
                    this.container.classList.toggle("has-expanded", !!t)
                }, mf = new WeakSet, mm = function(t) {
                    var s;
                    Ti(this, t.relatedTarget) || (Di(this, jl) && ((s = Di(this, $l)) == null || s.focus()), Di(this, ml) && Di(this, ml) !== t.relatedTarget && !this.hidden && (this.hidden = !0))
                }, vf = new WeakSet, vm = function(t) {
                    var s, d, g, w, N;
                    let {
                        key: X,
                        ctrlKey: ue,
                        altKey: $e,
                        metaKey: et
                    } = t;
                    if (!(ue || $e || et) && this.keysUsed.includes(X))
                        if (t.preventDefault(), t.stopPropagation(), X === "Tab") {
                            if (Di(this, jl)) {
                                this.hidden = !0;
                                return
                            }
                            t.shiftKey ? (d = (s = this.previousElementSibling) == null ? void 0 : s.focus) == null || d.call(s) : (w = (g = this.nextElementSibling) == null ? void 0 : g.focus) == null || w.call(g), this.blur()
                        } else X === "Escape" ? ((N = Di(this, $l)) == null || N.focus(), Di(this, jl) && (this.hidden = !0)) : X === "Enter" || X === " " ? this.handleSelect(t) : this.handleMove(t)
                }, bd = new WeakSet, Bc = function(t) {
                    return t.composedPath().find(s => ["menuitemradio", "menuitemcheckbox"].includes(s.role))
                }, pf = new WeakSet, pm = function() {
                    return this.items.find(t => t.tabIndex === 0)
                }, Td = new WeakSet, Hc = function(t) {
                    for (let s of this.items) s.tabIndex = s === t ? 0 : -1
                }, Vc = new WeakSet, gf = function(t, s) {
                    let d = [...this.checkedItems];
                    t.type === "radio" && this.radioGroupItems.forEach(g => g.checked = !1), s ? t.checked = !t.checked : t.checked = !0, this.checkedItems.some((g, w) => g != d[w]) && this.dispatchEvent(new Event("change", {
                        bubbles: !0,
                        composed: !0
                    }))
                }, Fo.template = gm;

                function ip(t) {
                    return ["menuitem", "menuitemradio", "menuitemcheckbox"].includes(t == null ? void 0 : t.role)
                }

                function Ad(t) {
                    var s;
                    return (s = t.getAttribute("bounds") ? Ri(t, `#${t.getAttribute("bounds")}`) : Tr(t) || t.parentElement) != null ? s : t
                }
                oe.customElements.get("media-chrome-menu") || oe.customElements.define("media-chrome-menu", Fo);
                var Ef = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    mo = (t, s, d) => (Ef(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Bo = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    yf = (t, s, d, g) => (Ef(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    vo = (t, s, d) => (Ef(t, s, "access private method"), d),
                    Wc, _d, bf, Em, Tf, ym, Af, bm, po, Ou, Sd, _f, Tm, Gc, Sf, Am = Ut.createElement("template");
                Am.innerHTML = `
  <style>
    :host {
      transition: var(--media-menu-item-transition,
        background .15s linear,
        opacity .2s ease-in-out
      );
      outline: var(--media-menu-item-outline, 0);
      outline-offset: var(--media-menu-item-outline-offset, -1px);
      cursor: var(--media-cursor, pointer);
      display: flex;
      align-items: center;
      align-self: stretch;
      justify-self: stretch;
      white-space: nowrap;
      white-space-collapse: collapse;
      text-wrap: nowrap;
      padding: .4em .8em .4em 1em;
    }

    :host(:focus-visible) {
      box-shadow: var(--media-menu-item-focus-shadow, inset 0 0 0 2px rgb(27 127 204 / .9));
      outline: var(--media-menu-item-hover-outline, 0);
      outline-offset: var(--media-menu-item-hover-outline-offset,  var(--media-menu-item-outline-offset, -1px));
    }

    :host(:hover) {
      cursor: var(--media-cursor, pointer);
      background: var(--media-menu-item-hover-background, rgb(92 92 102 / .5));
      outline: var(--media-menu-item-hover-outline);
      outline-offset: var(--media-menu-item-hover-outline-offset,  var(--media-menu-item-outline-offset, -1px));
    }

    :host([aria-checked="true"]) {
      background: var(--media-menu-item-checked-background);
    }

    :host([hidden]) {
      display: none;
    }

    :host([disabled]) {
      pointer-events: none;
      color: rgba(255, 255, 255, .3);
    }

    slot:not([name]) {
      width: 100%;
    }

    slot:not([name="submenu"]) {
      display: inline-flex;
      align-items: center;
      transition: inherit;
      opacity: var(--media-menu-item-opacity, 1);
    }

    slot[name="description"] {
      justify-content: end;
    }

    slot[name="description"] > span {
      display: inline-block;
      margin-inline: 1em .2em;
      max-width: var(--media-menu-item-description-max-width, 100px);
      text-overflow: ellipsis;
      overflow: hidden;
      font-size: .8em;
      font-weight: 400;
      text-align: right;
      position: relative;
      top: .04em;
    }

    slot[name="checked-indicator"] {
      display: none;
    }

    :host(:is([role="menuitemradio"],[role="menuitemcheckbox"])) slot[name="checked-indicator"] {
      display: var(--media-menu-item-checked-indicator-display, inline-block);
    }

    
    svg, img, ::slotted(svg), ::slotted(img) {
      height: var(--media-menu-item-icon-height, var(--media-control-height, 24px));
      fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));
      display: block;
    }

    
    [part~="indicator"],
    ::slotted([part~="indicator"]) {
      fill: var(--media-menu-item-indicator-fill,
        var(--media-icon-color, var(--media-primary-color, rgb(238 238 238))));
      height: var(--media-menu-item-indicator-height, 1.25em);
      margin-right: .5ch;
    }

    [part~="checked-indicator"] {
      visibility: hidden;
    }

    :host([aria-checked="true"]) [part~="checked-indicator"] {
      visibility: visible;
    }
  </style>
  <slot name="checked-indicator">
    <svg aria-hidden="true" viewBox="0 1 24 24" part="checked-indicator indicator">
      <path d="m10 15.17 9.193-9.191 1.414 1.414-10.606 10.606-6.364-6.364 1.414-1.414 4.95 4.95Z"/>
    </svg>
  </slot>
  <slot name="prefix"></slot>
  <slot></slot>
  <slot name="description"></slot>
  <slot name="suffix"></slot>
  <slot name="submenu"></slot>
`;
                var Rs = {
                        TYPE: "type",
                        VALUE: "value",
                        CHECKED: "checked",
                        DISABLED: "disabled"
                    },
                    Kc = class extends oe.HTMLElement {
                        constructor() {
                            super(), Bo(this, bf), Bo(this, Tf), Bo(this, Af), Bo(this, Ou), Bo(this, _f), Bo(this, Gc), Bo(this, Wc, !1), Bo(this, _d, void 0), Bo(this, po, () => {
                                var t, s;
                                this.setAttribute("submenusize", `${this.submenuElement.items.length}`);
                                let d = this.shadowRoot.querySelector('slot[name="description"]'),
                                    g = (t = this.submenuElement.checkedItems) == null ? void 0 : t[0],
                                    w = (s = g == null ? void 0 : g.dataset.description) != null ? s : g == null ? void 0 : g.text,
                                    N = Ut.createElement("span");
                                N.textContent = w != null ? w : "", d.replaceChildren(N)
                            }), this.shadowRoot || (this.attachShadow({
                                mode: "open"
                            }), this.shadowRoot.append(this.constructor.template.content.cloneNode(!0))), this.shadowRoot.addEventListener("slotchange", this)
                        }
                        static get observedAttributes() {
                            return [Rs.TYPE, Rs.DISABLED, Rs.CHECKED, Rs.VALUE]
                        }
                        enable() {
                            this.hasAttribute("tabindex") || this.setAttribute("tabindex", "-1"), kd(this) && !this.hasAttribute("aria-checked") && this.setAttribute("aria-checked", "false"), this.addEventListener("click", this), this.addEventListener("keydown", this)
                        }
                        disable() {
                            this.removeAttribute("tabindex"), this.removeEventListener("click", this), this.removeEventListener("keydown", this), this.removeEventListener("keyup", this)
                        }
                        handleEvent(t) {
                            switch (t.type) {
                                case "slotchange":
                                    vo(this, bf, Em).call(this, t);
                                    break;
                                case "click":
                                    this.handleClick(t);
                                    break;
                                case "keydown":
                                    vo(this, _f, Tm).call(this, t);
                                    break;
                                case "keyup":
                                    vo(this, Ou, Sd).call(this, t);
                                    break
                            }
                        }
                        attributeChangedCallback(t, s, d) {
                            t === Rs.CHECKED && kd(this) && !mo(this, Wc) ? this.setAttribute("aria-checked", d != null ? "true" : "false") : t === Rs.TYPE && d !== s ? this.role = "menuitem" + d : t === Rs.DISABLED && d !== s && (d == null ? this.enable() : this.disable())
                        }
                        connectedCallback() {
                            this.hasAttribute(Rs.DISABLED) || this.enable(), this.role = "menuitem" + this.type, yf(this, _d, kf(this, this.parentNode)), vo(this, Gc, Sf).call(this)
                        }
                        disconnectedCallback() {
                            this.disable(), vo(this, Gc, Sf).call(this), yf(this, _d, null)
                        }
                        get invokeTarget() {
                            return this.getAttribute("invoketarget")
                        }
                        set invokeTarget(t) {
                            this.setAttribute("invoketarget", `${t}`)
                        }
                        get invokeTargetElement() {
                            var t;
                            return this.invokeTarget ? (t = _n(this)) == null ? void 0 : t.querySelector(`#${this.invokeTarget}`) : this.submenuElement
                        }
                        get submenuElement() {
                            return this.shadowRoot.querySelector('slot[name="submenu"]').assignedElements({
                                flatten: !0
                            })[0]
                        }
                        get type() {
                            var t;
                            return (t = this.getAttribute(Rs.TYPE)) != null ? t : ""
                        }
                        set type(t) {
                            this.setAttribute(Rs.TYPE, `${t}`)
                        }
                        get value() {
                            var t;
                            return (t = this.getAttribute(Rs.VALUE)) != null ? t : this.text
                        }
                        set value(t) {
                            this.setAttribute(Rs.VALUE, t)
                        }
                        get text() {
                            var t;
                            return ((t = this.textContent) != null ? t : "").trim()
                        }
                        get checked() {
                            if (kd(this)) return this.getAttribute("aria-checked") === "true"
                        }
                        set checked(t) {
                            kd(this) && (yf(this, Wc, !0), this.setAttribute("aria-checked", t ? "true" : "false"), t ? this.part.add("checked") : this.part.remove("checked"))
                        }
                        handleClick(t) {
                            kd(this) || this.invokeTargetElement && Ti(this, t.target) && this.invokeTargetElement.dispatchEvent(new tf({
                                relatedTarget: this
                            }))
                        }
                        get keysUsed() {
                            return ["Enter", " "]
                        }
                    };
                Wc = new WeakMap, _d = new WeakMap, bf = new WeakSet, Em = function(t) {
                    let s = t.target;
                    if (!(s != null && s.name))
                        for (let d of s.assignedNodes({
                                flatten: !0
                            })) d instanceof Text && d.textContent.trim() === "" && d.remove();
                    s.name === "submenu" && (this.submenuElement ? vo(this, Tf, ym).call(this) : vo(this, Af, bm).call(this))
                }, Tf = new WeakSet, ym = function() {
                    return Q(this, null, function*() {
                        this.setAttribute("aria-haspopup", "menu"), this.setAttribute("aria-expanded", `${!this.submenuElement.hidden}`), this.submenuElement.addEventListener("change", mo(this, po)), this.submenuElement.addEventListener("addmenuitem", mo(this, po)), this.submenuElement.addEventListener("removemenuitem", mo(this, po)), mo(this, po).call(this)
                    })
                }, Af = new WeakSet, bm = function() {
                    this.removeAttribute("aria-haspopup"), this.removeAttribute("aria-expanded"), this.submenuElement.removeEventListener("change", mo(this, po)), this.submenuElement.removeEventListener("addmenuitem", mo(this, po)), this.submenuElement.removeEventListener("removemenuitem", mo(this, po)), mo(this, po).call(this)
                }, po = new WeakMap, Ou = new WeakSet, Sd = function(t) {
                    let {
                        key: s
                    } = t;
                    if (!this.keysUsed.includes(s)) {
                        this.removeEventListener("keyup", vo(this, Ou, Sd));
                        return
                    }
                    this.handleClick(t)
                }, _f = new WeakSet, Tm = function(t) {
                    let {
                        metaKey: s,
                        altKey: d,
                        key: g
                    } = t;
                    if (s || d || !this.keysUsed.includes(g)) {
                        this.removeEventListener("keyup", vo(this, Ou, Sd));
                        return
                    }
                    this.addEventListener("keyup", vo(this, Ou, Sd), {
                        once: !0
                    })
                }, Gc = new WeakSet, Sf = function() {
                    var t;
                    let s = (t = mo(this, _d)) == null ? void 0 : t.radioGroupItems;
                    if (!s) return;
                    let d = s.filter(g => g.getAttribute("aria-checked") === "true").pop();
                    d || (d = s[0]);
                    for (let g of s) g.setAttribute("aria-checked", "false");
                    d == null || d.setAttribute("aria-checked", "true")
                }, Kc.template = Am;

                function kd(t) {
                    return t.type === "radio" || t.type === "checkbox"
                }

                function kf(t, s) {
                    if (!t) return null;
                    let {
                        host: d
                    } = t.getRootNode();
                    return !s && d ? kf(t, d) : s != null && s.items ? s : kf(s, s == null ? void 0 : s.parentNode)
                }
                oe.customElements.get("media-chrome-menu-item") || oe.customElements.define("media-chrome-menu-item", Kc);
                var _m = Ut.createElement("template");
                _m.innerHTML = Fo.template.innerHTML + `
  <style>
    :host {
      --_menu-bg: rgb(20 20 30 / .8);
      background: var(--media-settings-menu-background,
          var(--media-menu-background,
            var(--media-control-background,
              var(--media-secondary-color, var(--_menu-bg)))));
      min-width: var(--media-settings-menu-min-width, 170px);
      border-radius: 2px 2px 0 0;
      overflow: hidden;
    }

    @-moz-document url-prefix() {
      :host{
        --_menu-bg: rgb(20 20 30);
      }
    }

    :host([role="menu"]) {
      
      justify-content: end;
    }

    slot:not([name]) {
      justify-content: var(--media-settings-menu-justify-content);
      flex-direction: var(--media-settings-menu-flex-direction, column);
      overflow: visible;
    }

    #container.has-expanded {
      --media-settings-menu-item-opacity: 0;
    }
  </style>
`;
                var Sm = class extends Fo {
                    get anchorElement() {
                        return this.anchor !== "auto" ? super.anchorElement : Tr(this).querySelector("media-settings-menu-button")
                    }
                };
                Sm.template = _m, oe.customElements.get("media-settings-menu") || oe.customElements.define("media-settings-menu", Sm);
                var km, Yc = Ut.createElement("template");
                Yc.innerHTML = Kc.template.innerHTML + `
  <style>
    slot:not([name="submenu"]) {
      opacity: var(--media-settings-menu-item-opacity, var(--media-menu-item-opacity));
    }

    :host([aria-expanded="true"]:hover) {
      background: transparent;
    }
  </style>
`, (km = Yc.content) != null && km.querySelector && (Yc.content.querySelector('slot[name="suffix"]').innerHTML = `
    <svg aria-hidden="true" viewBox="0 0 20 24">
      <path d="m8.12 17.585-.742-.669 4.2-4.665-4.2-4.666.743-.669 4.803 5.335-4.803 5.334Z"/>
    </svg>
  `);
                var wm = class extends Kc {};
                wm.template = Yc, oe.customElements.get("media-settings-menu-item") || oe.customElements.define("media-settings-menu-item", wm);
                var xu = class extends cn {
                    connectedCallback() {
                        super.connectedCallback(), this.invokeTargetElement && this.setAttribute("aria-haspopup", "menu")
                    }
                    get invokeTarget() {
                        return this.getAttribute("invoketarget")
                    }
                    set invokeTarget(t) {
                        this.setAttribute("invoketarget", `${t}`)
                    }
                    get invokeTargetElement() {
                        var t;
                        return this.invokeTarget ? (t = _n(this)) == null ? void 0 : t.querySelector(`#${this.invokeTarget}`) : null
                    }
                    handleClick() {
                        var t;
                        (t = this.invokeTargetElement) == null || t.dispatchEvent(new tf({
                            relatedTarget: this
                        }))
                    }
                };
                oe.customElements.get("media-chrome-menu-button") || oe.customElements.define("media-chrome-menu-button", xu);
                var Rm = Ut.createElement("template");
                Rm.innerHTML = `
  <style>
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon">
    <svg aria-hidden="true" viewBox="0 0 24 24">
      <path d="M4.5 14.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Zm7.5 0a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Zm7.5 0a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"/>
    </svg>
  </slot>
`;
                var ap = class extends xu {
                    static get observedAttributes() {
                        return [...super.observedAttributes, "target"]
                    }
                    constructor() {
                        super({
                            slotTemplate: Rm,
                            tooltipContent: vt("Settings")
                        })
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.setAttribute("aria-label", vt("settings"))
                    }
                    get invokeTargetElement() {
                        return this.invokeTarget != null ? super.invokeTargetElement : Tr(this).querySelector("media-settings-menu")
                    }
                };
                oe.customElements.get("media-settings-menu-button") || oe.customElements.define("media-settings-menu-button", ap);
                var wf = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Lm = (t, s, d) => (wf(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    qc = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Rf = (t, s, d, g) => (wf(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    $c = (t, s, d) => (wf(t, s, "access private method"), d),
                    wd, jc, zc, Lf, Xc, If, np = class extends Fo {
                        constructor() {
                            super(...arguments), qc(this, zc), qc(this, Xc), qc(this, wd, []), qc(this, jc, void 0)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_AUDIO_TRACK_LIST, W.MEDIA_AUDIO_TRACK_ENABLED, W.MEDIA_AUDIO_TRACK_UNAVAILABLE]
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_AUDIO_TRACK_ENABLED && s !== d ? this.value = d : t === W.MEDIA_AUDIO_TRACK_LIST && s !== d && (Rf(this, wd, Tt(d != null ? d : "")), $c(this, zc, Lf).call(this))
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.addEventListener("change", $c(this, Xc, If))
                        }
                        disconnectedCallback() {
                            super.disconnectedCallback(), this.removeEventListener("change", $c(this, Xc, If))
                        }
                        get anchorElement() {
                            var t;
                            return this.anchor !== "auto" ? super.anchorElement : (t = Tr(this)) == null ? void 0 : t.querySelector("media-audio-track-menu-button")
                        }
                        get mediaAudioTrackList() {
                            return Lm(this, wd)
                        }
                        set mediaAudioTrackList(t) {
                            Rf(this, wd, t), $c(this, zc, Lf).call(this)
                        }
                        get mediaAudioTrackEnabled() {
                            var t;
                            return (t = li(this, W.MEDIA_AUDIO_TRACK_ENABLED)) != null ? t : ""
                        }
                        set mediaAudioTrackEnabled(t) {
                            mi(this, W.MEDIA_AUDIO_TRACK_ENABLED, t)
                        }
                    };
                wd = new WeakMap, jc = new WeakMap, zc = new WeakSet, Lf = function() {
                    if (Lm(this, jc) === JSON.stringify(this.mediaAudioTrackList)) return;
                    Rf(this, jc, JSON.stringify(this.mediaAudioTrackList));
                    let t = this.mediaAudioTrackList;
                    this.defaultSlot.textContent = "";
                    for (let s of t) {
                        let d = this.formatMenuItemText(s.label, s),
                            g = Pu({
                                type: "radio",
                                text: d,
                                value: `${s.id}`,
                                checked: s.enabled
                            });
                        g.prepend(zl(this, "checked-indicator")), this.defaultSlot.append(g)
                    }
                }, Xc = new WeakSet, If = function() {
                    if (this.value == null) return;
                    let t = new oe.CustomEvent(Fe.MEDIA_AUDIO_TRACK_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(t)
                }, oe.customElements.get("media-audio-track-menu") || oe.customElements.define("media-audio-track-menu", np);
                var sp = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M11 17H9.5V7H11v10Zm-3-3H6.5v-4H8v4Zm6-5h-1.5v6H14V9Zm3 7h-1.5V8H17v8Z"/>
  <path d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10Zm-2 0a8 8 0 1 0-16 0 8 8 0 0 0 16 0Z"/>
</svg>`,
                    Im = Ut.createElement("template");
                Im.innerHTML = `
  <style>
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon">${sp}</slot>
`;
                var op = class extends xu {
                    static get observedAttributes() {
                        return [...super.observedAttributes, W.MEDIA_AUDIO_TRACK_ENABLED, W.MEDIA_AUDIO_TRACK_UNAVAILABLE]
                    }
                    constructor() {
                        super({
                            slotTemplate: Im,
                            tooltipContent: vt("Audio")
                        })
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.setAttribute("aria-label", vt("Audio"))
                    }
                    attributeChangedCallback(t, s, d) {
                        super.attributeChangedCallback(t, s, d)
                    }
                    get invokeTargetElement() {
                        var t;
                        return this.invokeTarget != null ? super.invokeTargetElement : (t = Tr(this)) == null ? void 0 : t.querySelector("media-audio-track-menu")
                    }
                    get mediaAudioTrackEnabled() {
                        var t;
                        return (t = li(this, W.MEDIA_AUDIO_TRACK_ENABLED)) != null ? t : ""
                    }
                    set mediaAudioTrackEnabled(t) {
                        mi(this, W.MEDIA_AUDIO_TRACK_ENABLED, t)
                    }
                };
                oe.customElements.get("media-audio-track-menu-button") || oe.customElements.define("media-audio-track-menu-button", op);
                var Cf = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    lp = (t, s, d) => (Cf(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Df = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    up = (t, s, d, g) => (Cf(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Mf = (t, s, d) => (Cf(t, s, "access private method"), d),
                    Zc, Pf, Cm, Qc, Of, dp = `
  <svg aria-hidden="true" viewBox="0 0 26 24" part="captions-indicator indicator">
    <path d="M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z"/>
  </svg>`,
                    Dm = Ut.createElement("template");
                Dm.innerHTML = Fo.template.innerHTML + `
  <slot name="captions-indicator" hidden>${dp}</slot>`;
                var Mm = class extends Fo {
                    constructor() {
                        super(...arguments), Df(this, Pf), Df(this, Qc), Df(this, Zc, void 0)
                    }
                    static get observedAttributes() {
                        return [...super.observedAttributes, W.MEDIA_SUBTITLES_LIST, W.MEDIA_SUBTITLES_SHOWING]
                    }
                    attributeChangedCallback(t, s, d) {
                        super.attributeChangedCallback(t, s, d), t === W.MEDIA_SUBTITLES_LIST && s !== d ? Mf(this, Pf, Cm).call(this) : t === W.MEDIA_SUBTITLES_SHOWING && s !== d && (this.value = d)
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.addEventListener("change", Mf(this, Qc, Of))
                    }
                    disconnectedCallback() {
                        super.disconnectedCallback(), this.removeEventListener("change", Mf(this, Qc, Of))
                    }
                    get anchorElement() {
                        return this.anchor !== "auto" ? super.anchorElement : Tr(this).querySelector("media-captions-menu-button")
                    }
                    get mediaSubtitlesList() {
                        return Pm(this, W.MEDIA_SUBTITLES_LIST)
                    }
                    set mediaSubtitlesList(t) {
                        Om(this, W.MEDIA_SUBTITLES_LIST, t)
                    }
                    get mediaSubtitlesShowing() {
                        return Pm(this, W.MEDIA_SUBTITLES_SHOWING)
                    }
                    set mediaSubtitlesShowing(t) {
                        Om(this, W.MEDIA_SUBTITLES_SHOWING, t)
                    }
                };
                Zc = new WeakMap, Pf = new WeakSet, Cm = function() {
                    var t;
                    if (lp(this, Zc) === JSON.stringify(this.mediaSubtitlesList)) return;
                    up(this, Zc, JSON.stringify(this.mediaSubtitlesList)), this.defaultSlot.textContent = "";
                    let s = !this.value,
                        d = Pu({
                            type: "radio",
                            text: this.formatMenuItemText("Off"),
                            value: "off",
                            checked: s
                        });
                    d.prepend(zl(this, "checked-indicator")), this.defaultSlot.append(d);
                    let g = this.mediaSubtitlesList;
                    for (let w of g) {
                        let N = Pu({
                            type: "radio",
                            text: this.formatMenuItemText(w.label, w),
                            value: fr(w),
                            checked: this.value == fr(w)
                        });
                        N.prepend(zl(this, "checked-indicator")), ((t = w.kind) != null ? t : "subs") === "captions" && N.append(zl(this, "captions-indicator")), this.defaultSlot.append(N)
                    }
                }, Qc = new WeakSet, Of = function() {
                    let t = this.mediaSubtitlesShowing,
                        s = this.getAttribute(W.MEDIA_SUBTITLES_SHOWING),
                        d = this.value !== s;
                    if (t != null && t.length && d && this.dispatchEvent(new oe.CustomEvent(Fe.MEDIA_DISABLE_SUBTITLES_REQUEST, {
                            composed: !0,
                            bubbles: !0,
                            detail: t
                        })), !this.value || !d) return;
                    let g = new oe.CustomEvent(Fe.MEDIA_SHOW_SUBTITLES_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(g)
                }, Mm.template = Dm;
                var Pm = (t, s) => {
                        let d = t.getAttribute(s);
                        return d ? Ot(d) : []
                    },
                    Om = (t, s, d) => {
                        if (!(d != null && d.length)) {
                            t.removeAttribute(s);
                            return
                        }
                        let g = rr(d);
                        t.getAttribute(s) !== g && t.setAttribute(s, g)
                    };
                oe.customElements.get("media-captions-menu") || oe.customElements.define("media-captions-menu", Mm);
                var cp = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    hp = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    fp = (t, s, d, g) => (cp(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    xf, mp = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z"/>
</svg>`,
                    vp = `<svg aria-hidden="true" viewBox="0 0 26 24">
  <path d="M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z"/>
</svg>`,
                    xm = Ut.createElement("template");
                xm.innerHTML = `
  <style>
    :host([aria-checked="true"]) slot[name=off] {
      display: none !important;
    }

    
    :host(:not([aria-checked="true"])) slot[name=on] {
      display: none !important;
    }

    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>

  <slot name="icon">
    <slot name="on">${mp}</slot>
    <slot name="off">${vp}</slot>
  </slot>
`;
                var Nm = t => {
                        t.setAttribute("aria-checked", pt(t).toString())
                    },
                    pp = class extends xu {
                        constructor(t = {}) {
                            super(le({
                                slotTemplate: xm,
                                tooltipContent: vt("Captions")
                            }, t)), hp(this, xf, void 0), fp(this, xf, !1)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_SUBTITLES_LIST, W.MEDIA_SUBTITLES_SHOWING]
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.setAttribute("aria-label", vt("closed captions")), Nm(this)
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_SUBTITLES_SHOWING && Nm(this)
                        }
                        get invokeTargetElement() {
                            var t;
                            return this.invokeTarget != null ? super.invokeTargetElement : (t = Tr(this)) == null ? void 0 : t.querySelector("media-captions-menu")
                        }
                        get mediaSubtitlesList() {
                            return Um(this, W.MEDIA_SUBTITLES_LIST)
                        }
                        set mediaSubtitlesList(t) {
                            Fm(this, W.MEDIA_SUBTITLES_LIST, t)
                        }
                        get mediaSubtitlesShowing() {
                            return Um(this, W.MEDIA_SUBTITLES_SHOWING)
                        }
                        set mediaSubtitlesShowing(t) {
                            Fm(this, W.MEDIA_SUBTITLES_SHOWING, t)
                        }
                    };
                xf = new WeakMap;
                var Um = (t, s) => {
                        let d = t.getAttribute(s);
                        return d ? Ot(d) : []
                    },
                    Fm = (t, s, d) => {
                        if (!(d != null && d.length)) {
                            t.removeAttribute(s);
                            return
                        }
                        let g = rr(d);
                        t.getAttribute(s) !== g && t.setAttribute(s, g)
                    };
                oe.customElements.get("media-captions-menu-button") || oe.customElements.define("media-captions-menu-button", pp);
                var Bm = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Jc = (t, s, d) => (Bm(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    Nf = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Rd = (t, s, d) => (Bm(t, s, "access private method"), d),
                    Nu, Ld, eh, th, Uf, Ff = {
                        RATES: "rates"
                    },
                    gp = class extends Fo {
                        constructor() {
                            super(), Nf(this, Ld), Nf(this, th), Nf(this, Nu, new ke(this, Ff.RATES, {
                                defaultValue: sc
                            })), Rd(this, Ld, eh).call(this)
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_PLAYBACK_RATE, Ff.RATES]
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_PLAYBACK_RATE && s != d ? this.value = d : t === Ff.RATES && s != d && (Jc(this, Nu).value = d, Rd(this, Ld, eh).call(this))
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.addEventListener("change", Rd(this, th, Uf))
                        }
                        disconnectedCallback() {
                            super.disconnectedCallback(), this.removeEventListener("change", Rd(this, th, Uf))
                        }
                        get anchorElement() {
                            return this.anchor !== "auto" ? super.anchorElement : Tr(this).querySelector("media-playback-rate-menu-button")
                        }
                        get rates() {
                            return Jc(this, Nu)
                        }
                        set rates(t) {
                            t ? Array.isArray(t) && (Jc(this, Nu).value = t.join(" ")) : Jc(this, Nu).value = "", Rd(this, Ld, eh).call(this)
                        }
                        get mediaPlaybackRate() {
                            return Qr(this, W.MEDIA_PLAYBACK_RATE, xl)
                        }
                        set mediaPlaybackRate(t) {
                            Nr(this, W.MEDIA_PLAYBACK_RATE, t)
                        }
                    };
                Nu = new WeakMap, Ld = new WeakSet, eh = function() {
                    this.defaultSlot.textContent = "";
                    for (let t of this.rates) {
                        let s = Pu({
                            type: "radio",
                            text: this.formatMenuItemText(`${t}x`, t),
                            value: t,
                            checked: this.mediaPlaybackRate == t
                        });
                        s.prepend(zl(this, "checked-indicator")), this.defaultSlot.append(s)
                    }
                }, th = new WeakSet, Uf = function() {
                    if (!this.value) return;
                    let t = new oe.CustomEvent(Fe.MEDIA_PLAYBACK_RATE_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(t)
                }, oe.customElements.get("media-playback-rate-menu") || oe.customElements.define("media-playback-rate-menu", gp);
                var Ep = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    rh = (t, s, d) => (Ep(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    yp = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Uu, Bf = {
                        RATES: "rates"
                    },
                    bp = [1, 1.2, 1.5, 1.7, 2],
                    Hf = 1,
                    Hm = Ut.createElement("template");
                Hm.innerHTML = `
  <style>
    :host {
      min-width: 5ch;
      padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));
    }
    
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon"></slot>
`;
                var Tp = class extends xu {
                    constructor(t = {}) {
                        super(le({
                            slotTemplate: Hm,
                            tooltipContent: vt("Playback rate")
                        }, t)), yp(this, Uu, new ke(this, Bf.RATES, {
                            defaultValue: bp
                        })), this.container = this.shadowRoot.querySelector('slot[name="icon"]'), this.container.innerHTML = `${Hf}x`
                    }
                    static get observedAttributes() {
                        return [...super.observedAttributes, W.MEDIA_PLAYBACK_RATE, Bf.RATES]
                    }
                    attributeChangedCallback(t, s, d) {
                        if (super.attributeChangedCallback(t, s, d), t === Bf.RATES && (rh(this, Uu).value = d), t === W.MEDIA_PLAYBACK_RATE) {
                            let g = d ? +d : Number.NaN,
                                w = Number.isNaN(g) ? Hf : g;
                            this.container.innerHTML = `${w}x`, this.setAttribute("aria-label", vt("Playback rate {playbackRate}", {
                                playbackRate: w
                            }))
                        }
                    }
                    get invokeTargetElement() {
                        return this.invokeTarget != null ? super.invokeTargetElement : Tr(this).querySelector("media-playback-rate-menu")
                    }
                    get rates() {
                        return rh(this, Uu)
                    }
                    set rates(t) {
                        t ? Array.isArray(t) && (rh(this, Uu).value = t.join(" ")) : rh(this, Uu).value = ""
                    }
                    get mediaPlaybackRate() {
                        return Qr(this, W.MEDIA_PLAYBACK_RATE, Hf)
                    }
                    set mediaPlaybackRate(t) {
                        Nr(this, W.MEDIA_PLAYBACK_RATE, t)
                    }
                };
                Uu = new WeakMap, oe.customElements.get("media-playback-rate-menu-button") || oe.customElements.define("media-playback-rate-menu-button", Tp);
                var Vf = (t, s, d) => {
                        if (!s.has(t)) throw TypeError("Cannot " + d)
                    },
                    Id = (t, s, d) => (Vf(t, s, "read from private field"), d ? d.call(t) : s.get(t)),
                    ih = (t, s, d) => {
                        if (s.has(t)) throw TypeError("Cannot add the same private member more than once");
                        s instanceof WeakSet ? s.add(t) : s.set(t, d)
                    },
                    Vm = (t, s, d, g) => (Vf(t, s, "write to private field"), g ? g.call(t, d) : s.set(t, d), d),
                    Fu = (t, s, d) => (Vf(t, s, "access private method"), d),
                    Cd, Bu, Hu, Dd, ah, Wf, Ap = class extends Fo {
                        constructor() {
                            super(...arguments), ih(this, Hu), ih(this, ah), ih(this, Cd, []), ih(this, Bu, {})
                        }
                        static get observedAttributes() {
                            return [...super.observedAttributes, W.MEDIA_RENDITION_LIST, W.MEDIA_RENDITION_SELECTED, W.MEDIA_RENDITION_UNAVAILABLE, W.MEDIA_HEIGHT]
                        }
                        attributeChangedCallback(t, s, d) {
                            super.attributeChangedCallback(t, s, d), t === W.MEDIA_RENDITION_SELECTED && s !== d ? (this.value = d != null ? d : "auto", Fu(this, Hu, Dd).call(this)) : t === W.MEDIA_RENDITION_LIST && s !== d ? (Vm(this, Cd, Kt(d)), Fu(this, Hu, Dd).call(this)) : t === W.MEDIA_HEIGHT && s !== d && Fu(this, Hu, Dd).call(this)
                        }
                        connectedCallback() {
                            super.connectedCallback(), this.addEventListener("change", Fu(this, ah, Wf))
                        }
                        disconnectedCallback() {
                            super.disconnectedCallback(), this.removeEventListener("change", Fu(this, ah, Wf))
                        }
                        get anchorElement() {
                            return this.anchor !== "auto" ? super.anchorElement : Tr(this).querySelector("media-rendition-menu-button")
                        }
                        get mediaRenditionList() {
                            return Id(this, Cd)
                        }
                        set mediaRenditionList(t) {
                            Vm(this, Cd, t), Fu(this, Hu, Dd).call(this)
                        }
                        get mediaRenditionSelected() {
                            return li(this, W.MEDIA_RENDITION_SELECTED)
                        }
                        set mediaRenditionSelected(t) {
                            mi(this, W.MEDIA_RENDITION_SELECTED, t)
                        }
                        get mediaHeight() {
                            return Qr(this, W.MEDIA_HEIGHT)
                        }
                        set mediaHeight(t) {
                            Nr(this, W.MEDIA_HEIGHT, t)
                        }
                    };
                Cd = new WeakMap, Bu = new WeakMap, Hu = new WeakSet, Dd = function() {
                    if (Id(this, Bu).mediaRenditionList === JSON.stringify(this.mediaRenditionList) && Id(this, Bu).mediaHeight === this.mediaHeight) return;
                    Id(this, Bu).mediaRenditionList = JSON.stringify(this.mediaRenditionList), Id(this, Bu).mediaHeight = this.mediaHeight;
                    let t = this.mediaRenditionList.sort((N, X) => X.height - N.height);
                    for (let N of t) N.selected = N.id === this.mediaRenditionSelected;
                    this.defaultSlot.textContent = "";
                    let s = !this.mediaRenditionSelected;
                    for (let N of t) {
                        let X = this.formatMenuItemText(`${Math.min(N.width,N.height)}p`, N),
                            ue = Pu({
                                type: "radio",
                                text: X,
                                value: `${N.id}`,
                                checked: N.selected && !s
                            });
                        ue.prepend(zl(this, "checked-indicator")), this.defaultSlot.append(ue)
                    }
                    let d = s ? this.formatMenuItemText(`Auto (${this.mediaHeight}p)`) : this.formatMenuItemText("Auto"),
                        g = Pu({
                            type: "radio",
                            text: d,
                            value: "auto",
                            checked: s
                        }),
                        w = this.mediaHeight > 0 ? `Auto (${this.mediaHeight}p)` : "Auto";
                    g.dataset.description = w, g.prepend(zl(this, "checked-indicator")), this.defaultSlot.append(g)
                }, ah = new WeakSet, Wf = function() {
                    if (this.value == null) return;
                    let t = new oe.CustomEvent(Fe.MEDIA_RENDITION_REQUEST, {
                        composed: !0,
                        bubbles: !0,
                        detail: this.value
                    });
                    this.dispatchEvent(t)
                }, oe.customElements.get("media-rendition-menu") || oe.customElements.define("media-rendition-menu", Ap);
                var _p = `<svg aria-hidden="true" viewBox="0 0 24 24">
  <path d="M13.5 2.5h2v6h-2v-2h-11v-2h11v-2Zm4 2h4v2h-4v-2Zm-12 4h2v6h-2v-2h-3v-2h3v-2Zm4 2h12v2h-12v-2Zm1 4h2v6h-2v-2h-8v-2h8v-2Zm4 2h7v2h-7v-2Z" />
</svg>`,
                    Wm = Ut.createElement("template");
                Wm.innerHTML = `
  <style>
    :host([aria-expanded="true"]) slot[name=tooltip] {
      display: none;
    }
  </style>
  <slot name="icon">${_p}</slot>
`;
                var Sp = class extends xu {
                    static get observedAttributes() {
                        return [...super.observedAttributes, W.MEDIA_RENDITION_SELECTED, W.MEDIA_RENDITION_UNAVAILABLE, W.MEDIA_HEIGHT]
                    }
                    constructor() {
                        super({
                            slotTemplate: Wm,
                            tooltipContent: vt("Quality")
                        })
                    }
                    connectedCallback() {
                        super.connectedCallback(), this.setAttribute("aria-label", vt("quality"))
                    }
                    get invokeTargetElement() {
                        return this.invokeTarget != null ? super.invokeTargetElement : Tr(this).querySelector("media-rendition-menu")
                    }
                    get mediaRenditionSelected() {
                        return li(this, W.MEDIA_RENDITION_SELECTED)
                    }
                    set mediaRenditionSelected(t) {
                        mi(this, W.MEDIA_RENDITION_SELECTED, t)
                    }
                    get mediaHeight() {
                        return Qr(this, W.MEDIA_HEIGHT)
                    }
                    set mediaHeight(t) {
                        Nr(this, W.MEDIA_HEIGHT, t)
                    }
                };
                oe.customElements.get("media-rendition-menu-button") || oe.customElements.define("media-rendition-menu-button", Sp);
                var Gf = ct.createElement("template");
                "innerHTML" in Gf && (Gf.innerHTML = Xv);
                var Gm, Km, Ym = class extends Mc {};
                Ym.template = (Km = (Gm = Gf.content) == null ? void 0 : Gm.children) == null ? void 0 : Km[0], st.customElements.get("media-theme-gerwig") || st.customElements.define("media-theme-gerwig", Ym);
                var kp = "gerwig",
                    Ho = {
                        SRC: "src",
                        POSTER: "poster"
                    },
                    At = {
                        STYLE: "style",
                        DEFAULT_HIDDEN_CAPTIONS: "default-hidden-captions",
                        PRIMARY_COLOR: "primary-color",
                        SECONDARY_COLOR: "secondary-color",
                        ACCENT_COLOR: "accent-color",
                        FORWARD_SEEK_OFFSET: "forward-seek-offset",
                        BACKWARD_SEEK_OFFSET: "backward-seek-offset",
                        PLAYBACK_TOKEN: "playback-token",
                        THUMBNAIL_TOKEN: "thumbnail-token",
                        STORYBOARD_TOKEN: "storyboard-token",
                        DRM_TOKEN: "drm-token",
                        STORYBOARD_SRC: "storyboard-src",
                        THUMBNAIL_TIME: "thumbnail-time",
                        AUDIO: "audio",
                        NOHOTKEYS: "nohotkeys",
                        HOTKEYS: "hotkeys",
                        PLAYBACK_RATES: "playbackrates",
                        DEFAULT_SHOW_REMAINING_TIME: "default-show-remaining-time",
                        DEFAULT_DURATION: "default-duration",
                        TITLE: "title",
                        PLACEHOLDER: "placeholder",
                        THEME: "theme",
                        DEFAULT_STREAM_TYPE: "default-stream-type",
                        TARGET_LIVE_WINDOW: "target-live-window",
                        EXTRA_SOURCE_PARAMS: "extra-source-params",
                        NO_VOLUME_PREF: "no-volume-pref",
                        CAST_RECEIVER: "cast-receiver",
                        NO_TOOLTIPS: "no-tooltips",
                        PROUDLY_DISPLAY_MUX_BADGE: "proudly-display-mux-badge"
                    },
                    Kf = ["audio", "backwardseekoffset", "defaultduration", "defaultshowremainingtime", "defaultsubtitles", "noautoseektolive", "disabled", "exportparts", "forwardseekoffset", "hideduration", "hotkeys", "nohotkeys", "playbackrates", "defaultstreamtype", "streamtype", "style", "targetlivewindow", "template", "title", "novolumepref", "proudlydisplaymuxbadge"];

                function wp(t, s) {
                    var d;
                    return x(le({
                        src: !t.playbackId && t.src,
                        playbackId: t.playbackId,
                        hasSrc: !!t.playbackId || !!t.src || !!t.currentSrc,
                        poster: t.poster,
                        storyboard: t.storyboard,
                        storyboardSrc: t.getAttribute(At.STORYBOARD_SRC),
                        placeholder: t.getAttribute("placeholder"),
                        themeTemplate: Lp(t),
                        thumbnailTime: !t.tokens.thumbnail && t.thumbnailTime,
                        autoplay: t.autoplay,
                        crossOrigin: t.crossOrigin,
                        loop: t.loop,
                        noHotKeys: t.hasAttribute(At.NOHOTKEYS),
                        hotKeys: t.getAttribute(At.HOTKEYS),
                        muted: t.muted,
                        paused: t.paused,
                        preload: t.preload,
                        envKey: t.envKey,
                        preferCmcd: t.preferCmcd,
                        debug: t.debug,
                        disableTracking: t.disableTracking,
                        disableCookies: t.disableCookies,
                        tokens: t.tokens,
                        beaconCollectionDomain: t.beaconCollectionDomain,
                        maxResolution: t.maxResolution,
                        minResolution: t.minResolution,
                        programStartTime: t.programStartTime,
                        programEndTime: t.programEndTime,
                        assetStartTime: t.assetStartTime,
                        assetEndTime: t.assetEndTime,
                        renditionOrder: t.renditionOrder,
                        metadata: t.metadata,
                        playerInitTime: t.playerInitTime,
                        playerSoftwareName: t.playerSoftwareName,
                        playerSoftwareVersion: t.playerSoftwareVersion,
                        startTime: t.startTime,
                        preferPlayback: t.preferPlayback,
                        audio: t.audio,
                        defaultStreamType: t.defaultStreamType,
                        targetLiveWindow: t.getAttribute(er.Attributes.TARGET_LIVE_WINDOW),
                        streamType: O(t.getAttribute(er.Attributes.STREAM_TYPE)),
                        primaryColor: t.getAttribute(At.PRIMARY_COLOR),
                        secondaryColor: t.getAttribute(At.SECONDARY_COLOR),
                        accentColor: t.getAttribute(At.ACCENT_COLOR),
                        forwardSeekOffset: t.forwardSeekOffset,
                        backwardSeekOffset: t.backwardSeekOffset,
                        defaultHiddenCaptions: t.defaultHiddenCaptions,
                        defaultDuration: t.defaultDuration,
                        defaultShowRemainingTime: t.defaultShowRemainingTime,
                        hideDuration: Ip(t),
                        playbackRates: t.getAttribute(At.PLAYBACK_RATES),
                        customDomain: (d = t.getAttribute(er.Attributes.CUSTOM_DOMAIN)) != null ? d : void 0,
                        title: t.getAttribute(At.TITLE),
                        novolumepref: t.hasAttribute(At.NO_VOLUME_PREF),
                        castReceiver: t.castReceiver,
                        proudlyDisplayMuxBadge: t.hasAttribute(At.PROUDLY_DISPLAY_MUX_BADGE)
                    }, s), {
                        extraSourceParams: t.extraSourceParams
                    })
                }
                var Rp = ru.formatErrorMessage;
                ru.formatErrorMessage = t => {
                    var s, d;
                    if (t instanceof er.MediaError) {
                        let g = jv(t, !1);
                        return `
      ${g!=null&&g.title?`<h3>${g.title}</h3>`:""}
      ${g!=null&&g.message||g!=null&&g.linkUrl?`<p>
        ${g==null?void 0:g.message}
        ${g!=null&&g.linkUrl?`<a
              href="${g.linkUrl}"
              target="_blank"
              rel="external noopener"
              aria-label="${(s=g.linkText)!=null?s:""} ${(0,l.i18n)("(opens in a new window)")}"
              >${(d=g.linkText)!=null?d:g.linkUrl}</a
            >`:""}
      </p>`:""}
    `
                    }
                    return Rp(t)
                };

                function Lp(t) {
                    var s, d;
                    let g = t.theme;
                    if (g) {
                        let w = (d = (s = t.getRootNode()) == null ? void 0 : s.getElementById) == null ? void 0 : d.call(s, g);
                        if (w && w instanceof HTMLTemplateElement) return w;
                        g.startsWith("media-theme-") || (g = `media-theme-${g}`);
                        let N = st.customElements.get(g);
                        if (N != null && N.template) return N.template
                    }
                }

                function Ip(t) {
                    var s;
                    let d = (s = t.mediaController) == null ? void 0 : s.querySelector("media-time-display");
                    return d && getComputedStyle(d).getPropertyValue("--media-duration-display-display").trim() === "none"
                }

                function qm(t) {
                    let s = t.hasAttribute(At.TITLE) ? {
                        video_title: t.getAttribute(At.TITLE)
                    } : {};
                    return t.getAttributeNames().filter(d => d.startsWith("metadata-")).reduce((d, g) => {
                        let w = t.getAttribute(g);
                        return w !== null && (d[g.replace(/^metadata-/, "").replace(/-/g, "_")] = w), d
                    }, s)
                }
                var Cp = Object.values(er.Attributes),
                    Dp = Object.values(Ho),
                    Mp = Object.values(At),
                    Yf = S(),
                    qf = "mux-player",
                    $m = {
                        isDialogOpen: !1
                    },
                    Pp = {
                        redundant_streams: !0
                    },
                    nh, sh, oh, Zl, lh, Vu, Fa, vl, jm, $f, Ql, zm, Xm, Zm, Qm, jf = class extends Hr {
                        constructor() {
                            super(), Be(this, Fa), Be(this, nh), Be(this, sh, !1), Be(this, oh, {}), Be(this, Zl, !0), Be(this, lh, new me(this, "hotkeys")), Be(this, Vu, x(le({}, $m), {
                                onCloseErrorDialog: t => {
                                    var s;
                                    ((s = t.composedPath()[0]) == null ? void 0 : s.localName) === "media-error-dialog" && Ve(this, Fa, $f).call(this, {
                                        isDialogOpen: !1
                                    })
                                },
                                onFocusInErrorDialog: t => {
                                    var s;
                                    ((s = t.composedPath()[0]) == null ? void 0 : s.localName) === "media-error-dialog" && (f(this, ct.activeElement) || t.preventDefault())
                                }
                            })), _(this, nh, (0, l.generatePlayerInitTime)()), this.attachShadow({
                                mode: "open"
                            }), Ve(this, Fa, jm).call(this), this.isConnected && Ve(this, Fa, vl).call(this)
                        }
                        static get NAME() {
                            return qf
                        }
                        static get VERSION() {
                            return Yf
                        }
                        static get observedAttributes() {
                            var t;
                            return [...(t = Hr.observedAttributes) != null ? t : [], ...Dp, ...Cp, ...Mp]
                        }
                        get mediaTheme() {
                            var t;
                            return (t = this.shadowRoot) == null ? void 0 : t.querySelector("media-theme")
                        }
                        get mediaController() {
                            var t, s;
                            return (s = (t = this.mediaTheme) == null ? void 0 : t.shadowRoot) == null ? void 0 : s.querySelector("media-controller")
                        }
                        connectedCallback() {
                            var t;
                            let s = (t = this.shadowRoot) == null ? void 0 : t.querySelector("mux-video");
                            s && (s.metadata = qm(this))
                        }
                        attributeChangedCallback(t, s, d) {
                            switch (Ve(this, Fa, vl).call(this), super.attributeChangedCallback(t, s, d), t) {
                                case At.HOTKEYS:
                                    B(this, lh).value = d;
                                    break;
                                case At.THUMBNAIL_TIME:
                                    {
                                        d != null && this.tokens.thumbnail && Se((0, l.i18n)("Use of thumbnail-time with thumbnail-token is currently unsupported. Ignore thumbnail-time."));
                                        break
                                    }
                                case At.THUMBNAIL_TOKEN:
                                    {
                                        if (d) {
                                            let g = (0, l.parseJwt)(d);
                                            if (g) {
                                                let {
                                                    aud: w
                                                } = g, N = l.MuxJWTAud.THUMBNAIL;
                                                w !== N && Se((0, l.i18n)("The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.").format({
                                                    aud: w,
                                                    expectedAud: N,
                                                    tokenNamePrefix: "thumbnail"
                                                }))
                                            }
                                        }
                                        break
                                    }
                                case At.STORYBOARD_TOKEN:
                                    {
                                        if (d) {
                                            let g = (0, l.parseJwt)(d);
                                            if (g) {
                                                let {
                                                    aud: w
                                                } = g, N = l.MuxJWTAud.STORYBOARD;
                                                w !== N && Se((0, l.i18n)("The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.").format({
                                                    aud: w,
                                                    expectedAud: N,
                                                    tokenNamePrefix: "storyboard"
                                                }))
                                            }
                                        }
                                        break
                                    }
                                case At.DRM_TOKEN:
                                    {
                                        if (d) {
                                            let g = (0, l.parseJwt)(d);
                                            if (g) {
                                                let {
                                                    aud: w
                                                } = g, N = l.MuxJWTAud.DRM;
                                                w !== N && Se((0, l.i18n)("The {tokenNamePrefix}-token has an incorrect aud value: {aud}. aud value should be {expectedAud}.").format({
                                                    aud: w,
                                                    expectedAud: N,
                                                    tokenNamePrefix: "drm"
                                                }))
                                            }
                                        }
                                        break
                                    }
                                case er.Attributes.PLAYBACK_ID:
                                    {
                                        d != null && d.includes("?token") && ve((0, l.i18n)("The specificed playback ID {playbackId} contains a token which must be provided via the playback-token attribute.").format({
                                            playbackId: d
                                        }));
                                        break
                                    }
                                case er.Attributes.STREAM_TYPE:
                                    d && ![l.StreamTypes.LIVE, l.StreamTypes.ON_DEMAND, l.StreamTypes.UNKNOWN].includes(d) ? ["ll-live", "live:dvr", "ll-live:dvr"].includes(this.streamType) ? this.targetLiveWindow = d.includes("dvr") ? Number.POSITIVE_INFINITY : 0 : Ne({
                                        file: "invalid-stream-type.md",
                                        message: (0, l.i18n)("Invalid stream-type value supplied: `{streamType}`. Please provide stream-type as either: `on-demand` or `live`").format({
                                            streamType: this.streamType
                                        })
                                    }) : d === l.StreamTypes.LIVE ? this.getAttribute(At.TARGET_LIVE_WINDOW) == null && (this.targetLiveWindow = 0) : this.targetLiveWindow = Number.NaN
                            }[er.Attributes.PLAYBACK_ID, Ho.SRC, At.PLAYBACK_TOKEN].includes(t) && s !== d && _(this, Vu, le(le({}, B(this, Vu)), $m)), Ve(this, Fa, Ql).call(this, {
                                [G(t)]: d
                            })
                        }
                        get preferCmcd() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.PREFER_CMCD)) != null ? t : void 0
                        }
                        set preferCmcd(t) {
                            t !== this.preferCmcd && (t ? l.CmcdTypeValues.includes(t) ? this.setAttribute(er.Attributes.PREFER_CMCD, t) : Se(`Invalid value for preferCmcd. Must be one of ${l.CmcdTypeValues.join()}`) : this.removeAttribute(er.Attributes.PREFER_CMCD))
                        }
                        get hasPlayed() {
                            var t, s;
                            return (s = (t = this.mediaController) == null ? void 0 : t.hasAttribute(W.MEDIA_HAS_PLAYED)) != null ? s : !1
                        }
                        get inLiveWindow() {
                            var t;
                            return (t = this.mediaController) == null ? void 0 : t.hasAttribute(W.MEDIA_TIME_IS_LIVE)
                        }
                        get _hls() {
                            var t;
                            return (t = this.media) == null ? void 0 : t._hls
                        }
                        get mux() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.mux
                        }
                        get theme() {
                            var t;
                            return (t = this.getAttribute(At.THEME)) != null ? t : kp
                        }
                        set theme(t) {
                            this.setAttribute(At.THEME, `${t}`)
                        }
                        get themeProps() {
                            let t = this.mediaTheme;
                            if (!t) return;
                            let s = {};
                            for (let d of t.getAttributeNames()) {
                                if (Kf.includes(d)) continue;
                                let g = t.getAttribute(d);
                                s[o(d)] = g === "" ? !0 : g
                            }
                            return s
                        }
                        set themeProps(t) {
                            var s, d;
                            Ve(this, Fa, vl).call(this);
                            let g = le(le({}, this.themeProps), t);
                            for (let w in g) {
                                if (Kf.includes(w)) continue;
                                let N = t == null ? void 0 : t[w];
                                typeof N == "boolean" || N == null ? (s = this.mediaTheme) == null || s.toggleAttribute(i(w), !!N) : (d = this.mediaTheme) == null || d.setAttribute(i(w), N)
                            }
                        }
                        get playbackId() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.PLAYBACK_ID)) != null ? t : void 0
                        }
                        set playbackId(t) {
                            t ? this.setAttribute(er.Attributes.PLAYBACK_ID, t) : this.removeAttribute(er.Attributes.PLAYBACK_ID)
                        }
                        get src() {
                            var t, s;
                            return this.playbackId ? (t = pl(this, Ho.SRC)) != null ? t : void 0 : (s = this.getAttribute(Ho.SRC)) != null ? s : void 0
                        }
                        set src(t) {
                            t ? this.setAttribute(Ho.SRC, t) : this.removeAttribute(Ho.SRC)
                        }
                        get poster() {
                            var t;
                            let s = this.getAttribute(Ho.POSTER);
                            if (s != null) return s;
                            let {
                                tokens: d
                            } = this;
                            if (d.playback && !d.thumbnail) {
                                Se("Missing expected thumbnail token. No poster image will be shown");
                                return
                            }
                            if (this.playbackId && !this.audio) return L(this.playbackId, {
                                customDomain: this.customDomain,
                                thumbnailTime: (t = this.thumbnailTime) != null ? t : this.startTime,
                                programTime: this.programStartTime,
                                token: d.thumbnail
                            })
                        }
                        set poster(t) {
                            t || t === "" ? this.setAttribute(Ho.POSTER, t) : this.removeAttribute(Ho.POSTER)
                        }
                        get storyboardSrc() {
                            var t;
                            return (t = this.getAttribute(At.STORYBOARD_SRC)) != null ? t : void 0
                        }
                        set storyboardSrc(t) {
                            t ? this.setAttribute(At.STORYBOARD_SRC, t) : this.removeAttribute(At.STORYBOARD_SRC)
                        }
                        get storyboard() {
                            let {
                                tokens: t
                            } = this;
                            if (this.storyboardSrc && !t.storyboard) return this.storyboardSrc;
                            if (!(this.audio || !this.playbackId || !this.streamType || [l.StreamTypes.LIVE, l.StreamTypes.UNKNOWN].includes(this.streamType) || t.playback && !t.storyboard)) return I(this.playbackId, {
                                customDomain: this.customDomain,
                                token: t.storyboard,
                                programStartTime: this.programStartTime,
                                programEndTime: this.programEndTime
                            })
                        }
                        get audio() {
                            return this.hasAttribute(At.AUDIO)
                        }
                        set audio(t) {
                            if (!t) {
                                this.removeAttribute(At.AUDIO);
                                return
                            }
                            this.setAttribute(At.AUDIO, "")
                        }
                        get hotkeys() {
                            return B(this, lh)
                        }
                        get nohotkeys() {
                            return this.hasAttribute(At.NOHOTKEYS)
                        }
                        set nohotkeys(t) {
                            if (!t) {
                                this.removeAttribute(At.NOHOTKEYS);
                                return
                            }
                            this.setAttribute(At.NOHOTKEYS, "")
                        }
                        get thumbnailTime() {
                            return u(this.getAttribute(At.THUMBNAIL_TIME))
                        }
                        set thumbnailTime(t) {
                            this.setAttribute(At.THUMBNAIL_TIME, `${t}`)
                        }
                        get title() {
                            var t;
                            return (t = this.getAttribute(At.TITLE)) != null ? t : ""
                        }
                        set title(t) {
                            t !== this.title && (t ? this.setAttribute(At.TITLE, t) : this.removeAttribute("title"), super.title = t)
                        }
                        get placeholder() {
                            var t;
                            return (t = pl(this, At.PLACEHOLDER)) != null ? t : ""
                        }
                        set placeholder(t) {
                            this.setAttribute(At.PLACEHOLDER, `${t}`)
                        }
                        get primaryColor() {
                            var t, s;
                            let d = this.getAttribute(At.PRIMARY_COLOR);
                            if (d != null || this.mediaTheme && (d = (s = (t = st.getComputedStyle(this.mediaTheme)) == null ? void 0 : t.getPropertyValue("--_primary-color")) == null ? void 0 : s.trim(), d)) return d
                        }
                        set primaryColor(t) {
                            this.setAttribute(At.PRIMARY_COLOR, `${t}`)
                        }
                        get secondaryColor() {
                            var t, s;
                            let d = this.getAttribute(At.SECONDARY_COLOR);
                            if (d != null || this.mediaTheme && (d = (s = (t = st.getComputedStyle(this.mediaTheme)) == null ? void 0 : t.getPropertyValue("--_secondary-color")) == null ? void 0 : s.trim(), d)) return d
                        }
                        set secondaryColor(t) {
                            this.setAttribute(At.SECONDARY_COLOR, `${t}`)
                        }
                        get accentColor() {
                            var t, s;
                            let d = this.getAttribute(At.ACCENT_COLOR);
                            if (d != null || this.mediaTheme && (d = (s = (t = st.getComputedStyle(this.mediaTheme)) == null ? void 0 : t.getPropertyValue("--_accent-color")) == null ? void 0 : s.trim(), d)) return d
                        }
                        set accentColor(t) {
                            this.setAttribute(At.ACCENT_COLOR, `${t}`)
                        }
                        get defaultShowRemainingTime() {
                            return this.hasAttribute(At.DEFAULT_SHOW_REMAINING_TIME)
                        }
                        set defaultShowRemainingTime(t) {
                            t ? this.setAttribute(At.DEFAULT_SHOW_REMAINING_TIME, "") : this.removeAttribute(At.DEFAULT_SHOW_REMAINING_TIME)
                        }
                        get playbackRates() {
                            if (this.hasAttribute(At.PLAYBACK_RATES)) return this.getAttribute(At.PLAYBACK_RATES).trim().split(/\s*,?\s+/).map(t => Number(t)).filter(t => !Number.isNaN(t)).sort((t, s) => t - s)
                        }
                        set playbackRates(t) {
                            if (!t) {
                                this.removeAttribute(At.PLAYBACK_RATES);
                                return
                            }
                            this.setAttribute(At.PLAYBACK_RATES, t.join(" "))
                        }
                        get forwardSeekOffset() {
                            var t;
                            return (t = u(this.getAttribute(At.FORWARD_SEEK_OFFSET))) != null ? t : 10
                        }
                        set forwardSeekOffset(t) {
                            this.setAttribute(At.FORWARD_SEEK_OFFSET, `${t}`)
                        }
                        get backwardSeekOffset() {
                            var t;
                            return (t = u(this.getAttribute(At.BACKWARD_SEEK_OFFSET))) != null ? t : 10
                        }
                        set backwardSeekOffset(t) {
                            this.setAttribute(At.BACKWARD_SEEK_OFFSET, `${t}`)
                        }
                        get defaultHiddenCaptions() {
                            return this.hasAttribute(At.DEFAULT_HIDDEN_CAPTIONS)
                        }
                        set defaultHiddenCaptions(t) {
                            t ? this.setAttribute(At.DEFAULT_HIDDEN_CAPTIONS, "") : this.removeAttribute(At.DEFAULT_HIDDEN_CAPTIONS)
                        }
                        get defaultDuration() {
                            return u(this.getAttribute(At.DEFAULT_DURATION))
                        }
                        set defaultDuration(t) {
                            t == null ? this.removeAttribute(At.DEFAULT_DURATION) : this.setAttribute(At.DEFAULT_DURATION, `${t}`)
                        }
                        get playerInitTime() {
                            return this.hasAttribute(er.Attributes.PLAYER_INIT_TIME) ? u(this.getAttribute(er.Attributes.PLAYER_INIT_TIME)) : B(this, nh)
                        }
                        set playerInitTime(t) {
                            t != this.playerInitTime && (t == null ? this.removeAttribute(er.Attributes.PLAYER_INIT_TIME) : this.setAttribute(er.Attributes.PLAYER_INIT_TIME, `${+t}`))
                        }
                        get playerSoftwareName() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.PLAYER_SOFTWARE_NAME)) != null ? t : qf
                        }
                        get playerSoftwareVersion() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.PLAYER_SOFTWARE_VERSION)) != null ? t : Yf
                        }
                        get beaconCollectionDomain() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.BEACON_COLLECTION_DOMAIN)) != null ? t : void 0
                        }
                        set beaconCollectionDomain(t) {
                            t !== this.beaconCollectionDomain && (t ? this.setAttribute(er.Attributes.BEACON_COLLECTION_DOMAIN, t) : this.removeAttribute(er.Attributes.BEACON_COLLECTION_DOMAIN))
                        }
                        get maxResolution() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.MAX_RESOLUTION)) != null ? t : void 0
                        }
                        set maxResolution(t) {
                            t !== this.maxResolution && (t ? this.setAttribute(er.Attributes.MAX_RESOLUTION, t) : this.removeAttribute(er.Attributes.MAX_RESOLUTION))
                        }
                        get minResolution() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.MIN_RESOLUTION)) != null ? t : void 0
                        }
                        set minResolution(t) {
                            t !== this.minResolution && (t ? this.setAttribute(er.Attributes.MIN_RESOLUTION, t) : this.removeAttribute(er.Attributes.MIN_RESOLUTION))
                        }
                        get renditionOrder() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.RENDITION_ORDER)) != null ? t : void 0
                        }
                        set renditionOrder(t) {
                            t !== this.renditionOrder && (t ? this.setAttribute(er.Attributes.RENDITION_ORDER, t) : this.removeAttribute(er.Attributes.RENDITION_ORDER))
                        }
                        get programStartTime() {
                            return u(this.getAttribute(er.Attributes.PROGRAM_START_TIME))
                        }
                        set programStartTime(t) {
                            t == null ? this.removeAttribute(er.Attributes.PROGRAM_START_TIME) : this.setAttribute(er.Attributes.PROGRAM_START_TIME, `${t}`)
                        }
                        get programEndTime() {
                            return u(this.getAttribute(er.Attributes.PROGRAM_END_TIME))
                        }
                        set programEndTime(t) {
                            t == null ? this.removeAttribute(er.Attributes.PROGRAM_END_TIME) : this.setAttribute(er.Attributes.PROGRAM_END_TIME, `${t}`)
                        }
                        get assetStartTime() {
                            return u(this.getAttribute(er.Attributes.ASSET_START_TIME))
                        }
                        set assetStartTime(t) {
                            t == null ? this.removeAttribute(er.Attributes.ASSET_START_TIME) : this.setAttribute(er.Attributes.ASSET_START_TIME, `${t}`)
                        }
                        get assetEndTime() {
                            return u(this.getAttribute(er.Attributes.ASSET_END_TIME))
                        }
                        set assetEndTime(t) {
                            t == null ? this.removeAttribute(er.Attributes.ASSET_END_TIME) : this.setAttribute(er.Attributes.ASSET_END_TIME, `${t}`)
                        }
                        get extraSourceParams() {
                            return this.hasAttribute(At.EXTRA_SOURCE_PARAMS) ? [...new URLSearchParams(this.getAttribute(At.EXTRA_SOURCE_PARAMS)).entries()].reduce((t, [s, d]) => (t[s] = d, t), {}) : Pp
                        }
                        set extraSourceParams(t) {
                            t == null ? this.removeAttribute(At.EXTRA_SOURCE_PARAMS) : this.setAttribute(At.EXTRA_SOURCE_PARAMS, new URLSearchParams(t).toString())
                        }
                        get customDomain() {
                            var t;
                            return (t = this.getAttribute(er.Attributes.CUSTOM_DOMAIN)) != null ? t : void 0
                        }
                        set customDomain(t) {
                            t !== this.customDomain && (t ? this.setAttribute(er.Attributes.CUSTOM_DOMAIN, t) : this.removeAttribute(er.Attributes.CUSTOM_DOMAIN))
                        }
                        get envKey() {
                            var t;
                            return (t = pl(this, er.Attributes.ENV_KEY)) != null ? t : void 0
                        }
                        set envKey(t) {
                            this.setAttribute(er.Attributes.ENV_KEY, `${t}`)
                        }
                        get noVolumePref() {
                            return this.hasAttribute(At.NO_VOLUME_PREF)
                        }
                        set noVolumePref(t) {
                            t ? this.setAttribute(At.NO_VOLUME_PREF, "") : this.removeAttribute(At.NO_VOLUME_PREF)
                        }
                        get debug() {
                            return pl(this, er.Attributes.DEBUG) != null
                        }
                        set debug(t) {
                            t ? this.setAttribute(er.Attributes.DEBUG, "") : this.removeAttribute(er.Attributes.DEBUG)
                        }
                        get disableTracking() {
                            return pl(this, er.Attributes.DISABLE_TRACKING) != null
                        }
                        set disableTracking(t) {
                            this.toggleAttribute(er.Attributes.DISABLE_TRACKING, !!t)
                        }
                        get disableCookies() {
                            return pl(this, er.Attributes.DISABLE_COOKIES) != null
                        }
                        set disableCookies(t) {
                            t ? this.setAttribute(er.Attributes.DISABLE_COOKIES, "") : this.removeAttribute(er.Attributes.DISABLE_COOKIES)
                        }
                        get streamType() {
                            var t, s, d;
                            return (d = (s = this.getAttribute(er.Attributes.STREAM_TYPE)) != null ? s : (t = this.media) == null ? void 0 : t.streamType) != null ? d : l.StreamTypes.UNKNOWN
                        }
                        set streamType(t) {
                            this.setAttribute(er.Attributes.STREAM_TYPE, `${t}`)
                        }
                        get defaultStreamType() {
                            var t, s, d;
                            return (d = (s = this.getAttribute(At.DEFAULT_STREAM_TYPE)) != null ? s : (t = this.mediaController) == null ? void 0 : t.getAttribute(At.DEFAULT_STREAM_TYPE)) != null ? d : l.StreamTypes.ON_DEMAND
                        }
                        set defaultStreamType(t) {
                            t ? this.setAttribute(At.DEFAULT_STREAM_TYPE, t) : this.removeAttribute(At.DEFAULT_STREAM_TYPE)
                        }
                        get targetLiveWindow() {
                            var t, s;
                            return this.hasAttribute(At.TARGET_LIVE_WINDOW) ? +this.getAttribute(At.TARGET_LIVE_WINDOW) : (s = (t = this.media) == null ? void 0 : t.targetLiveWindow) != null ? s : Number.NaN
                        }
                        set targetLiveWindow(t) {
                            t == this.targetLiveWindow || Number.isNaN(t) && Number.isNaN(this.targetLiveWindow) || (t == null ? this.removeAttribute(At.TARGET_LIVE_WINDOW) : this.setAttribute(At.TARGET_LIVE_WINDOW, `${+t}`))
                        }
                        get liveEdgeStart() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.liveEdgeStart
                        }
                        get startTime() {
                            return u(pl(this, er.Attributes.START_TIME))
                        }
                        set startTime(t) {
                            this.setAttribute(er.Attributes.START_TIME, `${t}`)
                        }
                        get preferPlayback() {
                            let t = this.getAttribute(er.Attributes.PREFER_PLAYBACK);
                            if (t === l.PlaybackTypes.MSE || t === l.PlaybackTypes.NATIVE) return t
                        }
                        set preferPlayback(t) {
                            t !== this.preferPlayback && (t === l.PlaybackTypes.MSE || t === l.PlaybackTypes.NATIVE ? this.setAttribute(er.Attributes.PREFER_PLAYBACK, t) : this.removeAttribute(er.Attributes.PREFER_PLAYBACK))
                        }
                        get metadata() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.metadata
                        }
                        set metadata(t) {
                            if (Ve(this, Fa, vl).call(this), !this.media) {
                                ve("underlying media element missing when trying to set metadata. metadata will not be set.");
                                return
                            }
                            this.media.metadata = le(le({}, qm(this)), t)
                        }
                        get _hlsConfig() {
                            var t;
                            return (t = this.media) == null ? void 0 : t._hlsConfig
                        }
                        set _hlsConfig(t) {
                            if (Ve(this, Fa, vl).call(this), !this.media) {
                                ve("underlying media element missing when trying to set _hlsConfig. _hlsConfig will not be set.");
                                return
                            }
                            this.media._hlsConfig = t
                        }
                        addCuePoints(t) {
                            return Q(this, null, function*() {
                                var s;
                                if (Ve(this, Fa, vl).call(this), !this.media) {
                                    ve("underlying media element missing when trying to addCuePoints. cuePoints will not be added.");
                                    return
                                }
                                return (s = this.media) == null ? void 0 : s.addCuePoints(t)
                            })
                        }
                        get activeCuePoint() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.activeCuePoint
                        }
                        get cuePoints() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.cuePoints) != null ? s : []
                        }
                        addChapters(t) {
                            var s;
                            if (Ve(this, Fa, vl).call(this), !this.media) {
                                ve("underlying media element missing when trying to addChapters. chapters will not be added.");
                                return
                            }
                            return (s = this.media) == null ? void 0 : s.addChapters(t)
                        }
                        get activeChapter() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.activeChapter
                        }
                        get chapters() {
                            var t, s;
                            return (s = (t = this.media) == null ? void 0 : t.chapters) != null ? s : []
                        }
                        getStartDate() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.getStartDate()
                        }
                        get currentPdt() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.currentPdt
                        }
                        get tokens() {
                            let t = this.getAttribute(At.PLAYBACK_TOKEN),
                                s = this.getAttribute(At.DRM_TOKEN),
                                d = this.getAttribute(At.THUMBNAIL_TOKEN),
                                g = this.getAttribute(At.STORYBOARD_TOKEN);
                            return le(le(le(le(le({}, B(this, oh)), t != null ? {
                                playback: t
                            } : {}), s != null ? {
                                drm: s
                            } : {}), d != null ? {
                                thumbnail: d
                            } : {}), g != null ? {
                                storyboard: g
                            } : {})
                        }
                        set tokens(t) {
                            _(this, oh, t != null ? t : {})
                        }
                        get playbackToken() {
                            var t;
                            return (t = this.getAttribute(At.PLAYBACK_TOKEN)) != null ? t : void 0
                        }
                        set playbackToken(t) {
                            this.setAttribute(At.PLAYBACK_TOKEN, `${t}`)
                        }
                        get drmToken() {
                            var t;
                            return (t = this.getAttribute(At.DRM_TOKEN)) != null ? t : void 0
                        }
                        set drmToken(t) {
                            this.setAttribute(At.DRM_TOKEN, `${t}`)
                        }
                        get thumbnailToken() {
                            var t;
                            return (t = this.getAttribute(At.THUMBNAIL_TOKEN)) != null ? t : void 0
                        }
                        set thumbnailToken(t) {
                            this.setAttribute(At.THUMBNAIL_TOKEN, `${t}`)
                        }
                        get storyboardToken() {
                            var t;
                            return (t = this.getAttribute(At.STORYBOARD_TOKEN)) != null ? t : void 0
                        }
                        set storyboardToken(t) {
                            this.setAttribute(At.STORYBOARD_TOKEN, `${t}`)
                        }
                        addTextTrack(t, s, d, g) {
                            var w;
                            let N = (w = this.media) == null ? void 0 : w.nativeEl;
                            if (N) return (0, l.addTextTrack)(N, t, s, d, g)
                        }
                        removeTextTrack(t) {
                            var s;
                            let d = (s = this.media) == null ? void 0 : s.nativeEl;
                            if (d) return (0, l.removeTextTrack)(d, t)
                        }
                        get textTracks() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.textTracks
                        }
                        get castReceiver() {
                            var t;
                            return (t = this.getAttribute(At.CAST_RECEIVER)) != null ? t : void 0
                        }
                        set castReceiver(t) {
                            t !== this.castReceiver && (t ? this.setAttribute(At.CAST_RECEIVER, t) : this.removeAttribute(At.CAST_RECEIVER))
                        }
                        get castCustomData() {
                            var t;
                            return (t = this.media) == null ? void 0 : t.castCustomData
                        }
                        set castCustomData(t) {
                            if (!this.media) {
                                ve("underlying media element missing when trying to set castCustomData. castCustomData will not be set.");
                                return
                            }
                            this.media.castCustomData = t
                        }
                        get noTooltips() {
                            return this.hasAttribute(At.NO_TOOLTIPS)
                        }
                        set noTooltips(t) {
                            if (!t) {
                                this.removeAttribute(At.NO_TOOLTIPS);
                                return
                            }
                            this.setAttribute(At.NO_TOOLTIPS, "")
                        }
                        get proudlyDisplayMuxBadge() {
                            return this.hasAttribute(At.PROUDLY_DISPLAY_MUX_BADGE)
                        }
                        set proudlyDisplayMuxBadge(t) {
                            t ? this.setAttribute(At.PROUDLY_DISPLAY_MUX_BADGE, "") : this.removeAttribute(At.PROUDLY_DISPLAY_MUX_BADGE)
                        }
                    };
                nh = new WeakMap, sh = new WeakMap, oh = new WeakMap, Zl = new WeakMap, lh = new WeakMap, Vu = new WeakMap, Fa = new WeakSet, vl = function() {
                    var t, s, d, g;
                    if (!B(this, sh)) {
                        _(this, sh, !0), Ve(this, Fa, Ql).call(this);
                        try {
                            if (customElements.upgrade(this.mediaTheme), !(this.mediaTheme instanceof st.HTMLElement)) throw ""
                        } catch (w) {
                            ve("<media-theme> failed to upgrade!")
                        }
                        try {
                            if (customElements.upgrade(this.media), !(this.media instanceof er.default)) throw ""
                        } catch (w) {
                            ve("<mux-video> failed to upgrade!")
                        }
                        try {
                            if (customElements.upgrade(this.mediaController), !(this.mediaController instanceof Gn)) throw ""
                        } catch (w) {
                            ve("<media-controller> failed to upgrade!")
                        }
                        this.init(), Ve(this, Fa, zm).call(this), Ve(this, Fa, Xm).call(this), Ve(this, Fa, Zm).call(this), _(this, Zl, (s = (t = this.mediaController) == null ? void 0 : t.hasAttribute(or.USER_INACTIVE)) != null ? s : !0), Ve(this, Fa, Qm).call(this), (d = this.media) == null || d.addEventListener("streamtypechange", () => Ve(this, Fa, Ql).call(this)), (g = this.media) == null || g.addEventListener("loadstart", () => Ve(this, Fa, Ql).call(this))
                    }
                }, jm = function() {
                    var t, s;
                    try {
                        (t = window == null ? void 0 : window.CSS) == null || t.registerProperty({
                            name: "--media-primary-color",
                            syntax: "<color>",
                            inherits: !0
                        }), (s = window == null ? void 0 : window.CSS) == null || s.registerProperty({
                            name: "--media-secondary-color",
                            syntax: "<color>",
                            inherits: !0
                        })
                    } catch (d) {}
                }, $f = function(t) {
                    Object.assign(B(this, Vu), t), Ve(this, Fa, Ql).call(this)
                }, Ql = function(t = {}) {
                    Bv(Vv(wp(this, le(le({}, B(this, Vu)), t))), this.shadowRoot)
                }, zm = function() {
                    let t = s => {
                        var d, g;
                        if (!(s != null && s.startsWith("theme-"))) return;
                        let w = s.replace(/^theme-/, "");
                        if (Kf.includes(w)) return;
                        let N = this.getAttribute(s);
                        N != null ? (d = this.mediaTheme) == null || d.setAttribute(w, N) : (g = this.mediaTheme) == null || g.removeAttribute(w)
                    };
                    new MutationObserver(s => {
                        for (let {
                                attributeName: d
                            } of s) t(d)
                    }).observe(this, {
                        attributes: !0
                    }), this.getAttributeNames().forEach(t)
                }, Xm = function() {
                    var t;
                    let s = d => {
                        let {
                            detail: g
                        } = d;
                        if (g instanceof er.MediaError || (g = new er.MediaError(g.message, g.code, g.fatal)), !(g != null && g.fatal)) {
                            Se(g), g.data && Se(`${g.name} data:`, g.data);
                            return
                        }
                        let w = am(g, !1);
                        w.message && Ne(w), ve(g), g.data && ve(`${g.name} data:`, g.data), Ve(this, Fa, $f).call(this, {
                            isDialogOpen: !0
                        })
                    };
                    this.addEventListener("error", s), this.media && (this.media.errorTranslator = (d = {}) => {
                        var g, w, N;
                        if (!(((g = this.media) == null ? void 0 : g.error) instanceof er.MediaError)) return d;
                        let X = am((w = this.media) == null ? void 0 : w.error, !1);
                        return {
                            player_error_code: (N = this.media) == null ? void 0 : N.error.code,
                            player_error_message: X.message ? String(X.message) : d.player_error_message,
                            player_error_context: X.context ? String(X.context) : d.player_error_context
                        }
                    }), (t = this.media) == null || t.addEventListener("error", d => {
                        var g, w;
                        let {
                            detail: N
                        } = d;
                        if (!N) {
                            let {
                                message: X,
                                code: ue
                            } = (w = (g = this.media) == null ? void 0 : g.error) != null ? w : {};
                            N = new er.MediaError(X, ue)
                        }
                        N != null && N.fatal && this.dispatchEvent(new CustomEvent("error", {
                            detail: N
                        }))
                    })
                }, Zm = function() {
                    var t, s, d, g;
                    let w = () => Ve(this, Fa, Ql).call(this);
                    (s = (t = this.media) == null ? void 0 : t.textTracks) == null || s.addEventListener("addtrack", w), (g = (d = this.media) == null ? void 0 : d.textTracks) == null || g.addEventListener("removetrack", w)
                }, Qm = function() {
                    var t, s;
                    if (!/Firefox/i.test(navigator.userAgent)) return;
                    let d, g = new WeakMap,
                        w = () => this.streamType === l.StreamTypes.LIVE && !this.secondaryColor && this.offsetWidth >= 800,
                        N = ($e, et, ur = !1) => {
                            w() || Array.from($e && $e.activeCues || []).forEach(gr => {
                                if (!(!gr.snapToLines || gr.line < -5 || gr.line >= 0 && gr.line < 10))
                                    if (!et || this.paused) {
                                        let Sr = gr.text.split(`
`).length,
                                            _r = -3;
                                        this.streamType === l.StreamTypes.LIVE && (_r = -2);
                                        let Ei = _r - Sr;
                                        if (gr.line === Ei && !ur) return;
                                        g.has(gr) || g.set(gr, gr.line), gr.line = Ei
                                    } else setTimeout(() => {
                                        gr.line = g.get(gr) || "auto"
                                    }, 500)
                            })
                        },
                        X = () => {
                            var $e, et;
                            N(d, (et = ($e = this.mediaController) == null ? void 0 : $e.hasAttribute(or.USER_INACTIVE)) != null ? et : !1)
                        },
                        ue = () => {
                            var $e, et;
                            let ur = Array.from(((et = ($e = this.mediaController) == null ? void 0 : $e.media) == null ? void 0 : et.textTracks) || []).filter(gr => ["subtitles", "captions"].includes(gr.kind) && gr.mode === "showing")[0];
                            ur !== d && (d == null || d.removeEventListener("cuechange", X)), d = ur, d == null || d.addEventListener("cuechange", X), N(d, B(this, Zl))
                        };
                    ue(), (t = this.textTracks) == null || t.addEventListener("change", ue), (s = this.textTracks) == null || s.addEventListener("addtrack", ue), this.addEventListener("userinactivechange", () => {
                        var $e, et;
                        let ur = (et = ($e = this.mediaController) == null ? void 0 : $e.hasAttribute(or.USER_INACTIVE)) != null ? et : !0;
                        B(this, Zl) !== ur && (_(this, Zl, ur), N(d, B(this, Zl)))
                    })
                };

                function pl(t, s) {
                    return t.media ? t.media.getAttribute(s) : t.getAttribute(s)
                }
                st.customElements.get("mux-player") || (st.customElements.define("mux-player", jf), st.MuxPlayerElement = jf);
                var Op = jf
            },
            76322: (wt, Me) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                });

                function we(Ee, Je, Y) {
                    var Ct = Y || {},
                        tt = Ct.noTrailing,
                        mt = tt === void 0 ? !1 : tt,
                        le = Ct.noLeading,
                        x = le === void 0 ? !1 : le,
                        K = Ct.debounceMode,
                        Q = K === void 0 ? void 0 : K,
                        he, ot = !1,
                        it = 0;

                    function Rt() {
                        he && clearTimeout(he)
                    }

                    function Ft(dt) {
                        var at = dt || {},
                            bt = at.upcomingOnly,
                            Wt = bt === void 0 ? !1 : bt;
                        Rt(), ot = !Wt
                    }

                    function Dt() {
                        for (var dt = arguments.length, at = new Array(dt), bt = 0; bt < dt; bt++) at[bt] = arguments[bt];
                        var Wt = this,
                            fe = Date.now() - it;
                        if (ot) return;

                        function Ge() {
                            it = Date.now(), Je.apply(Wt, at)
                        }

                        function B() {
                            he = void 0
                        }!x && Q && !he && Ge(), Rt(), Q === void 0 && fe > Ee ? x ? (it = Date.now(), mt || (he = setTimeout(Q ? B : Ge, Ee))) : Ge() : mt !== !0 && (he = setTimeout(Q ? B : Ge, Q === void 0 ? Ee - fe : Ee))
                    }
                    return Dt.cancel = Ft, Dt
                }

                function je(Ee, Je, Y) {
                    var Ct = Y || {},
                        tt = Ct.atBegin,
                        mt = tt === void 0 ? !1 : tt;
                    return we(Ee, Je, {
                        debounceMode: mt !== !1
                    })
                }
                Me.debounce = je, Me.throttle = we
            },
            80210: (wt, Me, we) => {
                var je = we(80629);
                Me.formatArgs = Je, Me.save = Y, Me.load = Ct, Me.useColors = Ee, Me.storage = tt(), Me.destroy = (() => {
                    let le = !1;
                    return () => {
                        le || (le = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))
                    }
                })(), Me.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"];

                function Ee() {
                    if (typeof window != "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) return !0;
                    if (typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1;
                    let le;
                    return typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator != "undefined" && navigator.userAgent && (le = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(le[1], 10) >= 31 || typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)
                }

                function Je(le) {
                    if (le[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + le[0] + (this.useColors ? "%c " : " ") + "+" + wt.exports.humanize(this.diff), !this.useColors) return;
                    const x = "color: " + this.color;
                    le.splice(1, 0, x, "color: inherit");
                    let K = 0,
                        Q = 0;
                    le[0].replace(/%[a-zA-Z%]/g, he => {
                        he !== "%%" && (K++, he === "%c" && (Q = K))
                    }), le.splice(Q, 0, x)
                }
                Me.log = console.debug || console.log || (() => {});

                function Y(le) {
                    try {
                        le ? Me.storage.setItem("debug", le) : Me.storage.removeItem("debug")
                    } catch (x) {}
                }

                function Ct() {
                    let le;
                    try {
                        le = Me.storage.getItem("debug")
                    } catch (x) {}
                    return !le && typeof je != "undefined" && "env" in je && (le = je.env.DEBUG), le
                }

                function tt() {
                    try {
                        return localStorage
                    } catch (le) {}
                }
                wt.exports = we(33437)(Me);
                const {
                    formatters: mt
                } = wt.exports;
                mt.j = function(le) {
                    try {
                        return JSON.stringify(le)
                    } catch (x) {
                        return "[UnexpectedJSONParseError]: " + x.message
                    }
                }
            },
            81987: (wt, Me, we) => {
                var je = we(97924)();
                wt.exports = je;
                try {
                    regeneratorRuntime = je
                } catch (Ee) {
                    typeof globalThis == "object" ? globalThis.regeneratorRuntime = je : Function("r", "regeneratorRuntime = r")(je)
                }
            },
            82744: (wt, Me, we) => {
                "use strict";
                var je = we(89249);
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                });
                var Ee = {
                    MUX_PLAYBACK_TOKEN_TTL: !0
                };
                Object.defineProperty(Me, "MUX_PLAYBACK_TOKEN_TTL", {
                    enumerable: !0,
                    get: function() {
                        return tt.MUX_PLAYBACK_TOKEN_TTL
                    }
                }), Me.default = void 0;
                var Je = je(we(45397)),
                    Y = we(88431);
                Object.keys(Y).forEach(function(le) {
                    le === "default" || le === "__esModule" || Object.prototype.hasOwnProperty.call(Ee, le) || le in Me && Me[le] === Y[le] || Object.defineProperty(Me, le, {
                        enumerable: !0,
                        get: function() {
                            return Y[le]
                        }
                    })
                });
                var Ct = we(88481);
                Object.keys(Ct).forEach(function(le) {
                    le === "default" || le === "__esModule" || Object.prototype.hasOwnProperty.call(Ee, le) || le in Me && Me[le] === Ct[le] || Object.defineProperty(Me, le, {
                        enumerable: !0,
                        get: function() {
                            return Ct[le]
                        }
                    })
                });
                var tt = we(40805),
                    mt = Me.default = Je.default
            },
            85188: wt => {
                function Me(we, je) {
                    if (we == null) return {};
                    var Ee = {};
                    for (var Je in we)
                        if ({}.hasOwnProperty.call(we, Je)) {
                            if (je.indexOf(Je) !== -1) continue;
                            Ee[Je] = we[Je]
                        }
                    return Ee
                }
                wt.exports = Me, wt.exports.__esModule = !0, wt.exports.default = wt.exports
            },
            91842: (wt, Me, we) => {
                "use strict";
                var je = Object.defineProperty,
                    Ee = Object.getOwnPropertySymbols,
                    Je = Object.getPrototypeOf,
                    Y = Object.prototype.hasOwnProperty,
                    Ct = Object.prototype.propertyIsEnumerable,
                    tt = Reflect.get,
                    mt = (y, F, z) => F in y ? je(y, F, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: z
                    }) : y[F] = z,
                    le = (y, F) => {
                        for (var z in F || (F = {})) Y.call(F, z) && mt(y, z, F[z]);
                        if (Ee)
                            for (var z of Ee(F)) Ct.call(F, z) && mt(y, z, F[z]);
                        return y
                    },
                    x = (y, F, z) => tt(Je(y), z, F),
                    K = (y, F, z) => new Promise((be, pt) => {
                        var Gt = Zt => {
                                try {
                                    nr(z.next(Zt))
                                } catch (wi) {
                                    pt(wi)
                                }
                            },
                            pr = Zt => {
                                try {
                                    nr(z.throw(Zt))
                                } catch (wi) {
                                    pt(wi)
                                }
                            },
                            nr = Zt => Zt.done ? be(Zt.value) : Promise.resolve(Zt.value).then(Gt, pr);
                        nr((z = z.apply(y, F)).next())
                    }),
                    Q = Object.defineProperty,
                    he = Object.getOwnPropertyDescriptor,
                    ot = Object.getOwnPropertyNames,
                    it = Object.getPrototypeOf,
                    Rt = Object.prototype.hasOwnProperty,
                    Ft = Reflect.get,
                    Dt = y => {
                        throw TypeError(y)
                    },
                    dt = (y, F, z) => F in y ? Q(y, F, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: z
                    }) : y[F] = z,
                    at = (y, F) => {
                        for (var z in F) Q(y, z, {
                            get: F[z],
                            enumerable: !0
                        })
                    },
                    bt = (y, F, z, be) => {
                        if (F && typeof F == "object" || typeof F == "function")
                            for (let pt of ot(F)) !Rt.call(y, pt) && pt !== z && Q(y, pt, {
                                get: () => F[pt],
                                enumerable: !(be = he(F, pt)) || be.enumerable
                            });
                        return y
                    },
                    Wt = y => bt(Q({}, "__esModule", {
                        value: !0
                    }), y),
                    fe = (y, F, z) => dt(y, typeof F != "symbol" ? F + "" : F, z),
                    Ge = (y, F, z) => F.has(y) || Dt("Cannot " + z),
                    B = (y, F, z) => (Ge(y, F, "read from private field"), z ? z.call(y) : F.get(y)),
                    Be = (y, F, z) => F.has(y) ? Dt("Cannot add the same private member more than once") : F instanceof WeakSet ? F.add(y) : F.set(y, z),
                    _ = (y, F, z, be) => (Ge(y, F, "write to private field"), be ? be.call(y, z) : F.set(y, z), z),
                    Ve = (y, F, z) => (Ge(y, F, "access private method"), z),
                    de = (y, F, z) => Ft(it(y), z, F),
                    yt = {};
                at(yt, {
                    Attributes: () => lt,
                    MediaError: () => ht.MediaError,
                    VideoEvents: () => Zr,
                    default: () => rr,
                    generatePlayerInitTime: () => ht.generatePlayerInitTime,
                    playerSoftwareName: () => di,
                    playerSoftwareVersion: () => rn
                }), wt.exports = Wt(yt);
                var Ir = class {
                    addEventListener() {}
                    removeEventListener() {}
                    dispatchEvent(y) {
                        return !0
                    }
                };
                if (typeof DocumentFragment == "undefined") {
                    class y extends Ir {}
                    globalThis.DocumentFragment = y
                }
                var ar = class extends Ir {},
                    nt = class extends Ir {},
                    dr = {
                        get(y) {},
                        define(y, F, z) {},
                        getName(y) {
                            return null
                        },
                        upgrade(y) {},
                        whenDefined(y) {
                            return Promise.resolve(ar)
                        }
                    },
                    ai, V = class {
                        constructor(y, F = {}) {
                            Be(this, ai), _(this, ai, F == null ? void 0 : F.detail)
                        }
                        get detail() {
                            return B(this, ai)
                        }
                        initCustomEvent() {}
                    };
                ai = new WeakMap;

                function ce(y, F) {
                    return new ar
                }
                var Pe = {
                        document: {
                            createElement: ce
                        },
                        DocumentFragment,
                        customElements: dr,
                        CustomEvent: V,
                        EventTarget: Ir,
                        HTMLElement: ar,
                        HTMLVideoElement: nt
                    },
                    st = typeof window == "undefined" || typeof globalThis.customElements == "undefined",
                    ct = st ? Pe : globalThis,
                    Fe = st ? Pe.document : globalThis.document,
                    ht = we(56543),
                    Er = () => {
                        try {
                            return "0.25.0"
                        } catch (y) {}
                        return "UNKNOWN"
                    },
                    Xt = Er(),
                    W = () => Xt,
                    Zr = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting", "waitingforkey", "resize", "enterpictureinpicture", "leavepictureinpicture", "webkitbeginfullscreen", "webkitendfullscreen", "webkitpresentationmodechanged"],
                    br = ["autopictureinpicture", "disablepictureinpicture", "disableremoteplayback", "autoplay", "controls", "controlslist", "crossorigin", "loop", "muted", "playsinline", "poster", "preload", "src"];

                function ni(y) {
                    return `
    <style>
      :host {
        display: inline-flex;
        line-height: 0;
        flex-direction: column;
        justify-content: end;
      }

      audio {
        width: 100%;
      }
    </style>
    <slot name="media">
      <audio${oa(y)}></audio>
    </slot>
    <slot></slot>
  `
                }

                function Mi(y) {
                    return `
    <style>
      :host {
        display: inline-block;
        line-height: 0;
      }

      video {
        max-width: 100%;
        max-height: 100%;
        min-width: 100%;
        min-height: 100%;
        object-fit: var(--media-object-fit, contain);
        object-position: var(--media-object-position, 50% 50%);
      }

      video::-webkit-media-text-track-container {
        transform: var(--media-webkit-text-track-transform);
        transition: var(--media-webkit-text-track-transition);
      }
    </style>
    <slot name="media">
      <video${oa(y)}></video>
    </slot>
    <slot></slot>
  `
                }

                function si(y, {
                    tag: F,
                    is: z
                }) {
                    var be, pt, Gt, pr, nr, Zt, wi, qi, _t, Qt, yr, gi, $i, dn, ua, da, ga;
                    let ji = (pt = (be = globalThis.document) == null ? void 0 : be.createElement) == null ? void 0 : pt.call(be, F, {
                            is: z
                        }),
                        ys = ji ? ti(ji) : [];
                    return Gt = class extends y {
                        constructor() {
                            super(...arguments), Be(this, yr), Be(this, wi, !1), Be(this, qi, null), Be(this, _t, new Map), Be(this, Qt), fe(this, "get"), fe(this, "set"), fe(this, "call")
                        }
                        static get observedAttributes() {
                            var Jt, Dr, Ai;
                            return Ve(Jt = Gt, nr, Zt).call(Jt), [...(Ai = (Dr = ji == null ? void 0 : ji.constructor) == null ? void 0 : Dr.observedAttributes) != null ? Ai : [], ...br]
                        }
                        get nativeEl() {
                            var Jt, Dr, Ai, $r, _i;
                            return Ve(this, yr, gi).call(this), (_i = ($r = (Dr = (Jt = B(this, qi)) != null ? Jt : this.querySelector(":scope > [slot=media]")) != null ? Dr : this.querySelector(F)) != null ? $r : (Ai = this.shadowRoot) == null ? void 0 : Ai.querySelector(F)) != null ? _i : null
                        }
                        set nativeEl(Jt) {
                            _(this, qi, Jt)
                        }
                        get defaultMuted() {
                            return this.hasAttribute("muted")
                        }
                        set defaultMuted(Jt) {
                            this.toggleAttribute("muted", Jt)
                        }
                        get src() {
                            return this.getAttribute("src")
                        }
                        set src(Jt) {
                            this.setAttribute("src", `${Jt}`)
                        }
                        get preload() {
                            var Jt, Dr;
                            return (Dr = this.getAttribute("preload")) != null ? Dr : (Jt = this.nativeEl) == null ? void 0 : Jt.preload
                        }
                        set preload(Jt) {
                            this.setAttribute("preload", `${Jt}`)
                        }
                        init() {
                            var Jt;
                            if (!this.shadowRoot) {
                                this.attachShadow({
                                    mode: "open"
                                });
                                let Dr = Wr(this.attributes);
                                z && (Dr.is = z), F && (Dr.part = F), this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(Dr)
                            }
                            this.nativeEl.muted = this.hasAttribute("muted");
                            for (let Dr of ys) Ve(this, yr, da).call(this, Dr);
                            _(this, Qt, new MutationObserver(Ve(this, yr, dn).bind(this))), this.shadowRoot.addEventListener("slotchange", this), Ve(this, yr, $i).call(this);
                            for (let Dr of this.constructor.Events)(Jt = this.shadowRoot) == null || Jt.addEventListener(Dr, this, !0)
                        }
                        handleEvent(Jt) {
                            if (Jt.type === "slotchange") {
                                Ve(this, yr, $i).call(this);
                                return
                            }
                            Jt.target === this.nativeEl && this.dispatchEvent(new CustomEvent(Jt.type, {
                                detail: Jt.detail
                            }))
                        }
                        attributeChangedCallback(Jt, Dr, Ai) {
                            Ve(this, yr, gi).call(this), Ve(this, yr, ga).call(this, Jt, Dr, Ai)
                        }
                        connectedCallback() {
                            Ve(this, yr, gi).call(this)
                        }
                    }, pr = new WeakMap, nr = new WeakSet, Zt = function() {
                        if (B(this, pr)) return;
                        _(this, pr, !0);
                        let Jt = new Set(this.observedAttributes);
                        Jt.delete("muted");
                        for (let Dr of ys)
                            if (!(Dr in this.prototype))
                                if (typeof ji[Dr] == "function") this.prototype[Dr] = function(...Ai) {
                                    return Ve(this, yr, gi).call(this), (() => {
                                        var $r;
                                        if (this.call) return this.call(Dr, ...Ai);
                                        let _i = ($r = this.nativeEl) == null ? void 0 : $r[Dr];
                                        return _i == null ? void 0 : _i.apply(this.nativeEl, Ai)
                                    })()
                                };
                                else {
                                    let Ai = {
                                        get() {
                                            var $r, _i, ka;
                                            Ve(this, yr, gi).call(this);
                                            let $a = Dr.toLowerCase();
                                            if (Jt.has($a)) {
                                                let wn = this.getAttribute($a);
                                                return wn === null ? !1 : wn === "" ? !0 : wn
                                            }
                                            return (ka = ($r = this.get) == null ? void 0 : $r.call(this, Dr)) != null ? ka : (_i = this.nativeEl) == null ? void 0 : _i[Dr]
                                        }
                                    };
                                    Dr !== Dr.toUpperCase() && (Ai.set = function($r) {
                                        Ve(this, yr, gi).call(this);
                                        let _i = Dr.toLowerCase();
                                        if (Jt.has(_i)) {
                                            $r === !0 || $r === !1 || $r == null ? this.toggleAttribute(_i, !!$r) : this.setAttribute(_i, $r);
                                            return
                                        }
                                        if (this.set) {
                                            this.set(Dr, $r);
                                            return
                                        }
                                        this.nativeEl && (this.nativeEl[Dr] = $r)
                                    }), Object.defineProperty(this.prototype, Dr, Ai)
                                }
                    }, wi = new WeakMap, qi = new WeakMap, _t = new WeakMap, Qt = new WeakMap, yr = new WeakSet, gi = function() {
                        B(this, wi) || (_(this, wi, !0), this.init())
                    }, $i = function() {
                        var Jt;
                        let Dr = new Map(B(this, _t)),
                            Ai = (Jt = this.shadowRoot) == null ? void 0 : Jt.querySelector("slot:not([name])");
                        (Ai == null ? void 0 : Ai.assignedElements({
                            flatten: !0
                        }).filter($r => ["track", "source"].includes($r.localName))).forEach($r => {
                            var _i, ka;
                            Dr.delete($r);
                            let $a = B(this, _t).get($r);
                            $a || ($a = $r.cloneNode(), B(this, _t).set($r, $a), (_i = B(this, Qt)) == null || _i.observe($r, {
                                attributes: !0
                            })), (ka = this.nativeEl) == null || ka.append($a), Ve(this, yr, ua).call(this, $a)
                        }), Dr.forEach(($r, _i) => {
                            $r.remove(), B(this, _t).delete(_i)
                        })
                    }, dn = function(Jt) {
                        var Dr;
                        for (let Ai of Jt)
                            if (Ai.type === "attributes") {
                                let {
                                    target: $r,
                                    attributeName: _i
                                } = Ai, ka = B(this, _t).get($r);
                                ka && _i && (ka.setAttribute(_i, (Dr = $r.getAttribute(_i)) != null ? Dr : ""), Ve(this, yr, ua).call(this, ka))
                            }
                    }, ua = function(Jt) {
                        Jt && Jt.localName === "track" && Jt.default && (Jt.kind === "chapters" || Jt.kind === "metadata") && Jt.track.mode === "disabled" && (Jt.track.mode = "hidden")
                    }, da = function(Jt) {
                        if (Object.prototype.hasOwnProperty.call(this, Jt)) {
                            let Dr = this[Jt];
                            delete this[Jt], this[Jt] = Dr
                        }
                    }, ga = function(Jt, Dr, Ai) {
                        var $r, _i, ka;
                        ["id", "class"].includes(Jt) || !Gt.observedAttributes.includes(Jt) && this.constructor.observedAttributes.includes(Jt) || (Ai === null ? ($r = this.nativeEl) == null || $r.removeAttribute(Jt) : ((_i = this.nativeEl) == null ? void 0 : _i.getAttribute(Jt)) !== Ai && ((ka = this.nativeEl) == null || ka.setAttribute(Jt, Ai)))
                    }, Be(Gt, nr), fe(Gt, "getTemplateHTML", F.endsWith("audio") ? ni : Mi), fe(Gt, "shadowRootOptions", {
                        mode: "open"
                    }), fe(Gt, "Events", Zr), Be(Gt, pr, !1), Gt
                }

                function ti(y) {
                    let F = [];
                    for (let z = Object.getPrototypeOf(y); z && z !== HTMLElement.prototype; z = Object.getPrototypeOf(z)) {
                        let be = Object.getOwnPropertyNames(z);
                        F.push(...be)
                    }
                    return F
                }

                function oa(y) {
                    let F = "";
                    for (let z in y) {
                        if (!br.includes(z)) continue;
                        let be = y[z];
                        be === "" ? F += ` ${z}` : F += ` ${z}="${be}"`
                    }
                    return F
                }

                function Wr(y) {
                    let F = {};
                    for (let z of y) F[z.name] = z.value;
                    return F
                }
                var Cr, La = si((Cr = globalThis.HTMLElement) != null ? Cr : class {}, {
                        tag: "video"
                    }),
                    Gr, Kt = si((Gr = globalThis.HTMLElement) != null ? Gr : class {}, {
                        tag: "audio"
                    }),
                    ri = new WeakMap,
                    ki = class extends Error {},
                    aa = class extends Error {},
                    Tt = ["application/x-mpegURL", "application/vnd.apple.mpegurl", "audio/mpegurl"],
                    ie = globalThis.WeakRef ? class extends Set {
                        add(y) {
                            super.add(new WeakRef(y))
                        }
                        forEach(y) {
                            super.forEach(F => {
                                let z = F.deref();
                                z && y(z)
                            })
                        }
                    } : Set;

                function j(y) {
                    var F, z, be;
                    (z = (F = globalThis.chrome) == null ? void 0 : F.cast) != null && z.isAvailable ? (be = globalThis.cast) != null && be.framework ? y() : customElements.whenDefined("google-cast-button").then(y) : globalThis.__onGCastApiAvailable = () => {
                        customElements.whenDefined("google-cast-button").then(y)
                    }
                }

                function Z() {
                    return globalThis.chrome
                }

                function ne() {
                    var y;
                    let F = "https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1";
                    if ((y = globalThis.chrome) != null && y.cast || document.querySelector(`script[src="${F}"]`)) return;
                    let z = document.createElement("script");
                    z.src = F, document.head.append(z)
                }

                function pe() {
                    var y, F;
                    return (F = (y = globalThis.cast) == null ? void 0 : y.framework) == null ? void 0 : F.CastContext.getInstance()
                }

                function De() {
                    var y;
                    return (y = pe()) == null ? void 0 : y.getCurrentSession()
                }

                function ze() {
                    var y;
                    return (y = De()) == null ? void 0 : y.getSessionObj().media[0]
                }

                function ft(y) {
                    return new Promise((F, z) => {
                        ze().editTracksInfo(y, F, z)
                    })
                }

                function gt(y) {
                    return new Promise((F, z) => {
                        ze().getStatus(y, F, z)
                    })
                }

                function qe(y) {
                    return pe().setOptions(le(le({}, wr()), y))
                }

                function wr() {
                    return {
                        receiverApplicationId: "CC1AD845",
                        autoJoinPolicy: "origin_scoped",
                        androidReceiverCompatible: !1,
                        language: "en-US",
                        resumeSavedSession: !0
                    }
                }

                function kr(y) {
                    if (!y) return;
                    let F = /\.([a-zA-Z0-9]+)(?:\?.*)?$/,
                        z = y.match(F);
                    return z ? z[1] : null
                }

                function Ar(y) {
                    let F = y.split(`
`),
                        z = [];
                    for (let be = 0; be < F.length; be++)
                        if (F[be].trim().startsWith("#EXT-X-STREAM-INF")) {
                            let pt = F[be + 1] ? F[be + 1].trim() : "";
                            pt && !pt.startsWith("#") && z.push(pt)
                        }
                    return z
                }

                function $t(y) {
                    return y.split(`
`).find(F => !F.trim().startsWith("#") && F.trim() !== "")
                }

                function hr(y) {
                    return K(this, null, function*() {
                        try {
                            let F = (yield fetch(y, {
                                method: "HEAD"
                            })).headers.get("Content-Type");
                            return Tt.some(z => F === z)
                        } catch (F) {
                            return console.error("Error while trying to get the Content-Type of the manifest", F), !1
                        }
                    })
                }

                function Gi(y) {
                    return K(this, null, function*() {
                        try {
                            let F = yield(yield fetch(y)).text(), z = F, be = Ar(F);
                            if (be.length > 0) {
                                let Gt = new URL(be[0], y).toString();
                                z = yield(yield fetch(Gt)).text()
                            }
                            let pt = $t(z);
                            return kr(pt)
                        } catch (F) {
                            console.error("Error while trying to parse the manifest playlist", F);
                            return
                        }
                    })
                }
                var vt = new ie,
                    oi = new WeakSet,
                    Mt;
                j(() => {
                    var y, F, z, be;
                    if (!((F = (y = globalThis.chrome) == null ? void 0 : y.cast) != null && F.isAvailable)) {
                        console.debug("chrome.cast.isAvailable", (be = (z = globalThis.chrome) == null ? void 0 : z.cast) == null ? void 0 : be.isAvailable);
                        return
                    }
                    Mt || (Mt = cast.framework, pe().addEventListener(Mt.CastContextEventType.CAST_STATE_CHANGED, pt => {
                        vt.forEach(Gt => {
                            var pr, nr;
                            return (nr = (pr = ri.get(Gt)).onCastStateChanged) == null ? void 0 : nr.call(pr, pt)
                        })
                    }), pe().addEventListener(Mt.CastContextEventType.SESSION_STATE_CHANGED, pt => {
                        vt.forEach(Gt => {
                            var pr, nr;
                            return (nr = (pr = ri.get(Gt)).onSessionStateChanged) == null ? void 0 : nr.call(pr, pt)
                        })
                    }), vt.forEach(pt => {
                        var Gt, pr;
                        return (pr = (Gt = ri.get(pt)).init) == null ? void 0 : pr.call(Gt)
                    }))
                });
                var Ht = 0,
                    Ze, sr, mr, Lr, Yt, oe, Ut, yi, Ke, ge, Et, vr, tr, Tr, Vt, Si, Qi = class extends EventTarget {
                        constructor(y) {
                            super(), Be(this, Ke), Be(this, Ze), Be(this, sr), Be(this, mr), Be(this, Lr), Be(this, Yt, "disconnected"), Be(this, oe, !1), Be(this, Ut, new Set), Be(this, yi, new WeakMap), _(this, Ze, y), vt.add(this), ri.set(this, {
                                init: () => Ve(this, Ke, Tr).call(this),
                                onCastStateChanged: () => Ve(this, Ke, vr).call(this),
                                onSessionStateChanged: () => Ve(this, Ke, tr).call(this),
                                getCastPlayer: () => B(this, Ke, ge)
                            }), Ve(this, Ke, Tr).call(this)
                        }
                        get state() {
                            return B(this, Yt)
                        }
                        watchAvailability(y) {
                            return K(this, null, function*() {
                                if (B(this, Ze).disableRemotePlayback) throw new ki("disableRemotePlayback attribute is present.");
                                return B(this, yi).set(y, ++Ht), B(this, Ut).add(y), Ht
                            })
                        }
                        cancelWatchAvailability(y) {
                            return K(this, null, function*() {
                                if (B(this, Ze).disableRemotePlayback) throw new ki("disableRemotePlayback attribute is present.");
                                y ? B(this, Ut).delete(y) : B(this, Ut).clear()
                            })
                        }
                        prompt() {
                            return K(this, null, function*() {
                                var y, F, z, be;
                                if (B(this, Ze).disableRemotePlayback) throw new ki("disableRemotePlayback attribute is present.");
                                if (!((F = (y = globalThis.chrome) == null ? void 0 : y.cast) != null && F.isAvailable)) throw new aa("The RemotePlayback API is disabled on this platform.");
                                let pt = oi.has(B(this, Ze));
                                oi.add(B(this, Ze)), qe(B(this, Ze).castOptions), Object.entries(B(this, Lr)).forEach(([Gt, pr]) => {
                                    B(this, mr).controller.addEventListener(Gt, pr)
                                });
                                try {
                                    yield pe().requestSession()
                                } catch (Gt) {
                                    if (Gt === "cancel") {
                                        pt || oi.delete(B(this, Ze));
                                        return
                                    }
                                    throw new Error(Gt)
                                }(be = (z = ri.get(B(this, Ze))) == null ? void 0 : z.loadOnPrompt) == null || be.call(z)
                            })
                        }
                    };
                Ze = new WeakMap, sr = new WeakMap, mr = new WeakMap, Lr = new WeakMap, Yt = new WeakMap, oe = new WeakMap, Ut = new WeakMap, yi = new WeakMap, Ke = new WeakSet, ge = function() {
                    if (oi.has(B(this, Ze))) return B(this, mr)
                }, Et = function() {
                    oi.has(B(this, Ze)) && (Object.entries(B(this, Lr)).forEach(([y, F]) => {
                        B(this, mr).controller.removeEventListener(y, F)
                    }), oi.delete(B(this, Ze)), B(this, Ze).muted = B(this, mr).isMuted, B(this, Ze).currentTime = B(this, mr).savedPlayerState.currentTime, B(this, mr).savedPlayerState.isPaused === !1 && B(this, Ze).play())
                }, vr = function() {
                    let y = pe().getCastState();
                    if (oi.has(B(this, Ze)) && y === "CONNECTING" && (_(this, Yt, "connecting"), this.dispatchEvent(new Event("connecting"))), !B(this, oe) && y != null && y.includes("CONNECT")) {
                        _(this, oe, !0);
                        for (let F of B(this, Ut)) F(!0)
                    } else if (B(this, oe) && (!y || y === "NO_DEVICES_AVAILABLE")) {
                        _(this, oe, !1);
                        for (let F of B(this, Ut)) F(!1)
                    }
                }, tr = function() {
                    return K(this, null, function*() {
                        var y;
                        let {
                            SESSION_RESUMED: F
                        } = Mt.SessionState;
                        if (pe().getSessionState() === F && B(this, Ze).castSrc === ((y = ze()) == null ? void 0 : y.media.contentId)) {
                            oi.add(B(this, Ze)), Object.entries(B(this, Lr)).forEach(([z, be]) => {
                                B(this, mr).controller.addEventListener(z, be)
                            });
                            try {
                                yield gt(new chrome.cast.media.GetStatusRequest)
                            } catch (z) {
                                console.error(z)
                            }
                            B(this, Lr)[Mt.RemotePlayerEventType.IS_PAUSED_CHANGED](), B(this, Lr)[Mt.RemotePlayerEventType.PLAYER_STATE_CHANGED]()
                        }
                    })
                }, Tr = function() {
                    !Mt || B(this, sr) || (_(this, sr, !0), qe(B(this, Ze).castOptions), B(this, Ze).textTracks.addEventListener("change", () => Ve(this, Ke, Si).call(this)), Ve(this, Ke, vr).call(this), _(this, mr, new Mt.RemotePlayer), new Mt.RemotePlayerController(B(this, mr)), _(this, Lr, {
                        [Mt.RemotePlayerEventType.IS_CONNECTED_CHANGED]: ({
                            value: y
                        }) => {
                            y === !0 ? (_(this, Yt, "connected"), this.dispatchEvent(new Event("connect"))) : (Ve(this, Ke, Et).call(this), _(this, Yt, "disconnected"), this.dispatchEvent(new Event("disconnect")))
                        },
                        [Mt.RemotePlayerEventType.DURATION_CHANGED]: () => {
                            B(this, Ze).dispatchEvent(new Event("durationchange"))
                        },
                        [Mt.RemotePlayerEventType.VOLUME_LEVEL_CHANGED]: () => {
                            B(this, Ze).dispatchEvent(new Event("volumechange"))
                        },
                        [Mt.RemotePlayerEventType.IS_MUTED_CHANGED]: () => {
                            B(this, Ze).dispatchEvent(new Event("volumechange"))
                        },
                        [Mt.RemotePlayerEventType.CURRENT_TIME_CHANGED]: () => {
                            var y;
                            (y = B(this, Ke, ge)) != null && y.isMediaLoaded && B(this, Ze).dispatchEvent(new Event("timeupdate"))
                        },
                        [Mt.RemotePlayerEventType.VIDEO_INFO_CHANGED]: () => {
                            B(this, Ze).dispatchEvent(new Event("resize"))
                        },
                        [Mt.RemotePlayerEventType.IS_PAUSED_CHANGED]: () => {
                            B(this, Ze).dispatchEvent(new Event(this.paused ? "pause" : "play"))
                        },
                        [Mt.RemotePlayerEventType.PLAYER_STATE_CHANGED]: () => {
                            var y, F;
                            ((y = B(this, Ke, ge)) == null ? void 0 : y.playerState) !== chrome.cast.media.PlayerState.PAUSED && B(this, Ze).dispatchEvent(new Event({
                                [chrome.cast.media.PlayerState.PLAYING]: "playing",
                                [chrome.cast.media.PlayerState.BUFFERING]: "waiting",
                                [chrome.cast.media.PlayerState.IDLE]: "emptied"
                            }[(F = B(this, Ke, ge)) == null ? void 0 : F.playerState]))
                        },
                        [Mt.RemotePlayerEventType.IS_MEDIA_LOADED_CHANGED]: () => K(this, null, function*() {
                            var y;
                            (y = B(this, Ke, ge)) != null && y.isMediaLoaded && (yield Promise.resolve(), Ve(this, Ke, Vt).call(this))
                        })
                    }))
                }, Vt = function() {
                    Ve(this, Ke, Si).call(this)
                }, Si = function() {
                    return K(this, null, function*() {
                        var y, F, z, be, pt;
                        if (!B(this, Ke, ge)) return;
                        let Gt = ((F = (y = B(this, mr).mediaInfo) == null ? void 0 : y.tracks) != null ? F : []).filter(({
                                type: Qt
                            }) => Qt === chrome.cast.media.TrackType.TEXT),
                            pr = [...B(this, Ze).textTracks].filter(({
                                kind: Qt
                            }) => Qt === "subtitles" || Qt === "captions"),
                            nr = Gt.map(({
                                language: Qt,
                                name: yr,
                                trackId: gi
                            }) => {
                                var $i;
                                let {
                                    mode: dn
                                } = ($i = pr.find(ua => ua.language === Qt && ua.label === yr)) != null ? $i : {};
                                return dn ? {
                                    mode: dn,
                                    trackId: gi
                                } : !1
                            }).filter(Boolean),
                            Zt = nr.filter(({
                                mode: Qt
                            }) => Qt !== "showing").map(({
                                trackId: Qt
                            }) => Qt),
                            wi = nr.find(({
                                mode: Qt
                            }) => Qt === "showing"),
                            qi = (pt = (be = (z = De()) == null ? void 0 : z.getSessionObj().media[0]) == null ? void 0 : be.activeTrackIds) != null ? pt : [],
                            _t = qi;
                        if (qi.length && (_t = _t.filter(Qt => !Zt.includes(Qt))), wi != null && wi.trackId && (_t = [..._t, wi.trackId]), _t = [...new Set(_t)], !((Qt, yr) => Qt.length === yr.length && Qt.every(gi => yr.includes(gi)))(qi, _t)) try {
                            let Qt = new chrome.cast.media.EditTracksInfoRequest(_t);
                            yield ft(Qt)
                        } catch (Qt) {
                            console.error(Qt)
                        }
                    })
                };
                var Ma = y => {
                        var F, z, be, pt, Gt, pr, nr, Zt, wi;
                        return z = class Zf extends y {
                            constructor() {
                                super(...arguments), Be(this, nr), Be(this, be, {
                                    paused: !1
                                }), Be(this, pt, wr()), Be(this, Gt), Be(this, pr)
                            }
                            get remote() {
                                return B(this, pr) ? B(this, pr) : Z() ? (this.disableRemotePlayback || ne(), ri.set(this, {
                                    loadOnPrompt: () => Ve(this, nr, wi).call(this)
                                }), _(this, pr, new Qi(this))) : super.remote
                            }
                            attributeChangedCallback(_t, Qt, yr) {
                                if (super.attributeChangedCallback(_t, Qt, yr), _t === "cast-receiver" && yr) {
                                    B(this, pt).receiverApplicationId = yr;
                                    return
                                }
                                if (B(this, nr, Zt)) switch (_t) {
                                    case "cast-stream-type":
                                    case "cast-src":
                                        this.load();
                                        break
                                }
                            }
                            load() {
                                return K(this, null, function*() {
                                    var _t, Qt;
                                    if (!B(this, nr, Zt)) return x(Zf.prototype, this, "load").call(this);
                                    let yr = new chrome.cast.media.MediaInfo(this.castSrc, this.castContentType);
                                    yr.customData = this.castCustomData;
                                    let gi = [...this.querySelectorAll("track")].filter(({
                                            kind: da,
                                            src: ga
                                        }) => ga && (da === "subtitles" || da === "captions")),
                                        $i = [],
                                        dn = 0;
                                    if (gi.length && (yr.tracks = gi.map(da => {
                                            let ga = ++dn;
                                            $i.length === 0 && da.track.mode === "showing" && $i.push(ga);
                                            let ji = new chrome.cast.media.Track(ga, chrome.cast.media.TrackType.TEXT);
                                            return ji.trackContentId = da.src, ji.trackContentType = "text/vtt", ji.subtype = da.kind === "captions" ? chrome.cast.media.TextTrackType.CAPTIONS : chrome.cast.media.TextTrackType.SUBTITLES, ji.name = da.label, ji.language = da.srclang, ji
                                        })), this.castStreamType === "live" ? yr.streamType = chrome.cast.media.StreamType.LIVE : yr.streamType = chrome.cast.media.StreamType.BUFFERED, yr.metadata = new chrome.cast.media.GenericMediaMetadata, yr.metadata.title = this.title, yr.metadata.images = [{
                                            url: this.poster
                                        }], hr(this.castSrc)) {
                                        let da = yield Gi(this.castSrc);
                                        (da != null && da.includes("m4s") || da != null && da.includes("mp4")) && (yr.hlsSegmentFormat = chrome.cast.media.HlsSegmentFormat.FMP4, yr.hlsVideoSegmentFormat = chrome.cast.media.HlsVideoSegmentFormat.FMP4)
                                    }
                                    let ua = new chrome.cast.media.LoadRequest(yr);
                                    ua.currentTime = (_t = x(Zf.prototype, this, "currentTime")) != null ? _t : 0, ua.autoplay = !B(this, be).paused, ua.activeTrackIds = $i, yield(Qt = De()) == null ? void 0 : Qt.loadMedia(ua), this.dispatchEvent(new Event("volumechange"))
                                })
                            }
                            play() {
                                var _t;
                                if (B(this, nr, Zt)) {
                                    B(this, nr, Zt).isPaused && ((_t = B(this, nr, Zt).controller) == null || _t.playOrPause());
                                    return
                                }
                                return super.play()
                            }
                            pause() {
                                var _t;
                                if (B(this, nr, Zt)) {
                                    B(this, nr, Zt).isPaused || (_t = B(this, nr, Zt).controller) == null || _t.playOrPause();
                                    return
                                }
                                super.pause()
                            }
                            get castOptions() {
                                return B(this, pt)
                            }
                            get castReceiver() {
                                var _t;
                                return (_t = this.getAttribute("cast-receiver")) != null ? _t : void 0
                            }
                            set castReceiver(_t) {
                                this.castReceiver != _t && this.setAttribute("cast-receiver", `${_t}`)
                            }
                            get castSrc() {
                                var _t, Qt, yr;
                                return (yr = (Qt = this.getAttribute("cast-src")) != null ? Qt : (_t = this.querySelector("source")) == null ? void 0 : _t.src) != null ? yr : this.currentSrc
                            }
                            set castSrc(_t) {
                                this.castSrc != _t && this.setAttribute("cast-src", `${_t}`)
                            }
                            get castContentType() {
                                var _t;
                                return (_t = this.getAttribute("cast-content-type")) != null ? _t : void 0
                            }
                            set castContentType(_t) {
                                this.setAttribute("cast-content-type", `${_t}`)
                            }
                            get castStreamType() {
                                var _t, Qt;
                                return (Qt = (_t = this.getAttribute("cast-stream-type")) != null ? _t : this.streamType) != null ? Qt : void 0
                            }
                            set castStreamType(_t) {
                                this.setAttribute("cast-stream-type", `${_t}`)
                            }
                            get castCustomData() {
                                return B(this, Gt)
                            }
                            set castCustomData(_t) {
                                let Qt = typeof _t;
                                if (!["object", "undefined"].includes(Qt)) {
                                    console.error(`castCustomData must be nullish or an object but value was of type ${Qt}`);
                                    return
                                }
                                _(this, Gt, _t)
                            }
                            get readyState() {
                                if (B(this, nr, Zt)) switch (B(this, nr, Zt).playerState) {
                                    case chrome.cast.media.PlayerState.IDLE:
                                        return 0;
                                    case chrome.cast.media.PlayerState.BUFFERING:
                                        return 2;
                                    default:
                                        return 3
                                }
                                return super.readyState
                            }
                            get paused() {
                                return B(this, nr, Zt) ? B(this, nr, Zt).isPaused : super.paused
                            }
                            get muted() {
                                var _t;
                                return B(this, nr, Zt) ? (_t = B(this, nr, Zt)) == null ? void 0 : _t.isMuted : super.muted
                            }
                            set muted(_t) {
                                var Qt;
                                if (B(this, nr, Zt)) {
                                    (_t && !B(this, nr, Zt).isMuted || !_t && B(this, nr, Zt).isMuted) && ((Qt = B(this, nr, Zt).controller) == null || Qt.muteOrUnmute());
                                    return
                                }
                                super.muted = _t
                            }
                            get volume() {
                                var _t, Qt;
                                return B(this, nr, Zt) ? (Qt = (_t = B(this, nr, Zt)) == null ? void 0 : _t.volumeLevel) != null ? Qt : 1 : super.volume
                            }
                            set volume(_t) {
                                var Qt;
                                if (B(this, nr, Zt)) {
                                    B(this, nr, Zt).volumeLevel = +_t, (Qt = B(this, nr, Zt).controller) == null || Qt.setVolumeLevel();
                                    return
                                }
                                super.volume = _t
                            }
                            get duration() {
                                var _t, Qt, yr;
                                return B(this, nr, Zt) && (_t = B(this, nr, Zt)) != null && _t.isMediaLoaded ? (yr = (Qt = B(this, nr, Zt)) == null ? void 0 : Qt.duration) != null ? yr : NaN : super.duration
                            }
                            get currentTime() {
                                var _t, Qt, yr;
                                return B(this, nr, Zt) && (_t = B(this, nr, Zt)) != null && _t.isMediaLoaded ? (yr = (Qt = B(this, nr, Zt)) == null ? void 0 : Qt.currentTime) != null ? yr : 0 : super.currentTime
                            }
                            set currentTime(_t) {
                                var Qt;
                                if (B(this, nr, Zt)) {
                                    B(this, nr, Zt).currentTime = _t, (Qt = B(this, nr, Zt).controller) == null || Qt.seek();
                                    return
                                }
                                super.currentTime = _t
                            }
                        }, be = new WeakMap, pt = new WeakMap, Gt = new WeakMap, pr = new WeakMap, nr = new WeakSet, Zt = function() {
                            var qi, _t;
                            return (_t = (qi = ri.get(this.remote)) == null ? void 0 : qi.getCastPlayer) == null ? void 0 : _t.call(qi)
                        }, wi = function() {
                            return K(this, null, function*() {
                                B(this, be).paused = de(z.prototype, this, "paused"), de(z.prototype, this, "pause").call(this), this.muted = de(z.prototype, this, "muted");
                                try {
                                    yield this.load()
                                } catch (qi) {
                                    console.error(qi)
                                }
                            })
                        }, fe(z, "observedAttributes", [...(F = y.observedAttributes) != null ? F : [], "cast-src", "cast-content-type", "cast-stream-type", "cast-receiver"]), z
                    },
                    Ti = class extends Event {
                        constructor(y, F) {
                            super(y), fe(this, "track"), this.track = F.track
                        }
                    },
                    Ri = new WeakMap;

                function Lt(y) {
                    var F;
                    return (F = Ri.get(y)) != null ? F : _n(y, {})
                }

                function _n(y, F) {
                    let z = Ri.get(y);
                    return z || Ri.set(y, z = {}), Object.assign(z, F)
                }

                function Qa(y, F) {
                    let z = y.videoTracks;
                    Lt(F).media = y, Lt(F).renditionSet || (Lt(F).renditionSet = new Set);
                    let be = Lt(z).trackSet;
                    be.add(F);
                    let pt = be.size - 1;
                    pt in Vr.prototype || Object.defineProperty(Vr.prototype, pt, {
                        get() {
                            return [...Lt(this).trackSet][pt]
                        }
                    }), queueMicrotask(() => {
                        z.dispatchEvent(new Ti("addtrack", {
                            track: F
                        }))
                    })
                }

                function Hn(y) {
                    var F;
                    let z = (F = Lt(y).media) == null ? void 0 : F.videoTracks;
                    z && (Lt(z).trackSet.delete(y), queueMicrotask(() => {
                        z.dispatchEvent(new Ti("removetrack", {
                            track: y
                        }))
                    }))
                }

                function Pi(y) {
                    var F;
                    let z = (F = Lt(y).media.videoTracks) != null ? F : [],
                        be = !1;
                    for (let pt of z) pt !== y && (pt.selected = !1, be = !0);
                    if (be) {
                        if (Lt(z).changeRequested) return;
                        Lt(z).changeRequested = !0, queueMicrotask(() => {
                            delete Lt(z).changeRequested, z.dispatchEvent(new Event("change"))
                        })
                    }
                }
                var ln, Ja, Qr, Nr, xr, Vr = class extends EventTarget {
                    constructor() {
                        super(), Be(this, Nr), Be(this, ln), Be(this, Ja), Be(this, Qr), Lt(this).trackSet = new Set
                    }[Symbol.iterator]() {
                        return B(this, Nr, xr).values()
                    }
                    get length() {
                        return B(this, Nr, xr).size
                    }
                    getTrackById(y) {
                        var F;
                        return (F = [...B(this, Nr, xr)].find(z => z.id === y)) != null ? F : null
                    }
                    get selectedIndex() {
                        return [...B(this, Nr, xr)].findIndex(y => y.selected)
                    }
                    get onaddtrack() {
                        return B(this, ln)
                    }
                    set onaddtrack(y) {
                        B(this, ln) && (this.removeEventListener("addtrack", B(this, ln)), _(this, ln, void 0)), typeof y == "function" && (_(this, ln, y), this.addEventListener("addtrack", y))
                    }
                    get onremovetrack() {
                        return B(this, Ja)
                    }
                    set onremovetrack(y) {
                        B(this, Ja) && (this.removeEventListener("removetrack", B(this, Ja)), _(this, Ja, void 0)), typeof y == "function" && (_(this, Ja, y), this.addEventListener("removetrack", y))
                    }
                    get onchange() {
                        return B(this, Qr)
                    }
                    set onchange(y) {
                        B(this, Qr) && (this.removeEventListener("change", B(this, Qr)), _(this, Qr, void 0)), typeof y == "function" && (_(this, Qr, y), this.addEventListener("change", y))
                    }
                };
                ln = new WeakMap, Ja = new WeakMap, Qr = new WeakMap, Nr = new WeakSet, xr = function() {
                    return Lt(this).trackSet
                };
                var li = class extends Event {
                    constructor(y, F) {
                        super(y), fe(this, "rendition"), this.rendition = F.rendition
                    }
                };

                function mi(y, F) {
                    let z = Lt(y).media.videoRenditions;
                    Lt(F).media = Lt(y).media, Lt(F).track = y;
                    let be = Lt(y).renditionSet;
                    be.add(F);
                    let pt = be.size - 1;
                    pt in un.prototype || Object.defineProperty(un.prototype, pt, {
                        get() {
                            return la(this)[pt]
                        }
                    }), queueMicrotask(() => {
                        y.selected && z.dispatchEvent(new li("addrendition", {
                            rendition: F
                        }))
                    })
                }

                function Vn(y) {
                    let F = Lt(y).media.videoRenditions,
                        z = Lt(y).track;
                    Lt(z).renditionSet.delete(y), queueMicrotask(() => {
                        Lt(y).track.selected && F.dispatchEvent(new li("removerendition", {
                            rendition: y
                        }))
                    })
                }

                function vi(y) {
                    let F = Lt(y).media.videoRenditions;
                    !F || Lt(F).changeRequested || (Lt(F).changeRequested = !0, queueMicrotask(() => {
                        delete Lt(F).changeRequested, Lt(y).track.selected && F.dispatchEvent(new Event("change"))
                    }))
                }

                function la(y) {
                    return [...Lt(y).media.videoTracks].filter(F => F.selected).flatMap(F => [...Lt(F).renditionSet])
                }
                var Ia, Oi, Ki, un = class extends EventTarget {
                    constructor() {
                        super(...arguments), Be(this, Ia), Be(this, Oi), Be(this, Ki)
                    }[Symbol.iterator]() {
                        return la(this).values()
                    }
                    get length() {
                        return la(this).length
                    }
                    getRenditionById(y) {
                        var F;
                        return (F = la(this).find(z => `${z.id}` == `${y}`)) != null ? F : null
                    }
                    get selectedIndex() {
                        return la(this).findIndex(y => y.selected)
                    }
                    set selectedIndex(y) {
                        for (let [F, z] of la(this).entries()) z.selected = F === y
                    }
                    get onaddrendition() {
                        return B(this, Ia)
                    }
                    set onaddrendition(y) {
                        B(this, Ia) && (this.removeEventListener("addrendition", B(this, Ia)), _(this, Ia, void 0)), typeof y == "function" && (_(this, Ia, y), this.addEventListener("addrendition", y))
                    }
                    get onremoverendition() {
                        return B(this, Oi)
                    }
                    set onremoverendition(y) {
                        B(this, Oi) && (this.removeEventListener("removerendition", B(this, Oi)), _(this, Oi, void 0)), typeof y == "function" && (_(this, Oi, y), this.addEventListener("removerendition", y))
                    }
                    get onchange() {
                        return B(this, Ki)
                    }
                    set onchange(y) {
                        B(this, Ki) && (this.removeEventListener("change", B(this, Ki)), _(this, Ki, void 0)), typeof y == "function" && (_(this, Ki, y), this.addEventListener("change", y))
                    }
                };
                Ia = new WeakMap, Oi = new WeakMap, Ki = new WeakMap;
                var Ha, Sn = class {
                    constructor() {
                        fe(this, "src"), fe(this, "id"), fe(this, "width"), fe(this, "height"), fe(this, "bitrate"), fe(this, "frameRate"), fe(this, "codec"), Be(this, Ha, !1)
                    }
                    get selected() {
                        return B(this, Ha)
                    }
                    set selected(y) {
                        B(this, Ha) !== y && (_(this, Ha, y), vi(this))
                    }
                };
                Ha = new WeakMap;
                var Yi, xi = class {
                    constructor() {
                        fe(this, "id"), fe(this, "kind"), fe(this, "label", ""), fe(this, "language", ""), fe(this, "sourceBuffer"), Be(this, Yi, !1)
                    }
                    addRendition(y, F, z, be, pt, Gt) {
                        let pr = new Sn;
                        return pr.src = y, pr.width = F, pr.height = z, pr.frameRate = Gt, pr.bitrate = pt, pr.codec = be, mi(this, pr), pr
                    }
                    removeRendition(y) {
                        Vn(y)
                    }
                    get selected() {
                        return B(this, Yi)
                    }
                    set selected(y) {
                        B(this, Yi) !== y && (_(this, Yi, y), y === !0 && Pi(this))
                    }
                };
                Yi = new WeakMap;

                function Li(y, F) {
                    let z = Lt(y).media.audioRenditions;
                    Lt(F).media = Lt(y).media, Lt(F).track = y;
                    let be = Lt(y).renditionSet;
                    be.add(F);
                    let pt = be.size - 1;
                    pt in Sa.prototype || Object.defineProperty(Sa.prototype, pt, {
                        get() {
                            return Ji(this)[pt]
                        }
                    }), queueMicrotask(() => {
                        y.enabled && z.dispatchEvent(new li("addrendition", {
                            rendition: F
                        }))
                    })
                }

                function _a(y) {
                    let F = Lt(y).media.audioRenditions,
                        z = Lt(y).track;
                    Lt(z).renditionSet.delete(y), queueMicrotask(() => {
                        Lt(y).track.enabled && F.dispatchEvent(new li("removerendition", {
                            rendition: y
                        }))
                    })
                }

                function gn(y) {
                    let F = Lt(y).media.audioRenditions;
                    !F || Lt(F).changeRequested || (Lt(F).changeRequested = !0, queueMicrotask(() => {
                        delete Lt(F).changeRequested, Lt(y).track.enabled && F.dispatchEvent(new Event("change"))
                    }))
                }

                function Ji(y) {
                    return [...Lt(y).media.audioTracks].filter(F => F.enabled).flatMap(F => [...Lt(F).renditionSet])
                }
                var Ni, ea, ma, Sa = class extends EventTarget {
                    constructor() {
                        super(...arguments), Be(this, Ni), Be(this, ea), Be(this, ma)
                    }[Symbol.iterator]() {
                        return Ji(this).values()
                    }
                    get length() {
                        return Ji(this).length
                    }
                    getRenditionById(y) {
                        var F;
                        return (F = Ji(this).find(z => `${z.id}` == `${y}`)) != null ? F : null
                    }
                    get selectedIndex() {
                        return Ji(this).findIndex(y => y.selected)
                    }
                    set selectedIndex(y) {
                        for (let [F, z] of Ji(this).entries()) z.selected = F === y
                    }
                    get onaddrendition() {
                        return B(this, Ni)
                    }
                    set onaddrendition(y) {
                        B(this, Ni) && (this.removeEventListener("addrendition", B(this, Ni)), _(this, Ni, void 0)), typeof y == "function" && (_(this, Ni, y), this.addEventListener("addrendition", y))
                    }
                    get onremoverendition() {
                        return B(this, ea)
                    }
                    set onremoverendition(y) {
                        B(this, ea) && (this.removeEventListener("removerendition", B(this, ea)), _(this, ea, void 0)), typeof y == "function" && (_(this, ea, y), this.addEventListener("removerendition", y))
                    }
                    get onchange() {
                        return B(this, ma)
                    }
                    set onchange(y) {
                        B(this, ma) && (this.removeEventListener("change", B(this, ma)), _(this, ma, void 0)), typeof y == "function" && (_(this, ma, y), this.addEventListener("change", y))
                    }
                };
                Ni = new WeakMap, ea = new WeakMap, ma = new WeakMap;
                var Ca, en = class {
                    constructor() {
                        fe(this, "src"), fe(this, "id"), fe(this, "bitrate"), fe(this, "codec"), Be(this, Ca, !1)
                    }
                    get selected() {
                        return B(this, Ca)
                    }
                    set selected(y) {
                        B(this, Ca) !== y && (_(this, Ca, y), gn(this))
                    }
                };
                Ca = new WeakMap;

                function Pr(y, F) {
                    let z = y.audioTracks;
                    Lt(F).media = y, Lt(F).renditionSet || (Lt(F).renditionSet = new Set);
                    let be = Lt(z).trackSet;
                    be.add(F);
                    let pt = be.size - 1;
                    pt in tn.prototype || Object.defineProperty(tn.prototype, pt, {
                        get() {
                            return [...Lt(this).trackSet][pt]
                        }
                    }), queueMicrotask(() => {
                        z.dispatchEvent(new Ti("addtrack", {
                            track: F
                        }))
                    })
                }

                function qr(y) {
                    var F;
                    let z = (F = Lt(y).media) == null ? void 0 : F.audioTracks;
                    z && (Lt(z).trackSet.delete(y), queueMicrotask(() => {
                        z.dispatchEvent(new Ti("removetrack", {
                            track: y
                        }))
                    }))
                }

                function va(y) {
                    let F = Lt(y).media.audioTracks;
                    !F || Lt(F).changeRequested || (Lt(F).changeRequested = !0, queueMicrotask(() => {
                        delete Lt(F).changeRequested, F.dispatchEvent(new Event("change"))
                    }))
                }
                var Kr, ta, ra, Vi, Da, tn = class extends EventTarget {
                    constructor() {
                        super(), Be(this, Vi), Be(this, Kr), Be(this, ta), Be(this, ra), Lt(this).trackSet = new Set
                    }[Symbol.iterator]() {
                        return B(this, Vi, Da).values()
                    }
                    get length() {
                        return B(this, Vi, Da).size
                    }
                    getTrackById(y) {
                        var F;
                        return (F = [...B(this, Vi, Da)].find(z => z.id === y)) != null ? F : null
                    }
                    get onaddtrack() {
                        return B(this, Kr)
                    }
                    set onaddtrack(y) {
                        B(this, Kr) && (this.removeEventListener("addtrack", B(this, Kr)), _(this, Kr, void 0)), typeof y == "function" && (_(this, Kr, y), this.addEventListener("addtrack", y))
                    }
                    get onremovetrack() {
                        return B(this, ta)
                    }
                    set onremovetrack(y) {
                        B(this, ta) && (this.removeEventListener("removetrack", B(this, ta)), _(this, ta, void 0)), typeof y == "function" && (_(this, ta, y), this.addEventListener("removetrack", y))
                    }
                    get onchange() {
                        return B(this, ra)
                    }
                    set onchange(y) {
                        B(this, ra) && (this.removeEventListener("change", B(this, ra)), _(this, ra, void 0)), typeof y == "function" && (_(this, ra, y), this.addEventListener("change", y))
                    }
                };
                Kr = new WeakMap, ta = new WeakMap, ra = new WeakMap, Vi = new WeakSet, Da = function() {
                    return Lt(this).trackSet
                };
                var ia, Pa = class {
                    constructor() {
                        fe(this, "id"), fe(this, "kind"), fe(this, "label", ""), fe(this, "language", ""), fe(this, "sourceBuffer"), Be(this, ia, !1)
                    }
                    addRendition(y, F, z) {
                        let be = new en;
                        return be.src = y, be.codec = F, be.bitrate = z, Li(this, be), be
                    }
                    removeRendition(y) {
                        _a(y)
                    }
                    get enabled() {
                        return B(this, ia)
                    }
                    set enabled(y) {
                        B(this, ia) !== y && (_(this, ia, y), va(this))
                    }
                };
                ia = new WeakMap;
                var or = pa(globalThis.HTMLMediaElement, "video"),
                    qa = pa(globalThis.HTMLMediaElement, "audio");

                function En(y) {
                    if (!(y != null && y.prototype)) return y;
                    let F = pa(y, "video");
                    (!F || `${F}`.includes("[native code]")) && Object.defineProperty(y.prototype, "videoTracks", {
                        get() {
                            return Va(this)
                        }
                    });
                    let z = pa(y, "audio");
                    (!z || `${z}`.includes("[native code]")) && Object.defineProperty(y.prototype, "audioTracks", {
                        get() {
                            return kn(this)
                        }
                    }), "addVideoTrack" in y.prototype || (y.prototype.addVideoTrack = function(Gt, pr = "", nr = "") {
                        let Zt = new xi;
                        return Zt.kind = Gt, Zt.label = pr, Zt.language = nr, Qa(this, Zt), Zt
                    }), "removeVideoTrack" in y.prototype || (y.prototype.removeVideoTrack = Hn), "addAudioTrack" in y.prototype || (y.prototype.addAudioTrack = function(Gt, pr = "", nr = "") {
                        let Zt = new Pa;
                        return Zt.kind = Gt, Zt.label = pr, Zt.language = nr, Pr(this, Zt), Zt
                    }), "removeAudioTrack" in y.prototype || (y.prototype.removeAudioTrack = qr), "videoRenditions" in y.prototype || Object.defineProperty(y.prototype, "videoRenditions", {
                        get() {
                            return be(this)
                        }
                    });
                    let be = Gt => {
                        let pr = Lt(Gt).videoRenditions;
                        return pr || (pr = new un, Lt(pr).media = Gt, Lt(Gt).videoRenditions = pr), pr
                    };
                    "audioRenditions" in y.prototype || Object.defineProperty(y.prototype, "audioRenditions", {
                        get() {
                            return pt(this)
                        }
                    });
                    let pt = Gt => {
                        let pr = Lt(Gt).audioRenditions;
                        return pr || (pr = new Sa, Lt(pr).media = Gt, Lt(Gt).audioRenditions = pr), pr
                    };
                    return y
                }

                function pa(y, F) {
                    var z;
                    if (y != null && y.prototype) return (z = Object.getOwnPropertyDescriptor(y.prototype, `${F}Tracks`)) == null ? void 0 : z.get
                }

                function Va(y) {
                    var F;
                    let z = Lt(y).videoTracks;
                    if (!z && (z = new Vr, Lt(y).videoTracks = z, or)) {
                        let be = or.call((F = y.nativeEl) != null ? F : y);
                        for (let pt of be) Qa(y, pt);
                        be.addEventListener("change", () => {
                            z.dispatchEvent(new Event("change"))
                        }), be.addEventListener("addtrack", pt => {
                            if ([...z].some(Gt => Gt instanceof xi)) {
                                for (let Gt of be) Hn(Gt);
                                return
                            }
                            Qa(y, pt.track)
                        }), be.addEventListener("removetrack", pt => {
                            Hn(pt.track)
                        })
                    }
                    return z
                }

                function kn(y) {
                    var F;
                    let z = Lt(y).audioTracks;
                    if (!z && (z = new tn, Lt(y).audioTracks = z, qa)) {
                        let be = qa.call((F = y.nativeEl) != null ? F : y);
                        for (let pt of be) Pr(y, pt);
                        be.addEventListener("change", () => {
                            z.dispatchEvent(new Event("change"))
                        }), be.addEventListener("addtrack", pt => {
                            if ([...z].some(Gt => Gt instanceof Pa)) {
                                for (let Gt of be) qr(Gt);
                                return
                            }
                            Pr(y, pt.track)
                        }), be.addEventListener("removetrack", pt => {
                            qr(pt.track)
                        })
                    }
                    return z
                }
                var Zn = `
<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" class="logo" part="logo" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2" viewBox="0 0 1600 500"><g fill="#fff"><path d="M994.287 93.486c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m0-93.486c-34.509 0-62.484 27.976-62.484 62.486v187.511c0 68.943-56.09 125.033-125.032 125.033s-125.03-56.09-125.03-125.033V62.486C681.741 27.976 653.765 0 619.256 0s-62.484 27.976-62.484 62.486v187.511C556.772 387.85 668.921 500 806.771 500c137.851 0 250.001-112.15 250.001-250.003V62.486c0-34.51-27.976-62.486-62.485-62.486M1537.51 468.511c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31m-275.883-218.509-143.33 143.329c-24.402 24.402-24.402 63.966 0 88.368 24.402 24.402 63.967 24.402 88.369 0l143.33-143.329 143.328 143.329c24.402 24.4 63.967 24.402 88.369 0 24.403-24.402 24.403-63.966.001-88.368l-143.33-143.329.001-.004 143.329-143.329c24.402-24.402 24.402-63.965 0-88.367s-63.967-24.402-88.369 0L1349.996 161.63 1206.667 18.302c-24.402-24.401-63.967-24.402-88.369 0s-24.402 63.965 0 88.367l143.329 143.329v.004ZM437.511 468.521c-17.121 0-31-13.879-31-31 0-17.121 13.879-31 31-31 17.121 0 31 13.879 31 31 0 17.121-13.879 31-31 31M461.426 4.759C438.078-4.913 411.2.432 393.33 18.303L249.999 161.632 106.669 18.303C88.798.432 61.922-4.913 38.573 4.759 15.224 14.43-.001 37.214-.001 62.488v375.026c0 34.51 27.977 62.486 62.487 62.486 34.51 0 62.486-27.976 62.486-62.486V213.341l80.843 80.844c24.404 24.402 63.965 24.402 88.369 0l80.843-80.844v224.173c0 34.51 27.976 62.486 62.486 62.486s62.486-27.976 62.486-62.486V62.488c0-25.274-15.224-48.058-38.573-57.729" style="fill-rule:nonzero"/></g></svg>`;
                Zr.push("castchange", "entercast", "leavecast");
                var lt = {
                        BEACON_COLLECTION_DOMAIN: "beacon-collection-domain",
                        CUSTOM_DOMAIN: "custom-domain",
                        DEBUG: "debug",
                        DISABLE_TRACKING: "disable-tracking",
                        DISABLE_COOKIES: "disable-cookies",
                        DRM_TOKEN: "drm-token",
                        PLAYBACK_TOKEN: "playback-token",
                        ENV_KEY: "env-key",
                        MAX_RESOLUTION: "max-resolution",
                        MIN_RESOLUTION: "min-resolution",
                        RENDITION_ORDER: "rendition-order",
                        PROGRAM_START_TIME: "program-start-time",
                        PROGRAM_END_TIME: "program-end-time",
                        ASSET_START_TIME: "asset-start-time",
                        ASSET_END_TIME: "asset-end-time",
                        METADATA_URL: "metadata-url",
                        PLAYBACK_ID: "playback-id",
                        PLAYER_SOFTWARE_NAME: "player-software-name",
                        PLAYER_SOFTWARE_VERSION: "player-software-version",
                        PLAYER_INIT_TIME: "player-init-time",
                        PREFER_CMCD: "prefer-cmcd",
                        PREFER_PLAYBACK: "prefer-playback",
                        START_TIME: "start-time",
                        STREAM_TYPE: "stream-type",
                        TARGET_LIVE_WINDOW: "target-live-window",
                        LIVE_EDGE_OFFSET: "live-edge-offset",
                        TYPE: "type",
                        LOGO: "logo"
                    },
                    Oa = Object.values(lt),
                    rn = W(),
                    di = "mux-video",
                    D, C, H, re, se, Ce, He, Qe, ke, We, Xe, Ot = class extends La {
                        constructor() {
                            super(), Be(this, We), Be(this, D), Be(this, C), Be(this, H), Be(this, re, {}), Be(this, se, {}), Be(this, Ce), Be(this, He), Be(this, Qe), Be(this, ke), _(this, H, (0, ht.generatePlayerInitTime)())
                        }
                        static get NAME() {
                            return di
                        }
                        static get VERSION() {
                            return rn
                        }
                        static get observedAttributes() {
                            var y;
                            return [...Oa, ...(y = La.observedAttributes) != null ? y : []]
                        }
                        static getTemplateHTML(y = {}) {
                            let F = super.getTemplateHTML(y),
                                z = y.logo !== "false" && y.logo !== void 0,
                                be = y.logo && y.logo !== "",
                                pt = y.logo,
                                Gt = z ? `
      <style>
        :host {
          position: relative;
        }
        :host slot[name="logo"] {
          display: flex;
          justify-content: end;
          position: absolute;
          top: 1rem;
          right: 1rem;

        }
         :host slot[name="logo"] .logo{
          width: 5rem;
          pointer-events: none;
          user-select: none;
         }
      </style>
      <slot name="logo">
        ${be?`<img class="logo" part="logo" src="${pt}" />`:Zn}
      </slot>
    ` : "";
                            return `
      ${F}
      ${Gt}
    `
                        }
                        get preferCmcd() {
                            var y;
                            return (y = this.getAttribute(lt.PREFER_CMCD)) != null ? y : void 0
                        }
                        set preferCmcd(y) {
                            y !== this.preferCmcd && (y ? ht.CmcdTypeValues.includes(y) ? this.setAttribute(lt.PREFER_CMCD, y) : console.warn(`Invalid value for preferCmcd. Must be one of ${ht.CmcdTypeValues.join()}`) : this.removeAttribute(lt.PREFER_CMCD))
                        }
                        get playerInitTime() {
                            return this.hasAttribute(lt.PLAYER_INIT_TIME) ? +this.getAttribute(lt.PLAYER_INIT_TIME) : B(this, H)
                        }
                        set playerInitTime(y) {
                            y != this.playerInitTime && (y == null ? this.removeAttribute(lt.PLAYER_INIT_TIME) : this.setAttribute(lt.PLAYER_INIT_TIME, `${+y}`))
                        }
                        get playerSoftwareName() {
                            var y;
                            return (y = B(this, Qe)) != null ? y : di
                        }
                        set playerSoftwareName(y) {
                            _(this, Qe, y)
                        }
                        get playerSoftwareVersion() {
                            var y;
                            return (y = B(this, He)) != null ? y : rn
                        }
                        set playerSoftwareVersion(y) {
                            _(this, He, y)
                        }
                        get _hls() {
                            var y;
                            return (y = B(this, D)) == null ? void 0 : y.engine
                        }
                        get mux() {
                            var y;
                            return (y = this.nativeEl) == null ? void 0 : y.mux
                        }
                        get error() {
                            var y;
                            return (y = (0, ht.getError)(this.nativeEl)) != null ? y : null
                        }
                        get errorTranslator() {
                            return B(this, ke)
                        }
                        set errorTranslator(y) {
                            _(this, ke, y)
                        }
                        get src() {
                            return this.getAttribute("src")
                        }
                        set src(y) {
                            y !== this.src && (y == null ? this.removeAttribute("src") : this.setAttribute("src", y))
                        }
                        get type() {
                            var y;
                            return (y = this.getAttribute(lt.TYPE)) != null ? y : void 0
                        }
                        set type(y) {
                            y !== this.type && (y ? this.setAttribute(lt.TYPE, y) : this.removeAttribute(lt.TYPE))
                        }
                        get autoplay() {
                            let y = this.getAttribute("autoplay");
                            return y === null ? !1 : y === "" ? !0 : y
                        }
                        set autoplay(y) {
                            let F = this.autoplay;
                            y !== F && (y ? this.setAttribute("autoplay", typeof y == "string" ? y : "") : this.removeAttribute("autoplay"))
                        }
                        get preload() {
                            let y = this.getAttribute("preload");
                            return y === "" ? "auto" : ["none", "metadata", "auto"].includes(y) ? y : super.preload
                        }
                        set preload(y) {
                            y != this.getAttribute("preload") && (["", "none", "metadata", "auto"].includes(y) ? this.setAttribute("preload", y) : this.removeAttribute("preload"))
                        }
                        get debug() {
                            return this.getAttribute(lt.DEBUG) != null
                        }
                        set debug(y) {
                            y !== this.debug && (y ? this.setAttribute(lt.DEBUG, "") : this.removeAttribute(lt.DEBUG))
                        }
                        get disableTracking() {
                            return this.hasAttribute(lt.DISABLE_TRACKING)
                        }
                        set disableTracking(y) {
                            y !== this.disableTracking && this.toggleAttribute(lt.DISABLE_TRACKING, !!y)
                        }
                        get disableCookies() {
                            return this.hasAttribute(lt.DISABLE_COOKIES)
                        }
                        set disableCookies(y) {
                            y !== this.disableCookies && (y ? this.setAttribute(lt.DISABLE_COOKIES, "") : this.removeAttribute(lt.DISABLE_COOKIES))
                        }
                        get startTime() {
                            let y = this.getAttribute(lt.START_TIME);
                            if (y == null) return;
                            let F = +y;
                            return Number.isNaN(F) ? void 0 : F
                        }
                        set startTime(y) {
                            y !== this.startTime && (y == null ? this.removeAttribute(lt.START_TIME) : this.setAttribute(lt.START_TIME, `${y}`))
                        }
                        get playbackId() {
                            var y;
                            return this.hasAttribute(lt.PLAYBACK_ID) ? this.getAttribute(lt.PLAYBACK_ID) : (y = (0, ht.toPlaybackIdFromSrc)(this.src)) != null ? y : void 0
                        }
                        set playbackId(y) {
                            y !== this.playbackId && (y ? this.setAttribute(lt.PLAYBACK_ID, y) : this.removeAttribute(lt.PLAYBACK_ID))
                        }
                        get maxResolution() {
                            var y;
                            return (y = this.getAttribute(lt.MAX_RESOLUTION)) != null ? y : void 0
                        }
                        set maxResolution(y) {
                            y !== this.maxResolution && (y ? this.setAttribute(lt.MAX_RESOLUTION, y) : this.removeAttribute(lt.MAX_RESOLUTION))
                        }
                        get minResolution() {
                            var y;
                            return (y = this.getAttribute(lt.MIN_RESOLUTION)) != null ? y : void 0
                        }
                        set minResolution(y) {
                            y !== this.minResolution && (y ? this.setAttribute(lt.MIN_RESOLUTION, y) : this.removeAttribute(lt.MIN_RESOLUTION))
                        }
                        get renditionOrder() {
                            var y;
                            return (y = this.getAttribute(lt.RENDITION_ORDER)) != null ? y : void 0
                        }
                        set renditionOrder(y) {
                            y !== this.renditionOrder && (y ? this.setAttribute(lt.RENDITION_ORDER, y) : this.removeAttribute(lt.RENDITION_ORDER))
                        }
                        get programStartTime() {
                            let y = this.getAttribute(lt.PROGRAM_START_TIME);
                            if (y == null) return;
                            let F = +y;
                            return Number.isNaN(F) ? void 0 : F
                        }
                        set programStartTime(y) {
                            y == null ? this.removeAttribute(lt.PROGRAM_START_TIME) : this.setAttribute(lt.PROGRAM_START_TIME, `${y}`)
                        }
                        get programEndTime() {
                            let y = this.getAttribute(lt.PROGRAM_END_TIME);
                            if (y == null) return;
                            let F = +y;
                            return Number.isNaN(F) ? void 0 : F
                        }
                        set programEndTime(y) {
                            y == null ? this.removeAttribute(lt.PROGRAM_END_TIME) : this.setAttribute(lt.PROGRAM_END_TIME, `${y}`)
                        }
                        get assetStartTime() {
                            let y = this.getAttribute(lt.ASSET_START_TIME);
                            if (y == null) return;
                            let F = +y;
                            return Number.isNaN(F) ? void 0 : F
                        }
                        set assetStartTime(y) {
                            y == null ? this.removeAttribute(lt.ASSET_START_TIME) : this.setAttribute(lt.ASSET_START_TIME, `${y}`)
                        }
                        get assetEndTime() {
                            let y = this.getAttribute(lt.ASSET_END_TIME);
                            if (y == null) return;
                            let F = +y;
                            return Number.isNaN(F) ? void 0 : F
                        }
                        set assetEndTime(y) {
                            y == null ? this.removeAttribute(lt.ASSET_END_TIME) : this.setAttribute(lt.ASSET_END_TIME, `${y}`)
                        }
                        get customDomain() {
                            var y;
                            return (y = this.getAttribute(lt.CUSTOM_DOMAIN)) != null ? y : void 0
                        }
                        set customDomain(y) {
                            y !== this.customDomain && (y ? this.setAttribute(lt.CUSTOM_DOMAIN, y) : this.removeAttribute(lt.CUSTOM_DOMAIN))
                        }
                        get drmToken() {
                            var y;
                            return (y = this.getAttribute(lt.DRM_TOKEN)) != null ? y : void 0
                        }
                        set drmToken(y) {
                            y !== this.drmToken && (y ? this.setAttribute(lt.DRM_TOKEN, y) : this.removeAttribute(lt.DRM_TOKEN))
                        }
                        get playbackToken() {
                            var y, F, z, be;
                            if (this.hasAttribute(lt.PLAYBACK_TOKEN)) return (y = this.getAttribute(lt.PLAYBACK_TOKEN)) != null ? y : void 0;
                            if (this.hasAttribute(lt.PLAYBACK_ID)) {
                                let [, pt] = (0, ht.toPlaybackIdParts)((F = this.playbackId) != null ? F : "");
                                return (z = new URLSearchParams(pt).get("token")) != null ? z : void 0
                            }
                            if (this.src) return (be = new URLSearchParams(this.src).get("token")) != null ? be : void 0
                        }
                        set playbackToken(y) {
                            y !== this.playbackToken && (y ? this.setAttribute(lt.PLAYBACK_TOKEN, y) : this.removeAttribute(lt.PLAYBACK_TOKEN))
                        }
                        get tokens() {
                            let y = this.getAttribute(lt.PLAYBACK_TOKEN),
                                F = this.getAttribute(lt.DRM_TOKEN);
                            return le(le(le({}, B(this, se)), y != null ? {
                                playback: y
                            } : {}), F != null ? {
                                drm: F
                            } : {})
                        }
                        set tokens(y) {
                            _(this, se, y != null ? y : {})
                        }
                        get ended() {
                            return (0, ht.getEnded)(this.nativeEl, this._hls)
                        }
                        get envKey() {
                            var y;
                            return (y = this.getAttribute(lt.ENV_KEY)) != null ? y : void 0
                        }
                        set envKey(y) {
                            y !== this.envKey && (y ? this.setAttribute(lt.ENV_KEY, y) : this.removeAttribute(lt.ENV_KEY))
                        }
                        get beaconCollectionDomain() {
                            var y;
                            return (y = this.getAttribute(lt.BEACON_COLLECTION_DOMAIN)) != null ? y : void 0
                        }
                        set beaconCollectionDomain(y) {
                            y !== this.beaconCollectionDomain && (y ? this.setAttribute(lt.BEACON_COLLECTION_DOMAIN, y) : this.removeAttribute(lt.BEACON_COLLECTION_DOMAIN))
                        }
                        get streamType() {
                            var y;
                            return (y = this.getAttribute(lt.STREAM_TYPE)) != null ? y : (0, ht.getStreamType)(this.nativeEl)
                        }
                        set streamType(y) {
                            y !== this.streamType && (y ? this.setAttribute(lt.STREAM_TYPE, y) : this.removeAttribute(lt.STREAM_TYPE))
                        }
                        get targetLiveWindow() {
                            return this.hasAttribute(lt.TARGET_LIVE_WINDOW) ? +this.getAttribute(lt.TARGET_LIVE_WINDOW) : (0, ht.getTargetLiveWindow)(this.nativeEl)
                        }
                        set targetLiveWindow(y) {
                            y != this.targetLiveWindow && (y == null ? this.removeAttribute(lt.TARGET_LIVE_WINDOW) : this.setAttribute(lt.TARGET_LIVE_WINDOW, `${+y}`))
                        }
                        get liveEdgeStart() {
                            var y, F;
                            if (this.hasAttribute(lt.LIVE_EDGE_OFFSET)) {
                                let {
                                    liveEdgeOffset: z
                                } = this, be = (y = this.nativeEl.seekable.end(0)) != null ? y : 0, pt = (F = this.nativeEl.seekable.start(0)) != null ? F : 0;
                                return Math.max(pt, be - z)
                            }
                            return (0, ht.getLiveEdgeStart)(this.nativeEl)
                        }
                        get liveEdgeOffset() {
                            if (this.hasAttribute(lt.LIVE_EDGE_OFFSET)) return +this.getAttribute(lt.LIVE_EDGE_OFFSET)
                        }
                        set liveEdgeOffset(y) {
                            y != this.liveEdgeOffset && (y == null ? this.removeAttribute(lt.LIVE_EDGE_OFFSET) : this.setAttribute(lt.LIVE_EDGE_OFFSET, `${+y}`))
                        }
                        get seekable() {
                            return (0, ht.getSeekable)(this.nativeEl)
                        }
                        addCuePoints(y) {
                            return K(this, null, function*() {
                                return (0, ht.addCuePoints)(this.nativeEl, y)
                            })
                        }
                        get activeCuePoint() {
                            return (0, ht.getActiveCuePoint)(this.nativeEl)
                        }
                        get cuePoints() {
                            return (0, ht.getCuePoints)(this.nativeEl)
                        }
                        addChapters(y) {
                            return K(this, null, function*() {
                                return (0, ht.addChapters)(this.nativeEl, y)
                            })
                        }
                        get activeChapter() {
                            return (0, ht.getActiveChapter)(this.nativeEl)
                        }
                        get chapters() {
                            return (0, ht.getChapters)(this.nativeEl)
                        }
                        getStartDate() {
                            return (0, ht.getStartDate)(this.nativeEl, this._hls)
                        }
                        get currentPdt() {
                            return (0, ht.getCurrentPdt)(this.nativeEl, this._hls)
                        }
                        get preferPlayback() {
                            let y = this.getAttribute(lt.PREFER_PLAYBACK);
                            if (y === ht.PlaybackTypes.MSE || y === ht.PlaybackTypes.NATIVE) return y
                        }
                        set preferPlayback(y) {
                            y !== this.preferPlayback && (y === ht.PlaybackTypes.MSE || y === ht.PlaybackTypes.NATIVE ? this.setAttribute(lt.PREFER_PLAYBACK, y) : this.removeAttribute(lt.PREFER_PLAYBACK))
                        }
                        get metadata() {
                            return le(le({}, this.getAttributeNames().filter(y => y.startsWith("metadata-") && ![lt.METADATA_URL].includes(y)).reduce((y, F) => {
                                let z = this.getAttribute(F);
                                return z != null && (y[F.replace(/^metadata-/, "").replace(/-/g, "_")] = z), y
                            }, {})), B(this, re))
                        }
                        set metadata(y) {
                            _(this, re, y != null ? y : {}), this.mux && this.mux.emit("hb", B(this, re))
                        }
                        get _hlsConfig() {
                            return B(this, Ce)
                        }
                        set _hlsConfig(y) {
                            _(this, Ce, y)
                        }
                        get logo() {
                            return this.getAttribute(lt.LOGO)
                        }
                        set logo(y) {
                            y ? this.setAttribute(lt.LOGO, y) : this.removeAttribute(lt.LOGO)
                        }
                        load() {
                            _(this, D, (0, ht.initialize)(this, this.nativeEl, B(this, D)))
                        }
                        unload() {
                            (0, ht.teardown)(this.nativeEl, B(this, D)), _(this, D, void 0)
                        }
                        attributeChangedCallback(y, F, z) {
                            var be, pt;
                            switch (La.observedAttributes.includes(y) && !["src", "autoplay", "preload"].includes(y) && super.attributeChangedCallback(y, F, z), y) {
                                case lt.PLAYER_SOFTWARE_NAME:
                                    this.playerSoftwareName = z != null ? z : void 0;
                                    break;
                                case lt.PLAYER_SOFTWARE_VERSION:
                                    this.playerSoftwareVersion = z != null ? z : void 0;
                                    break;
                                case "src":
                                    {
                                        let Gt = !!F,
                                            pr = !!z;!Gt && pr ? Ve(this, We, Xe).call(this) : Gt && !pr ? this.unload() : Gt && pr && (this.unload(), Ve(this, We, Xe).call(this));
                                        break
                                    }
                                case "autoplay":
                                    if (z === F) break;
                                    (be = B(this, D)) == null || be.setAutoplay(this.autoplay);
                                    break;
                                case "preload":
                                    if (z === F) break;
                                    (pt = B(this, D)) == null || pt.setPreload(z);
                                    break;
                                case lt.PLAYBACK_ID:
                                    this.src = (0, ht.toMuxVideoURL)(this);
                                    break;
                                case lt.DEBUG:
                                    {
                                        let Gt = this.debug;this.mux && console.info("Cannot toggle debug mode of mux data after initialization. Make sure you set all metadata to override before setting the src."),
                                        this._hls && (this._hls.config.debug = Gt);
                                        break
                                    }
                                case lt.METADATA_URL:
                                    z && fetch(z).then(Gt => Gt.json()).then(Gt => this.metadata = Gt).catch(() => console.error(`Unable to load or parse metadata JSON from metadata-url ${z}!`));
                                    break;
                                case lt.STREAM_TYPE:
                                    (z == null || z !== F) && this.dispatchEvent(new CustomEvent("streamtypechange", {
                                        composed: !0,
                                        bubbles: !0
                                    }));
                                    break;
                                case lt.TARGET_LIVE_WINDOW:
                                    (z == null || z !== F) && this.dispatchEvent(new CustomEvent("targetlivewindowchange", {
                                        composed: !0,
                                        bubbles: !0,
                                        detail: this.targetLiveWindow
                                    }));
                                    break;
                                default:
                                    break
                            }
                        }
                        connectedCallback() {
                            var y;
                            (y = super.connectedCallback) == null || y.call(this), this.nativeEl && this.src && !B(this, D) && Ve(this, We, Xe).call(this)
                        }
                        disconnectedCallback() {
                            this.unload()
                        }
                    };
                D = new WeakMap, C = new WeakMap, H = new WeakMap, re = new WeakMap, se = new WeakMap, Ce = new WeakMap, He = new WeakMap, Qe = new WeakMap, ke = new WeakMap, We = new WeakSet, Xe = function() {
                    return K(this, null, function*() {
                        B(this, C) || (yield _(this, C, Promise.resolve()), _(this, C, null), this.load())
                    })
                };
                var qt, fr = class extends Ma(En(Ot)) {
                    constructor() {
                        super(...arguments), Be(this, qt)
                    }
                    get muxCastCustomData() {
                        return {
                            mux: {
                                playbackId: this.playbackId,
                                minResolution: this.minResolution,
                                maxResolution: this.maxResolution,
                                renditionOrder: this.renditionOrder,
                                customDomain: this.customDomain,
                                tokens: {
                                    drm: this.drmToken
                                },
                                envKey: this.envKey,
                                metadata: this.metadata,
                                disableCookies: this.disableCookies,
                                disableTracking: this.disableTracking,
                                beaconCollectionDomain: this.beaconCollectionDomain,
                                startTime: this.startTime,
                                preferCmcd: this.preferCmcd
                            }
                        }
                    }
                    get castCustomData() {
                        var y;
                        return (y = B(this, qt)) != null ? y : this.muxCastCustomData
                    }
                    set castCustomData(y) {
                        _(this, qt, y)
                    }
                };
                qt = new WeakMap, ct.customElements.get("mux-video") || (ct.customElements.define("mux-video", fr), ct.MuxVideoElement = fr);
                var rr = fr
            },
            96554: (wt, Me, we) => {
                "use strict";
                Object.defineProperty(Me, "__esModule", {
                    value: !0
                });
                var je = we(43921),
                    Ee = mt(je),
                    Je = we(38686),
                    Y = mt(Je),
                    Ct = we(11471),
                    tt = mt(Ct);

                function mt(x) {
                    return x && x.__esModule ? x : {
                        default: x
                    }
                }
                let le;
                Me.default = (x, K = {}, Q = !1) => {
                    const he = (0, Ee.default)();
                    if (le || (le = (0, tt.default)(he)), K.events) throw new Error("Event handlers cannot be overwritten.");
                    if (typeof x == "string" && !document.getElementById(x)) throw new Error('Element "' + x + '" does not exist.');
                    K.events = Y.default.proxyEvents(he);
                    const ot = new Promise(Rt => {
                            typeof x == "object" && x.playVideo instanceof Function ? Rt(x) : le.then(Ft => {
                                const Dt = new Ft.Player(x, K);
                                return he.on("ready", () => {
                                    Rt(Dt)
                                }), null
                            })
                        }),
                        it = Y.default.promisifyPlayer(ot, Q);
                    return it.on = he.on, it.off = he.off, it
                }, wt.exports = Me.default
            },
            97924: (wt, Me, we) => {
                var je = we(99787).default;

                function Ee() {
                    "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
                    wt.exports = Ee = function() {
                        return Y
                    }, wt.exports.__esModule = !0, wt.exports.default = wt.exports;
                    var Je, Y = {},
                        Ct = Object.prototype,
                        tt = Ct.hasOwnProperty,
                        mt = Object.defineProperty || function(V, ce, Pe) {
                            V[ce] = Pe.value
                        },
                        le = typeof Symbol == "function" ? Symbol : {},
                        x = le.iterator || "@@iterator",
                        K = le.asyncIterator || "@@asyncIterator",
                        Q = le.toStringTag || "@@toStringTag";

                    function he(V, ce, Pe) {
                        return Object.defineProperty(V, ce, {
                            value: Pe,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), V[ce]
                    }
                    try {
                        he({}, "")
                    } catch (V) {
                        he = function(Pe, st, ct) {
                            return Pe[st] = ct
                        }
                    }

                    function ot(V, ce, Pe, st) {
                        var ct = ce && ce.prototype instanceof bt ? ce : bt,
                            Fe = Object.create(ct.prototype),
                            ht = new dr(st || []);
                        return mt(Fe, "_invoke", {
                            value: yt(V, Pe, ht)
                        }), Fe
                    }

                    function it(V, ce, Pe) {
                        try {
                            return {
                                type: "normal",
                                arg: V.call(ce, Pe)
                            }
                        } catch (st) {
                            return {
                                type: "throw",
                                arg: st
                            }
                        }
                    }
                    Y.wrap = ot;
                    var Rt = "suspendedStart",
                        Ft = "suspendedYield",
                        Dt = "executing",
                        dt = "completed",
                        at = {};

                    function bt() {}

                    function Wt() {}

                    function fe() {}
                    var Ge = {};
                    he(Ge, x, function() {
                        return this
                    });
                    var B = Object.getPrototypeOf,
                        Be = B && B(B(ai([])));
                    Be && Be !== Ct && tt.call(Be, x) && (Ge = Be);
                    var _ = fe.prototype = bt.prototype = Object.create(Ge);

                    function Ve(V) {
                        ["next", "throw", "return"].forEach(function(ce) {
                            he(V, ce, function(Pe) {
                                return this._invoke(ce, Pe)
                            })
                        })
                    }

                    function de(V, ce) {
                        function Pe(ct, Fe, ht, Er) {
                            var Xt = it(V[ct], V, Fe);
                            if (Xt.type !== "throw") {
                                var W = Xt.arg,
                                    Zr = W.value;
                                return Zr && je(Zr) == "object" && tt.call(Zr, "__await") ? ce.resolve(Zr.__await).then(function(br) {
                                    Pe("next", br, ht, Er)
                                }, function(br) {
                                    Pe("throw", br, ht, Er)
                                }) : ce.resolve(Zr).then(function(br) {
                                    W.value = br, ht(W)
                                }, function(br) {
                                    return Pe("throw", br, ht, Er)
                                })
                            }
                            Er(Xt.arg)
                        }
                        var st;
                        mt(this, "_invoke", {
                            value: function(Fe, ht) {
                                function Er() {
                                    return new ce(function(Xt, W) {
                                        Pe(Fe, ht, Xt, W)
                                    })
                                }
                                return st = st ? st.then(Er, Er) : Er()
                            }
                        })
                    }

                    function yt(V, ce, Pe) {
                        var st = Rt;
                        return function(ct, Fe) {
                            if (st === Dt) throw Error("Generator is already running");
                            if (st === dt) {
                                if (ct === "throw") throw Fe;
                                return {
                                    value: Je,
                                    done: !0
                                }
                            }
                            for (Pe.method = ct, Pe.arg = Fe;;) {
                                var ht = Pe.delegate;
                                if (ht) {
                                    var Er = Ir(ht, Pe);
                                    if (Er) {
                                        if (Er === at) continue;
                                        return Er
                                    }
                                }
                                if (Pe.method === "next") Pe.sent = Pe._sent = Pe.arg;
                                else if (Pe.method === "throw") {
                                    if (st === Rt) throw st = dt, Pe.arg;
                                    Pe.dispatchException(Pe.arg)
                                } else Pe.method === "return" && Pe.abrupt("return", Pe.arg);
                                st = Dt;
                                var Xt = it(V, ce, Pe);
                                if (Xt.type === "normal") {
                                    if (st = Pe.done ? dt : Ft, Xt.arg === at) continue;
                                    return {
                                        value: Xt.arg,
                                        done: Pe.done
                                    }
                                }
                                Xt.type === "throw" && (st = dt, Pe.method = "throw", Pe.arg = Xt.arg)
                            }
                        }
                    }

                    function Ir(V, ce) {
                        var Pe = ce.method,
                            st = V.iterator[Pe];
                        if (st === Je) return ce.delegate = null, Pe === "throw" && V.iterator.return && (ce.method = "return", ce.arg = Je, Ir(V, ce), ce.method === "throw") || Pe !== "return" && (ce.method = "throw", ce.arg = new TypeError("The iterator does not provide a '" + Pe + "' method")), at;
                        var ct = it(st, V.iterator, ce.arg);
                        if (ct.type === "throw") return ce.method = "throw", ce.arg = ct.arg, ce.delegate = null, at;
                        var Fe = ct.arg;
                        return Fe ? Fe.done ? (ce[V.resultName] = Fe.value, ce.next = V.nextLoc, ce.method !== "return" && (ce.method = "next", ce.arg = Je), ce.delegate = null, at) : Fe : (ce.method = "throw", ce.arg = new TypeError("iterator result is not an object"), ce.delegate = null, at)
                    }

                    function ar(V) {
                        var ce = {
                            tryLoc: V[0]
                        };
                        1 in V && (ce.catchLoc = V[1]), 2 in V && (ce.finallyLoc = V[2], ce.afterLoc = V[3]), this.tryEntries.push(ce)
                    }

                    function nt(V) {
                        var ce = V.completion || {};
                        ce.type = "normal", delete ce.arg, V.completion = ce
                    }

                    function dr(V) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], V.forEach(ar, this), this.reset(!0)
                    }

                    function ai(V) {
                        if (V || V === "") {
                            var ce = V[x];
                            if (ce) return ce.call(V);
                            if (typeof V.next == "function") return V;
                            if (!isNaN(V.length)) {
                                var Pe = -1,
                                    st = function ct() {
                                        for (; ++Pe < V.length;)
                                            if (tt.call(V, Pe)) return ct.value = V[Pe], ct.done = !1, ct;
                                        return ct.value = Je, ct.done = !0, ct
                                    };
                                return st.next = st
                            }
                        }
                        throw new TypeError(je(V) + " is not iterable")
                    }
                    return Wt.prototype = fe, mt(_, "constructor", {
                        value: fe,
                        configurable: !0
                    }), mt(fe, "constructor", {
                        value: Wt,
                        configurable: !0
                    }), Wt.displayName = he(fe, Q, "GeneratorFunction"), Y.isGeneratorFunction = function(V) {
                        var ce = typeof V == "function" && V.constructor;
                        return !!ce && (ce === Wt || (ce.displayName || ce.name) === "GeneratorFunction")
                    }, Y.mark = function(V) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(V, fe) : (V.__proto__ = fe, he(V, Q, "GeneratorFunction")), V.prototype = Object.create(_), V
                    }, Y.awrap = function(V) {
                        return {
                            __await: V
                        }
                    }, Ve(de.prototype), he(de.prototype, K, function() {
                        return this
                    }), Y.AsyncIterator = de, Y.async = function(V, ce, Pe, st, ct) {
                        ct === void 0 && (ct = Promise);
                        var Fe = new de(ot(V, ce, Pe, st), ct);
                        return Y.isGeneratorFunction(ce) ? Fe : Fe.next().then(function(ht) {
                            return ht.done ? ht.value : Fe.next()
                        })
                    }, Ve(_), he(_, Q, "Generator"), he(_, x, function() {
                        return this
                    }), he(_, "toString", function() {
                        return "[object Generator]"
                    }), Y.keys = function(V) {
                        var ce = Object(V),
                            Pe = [];
                        for (var st in ce) Pe.push(st);
                        return Pe.reverse(),
                            function ct() {
                                for (; Pe.length;) {
                                    var Fe = Pe.pop();
                                    if (Fe in ce) return ct.value = Fe, ct.done = !1, ct
                                }
                                return ct.done = !0, ct
                            }
                    }, Y.values = ai, dr.prototype = {
                        constructor: dr,
                        reset: function(ce) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = Je, this.done = !1, this.delegate = null, this.method = "next", this.arg = Je, this.tryEntries.forEach(nt), !ce)
                                for (var Pe in this) Pe.charAt(0) === "t" && tt.call(this, Pe) && !isNaN(+Pe.slice(1)) && (this[Pe] = Je)
                        },
                        stop: function() {
                            this.done = !0;
                            var ce = this.tryEntries[0].completion;
                            if (ce.type === "throw") throw ce.arg;
                            return this.rval
                        },
                        dispatchException: function(ce) {
                            if (this.done) throw ce;
                            var Pe = this;

                            function st(W, Zr) {
                                return ht.type = "throw", ht.arg = ce, Pe.next = W, Zr && (Pe.method = "next", Pe.arg = Je), !!Zr
                            }
                            for (var ct = this.tryEntries.length - 1; ct >= 0; --ct) {
                                var Fe = this.tryEntries[ct],
                                    ht = Fe.completion;
                                if (Fe.tryLoc === "root") return st("end");
                                if (Fe.tryLoc <= this.prev) {
                                    var Er = tt.call(Fe, "catchLoc"),
                                        Xt = tt.call(Fe, "finallyLoc");
                                    if (Er && Xt) {
                                        if (this.prev < Fe.catchLoc) return st(Fe.catchLoc, !0);
                                        if (this.prev < Fe.finallyLoc) return st(Fe.finallyLoc)
                                    } else if (Er) {
                                        if (this.prev < Fe.catchLoc) return st(Fe.catchLoc, !0)
                                    } else {
                                        if (!Xt) throw Error("try statement without catch or finally");
                                        if (this.prev < Fe.finallyLoc) return st(Fe.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(ce, Pe) {
                            for (var st = this.tryEntries.length - 1; st >= 0; --st) {
                                var ct = this.tryEntries[st];
                                if (ct.tryLoc <= this.prev && tt.call(ct, "finallyLoc") && this.prev < ct.finallyLoc) {
                                    var Fe = ct;
                                    break
                                }
                            }
                            Fe && (ce === "break" || ce === "continue") && Fe.tryLoc <= Pe && Pe <= Fe.finallyLoc && (Fe = null);
                            var ht = Fe ? Fe.completion : {};
                            return ht.type = ce, ht.arg = Pe, Fe ? (this.method = "next", this.next = Fe.finallyLoc, at) : this.complete(ht)
                        },
                        complete: function(ce, Pe) {
                            if (ce.type === "throw") throw ce.arg;
                            return ce.type === "break" || ce.type === "continue" ? this.next = ce.arg : ce.type === "return" ? (this.rval = this.arg = ce.arg, this.method = "return", this.next = "end") : ce.type === "normal" && Pe && (this.next = Pe), at
                        },
                        finish: function(ce) {
                            for (var Pe = this.tryEntries.length - 1; Pe >= 0; --Pe) {
                                var st = this.tryEntries[Pe];
                                if (st.finallyLoc === ce) return this.complete(st.completion, st.afterLoc), nt(st), at
                            }
                        },
                        catch: function(ce) {
                            for (var Pe = this.tryEntries.length - 1; Pe >= 0; --Pe) {
                                var st = this.tryEntries[Pe];
                                if (st.tryLoc === ce) {
                                    var ct = st.completion;
                                    if (ct.type === "throw") {
                                        var Fe = ct.arg;
                                        nt(st)
                                    }
                                    return Fe
                                }
                            }
                            throw Error("illegal catch attempt")
                        },
                        delegateYield: function(ce, Pe, st) {
                            return this.delegate = {
                                iterator: ai(ce),
                                resultName: Pe,
                                nextLoc: st
                            }, this.method === "next" && (this.arg = Je), at
                        }
                    }, Y
                }
                wt.exports = Ee, wt.exports.__esModule = !0, wt.exports.default = wt.exports
            }
        }
    ]);
})();